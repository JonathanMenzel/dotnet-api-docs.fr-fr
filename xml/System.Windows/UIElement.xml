<Type Name="UIElement" FullName="System.Windows.UIElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69fc14f8a143a8f000734a5dc38f8d88f9280a2f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UIElement : System.Windows.Media.Visual, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UIElement extends System.Windows.Media.Visual implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement" />
  <TypeSignature Language="VB.NET" Value="Public Class UIElement&#xA;Inherits Visual&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement : System::Windows::Media::Visual, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Visual</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.UidProperty("Uid")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6950f-101">
        <see cref="T:System.Windows.UIElement" /> est une classe de base pour les implémentations WPF au niveau principal reposant sur des éléments WPF (Windows Presentation Foundation) et des caractéristiques de présentation de base.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6950f-101">
          <see cref="T:System.Windows.UIElement" /> is a base class for WPF core level implementations building on Windows Presentation Foundation (WPF) elements and basic presentation characteristics.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-102"><xref:System.Windows.UIElement> fournit un point de départ pour les caractéristiques de mise en forme l’élément et expose des méthodes virtuelles que les classes dérivées peuvent substituer, qui peut influencer la disposition du rendu des éléments de comportement de l’élément et ses enfants.</span><span class="sxs-lookup"><span data-stu-id="6950f-102"><xref:System.Windows.UIElement> provides a starting point for element layout characteristics, and also exposes virtual methods that derived classes can override, which can influence the layout rendering behavior of the element and its child elements.</span></span>  
  
 <span data-ttu-id="6950f-103">Une grande partie de l’entrée et le comportement des éléments en mettant l’accent en général est également définie dans la <xref:System.Windows.UIElement> classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-103">Much of the input and focusing behavior for elements in general is also defined in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="6950f-104">Cela inclut les événements de clavier, souris entrée de stylet et des propriétés de l’état associé.</span><span class="sxs-lookup"><span data-stu-id="6950f-104">This includes the events for keyboard, mouse and stylus input, and related status properties.</span></span> <span data-ttu-id="6950f-105">La plupart de ces événements sont des événements routés, et de nombreux événements d’entrée ont à la fois un routage par propagation version ainsi que dans une version de tunneling de l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-105">Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</span></span> <span data-ttu-id="6950f-106">Ces événements associés sont généralement les plus intéressants pour les auteurs de contrôle.</span><span class="sxs-lookup"><span data-stu-id="6950f-106">These paired events are typically the events of greatest interest to control authors.</span></span>  
  
 <span data-ttu-id="6950f-107"><xref:System.Windows.UIElement> inclut également [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] qui concernent le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modèle d’événement, y compris les méthodes qui peuvent déclencher spécifiés routé des événements qui sont générés à partir d’une instance de l’élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-107"><xref:System.Windows.UIElement> also includes [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that relate to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.</span></span>  
  
 <span data-ttu-id="6950f-108">En termes d’architecture, <xref:System.Windows.UIElement> peut être considéré comme à peu près équivalent à un handle de fenêtre [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programmation, ou un élément de [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] de programmation.</span><span class="sxs-lookup"><span data-stu-id="6950f-108">In terms of architecture, <xref:System.Windows.UIElement> can be considered roughly equivalent to a window handle in [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programming, or an Element in [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] programming.</span></span> <span data-ttu-id="6950f-109"><xref:System.Windows.UIElement> est un élément de base au niveau du noyau WPF.</span><span class="sxs-lookup"><span data-stu-id="6950f-109"><xref:System.Windows.UIElement> is a base element at the WPF core level.</span></span>  
  
 <span data-ttu-id="6950f-110">A <xref:System.Windows.UIElement> fournit les fonctionnalités suivantes qui sont spécifiquement définies par le <xref:System.Windows.UIElement> classe :</span><span class="sxs-lookup"><span data-stu-id="6950f-110">A <xref:System.Windows.UIElement> has the following capabilities that are specifically defined by the <xref:System.Windows.UIElement> class:</span></span>  
  
-   <span data-ttu-id="6950f-111">Peut être restituée comme un élément enfant (<xref:System.Windows.UIElement> dérive <xref:System.Windows.Media.Visual>, une classe graphique de niveau élevé)</span><span class="sxs-lookup"><span data-stu-id="6950f-111">Can render as a child element (<xref:System.Windows.UIElement> derives from <xref:System.Windows.Media.Visual>, a high level graphics class)</span></span>  
  
-   <span data-ttu-id="6950f-112">Contient la logique qui est utilisée pour dimensionner et positionner des éléments enfants possibles d’un <xref:System.Windows.UIElement> (lorsqu’il est interprété par un système de disposition)</span><span class="sxs-lookup"><span data-stu-id="6950f-112">Contains logic that is used to size and position possible child elements of a <xref:System.Windows.UIElement> (when interpreted by a layout system)</span></span>  
  
-   <span data-ttu-id="6950f-113">Peut répondre à l’entrée d’utilisateur (y compris le contrôle d’où entrée est mise en route envoyée via leur gestion de l’événement de routage ou de routage des commandes)</span><span class="sxs-lookup"><span data-stu-id="6950f-113">Can respond to user input (including control of where input is getting sent to via their handling of event routing, or routing of commands)</span></span>  
  
-   <span data-ttu-id="6950f-114">Peut déclencher des événements routés qui suivent un itinéraire à travers l’arborescence logique d’éléments</span><span class="sxs-lookup"><span data-stu-id="6950f-114">Can raise routed events that travel a route through the logical element tree</span></span>  
  
-   <span data-ttu-id="6950f-115">Prend en charge certains aspects du système d’animation</span><span class="sxs-lookup"><span data-stu-id="6950f-115">Supports some aspects of the animation system</span></span>  
  
 <span data-ttu-id="6950f-116"><xref:System.Windows.FrameworkElement> est la classe d’implémentation de niveau infrastructure WPF qui s’appuie sur <xref:System.Windows.UIElement>et ajoute des interactions spécifiques avec le niveau de l’infrastructure WPF.</span><span class="sxs-lookup"><span data-stu-id="6950f-116"><xref:System.Windows.FrameworkElement> is the WPF framework-level implementation class that builds on <xref:System.Windows.UIElement>, and adds specific interactions with the WPF framework level.</span></span> <span data-ttu-id="6950f-117"><xref:System.Windows.FrameworkElement> Ajoute et définit les fonctionnalités suivantes :</span><span class="sxs-lookup"><span data-stu-id="6950f-117"><xref:System.Windows.FrameworkElement> adds and defines the following capabilities:</span></span>  
  
-   <span data-ttu-id="6950f-118">Caractéristiques de disposition spécifiques à l’infrastructure supplémentaires</span><span class="sxs-lookup"><span data-stu-id="6950f-118">Additional framework-specific layout characteristics</span></span>  
  
-   <span data-ttu-id="6950f-119">Prise en charge pour les rapports sur les propriétés de métadonnées plus riche</span><span class="sxs-lookup"><span data-stu-id="6950f-119">Support for richer metadata reporting on properties</span></span>  
  
-   <span data-ttu-id="6950f-120">L’implémentation spécifique de certaines entrées des classes de base et de leurs propriétés ou événements attachés</span><span class="sxs-lookup"><span data-stu-id="6950f-120">Class-specific implementation of certain input base classes and their attached properties or attached events</span></span>  
  
-   <span data-ttu-id="6950f-121">Prise en charge de style</span><span class="sxs-lookup"><span data-stu-id="6950f-121">Style support</span></span>  
  
-   <span data-ttu-id="6950f-122">Prise en charge supplémentaire des animations</span><span class="sxs-lookup"><span data-stu-id="6950f-122">Further animation support</span></span>  
  
 <span data-ttu-id="6950f-123">Une autre classe connexe est <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-123">Another related class is <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="6950f-124">Le <xref:System.Windows.ContentElement> classe implémente un grand nombre des mêmes membres que <xref:System.Windows.UIElement>; la différence entre ces deux classes doit dans leur emplacement prévu dans le modèle global de contenu.</span><span class="sxs-lookup"><span data-stu-id="6950f-124">The <xref:System.Windows.ContentElement> class implements many of the same members as does <xref:System.Windows.UIElement>; the difference between these two classes has to do with their intended place in the overall content model.</span></span> <span data-ttu-id="6950f-125">A <xref:System.Windows.UIElement> classe dérivée définit généralement un modèle de contenu relativement rigid, c'est-à-dire qu’il existe des restrictions sur les éléments peuvent être des éléments enfants dans le balisage.</span><span class="sxs-lookup"><span data-stu-id="6950f-125">A <xref:System.Windows.UIElement> derived class typically defines a relatively rigid content model, meaning that there are restrictions on what elements may be child elements in markup.</span></span> <span data-ttu-id="6950f-126">Il peut y avoir la capacité de prendre le contenu enfant moins restrictif un <xref:System.Windows.UIElement>, mais cette capacité est généralement centralisée dans les propriétés de contenu précises.</span><span class="sxs-lookup"><span data-stu-id="6950f-126">There might be capacity for taking less restrictive child content in a <xref:System.Windows.UIElement>, but that capacity is typically centralized in designated content properties.</span></span> <span data-ttu-id="6950f-127">A <xref:System.Windows.ContentElement> classe dérivée n’est généralement pas aussi restrictive sur le contenu, pour prendre en charge des scénarios tels que des documents au format du flux.</span><span class="sxs-lookup"><span data-stu-id="6950f-127">A <xref:System.Windows.ContentElement> derived class is typically not as restrictive about content, to support scenarios such as flow-format documents.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6950f-128"><xref:System.Windows.UIElement.Visibility%2A> l’état affecte toutes les entrées par cet élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-128"><xref:System.Windows.UIElement.Visibility%2A> state affects all input handling by that element.</span></span> <span data-ttu-id="6950f-129">Les éléments qui ne sont pas visibles ne participent pas au test de positionnement et ne reçoivent pas les événements d’entrée, même si la souris se trouve sur les limites où l’élément serait si étaient visibles.</span><span class="sxs-lookup"><span data-stu-id="6950f-129">Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds where the element would be if were visible.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-130">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-130">Initializes a new instance of the <see cref="T:System.Windows.UIElement" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-131">Création d’une nouvelle instance qui est de type <xref:System.Windows.UIElement> est rare dans le code d’application, car <xref:System.Windows.UIElement> est un élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-131">Creating a new instance that is actually of type <xref:System.Windows.UIElement> is uncommon in application code, because <xref:System.Windows.UIElement> is a base element.</span></span> <span data-ttu-id="6950f-132">Consultez [vue d’ensemble des éléments de Base](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-132">See [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-133">Ajoute un gestionnaire d’événements routés pour un événement routé spécifié, en ajoutant le gestionnaire à la collection de gestionnaires sur l’élément actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-133">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="6950f-134">Identificateur de l’événement routé à gérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-134">An identifier for the routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6950f-135">Référence à l’implémentation du gestionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-135">A reference to the handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-136">Ajoute un gestionnaire d’événements routés pour un événement routé spécifié, en ajoutant le gestionnaire à la collection de gestionnaires sur l’élément actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-136">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-137">Vous pouvez ajouter le même gestionnaire pour le même événement plusieurs fois sans lever d’exception.</span><span class="sxs-lookup"><span data-stu-id="6950f-137">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="6950f-138">Toutefois, le gestionnaire est réellement appelé plusieurs fois lorsque l’événement est géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-138">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="6950f-139">Par conséquent, envisagez la façon dont ce comportement pourrait avoir des effets secondaires qui doivent être pris en compte dans votre implémentation de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-139">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="6950f-140">Vous utilisez généralement cette méthode pour fournir l’implémentation de l’accesseur « Ajouter » pour le [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] modèle d’accès aux événements d’un événement routé personnalisé.</span><span class="sxs-lookup"><span data-stu-id="6950f-140">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="6950f-141">Identificateur de l’événement routé à gérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-141">An identifier for the routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6950f-142">Référence à l’implémentation du gestionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-142">A reference to the handler implementation.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="6950f-143">
            <see langword="true" /> pour inscrire le gestionnaire pour qu’il soit appelé même quand l’événement routé est marqué comme géré dans ses données d’événement ; <see langword="false" /> pour inscrire le gestionnaire avec la condition par défaut selon laquelle il ne sera pas appelé si l’événement routé est déjà marqué comme géré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-143">
              <see langword="true" /> to register the handler such that it is invoked even when  the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span>
          </span>
          <span data-ttu-id="6950f-144">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-144">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-145">Ne demandez pas régulièrement à regérer un événement routé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-145">Do not routinely ask to rehandle a routed event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-146">Ajoute un gestionnaire d’événements routés pour un événement routé spécifié, en ajoutant le gestionnaire à la collection de gestionnaires sur l’élément actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-146">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
          <span data-ttu-id="6950f-147">Spécifiez <paramref name="handledEventsToo" /> comme <see langword="true" /> pour que le gestionnaire fourni soit appelé pour un événement routé qui a déjà été marqué comme géré par un autre élément le long de son itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-147">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-148">Traitement des événements d’entrée de bas niveau d’une façon pratique est une tâche complexe.</span><span class="sxs-lookup"><span data-stu-id="6950f-148">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="6950f-149">De nombreux contrôles implémentent le comportement où un certain événement est marqué comme géré et est remplacé par un autre événement plus intuitif.</span><span class="sxs-lookup"><span data-stu-id="6950f-149">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="6950f-150">En règle générale, un contrôle marque un événement d’entrée de plateforme comme géré s’il existe une intention de conception pour ce faire.</span><span class="sxs-lookup"><span data-stu-id="6950f-150">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="6950f-151">Dans certains scénarios, ces intentions de conception peut-être pas ce que requiert votre gestion particulière de l’événement d’entrée.</span><span class="sxs-lookup"><span data-stu-id="6950f-151">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="6950f-152">Pour ces scénarios, il est que l’inscription gestionnaires avec `handledEventsToo` comme `true` est appropriée.</span><span class="sxs-lookup"><span data-stu-id="6950f-152">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="6950f-153">Mais vous ne devez pas effectuer cela régulièrement.</span><span class="sxs-lookup"><span data-stu-id="6950f-153">But you should not do this routinely.</span></span> <span data-ttu-id="6950f-154">Appeler des gestionnaires en réponse à tous les événements même si gérée compliquer la logique de traitement des événements de votre propre application.</span><span class="sxs-lookup"><span data-stu-id="6950f-154">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="6950f-155">Vous pouvez constater une baisse des performances si la logique du gestionnaire est substantielle.</span><span class="sxs-lookup"><span data-stu-id="6950f-155">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="6950f-156">Vous devez réserver l’utilisation de gestionnaires d’événements déjà gérés pour les situations où vous avez déjà détecté pendant le processus de développement certains contrôles sont la gestion des événements que vous souhaitez toujours gérer avec la logique d’application.</span><span class="sxs-lookup"><span data-stu-id="6950f-156">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="6950f-157">Une autre technique pour éviter la gestion du comportement de certaines combinaisons de contrôle de l’événement de classe consiste à utiliser les alternative d’aperçu de cet événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-157">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="6950f-158">Par exemple, si <xref:System.Windows.UIElement.MouseLeftButtonDown> est marqué comme géré par la gestion de classe, vous ne pourrez pas ajouter des gestionnaires pour <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> à la place.</span><span class="sxs-lookup"><span data-stu-id="6950f-158">For example, if <xref:System.Windows.UIElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="6950f-159">Vous pouvez ajouter le même gestionnaire pour le même événement plusieurs fois sans lever d’exception.</span><span class="sxs-lookup"><span data-stu-id="6950f-159">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="6950f-160">Toutefois, le gestionnaire est réellement appelé plusieurs fois lorsque l’événement est géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-160">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="6950f-161">Par conséquent, envisagez la façon dont ce comportement pourrait avoir des effets secondaires qui doivent être pris en compte dans votre implémentation de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-161">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="6950f-162">Vous utilisez généralement cette méthode pour fournir l’implémentation de l’accesseur « Ajouter » pour le [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] modèle d’accès aux événements d’un événement routé personnalisé.</span><span class="sxs-lookup"><span data-stu-id="6950f-162">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-163">L’exemple suivant implémente un gestionnaire appelé sur le <xref:System.Windows.FrameworkElement.Initialized> événement sur une page qui attache un gestionnaire défini à un des éléments nommés de la page à l’aide de `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-163">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="6950f-164">Ce gestionnaire serait appelé même si un autre élément le long de l’itinéraire marqué les données d’événement partagées comme gérées avant d’atteindre l’élément de gestion dans l’itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-164">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route">
          <span data-ttu-id="6950f-165">Itinéraire d'événement auquel sont ajoutés les gestionnaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-165">The event route that handlers are added to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="6950f-166">Données d'événement utilisées pour ajouter les gestionnaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-166">The event data that is used to add the handlers.</span>
          </span>
          <span data-ttu-id="6950f-167">Cette méthode utilise la propriété <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> des données d'événement pour créer les gestionnaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-167">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the event data to create the handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-168">Ajoute des gestionnaires à la classe <see cref="T:System.Windows.EventRoute" /> spécifiée pour la collection de gestionnaires d'événements <see cref="T:System.Windows.UIElement" /> actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-168">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.UIElement" /> event handler collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-169">Cette méthode peut être utilisée par les éléments de l’hôte de contenu (ceux qui implémentent <xref:System.Windows.IContentHost> ou ceux qui ne le font) pour ajouter des gestionnaires pour les éléments enfants à le <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="6950f-169">This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.</span></span> <span data-ttu-id="6950f-170">En règle générale, cela n’est pas nécessaire pour <xref:System.Windows.UIElement>, car les gestionnaires sont automatiquement ajoutés pour tous les éléments trouvés dans une arborescence logique complète.</span><span class="sxs-lookup"><span data-stu-id="6950f-170">Ordinarily, this is not required for <xref:System.Windows.UIElement>, because handlers are automatically added for all elements found in a completed logical tree.</span></span> <span data-ttu-id="6950f-171">Toutefois, dans certains cas où <xref:System.Windows.ContentElement> et <xref:System.Windows.UIElement> sont combinés dans les arborescences basés sur des modèles, des éléments provenant de ce modèle doivent être ajoutés à un itinéraire intermédiaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-171">However, in some cases where <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are mixed in templated trees, intervening elements that came from the template need to be added to a route.</span></span> <span data-ttu-id="6950f-172">Les deux <xref:System.Windows.ContentElement> et <xref:System.Windows.UIElement> prennent en charge une version de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6950f-172">Both <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> support a version of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-173">Obtient ou définit une valeur qui indique si cet élément est utilisable comme cible d’une opération de glisser-déposer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-173">Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</span>
          </span>
          <span data-ttu-id="6950f-174">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-174">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-175">
            <see langword="true" /> si cet élément peut être utilisé comme cible d’une opération de glisser-déplacer ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-175">
              <see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-176">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-176">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-177">Les opérations de glisser-déplacer ne sont pas activées par défaut et doit être activées délibérément en définissant <xref:System.Windows.UIElement.AllowDrop%2A> à `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-177">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.UIElement.AllowDrop%2A> to `true`.</span></span> <span data-ttu-id="6950f-178">Au-delà de ce paramètre de base, le comportement de glisser-déplacer est entièrement spécifique à l’implémentation et n’est pas défini par <xref:System.Windows.UIElement> ou toute autre classe d’élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-178">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement> or any other base element class.</span></span> <span data-ttu-id="6950f-179">Certains contrôles, par exemple, <xref:System.Windows.Controls.RichTextBox>, n’ont pas un comportement par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-179">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior.</span></span> <span data-ttu-id="6950f-180">Pour plus d’informations sur la fonction glisser- déposer, consultez [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-180">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="6950f-181"><xref:System.Windows.FrameworkElement> substitue les métadonnées pour cette propriété de dépendance dans son implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-181"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="6950f-182">Plus précisément, <xref:System.Windows.FrameworkElement> désigne cette propriété pour autoriser l’héritage de valeur de propriété (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> est `true` dans les métadonnées).</span><span class="sxs-lookup"><span data-stu-id="6950f-182">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="6950f-183">L’héritage de valeur de propriété dans ce contexte signifie que s’il existe des éléments enfants avec aucune autre valeur pour <xref:System.Windows.UIElement.AllowDrop%2A> affecté par l’intermédiaire de valeurs locales ou de styles, la valeur de l’élément parent le plus proche avec cette valeur attribuée (là encore, soit dans les styles, par défaut les valeurs, ou une valeur locale), la valeur de l’élément parent est affectée à tous les éléments enfants précédemment non affecté par le système de propriétés.</span><span class="sxs-lookup"><span data-stu-id="6950f-183">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from the parent element will be assigned to all previously unassigned child elements by the property system.</span></span> <span data-ttu-id="6950f-184">Dans la pratique, cela signifie que vous pouvez spécifier s’il faut autoriser les opérations de déplacer l’élément racine, et que cette valeur se propage à tous les éléments enfants qui n’ont pas spécifiquement affectés en tant que `false`.</span><span class="sxs-lookup"><span data-stu-id="6950f-184">In practice this means that you can specify whether to allow drop operations at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-185">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-185">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-186">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-186">Identifier field</span></span>|<xref:System.Windows.UIElement.AllowDropProperty>|  
|<span data-ttu-id="6950f-187">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-187">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-188">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-188">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-189">L’exemple de balisage suivant définit le <xref:System.Windows.UIElement.AllowDrop%2A> propriété `true` à l’aide d’un attribut sur un <xref:System.Windows.Controls.TextBox>, ainsi que la définition d’un autre en fonction des propriétés permettant de l’agrégat qui <xref:System.Windows.Controls.TextBox> à être la cible d’un objet de données de texte multiligne lorsque Il est déplacé.</span><span class="sxs-lookup"><span data-stu-id="6950f-189">The following markup example sets the <xref:System.Windows.UIElement.AllowDrop%2A> property `true` using an attribute on a <xref:System.Windows.Controls.TextBox>, as well as setting some other related properties that in aggregate enable that <xref:System.Windows.Controls.TextBox> to be the target of a multiline text data object when it is dragged in.</span></span> <span data-ttu-id="6950f-190">Pour obtenir un exemple complet, consultez [charger un exemple de fichier supprimé](http://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span><span class="sxs-lookup"><span data-stu-id="6950f-190">For the complete sample, see [Load a Dropped File Sample](http://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span></span>  
  
 [!code-xaml[DragDrop_DropOpenTextFile#UIElementAllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DropOpenTextFile/CS/window1.xaml#uielementallowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-191">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.AllowDrop" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-191">Identifies the <see cref="P:System.Windows.UIElement.AllowDrop" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-192">Applique une animation à une propriété de dépendance spécifiée sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-192">Applies an animation to a specified dependency property on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-193">Cette méthode est sealed et ne peut pas être substituée.</span><span class="sxs-lookup"><span data-stu-id="6950f-193">This method is sealed and cannot be overridden.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="6950f-194">Identificateur de la propriété à animer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-194">The identifier for the property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="6950f-195">Horloge d’animation qui contrôle et déclare l’animation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-195">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-196">Applique une animation à une propriété de dépendance spécifiée sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-196">Applies an animation to a specified dependency property on this element.</span>
          </span>
          <span data-ttu-id="6950f-197">Les animations existantes sont arrêtées et remplacées par la nouvelle animation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-197">Any existing animations are stopped and replaced with the new animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-198">Pour supprimer une animation à partir d’une propriété, spécifiez l’identificateur pour cette propriété en tant que `dp` et spécifiez `clock` comme `null`.</span><span class="sxs-lookup"><span data-stu-id="6950f-198">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="6950f-199">Cette opération supprime l’animation et la propriété animée est définie à sa valeur de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-199">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="6950f-200">Toutefois, l’horloge d’animation associée au départ n’est pas arrêtée.</span><span class="sxs-lookup"><span data-stu-id="6950f-200">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="6950f-201">Toute autre animation assignée à cette horloge continue à s’exécuter.</span><span class="sxs-lookup"><span data-stu-id="6950f-201">Any other animations assigned to that clock will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-202">Dans l’exemple suivant, un <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` a une animation d’horloge particulière appliquée en appelant <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span><span class="sxs-lookup"><span data-stu-id="6950f-202">In the following example, a <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` has a particular timing animation applied to it by calling <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/ClockControllerSpeedRatioExample.cs#uielementapplyanimationclock)]
 [!code-vb[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/clockcontrollerspeedratioexample.vb#uielementapplyanimationclock)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="6950f-203">Propriété à animer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-203">The property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="6950f-204">Horloge d’animation qui contrôle et déclare l’animation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-204">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="6950f-205">Valeur de l’énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-205">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="6950f-206">La valeur par défaut est <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, ce qui arrête toute animation existante et la remplace par la nouvelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-206">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-207">Applique une animation à une propriété de dépendance spécifiée sur cet élément, avec la possibilité de spécifier ce qui se produit si la propriété a déjà une animation en cours d’exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-207">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-208">Pour supprimer une animation à partir d’une propriété, spécifiez l’identificateur pour cette propriété en tant que `dp` et spécifiez `clock` comme `null`.</span><span class="sxs-lookup"><span data-stu-id="6950f-208">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="6950f-209">Cette opération supprime l’animation et la propriété animée est définie à sa valeur de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-209">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="6950f-210">Toutefois, l’horloge d’animation associée au départ n’est pas arrêtée.</span><span class="sxs-lookup"><span data-stu-id="6950f-210">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="6950f-211">Toute autre animation assignée à cette horloge continue à s’exécuter.</span><span class="sxs-lookup"><span data-stu-id="6950f-211">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-212">Obtient une valeur qui indique si au moins un événement tactile est capturé dans cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-212">Gets a value that indicates whether at least one touch is captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-213">
            <see langword="true" /> si au moins un événement tactile est capturé dans cet élément ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-213">
              <see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-214">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-214">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-215">Obtient une valeur qui indique si au moins un périphérique tactile est capturé dans cet élément ou les éléments enfants de son arborescence d'éléments visuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-215">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-216">
            <see langword="true" /> si au moins un événement tactile est capturé dans cet élément ou les éléments enfants de son arborescence d'éléments visuels ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-216">
              <see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-217">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-217">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-218">Obtient une valeur qui indique si au moins une pression tactile est effectuée sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-218">Gets a value that indicates whether at least one touch is pressed over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-219">
            <see langword="true" /> si au moins une pression tactile est effectuée sur cet élément ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-219">
              <see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-220">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-220">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-221">Obtient une valeur qui indique si au moins une pression tactile est effectuée sur cet élément ou les éléments enfants de son arborescence d'éléments visuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-221">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-222">
            <see langword="true" /> si au moins une pression tactile est effectuée sur cet élément ou les éléments enfants de son arborescence d'éléments visuels ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-222">
              <see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-223">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-223">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public void Arrange (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Arrange(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Arrange (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Arrange(System::Windows::Rect finalRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect">
          <span data-ttu-id="6950f-224">Taille finale calculée par le parent pour l’élément enfant, fournie sous forme d’instance de <see cref="T:System.Windows.Rect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-224">The final size that the parent computes for the child element, provided as a <see cref="T:System.Windows.Rect" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-225">Positionne les éléments enfants et détermine une taille pour un <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-225">Positions child elements and determines a size for a <see cref="T:System.Windows.UIElement" />.</span>
          </span>
          <span data-ttu-id="6950f-226">Les éléments parents appellent cette méthode à partir de leur implémentation de <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> (ou d’un équivalent de niveau infrastructure WPF) pour former une mise à jour de disposition récursive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-226">Parent elements call this method from their <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> implementation (or a WPF framework-level equivalent) to form a recursive layout update.</span>
          </span>
          <span data-ttu-id="6950f-227">Cette méthode constitue la seconde passe d’une mise à jour de disposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-227">This method constitutes the second pass of a layout update.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-228">Pour l’élément de niveau infrastructure WPF dérivant des scénarios, le comportement pour <xref:System.Windows.UIElement.Arrange%2A> ne doivent pas (et ne peut pas, sauf si vous masquez) être modifié.</span><span class="sxs-lookup"><span data-stu-id="6950f-228">For WPF framework-level element deriving scenarios, behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="6950f-229">Au lieu de cela, vous devez substituer la <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> mise en œuvre dans votre classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-229">Instead, you should override the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation in your class.</span></span> <span data-ttu-id="6950f-230">Votre <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implémentation est appelée en interne par <xref:System.Windows.UIElement.Arrange%2A> dans le cadre d’opérations de mise en page de niveau infrastructure WPF par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-230">Your <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="6950f-231">Votre <xref:System.Windows.UIElement.ArrangeCore%2A> implémentation doit également appeler <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> sur chaque élément enfant, s’il possède des éléments enfants.</span><span class="sxs-lookup"><span data-stu-id="6950f-231">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> on each child element, if it has child elements.</span></span>  
  
 <span data-ttu-id="6950f-232">Pour l’élément de niveau noyau WPF dérivant des scénarios, le comportement pour <xref:System.Windows.UIElement.Arrange%2A> ne doivent pas (et ne peut pas, sauf si vous masquez) être modifié.</span><span class="sxs-lookup"><span data-stu-id="6950f-232">For WPF core-level element deriving scenarios, the behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="6950f-233">Au lieu de cela, vous devez substituer <xref:System.Windows.UIElement.ArrangeCore%2A> dans votre classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-233">Instead, you should override <xref:System.Windows.UIElement.ArrangeCore%2A> in your class.</span></span> <span data-ttu-id="6950f-234">Votre <xref:System.Windows.UIElement.ArrangeCore%2A> implémentation est appelée en interne par <xref:System.Windows.UIElement.Arrange%2A> dans le cadre d’opérations de mise en page de niveau infrastructure WPF par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-234">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="6950f-235">Toutefois, cela suppose que vous utilisez une disposition de niveau infrastructure WPF et son système de disposition, ce qui est souvent le cas si vous dérivez spécialement des éléments à WPF au niveau du noyau à partir de la <xref:System.Windows.UIElement> classe d’élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-235">However, this assumes you are using WPF framework-level layout and its layout system, which is often not the case if you are specifically deriving elements at the WPF core-level from the <xref:System.Windows.UIElement> base element class.</span></span> <span data-ttu-id="6950f-236">Votre <xref:System.Windows.UIElement.ArrangeCore%2A> implémentation doit également appeler <xref:System.Windows.UIElement.Arrange%2A> sur chaque élément enfant, s’il possède des éléments enfants.</span><span class="sxs-lookup"><span data-stu-id="6950f-236">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.UIElement.Arrange%2A> on each child element, if it has child elements.</span></span> <span data-ttu-id="6950f-237">Notez que le scénario de niveau noyau WPF implique que vous n’utilisez pas un <xref:System.Windows.FrameworkElement> , car la classe, dérivée <xref:System.Windows.FrameworkElement> scellés <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-237">Note that the WPF core-level scenario implies that you are not using a <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span>  
  
 <span data-ttu-id="6950f-238">Calcul de positionnement de disposition de niveau infrastructure WPF dans [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] se compose d’un <xref:System.Windows.UIElement.Measure%2A> appeler et une <xref:System.Windows.UIElement.Arrange%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="6950f-238">Computation of WPF framework-level layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] consists of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="6950f-239">Lors de la <xref:System.Windows.UIElement.Measure%2A> appel, le système de disposition détermine les spécifications de taille d’un élément à l’aide d’un <xref:System.Windows.Size> (`availableSize`) argument.</span><span class="sxs-lookup"><span data-stu-id="6950f-239">During the <xref:System.Windows.UIElement.Measure%2A> call, the layout system determines an element's size requirements using a provided <xref:System.Windows.Size> (`availableSize`) argument.</span></span> <span data-ttu-id="6950f-240">Lors de la <xref:System.Windows.UIElement.Arrange%2A> appel, le système de disposition finalise la taille et la position d’un élément de zone de délimitation.</span><span class="sxs-lookup"><span data-stu-id="6950f-240">During the <xref:System.Windows.UIElement.Arrange%2A> call, the layout system finalizes the size and position of an element's bounding box.</span></span>  <span data-ttu-id="6950f-241">Pour plus d’informations, consultez [disposition](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-241">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 <span data-ttu-id="6950f-242">`availableSize` peut être n’importe quel nombre de zéro à l’infini.</span><span class="sxs-lookup"><span data-stu-id="6950f-242">`availableSize` can be any number from zero to infinity.</span></span> <span data-ttu-id="6950f-243">Les éléments doivent être disposées retournent la valeur minimale <xref:System.Windows.Size> ils demandent via le `availableSize` paramètre.</span><span class="sxs-lookup"><span data-stu-id="6950f-243">Elements to be laid out return the minimum <xref:System.Windows.Size> they require through the `availableSize` parameter.</span></span>  
  
 <span data-ttu-id="6950f-244">Lorsqu’une disposition est instanciée, elle reçoit toujours un <xref:System.Windows.UIElement.Measure%2A> appeler avant <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-244">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="6950f-245">Toutefois, après la première passe de disposition, il peut recevoir un <xref:System.Windows.UIElement.Arrange%2A> d’appeler sans un <xref:System.Windows.UIElement.Measure%2A>; cela peut se produire lorsqu’une propriété qui affecte uniquement <xref:System.Windows.UIElement.Arrange%2A> est modifiée (par exemple, alignement), ou que le parent reçoit un <xref:System.Windows.UIElement.Arrange%2A> sans un <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-245">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="6950f-246">A <xref:System.Windows.UIElement.Measure%2A> appel invalidera automatiquement un <xref:System.Windows.UIElement.Arrange%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="6950f-246">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="6950f-247">Mises à jour de disposition se produisent généralement en mode asynchrone (à un moment déterminé par le système de disposition).</span><span class="sxs-lookup"><span data-stu-id="6950f-247">Layout updates generally occur asynchronously (at a time determined by the layout system).</span></span> <span data-ttu-id="6950f-248">Un élément ne reflétera pas immédiatement les modifications apportées aux propriétés qui affectent le dimensionnement d’éléments (tels que <xref:System.Windows.FrameworkElement.Width%2A>).</span><span class="sxs-lookup"><span data-stu-id="6950f-248">An element might not immediately reflect changes to properties that affect element sizing (such as <xref:System.Windows.FrameworkElement.Width%2A>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6950f-249">Mises à jour de la disposition peuvent être forcés à l’aide de la <xref:System.Windows.UIElement.UpdateLayout%2A> méthode ; Toutefois, appel de cette fonction n'est pas recommandé, car il n’est généralement pas nécessaire et peut entraîner des performances médiocres.</span><span class="sxs-lookup"><span data-stu-id="6950f-249">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method; however, calling this function is not recommended, as it is usually unnecessary and can cause poor performance.</span></span> <span data-ttu-id="6950f-250">Dans de nombreux cas où l’appel <xref:System.Windows.UIElement.UpdateLayout%2A> peut convenir, le système de disposition probablement déjà traitera les mises à jour.</span><span class="sxs-lookup"><span data-stu-id="6950f-250">In many situations where calling <xref:System.Windows.UIElement.UpdateLayout%2A> might be appropriate, the layout system will probably already be processing updates.</span></span> <span data-ttu-id="6950f-251">Le système de disposition peut traiter des modifications de disposition d’une manière qui permet d’optimiser toutes les mises à jour nécessaires dans le cadre d’un package.</span><span class="sxs-lookup"><span data-stu-id="6950f-251">The layout system can process layout changes in a manner that can optimize all necessary updates as part of a package.</span></span>  
  
 <span data-ttu-id="6950f-252">Le système de disposition conserve deux files d’attente distincts des dispositions non valide, une pour <xref:System.Windows.UIElement.Measure%2A> et l’autre pour <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-252">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="6950f-253">La file d’attente de disposition est triée en fonction de l’ordre des éléments dans l’arborescence d’éléments visuels.</span><span class="sxs-lookup"><span data-stu-id="6950f-253">The layout queue is sorted based upon the order of elements in the visual tree.</span></span> <span data-ttu-id="6950f-254">Plus haut dans l’arborescence d’éléments figurent en haut de la file d’attente, afin d’éviter des actualisations redondantes dues aux modifications répétées dans les parents.</span><span class="sxs-lookup"><span data-stu-id="6950f-254">Elements higher in the tree are at the top of the queue, in order to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="6950f-255">Entrées en double sont automatiquement supprimées de la file d’attente et les éléments sont automatiquement supprimés de la file d’attente s’ils sont déjà valides.</span><span class="sxs-lookup"><span data-stu-id="6950f-255">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already valid.</span></span>  
  
 <span data-ttu-id="6950f-256">Lors de la mise à jour de la mise en page, le <xref:System.Windows.UIElement.Measure%2A> file d’attente est d’abord vidée, suivi par le <xref:System.Windows.UIElement.Arrange%2A> file d’attente.</span><span class="sxs-lookup"><span data-stu-id="6950f-256">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="6950f-257">Un élément dans le <xref:System.Windows.UIElement.Arrange%2A> file d’attente n’est jamais disposé s’il existe un élément dans le <xref:System.Windows.UIElement.Measure%2A> file d’attente.</span><span class="sxs-lookup"><span data-stu-id="6950f-257">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeCore">
      <MemberSignature Language="C#" Value="protected virtual void ArrangeCore (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ArrangeCore(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ArrangeCore (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ArrangeCore(System::Windows::Rect finalRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect">
          <span data-ttu-id="6950f-258">Dernière zone dans le parent que cet élément doit utiliser pour se réorganiser et réorganiser ses éléments enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-258">The final area within the parent that element should use to arrange itself and its child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-259">Définit le modèle pour la définition de disposition de réorganisation au niveau du noyau WPF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-259">Defines the template for WPF core-level arrange layout definition.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="6950f-260">Substitution de cette méthode n’est approprié si vous dérivez au niveau de base WPF, et que vous n’utilisez pas le système de mise en page de niveau infrastructure WPF et <xref:System.Windows.FrameworkElement> , car la classe, dérivée <xref:System.Windows.FrameworkElement> scellés <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-260">Overriding this method is only appropriate if you are deriving at the WPF core-level, and you are not using the WPF framework-level layout system and <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span> <span data-ttu-id="6950f-261">Si vous utilisez le système de mise en page de niveau infrastructure WPF, la méthode appropriée pour substituer la mise en forme spécifiques à la classe réorganiser le comportement est <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-261">If you are using the WPF framework-level layout system, the appropriate method to override for class-specific layout arrange behavior is <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-262"><xref:System.Windows.UIElement.ArrangeCore%2A> les implémentations doivent appeler l’implémentation de base pour retourner une taille, puis appelez le <xref:System.Windows.UIElement.Arrange%2A> (méthode) de chaque élément enfant visible, puis rapprocher les tailles retournées par ces <xref:System.Windows.UIElement.Arrange%2A> appels avec la taille de l’implémentation de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-262"><xref:System.Windows.UIElement.ArrangeCore%2A> implementations should call the base implementation to return a size, then call the <xref:System.Windows.UIElement.Arrange%2A> method of each visible child element, and reconcile the sizes returned by these <xref:System.Windows.UIElement.Arrange%2A> calls with the size of the base implementation.</span></span> <span data-ttu-id="6950f-263">La logique de l’aspect de rapprochement d’un <xref:System.Windows.UIElement.ArrangeCore%2A> implémentation peut varier selon les caractéristiques de la disposition de votre élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-263">The logic for the reconciliation aspect of a <xref:System.Windows.UIElement.ArrangeCore%2A> implementation might vary, depending on the layout characteristics of your element.</span></span> <span data-ttu-id="6950f-264">Dans l’exemple de modèle, `VisualChildren` est une propriété hypothétique que votre élément peut définir pour aider à énumérer son contenu ; <xref:System.Windows.UIElement> ne définit pas de collections de contenu à ce niveau, l’architecture de niveau infrastructure WPF diffère le comportement de contenu aux éléments dérivés tels que des contrôles ou des classes de base de contrôle.</span><span class="sxs-lookup"><span data-stu-id="6950f-264">In the following example template, `VisualChildren` is a hypothetical property that your element might define to help enumerate its content; <xref:System.Windows.UIElement> does not define content collections at this level, the WPF framework-level architecture defers content behavior to derived elements such as specific controls or control base classes.</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementarrangeoverride)]
 [!code-vb[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementarrangeoverride)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-265">Si vous développez des éléments au niveau du noyau WPF, vous devez substituer cette méthode pour permettre à votre élément de niveau noyau WPF unique de réorganisation de comportement de mise en page, ou pour effectuer la mise en forme des décisions sur les éléments enfants de vos éléments.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-265">If you are developing elements at the WPF core level,you should override this method to give your WPF core-level element a unique arrange layout behavior, or to make proper layout decisions about the child elements of your elements.</span>
            </span>
            <span data-ttu-id="6950f-266">Une substitution peut être nécessaire si ces éléments enfants ne sont pas reconnaissables d’un modèle défini comme un <see cref="T:System.Windows.Controls.ItemCollection" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-266">An override might be necessary if those child elements are not recognizable from a defined pattern such as an <see cref="T:System.Windows.Controls.ItemCollection" />.</span>
            </span>
            <span data-ttu-id="6950f-267">Un élément parent doit appeler la classe spécifique <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> sur chaque élément enfant, sinon ces éléments enfants ne sont pas rendus.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-267">A parent element must call the class-specific <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each child element, otherwise those child elements are not rendered.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-268">Lance une animation pour une propriété animée spécifiée sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-268">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="6950f-269">Propriété permettant d'animer, spécifiée sous forme d'identificateur de propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-269">The property to animate, which is specified as a dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="6950f-270">Chronologie de l'animation à lancer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-270">The timeline of the animation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-271">Lance une animation pour une propriété animée spécifiée sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-271">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-272">Lorsque vous vérifiez si une propriété est animée, notez que l’animation commence et considérée animées lors du rendu de la première image au-delà du point de départ non animée.</span><span class="sxs-lookup"><span data-stu-id="6950f-272">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="6950f-273">Si le <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> pour `animation` est `null`, puis les animations en cours sont supprimées et la valeur actuelle de la propriété est conservée.</span><span class="sxs-lookup"><span data-stu-id="6950f-273">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="6950f-274">Si l’ensemble de `animation` valeur est `null`, toutes les animations sont supprimées de la propriété et la valeur de propriété revient à sa valeur de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-274">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="6950f-275">Toutefois, la chronologie d’animation associée au départ n’est pas arrêtée.</span><span class="sxs-lookup"><span data-stu-id="6950f-275">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="6950f-276">Toute autre animation assignée à cette chronologie continue à s’exécuter.</span><span class="sxs-lookup"><span data-stu-id="6950f-276">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-277">L’exemple suivant crée une animation, lui assigne, puis appelle <xref:System.Windows.UIElement.BeginAnimation%2A> pour le démarrer.</span><span class="sxs-lookup"><span data-stu-id="6950f-277">The following example creates an animation, assigns it, and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> to start it.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#beginanimation)]
 [!code-vb[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#beginanimation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="6950f-278">Propriété permettant d'animer, spécifiée sous forme d'identificateur de propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-278">The property to animate, which is specified as the dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="6950f-279">Chronologie de l'animation à s'appliquer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-279">The timeline of the animation to be applied.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="6950f-280">Valeur quelconque de l'énumération qui spécifie comment la nouvelle animation interagit avec toute animation en cours affectant déjà la valeur de la propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-280">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-281">Lance une animation spécifique pour une propriété animée spécifiée sur cet élément, avec l'option de la spécification de ce qui arrive si la propriété possède déjà une animation en cours d'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-281">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-282">Lorsque vous vérifiez si une propriété est animée, notez que l’animation commence et considérée animées lors du rendu de la première image au-delà du point de départ non animée.</span><span class="sxs-lookup"><span data-stu-id="6950f-282">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="6950f-283">Si le <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> pour `animation` est `null`, puis les animations en cours sont supprimées et la valeur actuelle de la propriété est conservée.</span><span class="sxs-lookup"><span data-stu-id="6950f-283">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="6950f-284">Si l’ensemble de `animation` valeur est `null`, toutes les animations sont supprimées de la propriété et la valeur de propriété revient à sa valeur de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-284">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="6950f-285">Toutefois, la chronologie d’animation associée au départ n’est pas arrêtée.</span><span class="sxs-lookup"><span data-stu-id="6950f-285">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="6950f-286">Toute autre animation assignée à cette chronologie continue à s’exécuter.</span><span class="sxs-lookup"><span data-stu-id="6950f-286">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-287">L’exemple suivant implémente un gestionnaire qui obtient une animation à partir d’une ressource, puis appelle <xref:System.Windows.UIElement.BeginAnimation%2A> avec un comportement de transfert spécifié.</span><span class="sxs-lookup"><span data-stu-id="6950f-287">The following example implements a handler that obtains an existing animation from a resource and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> with a specified handoff behavior.</span></span>  
  
 [!code-csharp[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesIntroduction/CSharp/SampleViewer.xaml.cs#beginanimationhandoff)]
 [!code-vb[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesIntroduction/visualbasic/sampleviewer.xaml.vb#beginanimationhandoff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect BitmapEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect BitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffect ^ BitmapEffect { System::Windows::Media::Effects::BitmapEffect ^ get(); void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-288">Obtient ou définit un effet bitmap qui s'applique directement au contenu affiché pour cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-288">Gets or sets a bitmap effect that applies directly to the rendered content for this element.</span>
          </span>
          <span data-ttu-id="6950f-289">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-289">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-290">Effet bitmap à appliquer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-290">The bitmap effect to apply.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-291"><xref:System.Windows.Media.Effects.BitmapEffect> est un type abstrait, donc le [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] l’utilisation requiert une classe dérivée implémentée de <xref:System.Windows.Media.Effects.BitmapEffect>, tel que <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="6950f-291"><xref:System.Windows.Media.Effects.BitmapEffect> is an abstract type, therefore the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage requires an implemented derived class of <xref:System.Windows.Media.Effects.BitmapEffect>, such as <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span></span> <span data-ttu-id="6950f-292">Notez qu’une classe dérivée implémentée est un type de collection qui vous permet de spécifier plusieurs séquentielle <xref:System.Windows.Media.Effects.BitmapEffect>, à l’aide d’une syntaxe de balises imbriquées.</span><span class="sxs-lookup"><span data-stu-id="6950f-292">Note that one implemented derived class is a collection type that allows you to specify more than one sequential <xref:System.Windows.Media.Effects.BitmapEffect>, using a nested tag syntax.</span></span>  
  
 <span data-ttu-id="6950f-293">Aucun classe dérivée de <xref:System.Windows.Media.Effects.BitmapEffect> prend en charge un convertisseur de type, donc la [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntaxe que vous utilisez pour cette propriété est généralement la syntaxe d’élément de propriété.</span><span class="sxs-lookup"><span data-stu-id="6950f-293">No existing derived class of <xref:System.Windows.Media.Effects.BitmapEffect> supports a type converter, so the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax that you use for this property is generally property element syntax.</span></span>  
  
<a name="dependencyPropertyInfo_BitmapEffect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-294">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-294">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-295">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-295">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectProperty>|  
|<span data-ttu-id="6950f-296">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-296">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-297">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-297">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-298">L’exemple suivant définit une image bitmap effet, à l’aide de <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="6950f-298">The following example sets a bitmap effect, using <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span></span>  
  
 [!code-csharp[EffectsGallery_snip#CodeBehindBlurCodeBehindExampleInline](~/samples/snippets/csharp/VS_Snippets_Wpf/EffectsGallery_snip/CSharp/blurcodebehindexample.xaml.cs#codebehindblurcodebehindexampleinline)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffectInput ^ BitmapEffectInput { System::Windows::Media::Effects::BitmapEffectInput ^ get(); void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-299">Obtient ou définit une source d'entrée pour l'effet bitmap qui s'applique directement au contenu affiché pour cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-299">Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.</span>
          </span>
          <span data-ttu-id="6950f-300">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-300">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-301">Source des effets bitmap.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-301">The source for bitmap effects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BitmapEffectInput"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-302">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-302">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-303">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-303">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectInputProperty>|  
|<span data-ttu-id="6950f-304">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-304">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-305">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-305">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInputProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectInputProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectInputProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectInputProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectInputProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-306">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.BitmapEffectInput" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-306">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffectInput" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-307">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.BitmapEffect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-307">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffect" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode CacheMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode CacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CacheMode ^ CacheMode { System::Windows::Media::CacheMode ^ get(); void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-308">Obtient ou définit la représentation mise en cache de <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-308">Gets or sets a cached representation of the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-309">
            <see cref="T:System.Windows.Media.CacheMode" /> qui contient une représentation mise en cache de <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-309">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-310">Définir le <xref:System.Windows.UIElement.CacheMode%2A> propriété lorsque vous avez besoin augmenter les performances pour le contenu qui prend beaucoup de temps à restituer.</span><span class="sxs-lookup"><span data-stu-id="6950f-310">Set the <xref:System.Windows.UIElement.CacheMode%2A> property when you need to increase performance for content that is time consuming to render.</span></span> <span data-ttu-id="6950f-311">Pour plus d'informations, consultez <xref:System.Windows.Media.BitmapCache>.</span><span class="sxs-lookup"><span data-stu-id="6950f-311">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="CacheModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.CacheModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CacheModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CacheModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-312">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.CacheMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-312">Identifies the <see cref="P:System.Windows.UIElement.CacheMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-313">Essaie de forcer la capture de la souris par cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-313">Attempts to force capture of the mouse to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-314">
            <see langword="true" /> si la souris est capturée correctement ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-314">
              <see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-315">Pour être capturé, un élément doit être activé.</span><span class="sxs-lookup"><span data-stu-id="6950f-315">To be captured, an element must be enabled.</span></span> <span data-ttu-id="6950f-316">Vérifiez si <xref:System.Windows.UIElement.IsEnabled%2A> est `true` avant d’appeler <xref:System.Windows.UIElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-316">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.UIElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="6950f-317">Si l’appel <xref:System.Windows.UIElement.CaptureMouse%2A> retourne `true`, puis <xref:System.Windows.UIElement.IsMouseCaptured%2A> est également `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-317">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.UIElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="6950f-318">Si l’appel <xref:System.Windows.UIElement.CaptureMouse%2A> retourne `true`, puis le <xref:System.Windows.UIElement.GotMouseCapture> et <xref:System.Windows.UIElement.IsMouseCapturedChanged> sont déclenchés, avec <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> de l’événement signalé de données en tant que l’élément où la <xref:System.Windows.UIElement.CaptureMouse%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-318">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.UIElement.GotMouseCapture> and <xref:System.Windows.UIElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.UIElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="6950f-319">Si vous forcez la capture, vous risquez d’interférer avec les captures, surtout avec des captures qui se rapportent à glisser-déplacer avec la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-319">If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="6950f-320">Pour effacer la capture de la souris à partir de tous les éléments, appelez <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> avec la `element` paramètre fourni en tant que `null`.</span><span class="sxs-lookup"><span data-stu-id="6950f-320">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-321">L’exemple suivant implémente une paire de gestionnaires de la souris et des touches d’entrée qui capture (et annuler la capture) de la souris et activer un mode spécial de la souris pour afficher un modèle 3D.</span><span class="sxs-lookup"><span data-stu-id="6950f-321">The following example implements a pair of handlers for mouse and key input combination that capture (and uncapture) the mouse and enable a special mouse mode for viewing a 3D model.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-322">Essaie de forcer la capture du stylet par cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-322">Attempts to force capture of the stylus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-323">
            <see langword="true" /> si le stylet a été capturé correctement ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-323">
              <see langword="true" /> if the stylus was successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-324">L’implémentation par défaut basée sur le périphérique stylet par défaut sous-jacent toujours retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-324">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="6950f-325">Toutefois, si vous étendez les périphériques d’entrée qui fournissent l’implémentation de l’appareil pour le système d’entrée, il est possible de créer un système avec une implémentation d’un périphérique stylet autre qui peut retourner des résultats différents.</span><span class="sxs-lookup"><span data-stu-id="6950f-325">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="6950f-326">Lorsqu’un élément capture le stylet, il reçoit l’entrée du stylet même si le stylet se trouve en dehors de ses limites.</span><span class="sxs-lookup"><span data-stu-id="6950f-326">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="6950f-327">Le stylet est capturé en général uniquement pendant les opérations de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="6950f-327">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="6950f-328">Cette méthode appelle un sous-jacent statique <xref:System.Windows.Input.Stylus> méthode <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-328">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="6950f-329">Le comportement de capture est implémenté par l’implémentation du stylet active.</span><span class="sxs-lookup"><span data-stu-id="6950f-329">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="6950f-330">Pour être capturé, un élément doit être activé.</span><span class="sxs-lookup"><span data-stu-id="6950f-330">To be captured, an element must be enabled.</span></span> <span data-ttu-id="6950f-331">Vérifiez si <xref:System.Windows.UIElement.IsEnabled%2A> est `true` retourner avant d’appeler <xref:System.Windows.UIElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-331">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.UIElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="6950f-332">Si l’appel <xref:System.Windows.UIElement.CaptureStylus%2A> retourne `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> est également `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-332">If calling <xref:System.Windows.UIElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="6950f-333">Périphérique à capturer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-333">The device to capture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-334">Tente de forcer la capture de l'événement tactile par cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-334">Attempts to force capture of a touch to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-335">
            <see langword="true" /> si l'événement tactile spécifié est capturé dans cet élément ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-335">
              <see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-336"><xref:System.Windows.UIElement.CaptureTouch%2A> retournera `false` si la <xref:System.Windows.Input.TouchDevice> est actuellement capturé à un autre élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-336"><xref:System.Windows.UIElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="6950f-337">Si <xref:System.Windows.UIElement.CaptureTouch%2A> retourne `true`, puis le <xref:System.Windows.UIElement.GotTouchCapture> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="6950f-337">If <xref:System.Windows.UIElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.UIElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="6950f-338">Pour libérer la capture d’une fonction tactile de cet élément, utilisez la <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> (méthode) et spécifiez l’appareil tactile à libérer.</span><span class="sxs-lookup"><span data-stu-id="6950f-338">To release capture of a single touch from this element, use the <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="6950f-339">Pour libérer tous les fonctions tactiles de cet élément, utilisez la <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6950f-339">To release all touches from this element, use the <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6950f-340">
            <paramref name="touchDevice" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-340">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry Clip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Geometry ^ Clip { System::Windows::Media::Geometry ^ get(); void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-341">Obtient ou définit la géométrie utilisée pour définir le contour du contenu d’un élément</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-341">Gets or sets the geometry used to define the outline of the contents of an element.</span>
          </span>
          <span data-ttu-id="6950f-342">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-342">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-343">Géométrie à utiliser pour le découpage des dimensions de la zone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-343">The geometry to be used for clipping area sizing.</span>
          </span>
          <span data-ttu-id="6950f-344">La valeur par défaut est un <see cref="T:System.Windows.Media.Geometry" /> null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-344">The default is a null <see cref="T:System.Windows.Media.Geometry" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-345">Éléments à l’extérieur de la géométrie apparaîtront détourés dans la disposition de l’affichage.</span><span class="sxs-lookup"><span data-stu-id="6950f-345">Elements outside the geometry will be visually clipped in the rendered layout.</span></span> <span data-ttu-id="6950f-346">La géométrie pas nécessairement être rectangulaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-346">The geometry does not have to be rectangular.</span></span>  
  
<a name="dependencyPropertyInfo_Clip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-347">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-347">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-348">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-348">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipProperty>|  
|<span data-ttu-id="6950f-349">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-349">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-350">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-350">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-351">Cet exemple montre comment définir un élément d’infrastructure <xref:System.Windows.UIElement.Clip%2A> région.</span><span class="sxs-lookup"><span data-stu-id="6950f-351">This example shows how to define a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="6950f-352">Pour définir un élément, utilisez un <xref:System.Windows.Media.Geometry> (par exemple, un <xref:System.Windows.Media.EllipseGeometry> pour définir l’élément <xref:System.Windows.UIElement.Clip%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="6950f-352">To define a clip, use a <xref:System.Windows.Media.Geometry> (for example, an <xref:System.Windows.Media.EllipseGeometry> to set the element's <xref:System.Windows.UIElement.Clip%2A> property.</span></span> <span data-ttu-id="6950f-353">Seule la zone qui se trouve dans la région de la géométrie sera visible.</span><span class="sxs-lookup"><span data-stu-id="6950f-353">Only the area that is within the region of the geometry will be visible.</span></span>  
  
 <span data-ttu-id="6950f-354">L’exemple suivant montre un <xref:System.Windows.Controls.Image> élément sans une zone de découpage définie.</span><span class="sxs-lookup"><span data-stu-id="6950f-354">The following example shows an <xref:System.Windows.Controls.Image> element without a defined clip region.</span></span> <span data-ttu-id="6950f-355">Parce qu’aucune zone de découpage n’est défini, l’intégralité de l’image s’affiche.</span><span class="sxs-lookup"><span data-stu-id="6950f-355">Because no clip region is defined, the entire image is displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#2)]  
  
 <span data-ttu-id="6950f-356">![Objet avant application d’une zone de découpage](~/add/media/mil-task-clip-region-noclip.png "objet avant application d’une zone de découpage")</span><span class="sxs-lookup"><span data-stu-id="6950f-356">![An object before applying a clip region](~/add/media/mil-task-clip-region-noclip.png "An object before applying a clip region")</span></span>  
<span data-ttu-id="6950f-357">Image avec aucune zone de découpage</span><span class="sxs-lookup"><span data-stu-id="6950f-357">Image with No Clip Region</span></span>  
  
 <span data-ttu-id="6950f-358">Dans l’exemple suivant, une Image identique est créée, sauf qu’elle a une zone de découpage définie.</span><span class="sxs-lookup"><span data-stu-id="6950f-358">In the next example, an identical Image is created, except that it has a defined clip region.</span></span> <span data-ttu-id="6950f-359">Seule la partie de l’image qui se trouve dans la zone de la <xref:System.Windows.Media.EllipseGeometry> s’affiche.</span><span class="sxs-lookup"><span data-stu-id="6950f-359">Only the part of the image that is within the area the <xref:System.Windows.Media.EllipseGeometry> will be displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#4)]  
  
 <span data-ttu-id="6950f-360">![Objet découpé](~/add/media/mil-task-clip-region-ellispe.PNG "objet découpé")</span><span class="sxs-lookup"><span data-stu-id="6950f-360">![A clipped object](~/add/media/mil-task-clip-region-ellispe.PNG "A clipped object")</span></span>  
<span data-ttu-id="6950f-361">Image avec une zone de découpage elliptique</span><span class="sxs-lookup"><span data-stu-id="6950f-361">Image with an Elliptical Clip Region</span></span>  
  
 <span data-ttu-id="6950f-362">L’exemple suivant montre comment animer un élément d’infrastructure <xref:System.Windows.UIElement.Clip%2A> région.</span><span class="sxs-lookup"><span data-stu-id="6950f-362">The following example shows how animate a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="6950f-363">Dans cet exemple, un <xref:System.Windows.Media.EllipseGeometry> est utilisé pour définir une zone de découpage elliptique pour un <xref:System.Windows.Controls.Image> élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-363">In this example, an <xref:System.Windows.Media.EllipseGeometry> is used to define an elliptical clip region for an <xref:System.Windows.Controls.Image> element.</span></span> <span data-ttu-id="6950f-364">A <xref:System.Windows.Media.Animation.PointAnimation> réalise une animation de la géométrie d’ellipse <xref:System.Windows.Media.EllipseGeometry.Center%2A> propriété à partir de (0, 0) à (200, 150).</span><span class="sxs-lookup"><span data-stu-id="6950f-364">A <xref:System.Windows.Media.Animation.PointAnimation> animates the ellipse geometry's <xref:System.Windows.Media.EllipseGeometry.Center%2A> property from (0, 0) to (200, 150).</span></span> <span data-ttu-id="6950f-365">Lancer l’animation une fois l’image chargée et se répète indéfiniment.</span><span class="sxs-lookup"><span data-stu-id="6950f-365">The animation starts playing after the image is loaded and repeats indefinitely.</span></span>  
  
 [!code-xaml[ClipPathExample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#5)]  
  
 <span data-ttu-id="6950f-366">Pour l’exemple complet, consultez la [exemple de zone de découpage](http://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span><span class="sxs-lookup"><span data-stu-id="6950f-366">For the full sample, see the [Clip Region Sample](http://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
      </Docs>
    </Member>
    <Member MemberName="ClipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-367">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.Clip" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-367">Identifies the <see cref="P:System.Windows.UIElement.Clip" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipToBounds">
      <MemberSignature Language="C#" Value="public bool ClipToBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClipToBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.ClipToBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipToBounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClipToBounds { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-368">Obtient ou définit une valeur qui indique s'il faut ou non détourer le contenu de cet élément (ou le contenu provenant des éléments enfants de cet élément) pour l'ajuster à la taille de l'élément qui les contient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-368">Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.</span>
          </span>
          <span data-ttu-id="6950f-369">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-369">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-370">
            <see langword="true" /> si le contenu doit être détouré ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-370">
              <see langword="true" /> if the content should be clipped; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-371">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-371">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-372">Pour les éléments enfants, <xref:System.Windows.UIElement.ClipToBounds%2A> a les mêmes effets sur les comportements de mise en forme selon que la hauteur et la largeur de l’élément parent sont déterminées par <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> ou <xref:System.Windows.FrameworkElement.MaxHeight%2A>  /  <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-372">For child elements, <xref:System.Windows.UIElement.ClipToBounds%2A> has different effects on layout behaviors depending on whether the height and width of the parent element are being determined by <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span> <span data-ttu-id="6950f-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> de l’élément parent est toujours respectée, quelle que soit la valeur de <xref:System.Windows.UIElement.ClipToBounds%2A> et le découpage s’effectue toujours le contenu en fonction de ces valeurs maximales.</span><span class="sxs-lookup"><span data-stu-id="6950f-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> of the parent element are always respected regardless of the value of <xref:System.Windows.UIElement.ClipToBounds%2A> and the effective clipping will always clip the content based on these maximums.</span></span> <span data-ttu-id="6950f-374">Du parent <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> paramètres ne seront pas détourer le contenu lorsque <xref:System.Windows.UIElement.ClipToBounds%2A> est `false`, mais découpe le contenu si <xref:System.Windows.UIElement.ClipToBounds%2A> est `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-374">The parent's <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> settings will not clip the content when <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`, but will clip the content if <xref:System.Windows.UIElement.ClipToBounds%2A> is `true`.</span></span>  
  
 <span data-ttu-id="6950f-375">Notez que par défaut `false` est le comportement général tel qu’implémenté dans le <xref:System.Windows.UIElement> classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-375">Note that defaulting to `false` is the general behavior as implemented in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="6950f-376">Il est possible pour tout élément qui dérive de <xref:System.Windows.UIElement> pour remplacer les métadonnées de propriété de dépendance pour cette propriété dans cette instance par défaut à `true` à la place.</span><span class="sxs-lookup"><span data-stu-id="6950f-376">It is possible for any given element that derives from <xref:System.Windows.UIElement> to override the dependency property metadata for this property in that instance to default to `true` instead.</span></span> <span data-ttu-id="6950f-377">Plusieurs classes dérivées existantes substituent ces métadonnées et/ou ajustent la valeur par défaut de la propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="6950f-377">Several existing derived classes override this metadata and/or adjust the dependency property default value.</span></span>  
  
 <span data-ttu-id="6950f-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, et <xref:System.Windows.Controls.Primitives.Popup> chaque substitution de la valeur par défaut pour être `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.Popup> each override the default value to be `true`.</span></span>  
  
 <span data-ttu-id="6950f-379"><xref:System.Windows.FrameworkElement> substitue les métadonnées pour cette propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="6950f-379"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property.</span></span> <span data-ttu-id="6950f-380">Plus précisément, <xref:System.Windows.FrameworkElement> désigne cette propriété pour autoriser l’héritage de valeur de propriété (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> est `true` dans les métadonnées).</span><span class="sxs-lookup"><span data-stu-id="6950f-380">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="6950f-381">L’héritage de valeur de propriété dans ce contexte signifie que s’il existe des éléments enfants avec aucune autre valeur pour <xref:System.Windows.UIElement.ClipToBounds%2A> affecté par l’intermédiaire de valeurs locales ou de styles, la valeur de l’élément parent le plus proche avec cette valeur attribuée (là encore, soit dans les styles, par défaut les valeurs, ou une valeur localement), la valeur de l’élément parent est affectée à tous les éléments enfants non attribués par le système de propriétés.</span><span class="sxs-lookup"><span data-stu-id="6950f-381">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.ClipToBounds%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a locally value), then the value from the parent element will be assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="6950f-382">Dans la pratique, cela signifie que vous pouvez spécifier s’il faut autoriser des découpages aux bords au niveau de l’élément racine, et que cette valeur se propage à tous les éléments enfants qui n’ont pas spécifiquement affectés en tant que `false`.</span><span class="sxs-lookup"><span data-stu-id="6950f-382">In practice this means that you can specify whether to allow clip to bounds at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_ClipToBounds"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-383">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-383">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-384">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-384">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipToBoundsProperty>|  
|<span data-ttu-id="6950f-385">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-385">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-386">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-386">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Clip" />
      </Docs>
    </Member>
    <Member MemberName="ClipToBoundsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipToBoundsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipToBoundsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipToBoundsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipToBoundsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-387">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.ClipToBounds" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-387">Identifies the <see cref="P:System.Windows.UIElement.ClipToBounds" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-388">Obtient une collection d'objets <see cref="T:System.Windows.Input.CommandBinding" /> associés à cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-388">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects associated with this element.</span>
          </span>
          <span data-ttu-id="6950f-389">
            <see cref="T:System.Windows.Input.CommandBinding" /> active la gestion de commande pour cet élément et déclare la liaison entre une commande, ses événements et les gestionnaires attachés par cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-389">A <see cref="T:System.Windows.Input.CommandBinding" /> enables command handling for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-390">Collection de tous les objets <see cref="T:System.Windows.Input.CommandBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-390">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-391">Une autre technique habituelle pour remplir la <xref:System.Windows.UIElement.CommandBindings%2A> collection consiste à utiliser <xref:System.Windows.Input.CommandManager> méthodes par programmation.</span><span class="sxs-lookup"><span data-stu-id="6950f-391">Another typical way to populate the <xref:System.Windows.UIElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="6950f-392">Utilisation des éléments de propriété XAML</span><span class="sxs-lookup"><span data-stu-id="6950f-392">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  
  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="6950f-393">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="6950f-393">XAML Values</span></span>  
 <span data-ttu-id="6950f-394">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="6950f-394">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="6950f-395">Un ou plusieurs <xref:System.Windows.Input.CommandBinding> éléments.</span><span class="sxs-lookup"><span data-stu-id="6950f-395">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="6950f-396">Chacun d’eux doit avoir un <xref:System.Windows.Input.CommandBinding.Command%2A> attribut défini sur une commande connue, et des attributs définis pour le <xref:System.Windows.Input.CommandBinding.CanExecute> et <xref:System.Windows.Input.CommandBinding.Executed> les implémentations de gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-396">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="6950f-397">Pour plus d’informations, consultez <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="6950f-397">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-398">L’exemple suivant ajoute un <xref:System.Windows.Input.CommandBinding> dans une fenêtre à l’aide de balisage.</span><span class="sxs-lookup"><span data-stu-id="6950f-398">The following example adds a <xref:System.Windows.Input.CommandBinding> to a window using markup.</span></span> <span data-ttu-id="6950f-399">Notez que dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], le <xref:System.Windows.Input.CommandBindingCollection> n’est pas déclaré dans le balisage en tant qu’élément ; l’objet de collection est déduit par le type de la propriété, et vous devez remplir l’élément de propriété avec un ou plusieurs <xref:System.Windows.Input.CommandBinding> éléments :</span><span class="sxs-lookup"><span data-stu-id="6950f-399">Note that in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the <xref:System.Windows.Input.CommandBindingCollection> is not declared in the markup as an element; the collection object is inferred by the type that the property takes, and you populate the property element with one or more <xref:System.Windows.Input.CommandBinding> elements:</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 <span data-ttu-id="6950f-400">Pour plus d’informations sur la [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntaxe pour les collections, consultez [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-400">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 <span data-ttu-id="6950f-401">L’exemple suivant produit essentiellement la même chose dans le code :</span><span class="sxs-lookup"><span data-stu-id="6950f-401">The following example does essentially the same thing in code:</span></span>  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesiredSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size DesiredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size DesiredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.DesiredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size DesiredSize { System::Windows::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-402">Obtient la taille que cet élément a calculée pendant la passe de mesure du processus de disposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-402">Gets the size that this element computed during the measure pass of the layout process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-403">Taille calculée, qui devient la taille souhaitée pour la passe de réorganisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-403">The computed size, which becomes the desired size for the arrange pass.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-404">La valeur retournée par cette propriété sera uniquement d’une mesure valide si la valeur de la <xref:System.Windows.UIElement.IsMeasureValid%2A> propriété est `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-404">The value returned by this property will only be a valid measurement if the value of the <xref:System.Windows.UIElement.IsMeasureValid%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="6950f-405"><xref:System.Windows.UIElement.DesiredSize%2A> est vérifié en général comme un des facteurs de mesure lorsque vous implémentez le comportement de mise en page substitue comme <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, ou <xref:System.Windows.UIElement.OnRender%2A> (dans le <xref:System.Windows.UIElement.OnRender%2A> cas, vous pouvez examiner <xref:System.Windows.UIElement.RenderSize%2A> au lieu de cela, mais cela dépend de votre implémentation).</span><span class="sxs-lookup"><span data-stu-id="6950f-405"><xref:System.Windows.UIElement.DesiredSize%2A> is typically checked as one of the measurement factors when you implement layout behavior overrides such as <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, or <xref:System.Windows.UIElement.OnRender%2A> (in the <xref:System.Windows.UIElement.OnRender%2A> case, you might check <xref:System.Windows.UIElement.RenderSize%2A> instead, but this depends on your implementation).</span></span> <span data-ttu-id="6950f-406">Selon le scénario, <xref:System.Windows.UIElement.DesiredSize%2A> peut être respecté pleinement par votre logique d’implémentation, les contraintes sur <xref:System.Windows.UIElement.DesiredSize%2A> peut être appliquée, et elles peuvent également modifier d’autres caractéristiques de l’élément parent ou un élément enfant.</span><span class="sxs-lookup"><span data-stu-id="6950f-406">Depending on the scenario, <xref:System.Windows.UIElement.DesiredSize%2A> might be fully respected by your implementation logic, constraints on <xref:System.Windows.UIElement.DesiredSize%2A> might be applied, and such constraints might also change other characteristics of either the parent element or child element.</span></span> <span data-ttu-id="6950f-407">Par exemple, un contrôle qui prend en charge les zones déroulantes (mais ne choisit ne pas dériver des contrôles de niveau infrastructure WPF qui activent déjà des régions déroulantes) peut comparer les dimensions disponibles avec <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-407">For example, a control that supports scrollable regions (but chooses not to derive from the WPF framework-level controls that already enable scrollable regions) could compare available size to <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="6950f-408">Le contrôle peut ensuite définir un état interne qui active des barres de défilement dans le [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] pour ce contrôle.</span><span class="sxs-lookup"><span data-stu-id="6950f-408">The control could then set an internal state that enabled scrollbars in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] for that control.</span></span> <span data-ttu-id="6950f-409">Ou, <xref:System.Windows.UIElement.DesiredSize%2A> peut éventuellement être ignoré aussi dans certains scénarios.</span><span class="sxs-lookup"><span data-stu-id="6950f-409">Or, <xref:System.Windows.UIElement.DesiredSize%2A> could potentially also be ignored in certain scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-410">L’exemple suivant <xref:System.Windows.UIElement.DesiredSize%2A> en tant que partie d’un <xref:System.Windows.FrameworkElement.MeasureOverride%2A> mise en œuvre.</span><span class="sxs-lookup"><span data-stu-id="6950f-410">The following example shows <xref:System.Windows.UIElement.DesiredSize%2A> as part of a <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementation.</span></span> <span data-ttu-id="6950f-411">Notez comment <xref:System.Windows.UIElement.Measure%2A> est appelée immédiatement avant l’obtention de <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-411">Notice how <xref:System.Windows.UIElement.Measure%2A> is called immediately prior to obtaining <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="6950f-412">Cela garantit que <xref:System.Windows.UIElement.DesiredSize%2A> contient une valeur légitime.</span><span class="sxs-lookup"><span data-stu-id="6950f-412">This assures that <xref:System.Windows.UIElement.DesiredSize%2A> holds a legitimate value.</span></span>  
  
 [!code-cpp[PlotPanel#2](~/samples/snippets/cpp/VS_Snippets_Wpf/PlotPanel/CPP/PlotPanel.cpp#2)]
 [!code-csharp[PlotPanel#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PlotPanel/CSharp/PlotPanel.cs#2)]
 [!code-vb[PlotPanel#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PlotPanel/VisualBasic/PlotPanel.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-413">Se produit quand le système d’entrée signale un événement de glissement sous-jacent qui a pour cible cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-413">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-414">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-414">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-415">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.DragEnter> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-415">Event handlers that are attached to the <xref:System.Windows.UIElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-416">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-416">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-417">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-417">Identifier field</span></span>|<xref:System.Windows.UIElement.DragEnterEvent>|  
|<span data-ttu-id="6950f-418">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-418">Routing strategy</span></span>|<span data-ttu-id="6950f-419">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-419">Bubbling</span></span>|  
|<span data-ttu-id="6950f-420">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-420">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="6950f-421">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="6950f-421">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="6950f-422">Substituer <xref:System.Windows.UIElement.OnDragEnter%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-422">Override <xref:System.Windows.UIElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-423">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.DragEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-423">Identifies the <see cref="E:System.Windows.UIElement.DragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-424">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-424">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-425">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-425">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-426">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-426">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-427">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-427">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-428">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-428">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-429">Se produit quand le système d’entrée signale un événement de glissement sous-jacent qui a pour origine cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-429">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-430">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> événement pour cette classe attaché afin que <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-430">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-431">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.DragLeave> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-431">Event handlers that are attached to the <xref:System.Windows.UIElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-432">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-432">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-433">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-433">Identifier field</span></span>|<xref:System.Windows.UIElement.DragLeaveEvent>|  
|<span data-ttu-id="6950f-434">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-434">Routing strategy</span></span>|<span data-ttu-id="6950f-435">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-435">Bubbling</span></span>|  
|<span data-ttu-id="6950f-436">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-436">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="6950f-437">L’événement de tunneling correspondant est <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="6950f-437">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="6950f-438">Substituer <xref:System.Windows.UIElement.OnDragLeave%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-438">Override <xref:System.Windows.UIElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-439">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.DragLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-439">Identifies the <see cref="E:System.Windows.UIElement.DragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-440">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-440">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-441">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-441">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-442">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-442">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-443">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-443">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-444">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-444">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-445">Se produit quand le système d’entrée signale un événement de glissement sous-jacent avec pour cible de déplacement potentielle cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-445">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-446">Cet événement se produit même si le glissement commence dans les limites de l’élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-446">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="6950f-447">Si l’opération glisser commence en dehors des limites, puis déplace à l’intérieur, cet événement est également déclenché, ainsi que <xref:System.Windows.UIElement.DragEnter> et les événements d’aperçu.</span><span class="sxs-lookup"><span data-stu-id="6950f-447">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="6950f-448">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> événement pour cette classe attaché afin que <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-448">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-449">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.DragOver> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-449">Event handlers that are attached to the <xref:System.Windows.UIElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-450">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-450">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-451">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-451">Identifier field</span></span>|<xref:System.Windows.UIElement.DragOverEvent>|  
|<span data-ttu-id="6950f-452">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-452">Routing strategy</span></span>|<span data-ttu-id="6950f-453">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-453">Bubbling</span></span>|  
|<span data-ttu-id="6950f-454">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-454">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="6950f-455">L’événement de tunneling correspondant est <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="6950f-455">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="6950f-456">Substituer <xref:System.Windows.UIElement.OnDragOver%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-456">Override <xref:System.Windows.UIElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-457">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.DragOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-457">Identifies the <see cref="E:System.Windows.UIElement.DragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-458">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-458">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-459">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-459">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-460">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-460">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-461">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-461">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-462">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-462">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-463">Se produit quand le système d’entrée signale un événement de déplacement sous-jacent avec cet élément comme cible de déplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-463">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-464">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> événement pour cette classe attaché afin que <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-464">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-465">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.Drop> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-465">Event handlers that are attached to the <xref:System.Windows.UIElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-466">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-467">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-467">Identifier field</span></span>|<xref:System.Windows.UIElement.DropEvent>|  
|<span data-ttu-id="6950f-468">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-468">Routing strategy</span></span>|<span data-ttu-id="6950f-469">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-469">Bubbling</span></span>|  
|<span data-ttu-id="6950f-470">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-470">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="6950f-471">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="6950f-471">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="6950f-472">Substituer <xref:System.Windows.UIElement.OnDrop%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-472">Override <xref:System.Windows.UIElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-473">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.Drop" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-473">Identifies the <see cref="E:System.Windows.UIElement.Drop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-474">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-474">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-475">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-475">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-476">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-476">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-477">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-477">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-478">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-478">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::Effect ^ Effect { System::Windows::Media::Effects::Effect ^ get(); void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-479">Obtient ou définit l'effet bitmap à appliquer à <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-479">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
          <span data-ttu-id="6950f-480">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-480">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-481">
            <see cref="T:System.Windows.Media.Effects.Effect" /> qui représente l'effet bitmap.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-481">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-482">Utilisez le <xref:System.Windows.UIElement.Effect%2A> propriété à laquelle appliquer un effet bitmap à un <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-482">Use the <xref:System.Windows.UIElement.Effect%2A> property to apply a bitmap effect to a <xref:System.Windows.UIElement>.</span></span>  
  
<a name="dependencyPropertyInfo_Effect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-483">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-483">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-484">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-484">Identifier field</span></span>|<xref:System.Windows.UIElement.EffectProperty>|  
|<span data-ttu-id="6950f-485">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-485">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-486">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-486">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-487">Le code XAML suivant montre comment affecter un personnalisé <xref:System.Windows.Media.Effects.ShaderEffect> à la <xref:System.Windows.UIElement.Effect%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="6950f-487">The following XAML shows how to assign a custom <xref:System.Windows.Media.Effects.ShaderEffect> to the <xref:System.Windows.UIElement.Effect%2A> property.</span></span>  
  
 [!code-xaml[System.Windows.Media.Effects.ShaderEffect#1000](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Window1.xaml#1000)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="EffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.EffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EffectProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-488">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.Effect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-488">Identifies the <see cref="P:System.Windows.UIElement.Effect" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-489">Essaie d'affecter le focus sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-489">Attempts to set focus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-490">
            <see langword="true" /> si le focus clavier et le focus logique ont eu pour valeur cet élément ; <see langword="false" /> si seul le focus logique a eu pour valeur cet élément, ou si l'appel de cette méthode n'a pas entraîné de modification du focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-490">
              <see langword="true" /> if keyboard focus and logical focus were set to this element; <see langword="false" /> if only logical focus was set to this element, or if the call to this method did not force the focus to change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-491">Soit actif, <xref:System.Windows.UIElement.Focusable%2A> et <xref:System.Windows.UIElement.IsEnabled%2A> doivent tous deux être `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-491">To be focusable, <xref:System.Windows.UIElement.Focusable%2A> and <xref:System.Windows.UIElement.IsEnabled%2A> must both be `true`.</span></span>  
  
 <span data-ttu-id="6950f-492">Même si un élément est la gestion des événements de focus et être activé, dans une arborescence spécifique, (tels que pour un contrôle composite) peuvent répondre aux événements de focus aperçu en n’autorisant ne pas le focus, par conséquent, cette méthode retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="6950f-492">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="6950f-493">Le focus en général est régi par deux concepts distincts : le focus clavier et le focus logique, qui ne sont pas toujours identiques.</span><span class="sxs-lookup"><span data-stu-id="6950f-493">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span>  <span data-ttu-id="6950f-494">Pour plus d’informations, consultez [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) ou [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-494">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) or [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="6950f-495">Si l’appel <xref:System.Windows.UIElement.Focus%2A> retourne `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> et <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> sont également `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-495">If calling <xref:System.Windows.UIElement.Focus%2A> returns `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="6950f-496">Si les propriétés associées ne sont pas déjà `true`, lorsque vous appelez <xref:System.Windows.UIElement.Focus%2A>, un ou plusieurs des événements suivants sont déclenchés dans l’ordre suivant : <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (la source est la cible de focus), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (la source est la cible de focus).</span><span class="sxs-lookup"><span data-stu-id="6950f-496">If the related properties are not already `true`, when you call  <xref:System.Windows.UIElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
 <span data-ttu-id="6950f-497">Dans l’ordre pour que cet appel réussisse, un autre élément dans l’application requises pour que le focus précédemment.</span><span class="sxs-lookup"><span data-stu-id="6950f-497">In order for this call to be successful, some other element in the application needed to have focus previously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-498">L’exemple suivant définit le focus un <xref:System.Windows.Controls.TextBox> référencé par <xref:System.Windows.FrameworkElement.Name%2A>, puis ajuster la position du curseur dans la <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="6950f-498">The following example sets focus to a <xref:System.Windows.Controls.TextBox> referenced by <xref:System.Windows.FrameworkElement.Name%2A>, and then adjusts the position of the cursor within the <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBox_CursorToEnd/CSharp/Window1.xaml.cs#uielementfocus)]
 [!code-vb[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBox_CursorToEnd/VisualBasic/Window1.xaml.vb#uielementfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-499">Obtient ou définit une valeur qui indique si l'élément peut recevoir le focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-499">Gets or sets a value that indicates whether the element can receive focus.</span>
          </span>
          <span data-ttu-id="6950f-500">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-500">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-501">
            <see langword="true" /> si l'élément peut faire l'objet du focus ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-501">
              <see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-502">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-502">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-503">Seul l’élément ayant le focus reçoit l’entrée au clavier.</span><span class="sxs-lookup"><span data-stu-id="6950f-503">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="6950f-504"><xref:System.Windows.UIElement.Focusable%2A> est le [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] accesseur de propriété pour ce qui est en réalité une propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="6950f-504"><xref:System.Windows.UIElement.Focusable%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="6950f-505">Cette propriété de dépendance particulière a assez souvent et sa valeur « par défaut » apparente défini différemment dans les classes d’éléments dérivés, en particulier dans les contrôles.</span><span class="sxs-lookup"><span data-stu-id="6950f-505">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly in controls.</span></span> <span data-ttu-id="6950f-506">Cela se produit généralement de deux manières :</span><span class="sxs-lookup"><span data-stu-id="6950f-506">This commonly occurs in one of two ways:</span></span>  
  
-   <span data-ttu-id="6950f-507">La propriété de dépendance est héritée par une classe dérivée particulière, mais qui classe dérivée substitue les métadonnées de la propriété de dépendance et modifie la valeur par défaut de propriété.</span><span class="sxs-lookup"><span data-stu-id="6950f-507">The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</span></span>  
  
-   <span data-ttu-id="6950f-508">Un style ou un modèle est appliqué à un élément, qui définit cette valeur de propriété de dépendance différemment.</span><span class="sxs-lookup"><span data-stu-id="6950f-508">A style or template is applied to an element, which sets that dependency property value differently.</span></span>  
  
 <span data-ttu-id="6950f-509">Par exemple, le reste le même « par défaut » de <xref:System.Windows.UIElement.Focusable%2A> pour un <xref:System.Windows.Controls.Button> contrôle sera `true`, même si <xref:System.Windows.Controls.Button> hérite <xref:System.Windows.UIElement.Focusable%2A> comme un [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] propriété directement à partir de <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-509">For example, the apparent "default" of <xref:System.Windows.UIElement.Focusable%2A> for a <xref:System.Windows.Controls.Button> control will be `true`, even though <xref:System.Windows.Controls.Button> inherits <xref:System.Windows.UIElement.Focusable%2A> as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property directly from <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="6950f-510">C’est parce que la valeur de la métadonnée appliquée pour la <xref:System.Windows.UIElement.Focusable%2A> propriété de dépendance a été substituée dans le constructeur statique de la <xref:System.Windows.Controls.Control> classe de base, laquelle se trouve entre <xref:System.Windows.Controls.Button> et <xref:System.Windows.UIElement> dans la hiérarchie de classes.</span><span class="sxs-lookup"><span data-stu-id="6950f-510">This is because the applied metadata value for the <xref:System.Windows.UIElement.Focusable%2A> dependency property was overridden within the static constructor of the <xref:System.Windows.Controls.Control> base class, which is situated between <xref:System.Windows.Controls.Button> and <xref:System.Windows.UIElement> in the class hierarchy.</span></span>  
  
 <span data-ttu-id="6950f-511">Lors de l’héritage par <xref:System.Windows.Controls.Control> ou ses classes dérivées, <xref:System.Windows.Controls.Control> redéfinit la valeur par défaut de cette propriété doit être `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-511">When inherited by <xref:System.Windows.Controls.Control> or its derived classes, <xref:System.Windows.Controls.Control> redefines the default value of this property to be `true`.</span></span>  
  
 <span data-ttu-id="6950f-512">Lors de l’héritage par <xref:System.Windows.Controls.Label> (qui est un <xref:System.Windows.Controls.Control> classe dérivée), la valeur par défaut est redéfinie à nouveau pour être `false`.</span><span class="sxs-lookup"><span data-stu-id="6950f-512">When inherited by <xref:System.Windows.Controls.Label> (which is a <xref:System.Windows.Controls.Control> derived class), the default value is again redefined to be `false`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-513">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-513">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-514">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-514">Identifier field</span></span>|<xref:System.Windows.UIElement.FocusableProperty>|  
|<span data-ttu-id="6950f-515">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-515">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-516">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-516">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-517">L’exemple de code suivant illustre un modèle de contrôle pour un contrôle personnalisé en particulier, qui définit <xref:System.Windows.UIElement.Focusable%2A> `false` sur l’un des éléments dans le modèle.</span><span class="sxs-lookup"><span data-stu-id="6950f-517">The following example code illustrates a control template for a particular custom control, which sets <xref:System.Windows.UIElement.Focusable%2A> `false` on one of the elements within the template.</span></span>  
  
 [!code-xaml[RichTextBox_NoScrollViewer#_ControlTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBox_NoScrollViewer/CS/window1.xaml#_controltemplate)]
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-518">Lorsque vous dérivez de <see cref="T:System.Windows.UIElement" /> directement (par opposition à partir de <see cref="T:System.Windows.Controls.Control" />), prévoyez d’indiquer si votre élément soit actif, car l’élément ne le n'est pas par défaut.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-518">When deriving from <see cref="T:System.Windows.UIElement" /> directly (as opposed to from <see cref="T:System.Windows.Controls.Control" />), consider whether you wish your element to be focusable, because by default the element will not be focusable.</span>
            </span>
            <span data-ttu-id="6950f-519">Si vous le souhaitez votre élément soit actif, remplacer les métadonnées pour cette propriété dans le constructeur statique de votre type comme suit :</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-519">If you wish your element to be focusable, override the metadata for this property within your type's static constructor as follows:</span>
            </span>  
  
 [!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)]
 [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]  
  
 <span data-ttu-id="6950f-520">où <paramref name="myElement" /> doit être du type que vous substituez la valeur de métadonnées sur le nom de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-520">where <paramref name="myElement" /> should be the class name of the type that you are overriding the metadata value on.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-521">Se produit quand la valeur de la propriété <see cref="P:System.Windows.UIElement.Focusable" /> change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-521">Occurs when the value of the <see cref="P:System.Windows.UIElement.Focusable" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-522">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-522">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-523">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.Focusable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-523">Identifies the <see cref="P:System.Windows.UIElement.Focusable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="6950f-524">Propriété de dépendance à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-524">The dependency property to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-525">Retourne la valeur de propriété de base pour la propriété spécifiée sur cet élément, ignorant toute valeur animée possible d’une animation en cours d’exécution ou arrêtée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-525">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-526">Valeur de propriété, comme si aucune animation n’était attachée à la propriété de dépendance spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-526">The property value as if no animations are attached to the specified dependency property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-527">Si aucune animation n’était attachée à la propriété, puis le <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> valeur de retour est toujours identique à la <xref:System.Windows.DependencyObject.GetValue%2A> valeur de retour.</span><span class="sxs-lookup"><span data-stu-id="6950f-527">If no animations are attached to the property, then the <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="6950f-528">S’il existe des animations attachées, puis animation possible toutes les dérivées des valeurs, y compris le démarrage et les valeurs de mots vides sont ignorées et la valeur de propriété est déterminée en fonction de toutes les autres entrées possibles.</span><span class="sxs-lookup"><span data-stu-id="6950f-528">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="6950f-529">Pour plus d’informations, consultez [Priorité de la valeur de propriété de dépendance](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-529">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-530">L’exemple suivant implémente un gestionnaire qui signale la valeur de base d’un animé <xref:System.Windows.FrameworkElement.Width%2A> propriété sur un <xref:System.Windows.Controls.Button>, ainsi que la valeur de base d’une transformation.</span><span class="sxs-lookup"><span data-stu-id="6950f-530">The following example implements a handler that reports the base value of an animated <xref:System.Windows.FrameworkElement.Width%2A> property on a <xref:System.Windows.Controls.Button>, as well as the base value of a transform.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalue)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalue)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetLayoutClip (layoutSlotSize As Size) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Geometry ^ GetLayoutClip(System::Windows::Size layoutSlotSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize">
          <span data-ttu-id="6950f-531">Taille disponible fournie par l’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-531">The available size provided by the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-532">Retourne une géométrie de remplacement pour le découpage, qui représente la région découpée si <see cref="P:System.Windows.UIElement.ClipToBounds" /> a la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-532">Returns an alternative clipping geometry that represents the region that would be clipped if <see cref="P:System.Windows.UIElement.ClipToBounds" /> were set to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-533">Géométrie de détourage éventuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-533">The potential clipping geometry.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-534">L’implémentation par défaut retourne une valeur légitime, mais n’utilise pas le `layoutSlotSize` paramètre dans ses calculs.</span><span class="sxs-lookup"><span data-stu-id="6950f-534">The default implementation will return a legitimate value, but does not use the `layoutSlotSize` parameter in its calculations.</span></span> <span data-ttu-id="6950f-535">Au lieu de cela, il utilise la valeur de <xref:System.Windows.UIElement.RenderSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-535">Instead it uses the value of <xref:System.Windows.UIElement.RenderSize%2A>.</span></span>  
  
 <span data-ttu-id="6950f-536">Cette méthode est substituée de façon significative par immédiatement dérivée <xref:System.Windows.FrameworkElement> (classe) et le <xref:System.Windows.FrameworkElement> remplacement produit un comportement plus sophistiqué pour les éléments de niveau infrastructure WPF générales.</span><span class="sxs-lookup"><span data-stu-id="6950f-536">This method is substantially overridden by the immediately derived <xref:System.Windows.FrameworkElement> class, and the <xref:System.Windows.FrameworkElement> override produces a more sophisticated behavior for general WPF framework-level elements.</span></span> <span data-ttu-id="6950f-537">Pour plus d'informations, consultez <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6950f-537">For details, see <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-538">En cas de substitution dans une classe dérivée, retourne un autre parent de l'[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] pour cet élément si aucun parent visuel n'existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-538">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-539">Objet, si l'implémentation d'une classe dérivée présente une autre connexion parente à signaler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-539">An object, if implementation of a derived class has an alternate parent connection to report.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-540">L’implémentation virtuelle de la valeur par défaut de cette méthode retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="6950f-540">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="6950f-541"><xref:System.Windows.FrameworkElement> Fournit une implémentation pratique.</span><span class="sxs-lookup"><span data-stu-id="6950f-541"><xref:System.Windows.FrameworkElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="6950f-542">Les autres parents sont utilisés pour le routage des événements, dans les cas où un élément crée une autre structure parente afin que ses événements soient acheminées d’une manière qui diffère du modèle standard de routage l’arborescence d’éléments visuels pour le parent standard, ou vers le bas dans la afficher un aperçu de la stratégie de routage.</span><span class="sxs-lookup"><span data-stu-id="6950f-542">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-543">Se produit lorsque le système d’entrée signale un événement de glisser-déposer sous-jacent qui implique cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-543">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-544">Le <xref:System.Windows.UIElement.GiveFeedback> événement permet à la source d’un événement glisser de modifier l’apparence du pointeur de la souris pour fournir une rétroaction visuelle pendant une opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="6950f-544">The <xref:System.Windows.UIElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="6950f-545">Le renforcement de la rétroaction visuelle qu’une opération de glisser-déplacer est en cours.</span><span class="sxs-lookup"><span data-stu-id="6950f-545">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="6950f-546">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> événement pour cette classe attaché afin que <xref:System.Windows.UIElement.GiveFeedback> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-546">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-547">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.GiveFeedback> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-547">Event handlers that are attached to the <xref:System.Windows.UIElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-548">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-548">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-549">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-549">Identifier field</span></span>|<xref:System.Windows.UIElement.GiveFeedbackEvent>|  
|<span data-ttu-id="6950f-550">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-550">Routing strategy</span></span>|<span data-ttu-id="6950f-551">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-551">Bubbling</span></span>|  
|<span data-ttu-id="6950f-552">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-552">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="6950f-553">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="6950f-553">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="6950f-554">Substituer <xref:System.Windows.UIElement.OnGiveFeedback%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-554">Override <xref:System.Windows.UIElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-555">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.GiveFeedback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-555">Identifies the <see cref="E:System.Windows.UIElement.GiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-556">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-556">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-557">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-557">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-558">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-558">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-559">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-559">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-560">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-560">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-561">Se produit lorsque cet élément reçoit le focus logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-561">Occurs when this element gets logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-562">Le focus logique diffère du focus clavier si son abandon est délibérément forcé à l’aide d’un appel de méthode, mais que le focus clavier précédent existe dans une étendue différente.</span><span class="sxs-lookup"><span data-stu-id="6950f-562">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="6950f-563">Dans ce scénario, le focus clavier reste où il s’agit et l’élément sur lequel un <xref:System.Windows.UIElement.Focus%2A> méthode est toujours appelée Obtient le focus logique.</span><span class="sxs-lookup"><span data-stu-id="6950f-563">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="6950f-564">Une interprétation plus précise de cet événement est qu’il est déclenché lorsque la valeur de la <xref:System.Windows.UIElement.IsFocused%2A> propriété d’un élément de l’itinéraire est modifiée à partir de `false` à `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-564">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="6950f-565">Cet événement utilisant le routage par propagation, l’élément qui reçoit le focus peut être un élément enfant au lieu de l’élément où le Gestionnaire d’événements est attaché de réellement.</span><span class="sxs-lookup"><span data-stu-id="6950f-565">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="6950f-566">Vérifiez le <xref:System.Windows.RoutedEventArgs.Source%2A> dans les données d’événement pour déterminer l’élément ayant effectivement reçu le focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-566">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-567">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-567">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-568">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-568">Identifier field</span></span>|<xref:System.Windows.UIElement.GotFocusEvent>|  
|<span data-ttu-id="6950f-569">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-569">Routing strategy</span></span>|<span data-ttu-id="6950f-570">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-570">Bubbling</span></span>|  
|<span data-ttu-id="6950f-571">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-571">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="6950f-572">Il n’existe aucun événement de tunneling correspondant.</span><span class="sxs-lookup"><span data-stu-id="6950f-572">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="6950f-573">Substituer <xref:System.Windows.UIElement.OnGotFocus%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-573">Override <xref:System.Windows.UIElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-574">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-574">Identifies the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-575">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-575">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-576">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-576">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-577">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-577">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-578">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-578">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-579">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-579">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-580">Se produit lorsque le focus du clavier est sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-580">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-581"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> est un événement semblable qui effectue le suivi des changements d’état dans une propriété qui maintient l’état du focus d’un élément ; le <xref:System.Windows.UIElement.GotKeyboardFocus> événement est déclenché dans de nombreuses circonstances identiques.</span><span class="sxs-lookup"><span data-stu-id="6950f-581"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.UIElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="6950f-582">Cet événement utilisant le routage par propagation, l’élément qui a le focus peut être un élément enfant au lieu de l’élément où le Gestionnaire d’événements est attaché de réellement.</span><span class="sxs-lookup"><span data-stu-id="6950f-582">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="6950f-583">Vérifiez le <xref:System.Windows.RoutedEventArgs.Source%2A> dans les données d’événement pour déterminer l’élément qui a le focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-583">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="6950f-584">Cet événement crée un alias pour le <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> événement pour cette classe attaché afin que <xref:System.Windows.UIElement.GotKeyboardFocus> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-584">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-585">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.GotKeyboardFocus> événements sont attachés à sous-jacent <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-585">Event handlers that are attached to the <xref:System.Windows.UIElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-586">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-586">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-587">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-587">Identifier field</span></span>|<xref:System.Windows.UIElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="6950f-588">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-588">Routing strategy</span></span>|<span data-ttu-id="6950f-589">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-589">Bubbling</span></span>|  
|<span data-ttu-id="6950f-590">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-590">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="6950f-591">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="6950f-591">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="6950f-592">Substituer <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-592">Override <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-593">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.GotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-593">Identifies the <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-594">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-594">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-595">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-595">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-596">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-596">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-597">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-597">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-598">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-598">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-599">Se produit lorsque cet élément capture la souris.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-599">Occurs when this element captures the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-600">Lorsqu’un élément capture la souris, il reçoit l’entrée de la souris même si le pointeur de la souris est en dehors de ses limites.</span><span class="sxs-lookup"><span data-stu-id="6950f-600">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="6950f-601">La souris est capturée généralement uniquement pendant les opérations de glisser-déplacer et reste capturée jusqu'à ce que l’action de déplacement de l’opération de glisser-déplacer se produit.</span><span class="sxs-lookup"><span data-stu-id="6950f-601">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="6950f-602">Cet événement utilisant le routage par propagation, l’élément qui possède la capture peut être un élément enfant au lieu de l’élément où le Gestionnaire d’événements est attaché de réellement.</span><span class="sxs-lookup"><span data-stu-id="6950f-602">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="6950f-603">Vérifiez le <xref:System.Windows.RoutedEventArgs.Source%2A> dans l’événement de capture de données pour déterminer l’élément qui possède la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-603">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="6950f-604">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> événement pour cette classe attaché afin que <xref:System.Windows.UIElement.GotMouseCapture> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-604">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.UIElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-605">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.GotMouseCapture> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-605">Event handlers that are attached to the <xref:System.Windows.UIElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-606">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-606">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-607">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-607">Identifier field</span></span>|<xref:System.Windows.UIElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="6950f-608">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-608">Routing strategy</span></span>|<span data-ttu-id="6950f-609">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-609">Bubbling</span></span>|  
|<span data-ttu-id="6950f-610">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-610">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="6950f-611">Il n’existe aucun événement de tunneling correspondant défini.</span><span class="sxs-lookup"><span data-stu-id="6950f-611">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="6950f-612">Substituer <xref:System.Windows.UIElement.OnGotMouseCapture%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-612">Override <xref:System.Windows.UIElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-613">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.GotMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-613">Identifies the <see cref="E:System.Windows.UIElement.GotMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-614">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-614">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-615">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-615">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-616">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-616">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-617">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-617">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-618">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-618">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-619">Se produit lorsque cet élément capture le stylet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-619">Occurs when this element captures the stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-620">Lorsqu’un élément capture le stylet, il reçoit l’entrée du stylet même si le pointeur se trouve en dehors de ses limites.</span><span class="sxs-lookup"><span data-stu-id="6950f-620">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="6950f-621">Le stylet est capturé en général uniquement pendant les opérations de glisser-déplacer et ce jusqu'à la fin de l’opération de glisser-déplacer, l’action de déplacement.</span><span class="sxs-lookup"><span data-stu-id="6950f-621">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="6950f-622">Cet événement utilisant le routage par propagation, l’élément qui possède la capture peut être un élément enfant au lieu de l’élément où le Gestionnaire d’événements est attaché de réellement.</span><span class="sxs-lookup"><span data-stu-id="6950f-622">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="6950f-623">Vérifiez le <xref:System.Windows.RoutedEventArgs.Source%2A> dans les données d’événement pour déterminer l’élément qui possède la capture.</span><span class="sxs-lookup"><span data-stu-id="6950f-623">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="6950f-624">Cet événement crée un alias pour l’événement attaché à cette classe afin que <xref:System.Windows.UIElement.GotStylusCapture> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-624">This event creates an alias for the attached event for this class so that <xref:System.Windows.UIElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-625">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.GotStylusCapture> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-625">Event handlers that are attached to the <xref:System.Windows.UIElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-626">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-626">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-627">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-627">Identifier field</span></span>|<xref:System.Windows.UIElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="6950f-628">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-628">Routing strategy</span></span>|<span data-ttu-id="6950f-629">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-629">Bubbling</span></span>|  
|<span data-ttu-id="6950f-630">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-630">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-631">Il n’existe aucun événement de tunneling correspondant défini.</span><span class="sxs-lookup"><span data-stu-id="6950f-631">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="6950f-632">Substituer <xref:System.Windows.UIElement.OnGotStylusCapture%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-632">Override <xref:System.Windows.UIElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-633">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.GotStylusCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-633">Identifies the <see cref="E:System.Windows.UIElement.GotStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-634">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-634">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-635">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-635">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-636">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-636">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-637">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-637">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-638">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-638">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-639">Se produit lorsqu'une entrée tactile est capturée dans cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-639">Occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-640">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-640">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-641">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-641">Identifier field</span></span>|<xref:System.Windows.UIElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="6950f-642">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-642">Routing strategy</span></span>|<span data-ttu-id="6950f-643">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-643">Bubbling</span></span>|  
|<span data-ttu-id="6950f-644">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-644">Delegate</span></span>|<span data-ttu-id="6950f-645"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-645"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="6950f-646">Substituer <xref:System.Windows.UIElement.OnGotTouchCapture%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-646">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-647">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.GotTouchCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-647">Identifies the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-648">Obtient une valeur indiquant si élément présente des propriétés animées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-648">Gets a value indicating whether this element has any animated properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-649">
            <see langword="true" /> si cet élément contient des animations attachées à l'une de ses propriétés ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-649">
              <see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-650">Cette propriété retourne `true` pour les animations persistantes (perpétuelle, toujours en cours d’exécution), ou pour les animations qui possèdent une chronologie spécifique.</span><span class="sxs-lookup"><span data-stu-id="6950f-650">This property returns `true` either for persistent (unclocked, always-running) animations, or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-651">Récupère une valeur qui indique si le <see cref="T:System.Windows.UIElement" /> avait le focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-651">Gets a value that indicates whether the <see cref="T:System.Windows.UIElement" /> has focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-652">
            <see langword="true" /> si le <see cref="T:System.Windows.UIElement" /> a le focus ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-652">
              <see langword="true" /> if the <see cref="T:System.Windows.UIElement" /> has focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-653">Les sous-classes peuvent substituer cette propriété pour indiquer lorsque l’élément a le focus clavier.</span><span class="sxs-lookup"><span data-stu-id="6950f-653">Subclasses can override this property to specify when the element has keyboard focus.</span></span>  <span data-ttu-id="6950f-654">Cela est utile lorsque votre <xref:System.Windows.UIElement> contient les éléments qui peuvent avoir le focus clavier et vous souhaitez que votre élément de rapport qu’il a le focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-654">This is useful when your <xref:System.Windows.UIElement> contains elements that can have keyboard focus and you want your element to report that it has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-655">Implémente <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> pour fournir le comportement de test de positionnement des éléments de base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-655">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">
          <span data-ttu-id="6950f-656">Décrit le test de positionnement à effectuer, notamment le point d’accès initial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-656">Describes the hit test to perform, including the initial hit point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-657">Implémente <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> pour fournir le comportement de test de positionnement des éléments de base (en retournant <see cref="T:System.Windows.Media.GeometryHitTestResult" />). </span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-657">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-658">Résultats du test, notamment la géométrie évaluée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-658">Results of the test, including the evaluated geometry.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-659">Consultez la méthode virtuelle d’origine <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> pour plus d’informations sur la substitution de cette méthode en plus des classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-659">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="6950f-660">Notez que plusieurs contrôles spécifiques (<xref:System.Windows.Controls.TextBlock>, par exemple) présentent des implémentations distinctes, qui substituent celle-ci.</span><span class="sxs-lookup"><span data-stu-id="6950f-660">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override this one.</span></span>  
  
 <span data-ttu-id="6950f-661">Cette méthode n’est pas destinée à être appelée à partir de votre code d’application.</span><span class="sxs-lookup"><span data-stu-id="6950f-661">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="6950f-662">Cette méthode prend en charge les comportements de tests d’atteinte internes qui sont exposées par les différents aspects du système d’entrée (si le pointeur de la souris est au-dessus d’un élément, par exemple).</span><span class="sxs-lookup"><span data-stu-id="6950f-662">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">
          <span data-ttu-id="6950f-663">Décrit le test de positionnement à effectuer, notamment le point d’accès initial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-663">Describes the hit test to perform, including the initial hit point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-664">Implémente <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> pour fournir le comportement de test de positionnement des éléments de base (en retournant <see cref="T:System.Windows.Media.HitTestResult" />). </span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-664">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.HitTestResult" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-665">Résultats du test, notamment le point évalué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-665">Results of the test, including the evaluated point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-666">Consultez la méthode virtuelle d’origine <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> pour plus d’informations sur la substitution de cette méthode en plus des classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-666">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="6950f-667">Notez que plusieurs contrôles spécifiques (<xref:System.Windows.Controls.TextBlock>, par exemple) présentent des implémentations distinctes, qui substituent <xref:System.Windows.UIElement.HitTestCore%2A> comme défini par <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-667">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override <xref:System.Windows.UIElement.HitTestCore%2A> as defined by <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-668">Cette méthode n’est pas destinée à être appelée à partir de votre code d’application.</span><span class="sxs-lookup"><span data-stu-id="6950f-668">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="6950f-669">Cette méthode prend en charge les comportements de tests d’atteinte internes qui sont exposées par les différents aspects du système d’entrée (si le pointeur de la souris est au-dessus d’un élément, par exemple).</span><span class="sxs-lookup"><span data-stu-id="6950f-669">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-670">Obtient la collection de liaisons d’entrée associées à cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-670">Gets the collection of input bindings associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-671">Collection de liaisons d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-671">The collection of input bindings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-672">Les liaisons d’entrée prend en charge la liaison des commandes pour les périphériques d’entrée.</span><span class="sxs-lookup"><span data-stu-id="6950f-672">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="6950f-673">Par exemple, <xref:System.Windows.Input.MouseBinding> implémente liaisons d’entrée qui incluent des propriétés qui sont spécifiques aux dispositifs de pointage.</span><span class="sxs-lookup"><span data-stu-id="6950f-673">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.</span></span>  
  
 <span data-ttu-id="6950f-674">La collection de liaisons d’entrée inclut les liaisons d’entrée qui se rapportent au type ainsi que des liaisons d’entrée qui sont déclarées sur l’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-674">The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="6950f-675">Une propriété connexe, <xref:System.Windows.UIElement.CommandBindings%2A>, gère une collection de liaisons de commande.</span><span class="sxs-lookup"><span data-stu-id="6950f-675">A related property, <xref:System.Windows.UIElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="6950f-676">Ces exigences diffèrent des liaisons d’entrée car elles représentent le niveau suivant vers le bas du traitement de commande - actions liées aux commandes connus.</span><span class="sxs-lookup"><span data-stu-id="6950f-676">These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="6950f-677">Utilisation des éléments de propriété XAML</span><span class="sxs-lookup"><span data-stu-id="6950f-677">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  
  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="6950f-678">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="6950f-678">XAML Values</span></span>  
 <span data-ttu-id="6950f-679">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="6950f-679">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="6950f-680">Un ou plusieurs <xref:System.Windows.Input.InputBinding> éléments (généralement le <xref:System.Windows.Input.KeyBinding> ou <xref:System.Windows.Input.MouseBinding> des classes dérivées).</span><span class="sxs-lookup"><span data-stu-id="6950f-680">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="6950f-681">Chacun d’eux est censé avoir un <xref:System.Windows.Input.InputBinding.Command%2A> et <xref:System.Windows.Input.InputBinding.Gesture%2A> ensemble d’attributs.</span><span class="sxs-lookup"><span data-stu-id="6950f-681">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-682">L’exemple suivant remplit cette propriété sur un <xref:System.Windows.Window>, avec un seul <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="6950f-682">The following example populates this property on a <xref:System.Windows.Window>, with a single <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-xaml[CommandingOverviewSnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="6950f-683">Pour plus d’informations sur la [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntaxe pour les collections, consultez [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-683">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="6950f-684">Coordonnées d'offset dans cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-684">The offset coordinates within this element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-685">Retourne l'élément d'entrée dans l'élément actif qui se trouve aux coordonnées spécifiées relatives à l'origine de l'élément actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-685">Returns the input element within the current element that is at the specified coordinates, relative to the current element's origin.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-686">Élément enfant situé à la position donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-686">The element child that is located at the given position.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-687"><xref:System.Windows.IInputElement> est retourné comme type de retour, car ce type est une interface commune pour les deux <xref:System.Windows.UIElement> et <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-687"><xref:System.Windows.IInputElement> is returned as the return type, because that type is a common interface for both <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="6950f-688">Vous pouvez ensuite effectuer le cast du type de retour convenablement ou utiliser l’instance d’interface pour certains membres qui sont définis par le <xref:System.Windows.IInputElement> interface.</span><span class="sxs-lookup"><span data-stu-id="6950f-688">You can then cast the return type appropriately, or use the interface instance for certain members that are defined by the <xref:System.Windows.IInputElement> interface.</span></span>  
  
 <span data-ttu-id="6950f-689">Cette méthode n’est généralement pas appelée à partir de votre code d’application.</span><span class="sxs-lookup"><span data-stu-id="6950f-689">This method typically is not called from your application code.</span></span> <span data-ttu-id="6950f-690">Appel de cette méthode n’est appropriée si vous avez l’intention d’implémenter de nouveau une quantité substantielle des fonctionnalités d’entrée de bas niveau qui sont déjà présentes, telles que de recréer la logique de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-690">Calling this method is only appropriate if you intend to re-implement a substantial amount of the low level input features that are already present, such as recreating mouse device logic.</span></span>  
  
 <span data-ttu-id="6950f-691"><xref:System.Windows.IContentHost> contrats un <xref:System.Windows.IContentHost.InputHitTest%2A> méthode avec la même signature que certains éléments choisissent d’implémenter explicitement.</span><span class="sxs-lookup"><span data-stu-id="6950f-691"><xref:System.Windows.IContentHost> contracts an <xref:System.Windows.IContentHost.InputHitTest%2A> method with the same signature, which some elements choose to implement explicitly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateArrange">
      <MemberSignature Language="C#" Value="public void InvalidateArrange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateArrange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateArrange" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateArrange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateArrange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-692">Invalide l’état de réorganisation (disposition) de l’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-692">Invalidates the arrange state (layout) for the element.</span>
          </span>
          <span data-ttu-id="6950f-693">Après invalidation, l'élément voit sa disposition actualisée, ce qui se produit de façon asynchrone à moins qu'elle ne soit forcée a posteriori par <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-693">After the invalidation, the element will have its layout updated, which will occur asynchronously unless subsequently forced by <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-694">Des appels fréquents au <xref:System.Windows.UIElement.InvalidateArrange%2A> ou en particulier à <xref:System.Windows.UIElement.UpdateLayout%2A> avoir des conséquences de performances significatifs.</span><span class="sxs-lookup"><span data-stu-id="6950f-694">Frequent calls to <xref:System.Windows.UIElement.InvalidateArrange%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="6950f-695">Par conséquent, évitez d’appeler cette méthode, sauf si vous avez absolument besoin qu’un état de disposition pour les appels suivants à d’autres [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] dans votre code.</span><span class="sxs-lookup"><span data-stu-id="6950f-695">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span> <span data-ttu-id="6950f-696">Un scénario avancé où vous pouvez appeler <xref:System.Windows.UIElement.InvalidateArrange%2A> est si vous créez un <xref:System.Windows.PropertyChangedCallback> pour une propriété de dépendance qui n’est pas suite un <xref:System.Windows.Freezable> ou <xref:System.Windows.FrameworkElement> classe dérivée qui influence plus encore la réorganisation de la mise en page quand il change.</span><span class="sxs-lookup"><span data-stu-id="6950f-696">An advanced scenario where you might call <xref:System.Windows.UIElement.InvalidateArrange%2A> is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the arrange pass of layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="public void InvalidateMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateMeasure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateMeasure" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateMeasure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateMeasure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-697">Invalide l’état de mesure (disposition) de l’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-697">Invalidates the measurement state (layout) for the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-698">Appel de cette méthode appelle également <xref:System.Windows.UIElement.InvalidateArrange%2A> en interne, il n’est pas nécessaire d’appeler <xref:System.Windows.UIElement.InvalidateMeasure%2A> et <xref:System.Windows.UIElement.InvalidateArrange%2A> à la suite.</span><span class="sxs-lookup"><span data-stu-id="6950f-698">Calling this method also calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally, there is no need to call <xref:System.Windows.UIElement.InvalidateMeasure%2A> and <xref:System.Windows.UIElement.InvalidateArrange%2A> in succession.</span></span> <span data-ttu-id="6950f-699">Après l’invalidation, l’élément aura sa disposition mise à jour, qui se produisent de façon asynchrone, sauf si <xref:System.Windows.UIElement.UpdateLayout%2A> est appelée pour forcer un changement synchrone.</span><span class="sxs-lookup"><span data-stu-id="6950f-699">After the invalidation, the element will have its layout updated, which will occur asynchronously, unless <xref:System.Windows.UIElement.UpdateLayout%2A> is called to force a synchronous layout change.</span></span>  
  
 <span data-ttu-id="6950f-700">Le système de mise en page de niveau infrastructure WPF effectue sa propre gestion des modifications dans l’arborescence d’éléments visuels d’un élément, et dans des cas courants d’invalidation disposition le système de disposition appelle l’équivalent de cette méthode lorsque cela est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-700">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and in most common layout invalidation cases the layout system is calling the equivalent of this method when necessary.</span></span> <span data-ttu-id="6950f-701">Vous devez uniquement appeler cette méthode si vous générez une implémentation de terminer la disposition, ce qui les manipulations directes dans l’arborescence d’éléments, ou même des scénarios avancés.</span><span class="sxs-lookup"><span data-stu-id="6950f-701">You should only call this method if you are producing a complete layout implementation, which does direct manipulation of the element tree, or similar advanced scenarios.</span></span> <span data-ttu-id="6950f-702">Un de ces scénarios est que si vous créez un <xref:System.Windows.PropertyChangedCallback> pour une propriété de dépendance qui n’est pas suite un <xref:System.Windows.Freezable> ou <xref:System.Windows.FrameworkElement> classe dérivée qui influence plus encore la passe de mesure de disposition quand il change.</span><span class="sxs-lookup"><span data-stu-id="6950f-702">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the measure pass of layout when it changes.</span></span>  
  
 <span data-ttu-id="6950f-703">Des appels fréquents au <xref:System.Windows.UIElement.InvalidateMeasure%2A> ou en particulier à <xref:System.Windows.UIElement.UpdateLayout%2A> avoir des conséquences de performances significatifs.</span><span class="sxs-lookup"><span data-stu-id="6950f-703">Frequent calls to <xref:System.Windows.UIElement.InvalidateMeasure%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="6950f-704">Par conséquent, évitez d’appeler cette méthode, sauf si vous avez absolument besoin qu’un état de disposition pour les appels suivants à d’autres [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] dans votre code.</span><span class="sxs-lookup"><span data-stu-id="6950f-704">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateVisual">
      <MemberSignature Language="C#" Value="public void InvalidateVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateVisual() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateVisual" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateVisual ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateVisual();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-705">Invalide le rendu de l’élément et force une nouvelle passe de disposition complète.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-705">Invalidates the rendering of the element, and forces a complete new layout pass.</span>
          </span>
          <span data-ttu-id="6950f-706">
            <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> est appelé après que le cycle de disposition a été effectué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-706">
              <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> is called after the layout cycle is completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-707">Cette méthode appelle <xref:System.Windows.UIElement.InvalidateArrange%2A> en interne.</span><span class="sxs-lookup"><span data-stu-id="6950f-707">This method calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally.</span></span>  
  
 <span data-ttu-id="6950f-708">En règle générale, cette méthode n’est pas appelée à partir de votre code d’application.</span><span class="sxs-lookup"><span data-stu-id="6950f-708">This method is not generally called from your application code.</span></span> <span data-ttu-id="6950f-709">Le système de mise en page de niveau infrastructure WPF opère sa propre gestion des modifications dans l’arborescence d’éléments visuels d’un élément et appelle l’équivalent de cette méthode lorsque cela est nécessaire déjà.</span><span class="sxs-lookup"><span data-stu-id="6950f-709">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and would be calling the equivalent of this method when necessary already.</span></span> <span data-ttu-id="6950f-710">Appel de cette méthode est nécessaire uniquement pour les scénarios avancés.</span><span class="sxs-lookup"><span data-stu-id="6950f-710">Calling this method is necessary only for advanced scenarios.</span></span> <span data-ttu-id="6950f-711">Un de ces scénarios est que si vous créez un <xref:System.Windows.PropertyChangedCallback> pour une propriété de dépendance qui n’est pas suite un <xref:System.Windows.Freezable> ou <xref:System.Windows.FrameworkElement> classe dérivée qui influence plus encore la disposition quand il change.</span><span class="sxs-lookup"><span data-stu-id="6950f-711">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
      </Docs>
    </Member>
    <Member MemberName="IsArrangeValid">
      <MemberSignature Language="C#" Value="public bool IsArrangeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArrangeValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsArrangeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArrangeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArrangeValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-712">Obtient une valeur indiquant si les dimensions et la position calculées d'éléments enfants dans la disposition de cet élément sont valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-712">Gets a value indicating whether the computed size and position of child elements in this element's layout are valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-713">
            <see langword="true" /> si les dimensions et la position de disposition sont valides ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-713">
              <see langword="true" /> if the size and position of layout are valid; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-714">Vous pouvez forcer la disposition en appelant <xref:System.Windows.UIElement.InvalidateArrange%2A> sur cet élément (ou ses parents).</span><span class="sxs-lookup"><span data-stu-id="6950f-714">You can force arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateArrange%2A> on this element (or its parents).</span></span> <span data-ttu-id="6950f-715">Cette variable marque la disposition pour la recomposition dès que le système de disposition détermine.</span><span class="sxs-lookup"><span data-stu-id="6950f-715">This flags the layout for recomposition at such time as the layout system determines.</span></span> <span data-ttu-id="6950f-716">Vous pouvez également immédiatement un appel à <xref:System.Windows.UIElement.UpdateLayout%2A> a pu être établie, mais cela doit être effectué uniquement si vous êtes certain qu’aucune autre invalidation complémentaire n’est en attente (un grand nombre de mises à jour forcées inutilement a des conséquences sur les performances).</span><span class="sxs-lookup"><span data-stu-id="6950f-716">Alternatively, an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A> could be made, but this should only be done if it is certain that no further invalidations are pending (a large number of unnecessarily forced updates has performance consequences).</span></span>  
  
 <span data-ttu-id="6950f-717"><xref:System.Windows.UIElement.IsArrangeValid%2A> ne peut pas être `true` , sauf si <xref:System.Windows.UIElement.IsMeasureValid%2A> est également `true` (dans le processus de mise en page, l’organisation ne peut pas être valide sans mesure préalablement valide).</span><span class="sxs-lookup"><span data-stu-id="6950f-717"><xref:System.Windows.UIElement.IsArrangeValid%2A> cannot be `true` unless <xref:System.Windows.UIElement.IsMeasureValid%2A> is also `true` (in the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
        <altmember cref="P:System.Windows.UIElement.IsMeasureValid" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-718">Obtient ou définit une valeur qui indique si cet élément est activé dans l'[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-718">Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
          <span data-ttu-id="6950f-719">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-719">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-720">
            <see langword="true" /> si l'élément est activé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-720">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-721">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-721">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-722">Notez que cette propriété est influencée par les implémentations spécifiques à la classe de <xref:System.Windows.UIElement.IsEnabledCore%2A> sur un élément particulier, souvent lors de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="6950f-722">Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement.IsEnabledCore%2A> on particular elements, often at runtime.</span></span> <span data-ttu-id="6950f-723">Par conséquent, la valeur par défaut répertoriée ici n’est parfois pas efficace.</span><span class="sxs-lookup"><span data-stu-id="6950f-723">Therefore, the default value listed here is sometimes not effective.</span></span> <span data-ttu-id="6950f-724">Par exemple, un <xref:System.Windows.Controls.Primitives.ScrollBar> sera <xref:System.Windows.UIElement.IsEnabled%2A> `false` chaque fois qu’il est déterminé qu’il n’est pas nécessaire pour prendre en charge une barre de défilement.</span><span class="sxs-lookup"><span data-stu-id="6950f-724">For instance, a <xref:System.Windows.Controls.Primitives.ScrollBar> will be <xref:System.Windows.UIElement.IsEnabled%2A> `false` whenever it is determined that there is no need to support a scrollbar.</span></span> <span data-ttu-id="6950f-725">Tentative de définition de cette valeur sera également remplacée par la valeur retournée par <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-725">Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span></span>  
  
 <span data-ttu-id="6950f-726">Les éléments qui ne sont pas activés ne participent pas le focus ou de test de positionnement et ne peut donc pas de sources d’événements d’entrée.</span><span class="sxs-lookup"><span data-stu-id="6950f-726">Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</span></span>  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-727">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-727">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-728">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-728">Identifier field</span></span>|<xref:System.Windows.UIElement.IsEnabledProperty>|  
|<span data-ttu-id="6950f-729">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-729">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-730">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-730">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-731">L’exemple suivant montre un gestionnaire sur un bouton que lorsque la valeur sera exécutée <xref:System.Windows.UIElement.IsEnabled%2A> `false` sur un autre bouton nommé `b1`.</span><span class="sxs-lookup"><span data-stu-id="6950f-731">The following example shows a handler on one button that when executed will set <xref:System.Windows.UIElement.IsEnabled%2A> `false` on another named button `b1`.</span></span>  
  
 [!code-csharp[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/CSharp/default.xaml.cs#handler)]
 [!code-vb[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/VisualBasic/default.xaml.vb#handler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-732">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.UIElement.IsEnabled" /> de cet élément change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-732">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsEnabled" /> property on this element changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-733">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-733">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-734">Obtient une valeur qui devient la valeur de retour d'<see cref="P:System.Windows.UIElement.IsEnabled" /> dans les classes dérivées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-734">Gets a value that becomes the return value of <see cref="P:System.Windows.UIElement.IsEnabled" /> in derived classes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-735">
            <see langword="true" /> si l'élément est activé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-735">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-736">L’implémentation par défaut de cette propriété met en cache la valeur et calcule également si l’élément parent de cet élément est activé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-736">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span>
            </span>
            <span data-ttu-id="6950f-737">(Si le parent n’est pas activé, l’élément enfant ne peut pas être activé efficacement dans la pratique [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Si vous choisissez de substituer cette implémentation, assurez-vous que vous appelez l’implémentation de base pour maintenir ce comportement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-737">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span>
            </span>
            <span data-ttu-id="6950f-738">La <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> classe fournit une implémentation de substitution existante de cette propriété.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-738">The <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> class provides an existing override implementation of this property.</span>
            </span>
            <span data-ttu-id="6950f-739">Cette substitution détermine si le contenu à l’intérieur de la zone de présentation du contenu dépasse la taille disponible.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-739">This override determines whether the content inside the content presentation area exceeds the available area.</span>
            </span>
            <span data-ttu-id="6950f-740">Si le contenu dépasse la zone, la partie de la barre de défilement est activée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-740">If the content does exceed the area, the scrollbar portion is enabled.</span>
            </span>
            <span data-ttu-id="6950f-741">Dans le cas contraire, la barre de défilement n’est pas activé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-741">Otherwise, the scrollbar is not enabled.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-742">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsEnabled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-742">Identifies the <see cref="P:System.Windows.UIElement.IsEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-743">Obtient une valeur qui détermine si cet élément a le focus logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-743">Gets a value that determines whether this element has logical focus.</span>
          </span>
          <span data-ttu-id="6950f-744">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-744">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-745">
            <see langword="true" /> si cet élément fait l'objet du focus logique ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-745">
              <see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-746">Le focus logique peut différer du focus clavier si une application a plusieurs divisions de focus, comme entre le contenu du menu et le reste de l’application.</span><span class="sxs-lookup"><span data-stu-id="6950f-746">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="6950f-747">Dans ce scénario, le focus clavier peut être uniquement sur un seul élément de l’interface utilisateur des applications, toutefois, certains éléments dans d’autres divisions peuvent conserver le focus logique.</span><span class="sxs-lookup"><span data-stu-id="6950f-747">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="6950f-748">Pour plus d’informations sur le focus logique, consultez [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-748">For more information on logical focus, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="6950f-749">Vous ne définissez pas le focus en définissant cette propriété (il est en lecture seule).</span><span class="sxs-lookup"><span data-stu-id="6950f-749">You do not set focus by setting this property (it is read-only).</span></span> <span data-ttu-id="6950f-750">L’utilisation classique de cette propriété consiste à utiliser comme une propriété de dépendance pour un <xref:System.Windows.Setter> ou <xref:System.Windows.EventTrigger>.</span><span class="sxs-lookup"><span data-stu-id="6950f-750">The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>.</span></span> <span data-ttu-id="6950f-751">Pour définir le focus par programme, appelez <xref:System.Windows.UIElement.Focus%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-751">To set focus programmatically, call <xref:System.Windows.UIElement.Focus%2A>.</span></span> <span data-ttu-id="6950f-752">Le focus peut également être défini par l’utilisateur ou par les implémentations de contrôle, pouvant inclure le comportement de capture de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-752">Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-753">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-753">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-754">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-754">Identifier field</span></span>|<xref:System.Windows.UIElement.IsFocusedProperty>|  
|<span data-ttu-id="6950f-755">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-755">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-756">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-756">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-757">L’exemple suivant est un gestionnaire de code qui modifie l’arrière-plan d’un contrôle lorsqu’il a le focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-757">The following example is a code handler that changes the background of a control when it is focused.</span></span>  
  
 [!code-csharp[PopupSimple#IsFocused](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml.cs#isfocused)]  
  
 <span data-ttu-id="6950f-758">Une autre méthode pour obtenir ce même résultat consiste à placer une <xref:System.Windows.Trigger> dans les <xref:System.Windows.Style> d’un contrôle ; cette approche ne nécessite pas de la gestion des événements spécifiques avec code-behind et permet un meilleur accès à la nature interactive et graphique de concepteurs le [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="6950f-758">Another common way to achieve this same effect is to place a <xref:System.Windows.Trigger> in the <xref:System.Windows.Style> of a control; this approach does not require handling specific events with code-behind and allows designers greater access to the interactive and graphical nature of the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="6950f-759">Pour obtenir un exemple, consultez [Comment : créer un effet de lumière externe](http://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span><span class="sxs-lookup"><span data-stu-id="6950f-759">For an example, see [How to: Create an Outer Glow Effect](http://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-760">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsFocused" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-760">Identifies the <see cref="P:System.Windows.UIElement.IsFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-761">Obtient ou définit une valeur qui déclare si cet élément peut être renvoyé en tant que résultat d'un test de positionnement à partir d'une certaine partie de son contenu affiché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-761">Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</span>
          </span>
          <span data-ttu-id="6950f-762">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-762">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-763">
            <see langword="true" /> si cet élément peut être retourné comme résultat d'un test de positionnement d'au moins un point ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-763">
              <see langword="true" /> if this element could be returned as a hit test result from at least one point; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-764">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-764">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-765">La valeur effective de cette propriété est influencée par les positions relatives d’éléments testables dans l’arborescence logique.</span><span class="sxs-lookup"><span data-stu-id="6950f-765">The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</span></span> <span data-ttu-id="6950f-766">Par exemple, si un élément est un élément enfant d’un élément qui est pas visible par le test d’accès, la valeur effective de la propriété sur l’enfant reste `false`, même si vous tentez de définir cette valeur localement.</span><span class="sxs-lookup"><span data-stu-id="6950f-766">For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally.</span></span> <span data-ttu-id="6950f-767">Pour cette raison, il est important que vous ne définissez pas <xref:System.Windows.UIElement.IsHitTestVisible%2A> à `false` sur un contrôle composé à moins que vous ne souhaitez toute entrée ni ne test de positionnement sur ce contrôle.</span><span class="sxs-lookup"><span data-stu-id="6950f-767">For this reason, it is important that you do not set <xref:System.Windows.UIElement.IsHitTestVisible%2A> to `false` on a composited control unless you do not want any input or hit testing on that control.</span></span> <span data-ttu-id="6950f-768">Pour plus d’informations sur le test des résultats, consultez [Test des résultats dans la couche visuelle](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-768">For more information on hit testing, see [Hit Testing in the Visual Layer](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-769">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-769">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-770">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-770">Identifier field</span></span>|<xref:System.Windows.UIElement.IsHitTestVisibleProperty>|  
|<span data-ttu-id="6950f-771">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-771">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-772">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-772">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-773">Se produit lorsque la valeur de la propriété de dépendance <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> de cet élément change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-773">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-774">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-774">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-775">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsHitTestVisible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-775">Identifies the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-776">Obtient une valeur qui indique si un système de méthode d’entrée, comme un [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], est activé pour traiter l’entrée dans cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-776">Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)],  is enabled for processing the input to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-777">
            <see langword="true" /> si une méthode d'entrée est active ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-777">
              <see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-778">La valeur par défaut de la propriété jointe sous-jacente est <see langword="true;" /> Toutefois, ce est tributaires de l’état réel des méthodes d’entrée lors de l’exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-778">The default value of the underlying attached property is <see langword="true;" /> however, this will be influenced by the actual state of input methods at runtime.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-779">Cette propriété retourne la valeur retournée par la propriété jointe <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> pour les méthodes d’entrée actuellement activées (clavier, vocale et autres périphériques d’entrée).</span><span class="sxs-lookup"><span data-stu-id="6950f-779">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-780">Obtient une valeur indiquant si cet élément a le focus clavier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-780">Gets a value indicating whether this element has keyboard focus.</span>
          </span>
          <span data-ttu-id="6950f-781">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-781">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-782">
            <see langword="true" /> si cet élément a le focus clavier ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-782">
              <see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-783">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-783">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-784">Modifications apportées à la valeur de cette propriété peuvent être accompagnées des événements associés au focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-784">Changes to the determined value of this property may be accompanied by focus-related events.</span></span>  
  
 <span data-ttu-id="6950f-785"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> et <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> sont couramment utilisés dans des gestionnaires d’événements de classe pour d’autres événements associés à l’entrée, par exemple pour déterminer si l’élément possède déjà le focus clavier, ou lorsque la souris pour déterminer les moments les événements et les événements de clavier se produisent conjointement.</span><span class="sxs-lookup"><span data-stu-id="6950f-785"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-786">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-786">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-787">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-787">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="6950f-788">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-788">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-789">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-789">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
        <altmember cref="E:System.Windows.UIElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-790">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> de cet élément change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-790">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-791">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-791">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-792">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsKeyboardFocused" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-792">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-793">Obtient une valeur indiquant si le focus clavier se trouve n’importe où dans l’élément ou dans ses éléments enfants de l’arborescence d’éléments visuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-793">Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</span>
          </span>
          <span data-ttu-id="6950f-794">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-794">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-795">
            <see langword="true" /> si le focus clavier se trouve sur l'élément ou ses éléments enfants ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-795">
              <see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-796">Les modifications apportées à la valeur de cette propriété déclenchent en général le <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> événement, sauf si une classe dérivée a remplacé <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> pour supprimer l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-796">Changes to the value of this property typically raise the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="6950f-797">Vous ne définissez pas cette propriété directement, mais vous pouvez définir le focus à un élément en appelant <xref:System.Windows.UIElement.Focus%2A>, ou en effectuant un <xref:System.Windows.UIElement.MoveFocus%2A> demande.</span><span class="sxs-lookup"><span data-stu-id="6950f-797">You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement.Focus%2A>, or by making a <xref:System.Windows.UIElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="6950f-798">Un de ces appels de méthode peut modifier cette valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="6950f-798">Either of these method calls might change this property value.</span></span>  
  
 <span data-ttu-id="6950f-799"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> et <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> sont généralement utilisés dans les gestionnaires d’événements de classe pour d’autres événements associés à l’entrée, par exemple pour déterminer si l’élément possède déjà le focus clavier, ou lorsque la souris pour déterminer les moments les événements et les événements de clavier se produisent conjointement.</span><span class="sxs-lookup"><span data-stu-id="6950f-799"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-800">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-800">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-801">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-801">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="6950f-802">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-802">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-803">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-803">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-804">Se produit lorsque la valeur de la propriété <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> de cet élément change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-804">Occurs when the value of the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-805">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-805">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-806">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-806">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabled">
      <MemberSignature Language="C#" Value="public bool IsManipulationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManipulationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsManipulationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsManipulationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManipulationEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-807">Obtient ou définit une valeur qui indique si les événements de manipulation sont activés sur ce <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-807">Gets or sets a value that indicates whether manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-808">
            <see langword="true" /> si les événements de manipulation sont activés sur ce <see cref="T:System.Windows.UIElement" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-808">
              <see langword="true" /> if manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-809">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-809">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-810">Définissez cette propriété sur true si vous souhaitez que le <xref:System.Windows.UIElement> pour recevoir le <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, et <xref:System.Windows.UIElement.ManipulationCompleted> événements.</span><span class="sxs-lookup"><span data-stu-id="6950f-810">Set this property to true if you want the <xref:System.Windows.UIElement> to receive the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, and <xref:System.Windows.UIElement.ManipulationCompleted> events.</span></span> <span data-ttu-id="6950f-811">Pour plus d’informations sur les manipulations, consultez le [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-811">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="6950f-812">Pour obtenir un exemple d’une application qui répond aux manipulations, consultez [procédure pas à pas : création de votre première Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-812">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-813">L’exemple suivant crée une application qui a un Rectangle rouge.</span><span class="sxs-lookup"><span data-stu-id="6950f-813">The following example creates an application that has a red Rectangle.</span></span>  <span data-ttu-id="6950f-814">Le <xref:System.Windows.UIElement.IsManipulationEnabled%2A> propriété du Rectangle a la valeur true et que l’application fenêtre s’abonne à la <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, et <xref:System.Windows.UIElement.ManipulationInertiaStarting> événements.</span><span class="sxs-lookup"><span data-stu-id="6950f-814">The <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property of the Rectangle is set to true and the application's window subscribes to the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, and <xref:System.Windows.UIElement.ManipulationInertiaStarting> events.</span></span> <span data-ttu-id="6950f-815">Cet exemple fait partie d’un exemple plus complet dans [procédure pas à pas : création de votre première Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-815">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-xaml[BasicManipulation#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsManipulationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsManipulationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsManipulationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsManipulationEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-816">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsManipulationEnabled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-816">Identifies the <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMeasureValid">
      <MemberSignature Language="C#" Value="public bool IsMeasureValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMeasureValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMeasureValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMeasureValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMeasureValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-817">Obtient une valeur indiquant si les dimensions actuelles retournées par la mesure de la disposition sont valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-817">Gets a value indicating whether the current size returned by layout measure is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-818">
            <see langword="true" /> si la passe de mesure de disposition a retourné une valeur valide actuelle ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-818">
              <see langword="true" /> if the measure pass of layout returned a valid and current value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-819">Vous pouvez forcer la mesure et l’agencement en appelant <xref:System.Windows.UIElement.InvalidateMeasure%2A> sur cet élément (ou tout élément parent de l’arborescence d’éléments visuels).</span><span class="sxs-lookup"><span data-stu-id="6950f-819">You can force measurement and arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateMeasure%2A> on this element (or any parent element up the visual tree).</span></span> <span data-ttu-id="6950f-820">Désigne la disposition pour la recomposition de façon asynchrone, qui se produisent à un moment déterminé par le système de disposition.</span><span class="sxs-lookup"><span data-stu-id="6950f-820">This designates the layout for recomposition asynchronously, occurring at a time determined by the layout system.</span></span> <span data-ttu-id="6950f-821">Ou bien, vous pouvez apporter immédiatement un appel à <xref:System.Windows.UIElement.UpdateLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-821">Alternatively, you could make an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A>.</span></span> <span data-ttu-id="6950f-822">Toutefois, vous devez uniquement appeler <xref:System.Windows.UIElement.UpdateLayout%2A> s’il est probable qu’aucune autre invalidation complémentaire n’est en attente (un grand nombre de mises à jour forcées inutilement aura sur les performances).</span><span class="sxs-lookup"><span data-stu-id="6950f-822">However, you should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if it is likely that no further invalidations are pending (a large number of unnecessarily forced updates will have performance consequences).</span></span>  
  
 <span data-ttu-id="6950f-823">Si <xref:System.Windows.UIElement.IsMeasureValid%2A> est `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> doit également être `false` (par la logique forcée du processus de mise en page, l’organisation ne peut pas être valide sans mesure préalablement valide).</span><span class="sxs-lookup"><span data-stu-id="6950f-823">If <xref:System.Windows.UIElement.IsMeasureValid%2A> is `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> must also be `false` (by the enforced logic of the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-824">Obtient une valeur indiquant si la souris est capturée pour cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-824">Gets a value indicating whether the mouse is captured to this element.</span>
          </span>
          <span data-ttu-id="6950f-825">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-825">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-826">
            <see langword="true" /> si l'élément a la capture de la souris ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-826">
              <see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-827">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-827">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-828">État de capture de la souris est liée aux opérations de glisser-déplacer dans le processus.</span><span class="sxs-lookup"><span data-stu-id="6950f-828">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-829">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-829">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-830">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-830">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="6950f-831">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-831">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-832">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-832">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-833">L’exemple suivant active ou désactive l’état de capture de la souris selon que la souris est déjà capturée pour l’élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-833">The following example turns the mouse capture state on or off based on whether the mouse is already captured for the element.</span></span>  
  
 <span data-ttu-id="6950f-834">Si la capture de la souris se trouve ailleurs, que la capture de la souris est définie pour cet élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-834">If mouse capture is elsewhere, the mouse capture is set to that element.</span></span> <span data-ttu-id="6950f-835">Si l’élément avait la capture de la souris, il est effacé en appelant <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> avec une entrée null.</span><span class="sxs-lookup"><span data-stu-id="6950f-835">If the element had mouse capture, it is cleared by calling <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with a null input.</span></span>  
  
 [!code-csharp[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#ismousecaptured)]
 [!code-vb[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-836">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> de cet élément change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-836">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-837">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-837">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-838">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsMouseCaptured" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-838">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-839">Obtient une valeur qui détermine si la capture de la souris est détenue par cet élément ou par des éléments enfants dans son arborescence d’éléments visuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-839">Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</span>
          </span>
          <span data-ttu-id="6950f-840">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-840">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-841">
            <see langword="true" /> si cet élément ou un élément contenu possède la capture de la souris ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-841">
              <see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-842">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-842">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-843">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-843">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="6950f-844">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-844">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-845">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-845">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-846">Se produit lorsque la valeur de la propriété <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> de cet élément change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-846">Occurs when the value of the <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-847">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-847">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-848">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-848">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-849">Obtient une valeur qui indique si la position du pointeur de la souris correspond aux résultats de test de positionnement, qui prennent en considération la composition des éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-849">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span>
          </span>
          <span data-ttu-id="6950f-850">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-850">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-851">
            <see langword="true" /> Si le pointeur de la souris se trouve sur le même élément du résultat qu’un test de positionnement ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-851">
              <see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-852">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-852">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-853">Contrairement aux <xref:System.Windows.UIElement.IsMouseOver%2A>, cette propriété est uniquement `true` si le pointeur de la souris est sur l’élément littéral, car il s’agit d’un test de positionnement.</span><span class="sxs-lookup"><span data-stu-id="6950f-853">Unlike <xref:System.Windows.UIElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element—as it is for a hit test.</span></span> <span data-ttu-id="6950f-854">Si le pointeur de la souris est sur un élément enfant, en particulier sur les éléments qui font partie d’un élément modèle plus approfondie et de la composition, cette propriété sera `false`.</span><span class="sxs-lookup"><span data-stu-id="6950f-854">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="6950f-855">Sauf si vous savez comment un contrôle est composé (par exemple, vous utilisez cette propriété dans un modèle de contrôle personnalisé pour un contrôle que vous définissez), cette propriété peut retourner des résultats inattendus.</span><span class="sxs-lookup"><span data-stu-id="6950f-855">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="6950f-856">Pour la plupart des scénarios où vous ne créez pas de contrôles, utilisez <xref:System.Windows.UIElement.IsMouseOver%2A> à la place.</span><span class="sxs-lookup"><span data-stu-id="6950f-856">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="6950f-857">Si la souris est capturée par cet élément, et cette propriété est `true` au moment de la capture, cette propriété continue à retourner `true` jusqu'à ce que la capture de la souris est perdue et le pointeur n’est pas sur ses limites.</span><span class="sxs-lookup"><span data-stu-id="6950f-857">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-858">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-858">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-859">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-859">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="6950f-860">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-860">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-861">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-861">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-862">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> de cet élément change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-862">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-863">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-863">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-864">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-864">Identifies the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-865">Obtient une valeur indiquant si le pointeur de la souris se trouve sur cet élément (y compris les éléments enfants situés dans l’arborescence d’éléments visuels).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-865">Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</span>
          </span>
          <span data-ttu-id="6950f-866">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-866">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-867">
            <see langword="true" /> si le pointeur de la souris se trouve sur l'élément ou sur ses éléments enfants ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-867">
              <see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-868">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-868">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-869">En règle générale, les contrôles sont composés tels que les différents éléments à l’intérieur du contrôle (l’arborescence d’éléments visuels) signalent tous l’état de la souris pour le contrôle conteneur.</span><span class="sxs-lookup"><span data-stu-id="6950f-869">Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</span></span> <span data-ttu-id="6950f-870">Par exemple, un <xref:System.Windows.Controls.ListBox> contrôle style signalera <xref:System.Windows.UIElement.IsMouseOver%2A> en tant que `true` si la souris se trouve n’importe où sur sa géométrie, y compris ceux <xref:System.Windows.Controls.ListBoxItem>.</span><span class="sxs-lookup"><span data-stu-id="6950f-870">For example, a <xref:System.Windows.Controls.ListBox> style control will report <xref:System.Windows.UIElement.IsMouseOver%2A> as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
 <span data-ttu-id="6950f-871">Bien qu’un événement de « IsMouseOverChanged » analogue analogue n’existe pas, plusieurs événements semblables existent.</span><span class="sxs-lookup"><span data-stu-id="6950f-871">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="6950f-872">Par exemple, vous pouvez gérer <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, et <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="6950f-872">For example, you can handle <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="6950f-873">Si cet élément capture la souris, cette propriété reste `true` jusqu'à ce que la capture de la souris est perdue et le pointeur de la souris quitte les limites de l’élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-873">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
 <span data-ttu-id="6950f-874">Certains contrôles capturent délibérément la souris sur certaines actions ne semblent pas impliquer directement la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-874">Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</span></span> <span data-ttu-id="6950f-875">Cela peut entraîner <xref:System.Windows.UIElement.IsMouseOver%2A> en cours `true` même si la souris n’a pas été apparemment déplacée.</span><span class="sxs-lookup"><span data-stu-id="6950f-875">This can lead to <xref:System.Windows.UIElement.IsMouseOver%2A> being `true` even though the mouse has not apparently moved.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-876">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-876">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-877">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-877">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseOverProperty>|  
|<span data-ttu-id="6950f-878">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-878">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-879">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-879">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-880">L’exemple suivant fait référence à cette propriété en tant que type de propriété d’un <xref:System.Windows.Trigger>dans le cadre d’un \<Style.Triggers > bloc.</span><span class="sxs-lookup"><span data-stu-id="6950f-880">The following example references this property as the property type of a <xref:System.Windows.Trigger>, part of a \<Style.Triggers> block.</span></span> <span data-ttu-id="6950f-881">Si la souris se trouve sur le contrôle, le texte du contrôle devient bleu et le curseur se transforme en main.</span><span class="sxs-lookup"><span data-stu-id="6950f-881">If the mouse is over the control, the control text turns blue and the cursor becomes a hand.</span></span>  
  
 [!code-xaml[ListViewChkBox#Trigger](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewChkBox/CS/window1.xaml#trigger)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-882">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsMouseOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-882">Identifies the <see cref="P:System.Windows.UIElement.IsMouseOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-883">Obtient une valeur indiquant si le stylet est capturé par cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-883">Gets a value indicating whether the stylus is captured by this element.</span>
          </span>
          <span data-ttu-id="6950f-884">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-884">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-885">
            <see langword="true" /> si l'élément a la capture du stylet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-885">
              <see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-886">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-886">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-887">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-887">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-888">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-888">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-889">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-889">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-890">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-890">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="6950f-891">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-891">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-892">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-892">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-893">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> de cet élément change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-893">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-894">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-894">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-895">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsStylusCaptured" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-895">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-896">Obtient une valeur qui détermine si la capture du stylet est détenue par cet élément ou par un élément dans les limites de l’élément et de son arborescence d’éléments visuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-896">Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</span>
          </span>
          <span data-ttu-id="6950f-897">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-897">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-898">
            <see langword="true" /> si cet élément ou un élément contenu possède la capture du stylet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-898">
              <see langword="true" /> if this element or a contained element has stylus capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-899">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-899">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-900">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-900">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-901">Pour plus d’informations, consultez [entrée tactile prise en charge dans Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) et [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-901">For more information, see [Touch Input Support in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-902">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-902">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-903">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-903">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="6950f-904">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-904">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-905">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-905">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-906">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> de cet élément change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-906">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-907">Il s’agit d’un [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-907">This is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-908">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-908">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-909">Obtient une valeur qui indique si la position du stylet correspond aux résultats de test de positionnement, qui prennent en considération la composition des éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-909">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span>
          </span>
          <span data-ttu-id="6950f-910">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-910">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-911">
            <see langword="true" /> si le pointeur du stylet se trouve sur le même élément du résultat qu'un test de positionnement ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-911">
              <see langword="true" /> if the stylus pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-912">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-912">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-913">Contrairement aux <xref:System.Windows.UIElement.IsStylusOver%2A>, cette propriété est uniquement `true` si le stylet se trouve sur l’élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-913">Unlike <xref:System.Windows.UIElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="6950f-914">Si le stylet est plutôt sur un élément enfant ou sur des éléments qui font partie de la composition plus approfondie d’un élément (l’arborescence d’éléments visuels), cette propriété sera `false`.</span><span class="sxs-lookup"><span data-stu-id="6950f-914">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.</span></span>  
  
 <span data-ttu-id="6950f-915">Sauf si vous savez comment un contrôle est composé (par exemple, vous utilisez cette propriété dans un modèle de contrôle personnalisé pour un contrôle que vous définissez), cette propriété peut retourner des résultats inattendus.</span><span class="sxs-lookup"><span data-stu-id="6950f-915">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="6950f-916">Pour la plupart des scénarios où vous ne créez pas de contrôles, utilisez <xref:System.Windows.UIElement.IsStylusOver%2A> à la place.</span><span class="sxs-lookup"><span data-stu-id="6950f-916">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="6950f-917">Si cet élément a la capture du stylet et que cette propriété est `true` au moment de la capture, cette propriété reste `true` jusqu'à ce que la capture du stylet est perdue et le stylet se ne trouve pas sur ses limites.</span><span class="sxs-lookup"><span data-stu-id="6950f-917">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="6950f-918">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-918">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-919">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-919">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-920">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-920">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-921">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-921">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="6950f-922">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-922">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-923">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-923">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-924">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> de cet élément change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-924">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-925">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-925">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-926">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-926">Identifies the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-927">Obtient une valeur indiquant si le curseur du stylet se trouve sur cet élément (notamment les éléments enfants de l’élément visuel).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-927">Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</span>
          </span>
          <span data-ttu-id="6950f-928">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-928">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-929">
            <see langword="true" /> si le curseur du stylet se trouve sur l'élément ou ses éléments enfants ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-929">
              <see langword="true" /> if stylus cursor is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-930">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-930">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-931">Si cet élément a la capture du stylet, cette propriété continue à retourner `true` jusqu'à ce que la capture du stylet est perdue et le pointeur se trouve en dehors des limites.</span><span class="sxs-lookup"><span data-stu-id="6950f-931">If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="6950f-932">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-932">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-933">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-933">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-934">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-934">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-935">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-935">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusOverProperty>|  
|<span data-ttu-id="6950f-936">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-936">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-937">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-937">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-938">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsStylusOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-938">Identifies the <see cref="P:System.Windows.UIElement.IsStylusOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-939">Obtient une valeur indiquant si cet élément est visible dans l'[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-939">Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
          <span data-ttu-id="6950f-940">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-940">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-941">
            <see langword="true" /> si l'élément est visible ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-941">
              <see langword="true" /> if the element is visible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-942">Détermination de la <xref:System.Windows.UIElement.IsVisible%2A> valeur tient compte de tous les facteurs de disposition.</span><span class="sxs-lookup"><span data-stu-id="6950f-942">Determination of the <xref:System.Windows.UIElement.IsVisible%2A> value takes all factors of layout into account.</span></span> <span data-ttu-id="6950f-943">En revanche, <xref:System.Windows.UIElement.Visibility%2A>, qui est une propriété définissable, n'indique que l’intention de faire par programme un élément visible ou invisible.</span><span class="sxs-lookup"><span data-stu-id="6950f-943">In contrast, <xref:System.Windows.UIElement.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</span></span>  
  
 <span data-ttu-id="6950f-944">Éléments où <xref:System.Windows.UIElement.IsVisible%2A> est `false` ne pas participer à des événements d’entrée (ou commandes), effectuez pas influencer soit la mesure ou organiser les passes de disposition, ne sont pas recevoir le focus, ne sont pas dans une séquence d’onglet et ne seront pas signalées dans un test de positionnement.</span><span class="sxs-lookup"><span data-stu-id="6950f-944">Elements where <xref:System.Windows.UIElement.IsVisible%2A> is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</span></span> <span data-ttu-id="6950f-945">En revanche, les éléments où <xref:System.Windows.UIElement.IsEnabled%2A> est `false` participent aux événements et des commandes et le test de positionnement, mais ne sont pas recevoir le focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-945">In contrast, elements where <xref:System.Windows.UIElement.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.</span></span>  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-946">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-946">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-947">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-947">Identifier field</span></span>|<xref:System.Windows.UIElement.IsVisibleProperty>|  
|<span data-ttu-id="6950f-948">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-948">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-949">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-949">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-950">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.UIElement.IsVisible" /> de cet élément change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-950">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsVisible" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-951">Cet événement n’est pas déclenché si l’élément n’est pas restitué par le système de disposition, pour des raisons autres que la valeur de la <xref:System.Windows.UIElement.IsVisible%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="6950f-951">This event is not raised if the element is not being rendered by the layout system, for reasons other than the value of the <xref:System.Windows.UIElement.IsVisible%2A> property.</span></span> <span data-ttu-id="6950f-952">Par exemple, l’élément peut avoir pas d’objet visuel associé.</span><span class="sxs-lookup"><span data-stu-id="6950f-952">For example, the element might not have an associated visual.</span></span>  
  
 <span data-ttu-id="6950f-953">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-953">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-954">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.IsVisible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-954">Identifies the <see cref="P:System.Windows.UIElement.IsVisible" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-955">Se produit quand une touche est enfoncée alors que l’élément a le focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-955">Occurs when a key is pressed while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-956">Gestion des touches interagit avec d’autres fonctionnalités de plateforme telles que de la composition d’exécution des commandes et le texte.</span><span class="sxs-lookup"><span data-stu-id="6950f-956">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="6950f-957">Le <xref:System.Windows.UIElement.KeyDown> événement est un événement d’entrée de texte de niveau inférieur qui peuvent ne pas fonctionner comme prévu sur certains contrôles.</span><span class="sxs-lookup"><span data-stu-id="6950f-957">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="6950f-958">Il s’agit, car certains contrôles disposent de composition de contrôle ou la gestion de classe qui fournit une version de niveau supérieur du texte d’entrée de la gestion et des événements connexes.</span><span class="sxs-lookup"><span data-stu-id="6950f-958">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="6950f-959">Cet événement crée un alias pour le <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> événement pour cette classe attaché afin que <xref:System.Windows.UIElement.KeyDown> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-959">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.KeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-960">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.KeyDown> événements sont attachés à sous-jacent <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-960">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-961">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-961">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-962">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-962">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyDownEvent>|  
|<span data-ttu-id="6950f-963">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-963">Routing strategy</span></span>|<span data-ttu-id="6950f-964">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-964">Bubbling</span></span>|  
|<span data-ttu-id="6950f-965">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-965">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="6950f-966">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-966">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="6950f-967">Substituer <xref:System.Windows.UIElement.OnKeyDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-967">Override <xref:System.Windows.UIElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-968">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-968">Identifies the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-969">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-969">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-970">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-970">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-971">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-971">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-972">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-972">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-973">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-973">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-974">Se produit quand une touche est relâchée alors que l’élément a le focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-974">Occurs when a key is released while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-975">Cet événement crée un alias pour le <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> événement pour cette classe attaché afin que <xref:System.Windows.UIElement.KeyUp> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-975">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.UIElement.KeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-976">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.KeyUp> événements sont attachés à sous-jacent <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-976">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-977">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-977">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-978">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-978">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyUpEvent>|  
|<span data-ttu-id="6950f-979">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-979">Routing strategy</span></span>|<span data-ttu-id="6950f-980">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-980">Bubbling</span></span>|  
|<span data-ttu-id="6950f-981">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-981">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="6950f-982">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-982">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="6950f-983">Substituer <xref:System.Windows.UIElement.OnKeyUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-983">Override <xref:System.Windows.UIElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-984">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-984">Identifies the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-985">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-985">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-986">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-986">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-987">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-987">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-988">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-988">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-989">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-989">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LayoutUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutUpdated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-990">Se produit lorsque la disposition des différents éléments visuels, associés au <see cref="T:System.Windows.Threading.Dispatcher" /> actif, change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-990">Occurs when the layout of the various visual elements associated with the current <see cref="T:System.Windows.Threading.Dispatcher" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-991">Une mise à jour de disposition peut se produire suite à une modification de propriété, redimensionnement d’une fenêtre ou une demande explicite de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="6950f-991">A layout update can occur as a result of a property change, a window resize, or an explicit user request.</span></span>  
  
 <span data-ttu-id="6950f-992">Ce membre est une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement, pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-992">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-993">Se produit lorsque cet élément perd le focus logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-993">Occurs when this element loses logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-994">Le focus logique diffère du focus clavier si son abandon est délibérément forcé par l'appel à une méthode ; le focus clavier précédent existe cependant dans une étendue différente.</span><span class="sxs-lookup"><span data-stu-id="6950f-994">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="6950f-995">Dans ce scénario et reste du focus clavier lorsqu’il est l’élément sur lequel un <xref:System.Windows.UIElement.Focus%2A> méthode est toujours appelée Obtient le focus logique.</span><span class="sxs-lookup"><span data-stu-id="6950f-995">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="6950f-996">Une interprétation plus précise de cet événement est qu’il est déclenché lorsque la valeur de la <xref:System.Windows.UIElement.IsFocused%2A> propriété d’un élément de l’itinéraire passe de `true` à `false`.</span><span class="sxs-lookup"><span data-stu-id="6950f-996">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="6950f-997">Cet événement utilisant le routage par propagation, l’élément qui perd le focus peut être un élément enfant au lieu de l’élément où le Gestionnaire d’événements est attaché de réellement.</span><span class="sxs-lookup"><span data-stu-id="6950f-997">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="6950f-998">Vérifiez le <xref:System.Windows.RoutedEventArgs.Source%2A> dans les données d’événement pour déterminer l’élément ayant effectivement reçu le focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-998">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-999">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-999">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1000">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1000">Identifier field</span></span>|<xref:System.Windows.UIElement.LostFocusEvent>|  
|<span data-ttu-id="6950f-1001">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1001">Routing strategy</span></span>|<span data-ttu-id="6950f-1002">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1002">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1003">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1003">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="6950f-1004">Il n’existe aucun événement de tunneling correspondant.</span><span class="sxs-lookup"><span data-stu-id="6950f-1004">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="6950f-1005">Substituer <xref:System.Windows.UIElement.OnLostFocus%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1005">Override <xref:System.Windows.UIElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1006">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1006">Identifies the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1007">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1007">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1008">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1008">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1009">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1009">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1010">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1010">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1011">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1011">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1012">Se produit quand le focus du clavier n’est plus sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1012">Occurs when the keyboard is no longer focused on this element,.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1013">Cet événement utilisant le routage par propagation, l’élément qui perd le focus peut être un élément enfant au lieu de l’élément où le Gestionnaire d’événements est attaché de réellement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1013">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="6950f-1014">Vérifiez le <xref:System.Windows.RoutedEventArgs.Source%2A> dans les données d’événement pour déterminer l’élément réel qui perd le focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-1014">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="6950f-1015">Cet événement crée un alias pour le <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.LostKeyboardFocus> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-1015">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-1016">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.LostKeyboardFocus> événements sont attachés à sous-jacent <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1016">Event handlers that are attached to the <xref:System.Windows.UIElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1017">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1017">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1018">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1018">Identifier field</span></span>|<xref:System.Windows.UIElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="6950f-1019">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1019">Routing strategy</span></span>|<span data-ttu-id="6950f-1020">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1020">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1021">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1021">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="6950f-1022">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1022">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="6950f-1023">Substituer <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1023">Override <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1024">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.LostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1024">Identifies the <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1025">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1025">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1026">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1026">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1027">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1027">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1028">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1028">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1029">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1029">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1030">Se produit lorsque cet élément perd la capture de la souris.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1030">Occurs when this element loses mouse capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1031">Lorsqu’un élément capture la souris, il reçoit l’entrée de la souris même si le pointeur se trouve en dehors de ses limites.</span><span class="sxs-lookup"><span data-stu-id="6950f-1031">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="6950f-1032">En règle générale, la souris est capturée uniquement pendant les opérations de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="6950f-1032">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="6950f-1033">Cet événement utilisant le routage par propagation, l’élément perd la capture peut être un élément enfant au lieu de l’élément où le Gestionnaire d’événements est attaché de réellement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1033">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="6950f-1034">Vérifiez le <xref:System.Windows.RoutedEventArgs.Source%2A> dans les données d’événement pour déterminer l’élément réel qui perd la capture.</span><span class="sxs-lookup"><span data-stu-id="6950f-1034">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="6950f-1035">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.LostMouseCapture> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-1035">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-1036">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.LostMouseCapture> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1036">Event handlers that are attached to the <xref:System.Windows.UIElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1037">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1037">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1038">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1038">Identifier field</span></span>|<xref:System.Windows.UIElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="6950f-1039">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1039">Routing strategy</span></span>|<span data-ttu-id="6950f-1040">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1040">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1041">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1041">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="6950f-1042">Il n’existe aucun événement de tunneling correspondant défini.</span><span class="sxs-lookup"><span data-stu-id="6950f-1042">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="6950f-1043">Substituer <xref:System.Windows.UIElement.OnLostMouseCapture%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1043">Override <xref:System.Windows.UIElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1044">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.LostMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1044">Identifies the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1045">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1045">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1046">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1046">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1047">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1047">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1048">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1048">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1049">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1049">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1050">Se produit lorsque cet élément perd la capture du stylet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1050">Occurs when this element loses stylus capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1051">Lorsqu’un élément capture le stylet, il reçoit l’entrée du stylet même si le pointeur se trouve en dehors de ses limites.</span><span class="sxs-lookup"><span data-stu-id="6950f-1051">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="6950f-1052">Le stylet est capturé en général uniquement pendant les opérations de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="6950f-1052">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="6950f-1053">Cet événement utilisant le routage par propagation, l’élément qui perd le focus peut être un élément enfant au lieu de l’élément où le Gestionnaire d’événements est attaché de réellement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1053">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="6950f-1054">Vérifiez le <xref:System.Windows.RoutedEventArgs.Source%2A> dans les données d’événement pour déterminer l’élément réel qui perd le focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-1054">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="6950f-1055">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.LostStylusCapture> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-1055">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-1056">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.LostStylusCapture> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1056">Event handlers that are attached to the <xref:System.Windows.UIElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1057">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1057">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1058">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1058">Identifier field</span></span>|<xref:System.Windows.UIElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="6950f-1059">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1059">Routing strategy</span></span>|<span data-ttu-id="6950f-1060">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1060">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1061">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1061">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-1062">Il n’existe aucun événement de tunneling correspondant défini.</span><span class="sxs-lookup"><span data-stu-id="6950f-1062">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="6950f-1063">Substituer <xref:System.Windows.UIElement.OnLostStylusCapture%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1063">Override <xref:System.Windows.UIElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1064">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.LostStylusCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1064">Identifies the <see cref="E:System.Windows.UIElement.LostStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1065">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1065">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1066">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1066">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1067">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1067">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1068">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1068">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1069">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1069">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1070">Se produit lorsque cet élément perd une capture d'entrée tactile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1070">Occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1071">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1071">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1072">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1072">Identifier field</span></span>|<xref:System.Windows.UIElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="6950f-1073">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1073">Routing strategy</span></span>|<span data-ttu-id="6950f-1074">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1074">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1075">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1075">Delegate</span></span>|<span data-ttu-id="6950f-1076"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1076"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="6950f-1077">Substituer <xref:System.Windows.UIElement.OnLostTouchCapture%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1077">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1078">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.LostTouchCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1078">Identifies the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationBoundaryFeedback As EventHandler(Of ManipulationBoundaryFeedbackEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^&gt; ^ ManipulationBoundaryFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1079">Se produit lorsque la manipulation rencontre une limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1079">Occurs when the manipulation encounters a boundary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_ManipulationBoundaryFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1080">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1080">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1081">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1081">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent>|  
|<span data-ttu-id="6950f-1082">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1082">Routing strategy</span></span>|<span data-ttu-id="6950f-1083">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1083">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1084">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1084">Delegate</span></span>|<span data-ttu-id="6950f-1085"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1085"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationBoundaryFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationBoundaryFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1086">Identifie l'événement <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1086">Identifies the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationCompleted As EventHandler(Of ManipulationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationCompletedEventArgs ^&gt; ^ ManipulationCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1087">Se produit lorsqu'une manipulation et l'inertie sur l'objet <see cref="T:System.Windows.UIElement" /> sont terminées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1087">Occurs when a manipulation and inertia on the <see cref="T:System.Windows.UIElement" /> object is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1088">Vous pouvez utiliser cet événement pour obtenir des informations sur la manipulation lorsqu’elle est terminée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1088">You can use this event to get information about the manipulation when it completes.</span></span>  <span data-ttu-id="6950f-1089">Par exemple, vous pouvez utiliser la <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> pour déterminer la quantité totale de la position de la manipulation de la propriété modifiée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1089">For example, you can use the <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> property to determine the total amount the position of the manipulation changed.</span></span>  
  
 <span data-ttu-id="6950f-1090">Pour plus d’informations sur les manipulations, consultez le [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1090">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="6950f-1091">Pour obtenir un exemple d’une application qui répond aux manipulations, consultez [procédure pas à pas : création de votre première Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1091">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationCompleted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1092">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1092">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1093">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1093">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationCompletedEvent>|  
|<span data-ttu-id="6950f-1094">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1094">Routing strategy</span></span>|<span data-ttu-id="6950f-1095">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1095">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1096">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1096">Delegate</span></span>|<span data-ttu-id="6950f-1097"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1097"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompletedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationCompletedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationCompletedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationCompletedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationCompletedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1098">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.ManipulationCompleted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1098">Identifies the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDelta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationDelta" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationDelta As EventHandler(Of ManipulationDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationDeltaEventArgs ^&gt; ^ ManipulationDelta;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1099">Se produit lorsque le périphérique d'entrée change de position pendant une manipulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1099">Occurs when the input device changes position during a manipulation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1100">Le <xref:System.Windows.UIElement.ManipulationDelta> événement produit plusieurs fois lorsque l’utilisateur fait glisser doigts sur l’écran pendant une manipulation et lorsque l’inertie se produit.</span><span class="sxs-lookup"><span data-stu-id="6950f-1100">The <xref:System.Windows.UIElement.ManipulationDelta> event occurs multiple times when the user drags fingers over the screen during a manipulation and again when inertia occurs.</span></span>  <span data-ttu-id="6950f-1101">Vous pouvez utiliser le <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> propriété pour vérifier si l’événement se produit pendant l’inertie.</span><span class="sxs-lookup"><span data-stu-id="6950f-1101">You can use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> property to check whether the event is occurring during inertia.</span></span>  
  
 <span data-ttu-id="6950f-1102">L’élément sur lequel <xref:System.Windows.UIElement.ManipulationDelta> événement se produit n’est pas affectée en aucune façon lorsque l’événement se produit.</span><span class="sxs-lookup"><span data-stu-id="6950f-1102">The element on with <xref:System.Windows.UIElement.ManipulationDelta> event occurs is not affected in any way when the event occurs.</span></span>  <span data-ttu-id="6950f-1103">Vous devez fournir la logique à l’élément qui doit être manipulé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1103">You must provide the logic to the element that is to be manipulated.</span></span>  <span data-ttu-id="6950f-1104">Le <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> et <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> propriétés, qui sont de type <xref:System.Windows.Input.ManipulationDelta>, contiennent des données sur la façon dont la position des manipulations change et interprété comme le déplacement, redimensionnement ou faire pivoter un objet.</span><span class="sxs-lookup"><span data-stu-id="6950f-1104">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> properties, which are of type <xref:System.Windows.Input.ManipulationDelta>, contain data about how the position of the manipulations change and interpreted as moving, resizing, or rotating an object.</span></span>  <span data-ttu-id="6950f-1105">Vous appliquez ces informations à l’élément qui doit être manipulé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1105">You apply that information to the element that is to be manipulated.</span></span>  
  
 <span data-ttu-id="6950f-1106">Pour plus d’informations sur les manipulations, consultez le [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1106">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="6950f-1107">Pour obtenir un exemple d’une application qui répond aux manipulations, consultez [procédure pas à pas : création de votre première Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1107">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationDelta"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1108">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1108">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1109">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1109">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationDeltaEvent>|  
|<span data-ttu-id="6950f-1110">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1110">Routing strategy</span></span>|<span data-ttu-id="6950f-1111">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1111">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1112">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1112">Delegate</span></span>|<span data-ttu-id="6950f-1113"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1113"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-1114">L’exemple suivant montre un gestionnaire d’événements pour le <xref:System.Windows.UIElement.ManipulationDelta> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1114">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="6950f-1115">L’exemple utilise le <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> propriété à déplacer, redimensionner et faire pivoter un <xref:System.Windows.Shapes.Rectangle>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1115">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span>  <span data-ttu-id="6950f-1116">Cet exemple vérifie également si le <xref:System.Windows.UIElement.ManipulationDelta> événement s’est produite lors de l’inertie et si le rectangle touche le bord d’une fenêtre.</span><span class="sxs-lookup"><span data-stu-id="6950f-1116">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span>  <span data-ttu-id="6950f-1117">Si ces cas sont trues, l’application arrête la manipulation pour empêcher le rectangle de quitter la zone visible de l’application.</span><span class="sxs-lookup"><span data-stu-id="6950f-1117">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="6950f-1118">Cet exemple fait partie d’un exemple plus complet dans [procédure pas à pas : création de votre première Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1118">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDeltaEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationDeltaEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationDeltaEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationDeltaEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationDeltaEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1119">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.ManipulationDelta" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1119">Identifies the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationInertiaStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationInertiaStarting As EventHandler(Of ManipulationInertiaStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationInertiaStartingEventArgs ^&gt; ^ ManipulationInertiaStarting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1120">Se produit lorsque le périphérique d'entrée perd le contact avec l'objet <see cref="T:System.Windows.UIElement" /> pendant une manipulation et que l'inertie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1120">Occurs when the input device loses contact with the <see cref="T:System.Windows.UIElement" /> object during a manipulation and inertia begins.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1121">Le <xref:System.Windows.UIElement.ManipulationInertiaStarting> événement se produit lorsque l’utilisateur retire tous ses doigts de l’écran pendant une manipulation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1121">The <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs when the user lifts all of the fingers from the screen during a manipulation.</span></span> <span data-ttu-id="6950f-1122">Par exemple, si un utilisateur « lève » un <xref:System.Windows.UIElement> sur une surface, l’utilisateur touchera le <xref:System.Windows.UIElement> pour commencer l’action, déplacera le doigt sur l’écran sur une courte distance et relâchez la <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1122">For example, if a user "throws" a <xref:System.Windows.UIElement> across a surface, the user will touch the <xref:System.Windows.UIElement> to begin the action, move the finger across the screen for a short distance, and then release the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="6950f-1123">Lorsque l’utilisateur relâche l’élément, l’inertie commence et <xref:System.Windows.UIElement.ManipulationInertiaStarting> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="6950f-1123">When the user releases the element, inertia begins and the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs.</span></span>  <span data-ttu-id="6950f-1124">Le <xref:System.Windows.UIElement> continue à recevoir <xref:System.Windows.UIElement.ManipulationDelta> événements pour indiquer que l’inertie se produit sur l’élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-1124">The <xref:System.Windows.UIElement> continues to receive <xref:System.Windows.UIElement.ManipulationDelta> events to indicate that inertia is occurring on the element.</span></span>  
  
 <span data-ttu-id="6950f-1125">Vous pouvez utiliser cet événement pour spécifier le comportement de l’inertie.</span><span class="sxs-lookup"><span data-stu-id="6950f-1125">You can use this event to specify the behavior of the inertia.</span></span>  <span data-ttu-id="6950f-1126">Par exemple, vous pouvez définir la rapidité initiale utilisée lors de l’inertie commence.</span><span class="sxs-lookup"><span data-stu-id="6950f-1126">For example, you can set the initial velocity that is used when inertia begins.</span></span>  <span data-ttu-id="6950f-1127">Vous pouvez également spécifier la quantité de l’inertie en définissant la décélération ou en définissant l’emplacement souhaité.</span><span class="sxs-lookup"><span data-stu-id="6950f-1127">You can also specify the amount of inertia by setting the desired deceleration or by setting the desired placement.</span></span>  <span data-ttu-id="6950f-1128">Vous pouvez définir ces valeurs pour chaque type de manipulation (traduction, expansion ou rotation) indépendamment.</span><span class="sxs-lookup"><span data-stu-id="6950f-1128">You can set these values for each type of manipulation (translation, expansion, or rotation) independently.</span></span>  <span data-ttu-id="6950f-1129">Pour plus d'informations, consultez <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1129">For more information, see <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>  
  
 <span data-ttu-id="6950f-1130">Pour plus d’informations sur les manipulations, consultez le [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1130">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="6950f-1131">Pour obtenir un exemple d’une application qui répond aux manipulations, consultez [procédure pas à pas : création de votre première Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1131">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationInertiaStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1132">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1132">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1133">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1133">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationInertiaStartingEvent>|  
|<span data-ttu-id="6950f-1134">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1134">Routing strategy</span></span>|<span data-ttu-id="6950f-1135">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1135">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1136">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1136">Delegate</span></span>|<span data-ttu-id="6950f-1137"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1137"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-1138">L’exemple suivant illustre la <xref:System.Windows.UIElement.ManipulationInertiaStarting> Gestionnaire d’événements et définit la décélération souhaitée pour la traduction, l’expansion et rotation utilisée pendant l’inertie.</span><span class="sxs-lookup"><span data-stu-id="6950f-1138">The following example shows the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event handler and sets the desired deceleration for translation, expansion, and rotation that is used during inertia.</span></span> <span data-ttu-id="6950f-1139">Cet exemple fait partie d’un exemple plus complet dans [procédure pas à pas : création de votre première Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1139">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationInertiaStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationInertiaStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationInertiaStartingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1140">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1140">Identifies the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarted As EventHandler(Of ManipulationStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartedEventArgs ^&gt; ^ ManipulationStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1141">Se produit lorsqu'un périphérique d'entrée commence une manipulation sur l'objet <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1141">Occurs when an input device begins a manipulation on the <see cref="T:System.Windows.UIElement" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1142">Le <xref:System.Windows.UIElement.ManipulationStarted> événement se produit après la <xref:System.Windows.UIElement.ManipulationStarting> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1142">The <xref:System.Windows.UIElement.ManipulationStarted> event occurs after the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span>  <span data-ttu-id="6950f-1143">Vous pouvez effectuer les opérations suivantes le <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span><span class="sxs-lookup"><span data-stu-id="6950f-1143">You can do the following with the <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span></span>  
  
-   <span data-ttu-id="6950f-1144">Obtenez l’élément auquel la position de la manipulation est relatif à l’aide du <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="6950f-1144">Get the element that the manipulation's position is relative to by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> property.</span></span>  
  
-   <span data-ttu-id="6950f-1145">Obtenez de l’origine de la manipulation à l’aide de la <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="6950f-1145">Get the origin of the manipulation by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> property.</span></span>  
  
-   <span data-ttu-id="6950f-1146">Annuler la manipulation en appelant le <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6950f-1146">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> method.</span></span>  
  
 <span data-ttu-id="6950f-1147">Pour plus d’informations sur les manipulations, consultez le [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1147">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="6950f-1148">Pour obtenir un exemple d’une application qui répond aux manipulations, consultez [procédure pas à pas : création de votre première Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1148">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1149">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1149">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1150">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1150">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartedEvent>|  
|<span data-ttu-id="6950f-1151">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1151">Routing strategy</span></span>|<span data-ttu-id="6950f-1152">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1152">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1153">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1153">Delegate</span></span>|<span data-ttu-id="6950f-1154"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1154"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1155">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.ManipulationStarted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1155">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarting As EventHandler(Of ManipulationStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartingEventArgs ^&gt; ^ ManipulationStarting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1156">Se produit lorsque le processeur de manipulation est créé initialement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1156">Occurs when the manipulation processor is first created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1157">Le <xref:System.Windows.UIElement.ManipulationStarting> événement se produit sur un élément qui possède le <xref:System.Windows.UIElement.IsManipulationEnabled%2A> propriété `true` lorsque l’utilisateur place un doigt sur celui-ci.</span><span class="sxs-lookup"><span data-stu-id="6950f-1157">The <xref:System.Windows.UIElement.ManipulationStarting> event occurs on an element that has the <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property set to `true` when the user puts a finger on it.</span></span> <span data-ttu-id="6950f-1158">Par défaut, les événements de manipulation suivants signalent la position de la manipulation relative à l’élément qui a <xref:System.Windows.UIElement.IsManipulationEnabled%2A> la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-1158">By default, subsequent manipulation events report the position of the manipulation relative to the element that has <xref:System.Windows.UIElement.IsManipulationEnabled%2A> set to `true`.</span></span>  <span data-ttu-id="6950f-1159">Vous pouvez spécifier que la position doit être relatif à un autre élément en définissant le <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="6950f-1159">You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span> <span data-ttu-id="6950f-1160">Par exemple, vous pouvez rendre la manipulation par rapport au parent de l’élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-1160">For example, you can make the manipulation relative to the parent of the element.</span></span>  
  
 <span data-ttu-id="6950f-1161">Vous pouvez également effectuer les opérations suivantes dans un gestionnaire d’événements <xref:System.Windows.UIElement.ManipulationStarting>:</span><span class="sxs-lookup"><span data-stu-id="6950f-1161">You can also do the following in an event handler for <xref:System.Windows.UIElement.ManipulationStarting>:</span></span>  
  
-   <span data-ttu-id="6950f-1162">Spécifiez si l’utilisateur a besoin de plusieurs doigts pour exécuter les manipulations en définissant le <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="6950f-1162">Specify whether the user needs more than one finger to perform the manipulations by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="6950f-1163">Spécifiez quels types de manipulation sont activés en définissant le <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> propriété un <xref:System.Windows.Input.ManipulationModes> énumération.</span><span class="sxs-lookup"><span data-stu-id="6950f-1163">Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.</span></span>  
  
-   <span data-ttu-id="6950f-1164">Spécifier le centre de rotation d’un seul doigt en définissant le <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="6950f-1164">Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="6950f-1165">Annuler la manipulation en appelant le <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6950f-1165">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6950f-1166">Pour plus d’informations sur les manipulations, consultez le [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1166">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="6950f-1167">Pour obtenir un exemple d’une application qui répond aux manipulations, consultez [procédure pas à pas : création de votre première Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1167">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1168">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1168">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1169">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1169">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartingEvent>|  
|<span data-ttu-id="6950f-1170">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1170">Routing strategy</span></span>|<span data-ttu-id="6950f-1171">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1171">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1172">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1172">Delegate</span></span>|<span data-ttu-id="6950f-1173"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1173"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-1174">L’exemple suivant montre le Gestionnaire d’événements pour le <xref:System.Windows.UIElement.ManipulationStarting> événements et définit le <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> jusqu'à l’élément parent qui reçoit les événements de manipulation afin que les coordonnées de la manipulation sont exprimées par rapport à l’élément parent.</span><span class="sxs-lookup"><span data-stu-id="6950f-1174">The following example shows the event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> to the parent element that receives the manipulation events so that the coordinates of the manipulation are relative to the parent element.</span></span>  <span data-ttu-id="6950f-1175">Cet exemple fait partie d’un exemple plus complet dans [procédure pas à pas : création de votre première Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1175">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationstarting)]
 [!code-vb[BasicManipulation#ManipulationStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationstarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1176">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.ManipulationStarting" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1176">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public void Measure (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Measure(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Measure (availableSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Measure(System::Windows::Size availableSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="6950f-1177">L’espace disponible qu’un élément parent peut allouer à un élément enfant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1177">The available space that a parent element can allocate a child element.</span>
          </span>
          <span data-ttu-id="6950f-1178">Un élément enfant peut demander plus d’espace que ce qui est disponible ; la taille fournie peut être adaptée si le défilement est possible dans le modèle de contenu pour l’élément actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1178">A child element can request a larger space than what is available; the provided size might be accommodated if scrolling is possible in the content model for the current element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1179">Met à jour la propriété <see cref="P:System.Windows.UIElement.DesiredSize" /> de la classe <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1179">Updates the <see cref="P:System.Windows.UIElement.DesiredSize" /> of a <see cref="T:System.Windows.UIElement" />.</span>
          </span>
          <span data-ttu-id="6950f-1180">Les éléments parents appellent cette méthode depuis leur propre implémentation <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> pour former une actualisation récursive de la disposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1180">Parent elements call this method from their own <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> implementations to form a recursive layout update.</span>
          </span>
          <span data-ttu-id="6950f-1181">L’appel de cette méthode constitue la première passe (la passe « Mesure ») de la mise à jour d’une disposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1181">Calling this method constitutes the first pass (the "Measure" pass) of a layout update.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1182">Calculs de positionnement dans des [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] est composé d’un <xref:System.Windows.UIElement.Measure%2A> appeler et une <xref:System.Windows.UIElement.Arrange%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="6950f-1182">Computation of layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] is comprised of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="6950f-1183">Lors de la <xref:System.Windows.UIElement.Measure%2A> appel, un élément détermine les spécifications de taille en utilisant un `availableSize` d’entrée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1183">During the <xref:System.Windows.UIElement.Measure%2A> call, an element determines its size requirements by using an `availableSize` input.</span></span> <span data-ttu-id="6950f-1184">Lors de la <xref:System.Windows.UIElement.Arrange%2A> appel, la taille de l’élément est finalisé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1184">During the <xref:System.Windows.UIElement.Arrange%2A> call, the element size is finalized.</span></span>  
  
 <span data-ttu-id="6950f-1185">`availableSize` peut être n’importe quel nombre entre zéro et infini.</span><span class="sxs-lookup"><span data-stu-id="6950f-1185">`availableSize` can be any number from zero to infinite.</span></span> <span data-ttu-id="6950f-1186">Éléments participant à la disposition doivent retourner la valeur minimale <xref:System.Windows.Size> qu’ils requièrent pour une donnée `availableSize`.</span><span class="sxs-lookup"><span data-stu-id="6950f-1186">Elements participating in layout should return the minimum <xref:System.Windows.Size> they require for a given `availableSize`.</span></span>  
  
 <span data-ttu-id="6950f-1187">Lorsqu’une disposition est instanciée, elle reçoit toujours un <xref:System.Windows.UIElement.Measure%2A> appeler avant <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1187">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="6950f-1188">Toutefois, après la première passe de disposition, il peut recevoir un <xref:System.Windows.UIElement.Arrange%2A> d’appeler sans un <xref:System.Windows.UIElement.Measure%2A>; cela peut se produire lorsqu’une propriété qui affecte uniquement <xref:System.Windows.UIElement.Arrange%2A> est modifiée (par exemple, alignement), ou que le parent reçoit un <xref:System.Windows.UIElement.Arrange%2A> sans un <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1188">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="6950f-1189">A <xref:System.Windows.UIElement.Measure%2A> appel invalidera automatiquement un <xref:System.Windows.UIElement.Arrange%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="6950f-1189">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="6950f-1190">Mises à jour de disposition se produisent de façon asynchrone, telles que le thread principal n’attend pas que chaque modification de la disposition.</span><span class="sxs-lookup"><span data-stu-id="6950f-1190">Layout updates happen asynchronously, such that the main thread is not waiting for every possible layout change.</span></span> <span data-ttu-id="6950f-1191">Interrogation d’un élément via le code-behind de la vérification des valeurs de propriété peut ne pas immédiatement refléter les modifications apportées aux propriétés qui interagissent avec les caractéristiques de dimensionnement ou de disposition (le <xref:System.Windows.FrameworkElement.Width%2A> propriété, par exemple).</span><span class="sxs-lookup"><span data-stu-id="6950f-1191">Querying an element via code-behind checking of property values may not immediately reflect changes to properties that interact with the sizing or layout characteristics (the <xref:System.Windows.FrameworkElement.Width%2A> property, for example).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6950f-1192">Mises à jour de la disposition peuvent être forcés à l’aide de la <xref:System.Windows.UIElement.UpdateLayout%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6950f-1192">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method.</span></span> <span data-ttu-id="6950f-1193">Toutefois, l’appel de cette méthode n’est généralement pas nécessaire et peut entraîner des performances médiocres.</span><span class="sxs-lookup"><span data-stu-id="6950f-1193">However, calling this method is usually unnecessary and can cause poor performance.</span></span>  
  
 <span data-ttu-id="6950f-1194">Le système de disposition conserve deux files d’attente distincts des dispositions non valide, une pour <xref:System.Windows.UIElement.Measure%2A> et l’autre pour <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1194">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="6950f-1195">La file d’attente de disposition est triée en fonction de l’ordre des éléments dans l’arborescence d’éléments visuels de l’élément de mise en forme ; plus haut dans l’arborescence d’éléments figurent en haut de la file d’attente, afin d’éviter des dispositions redondantes dues aux modifications répétées dans les parents.</span><span class="sxs-lookup"><span data-stu-id="6950f-1195">The layout queue is sorted based upon the order of elements in the visual tree of the element performing layout; elements higher in the tree are at the top of the queue, to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="6950f-1196">Entrées en double sont automatiquement supprimées de la file d’attente et les éléments sont automatiquement supprimés de la file d’attente s’ils sont déjà validée à la disposition.</span><span class="sxs-lookup"><span data-stu-id="6950f-1196">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already layout-validated.</span></span>  
  
 <span data-ttu-id="6950f-1197">Lors de la mise à jour de la mise en page, le <xref:System.Windows.UIElement.Measure%2A> file d’attente est d’abord vidée, suivi par le <xref:System.Windows.UIElement.Arrange%2A> file d’attente.</span><span class="sxs-lookup"><span data-stu-id="6950f-1197">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="6950f-1198">Un élément dans le <xref:System.Windows.UIElement.Arrange%2A> file d’attente n’est jamais disposé s’il existe un élément dans le <xref:System.Windows.UIElement.Measure%2A> file d’attente.</span><span class="sxs-lookup"><span data-stu-id="6950f-1198">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size MeasureCore (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size MeasureCore(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MeasureCore (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size MeasureCore(System::Windows::Size availableSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="6950f-1199">Dimensions disponibles que l'élément parent peut allouer à l'enfant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1199">The available size that the parent element can allocate for the child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1200">En cas de substitution dans une classe dérivée, fournit le code de mesure afin de dimensionner cet élément correctement, en considérant les dimensions de tout contenu d'élément enfant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1200">When overridden in a derived class, provides measurement logic for sizing this element properly, with consideration of the size of any child element content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-1201">Taille souhaitée de cet élément dans la disposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1201">The desired size of this element in layout.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1202">Il est plus courant de dériver un élément de <xref:System.Windows.FrameworkElement> plutôt que <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1202">It is more common to derive an element from <xref:System.Windows.FrameworkElement> rather than <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="6950f-1203">Si vous dérivez de <xref:System.Windows.FrameworkElement>, notez qu’une substitution de <xref:System.Windows.UIElement.MeasureCore%2A> sur <xref:System.Windows.FrameworkElement> scellés le <xref:System.Windows.UIElement.MeasureCore%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6950f-1203">If you are deriving from <xref:System.Windows.FrameworkElement>, note that an override of <xref:System.Windows.UIElement.MeasureCore%2A> on <xref:System.Windows.FrameworkElement> seals the <xref:System.Windows.UIElement.MeasureCore%2A> method.</span></span> <span data-ttu-id="6950f-1204">Par conséquent, vous ne substituer <xref:System.Windows.UIElement.MeasureCore%2A> comme un moyen de modifier les caractéristiques de mesure de disposition si vous dérivez de <xref:System.Windows.UIElement> via un héritage qui n’inclut pas <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1204">Therefore, you only override <xref:System.Windows.UIElement.MeasureCore%2A> as a means to alter layout measure characteristics if you derive from <xref:System.Windows.UIElement> through an inheritance that does not include <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="6950f-1205">Cela peut être le cas si vous essayez de générer votre propre implémentation sur le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] au niveau du noyau.</span><span class="sxs-lookup"><span data-stu-id="6950f-1205">This might be the case if you are attempting to build your own implementation on the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] core-level.</span></span> <span data-ttu-id="6950f-1206">Sinon, si vous dérivez de <xref:System.Windows.FrameworkElement>, puis le modèle d’implémentation pour le comportement de mesure est la <xref:System.Windows.FrameworkElement> implémentation de.<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1206">Otherwise, if you are deriving from <xref:System.Windows.FrameworkElement>, then the implementation template for Measure behavior is the <xref:System.Windows.FrameworkElement> implementation of .<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span></span>  
  
 <span data-ttu-id="6950f-1207">Un élément parent des éléments enfants doit appeler <xref:System.Windows.UIElement.Measure%2A> sur chaque enfant, sinon ces éléments enfants ne sont pas de taille ou organisées et disparaissent en fait à partir de la mise en page.</span><span class="sxs-lookup"><span data-stu-id="6950f-1207">A parent element with child elements must call <xref:System.Windows.UIElement.Measure%2A> on each child, otherwise these child elements are not sized or arranged and will effectively disappear from layout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-1208">Une substitution typique de <xref:System.Windows.UIElement.MeasureCore%2A> suit ce modèle approximatif (il n’est pas une collection intégrée appelée `VisualChildren`; `VisualChildren` est un espace réservé qui représente n’importe quelle collection enfant votre élément assure la maintenance).</span><span class="sxs-lookup"><span data-stu-id="6950f-1208">A typical override of <xref:System.Windows.UIElement.MeasureCore%2A> follows this approximate pattern (there is not a built-in collection called `VisualChildren`; `VisualChildren` is a  placeholder that represents whatever child collection your element maintains).</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementmeasureoverride)]
 [!code-vb[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementmeasureoverride)]  
  
-   <span data-ttu-id="6950f-1209">Vous devez appeler <xref:System.Windows.UIElement.Measure%2A> sur chaque élément enfant.</span><span class="sxs-lookup"><span data-stu-id="6950f-1209">You must call <xref:System.Windows.UIElement.Measure%2A> on each child element.</span></span>  
  
-   <span data-ttu-id="6950f-1210">En règle générale, votre implémentation doit mettre en cache des informations de mesure entre les <xref:System.Windows.UIElement.MeasureCore%2A> et <xref:System.Windows.UIElement.ArrangeCore%2A> des appels de méthode dans le même élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-1210">Generally, your implementation should cache measurement information between the <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> method calls in the same element.</span></span>  
  
-   <span data-ttu-id="6950f-1211">Appel des implémentations de base de <xref:System.Windows.UIElement.MeasureCore%2A> n’est pas obligatoire, mais peut être approprié si l’implémentation de base fournit une fonctionnalité de mise en page souhaitée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1211">Calling base implementations of <xref:System.Windows.UIElement.MeasureCore%2A> is not required, but might be appropriate if the base implementation provides a desired layout capability.</span></span>  
  
-   <span data-ttu-id="6950f-1212">Les appels à <xref:System.Windows.UIElement.Measure%2A> éléments enfant doivent passer la même `availableSize` que le parent ou un sous-ensemble de la zone, selon le type de disposition de l’élément parent prend en charge.</span><span class="sxs-lookup"><span data-stu-id="6950f-1212">Calls to <xref:System.Windows.UIElement.Measure%2A> on child elements should pass either the same `availableSize` as the parent, or a subset of the area, depending on the type of layout the parent element supports.</span></span> <span data-ttu-id="6950f-1213">Par exemple, il serait valide pour supprimer la zone pour une bordure spécifique à un élément, un remplissage, une barre de défilement ou un contrôle personnalisé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1213">For example, it would be valid to remove the area for an element-specific border or padding, a scrollbar, or a custom control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-1214">Des implémentations doivent être en mesure de traiter une valeur fournie pour <paramref name="availableSize" /> qui est infinie.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1214">Implementations must be able to process a value provided for <paramref name="availableSize" /> that is infinite.</span>
            </span>
            <span data-ttu-id="6950f-1215">Une valeur infinie indique aucune contrainte demandée et diffère en effet le choix de la mesure à l’élément parent, via les appels récursifs à Measure.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1215">An infinite value indicates no requested constraints, and effectively defers measurement choice to the parent element, through recursive Measure calls.</span>
            </span>
            <span data-ttu-id="6950f-1216">Les implémentations peuvent considérer la valeur fournie pour <paramref name="availableSize" /> à une contrainte plus souple.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1216">Implementations can consider the value provided for <paramref name="availableSize" /> to be a soft constraint.</span>
            </span>
            <span data-ttu-id="6950f-1217">L’élément enfant peut spécifier une plus grande taille, même si d’autres aspects du code d’application ont été en mesure de déterminer la taille réelle en cours de l’élément parent.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1217">The child element might specify a larger size, even if other aspects of application code were able to determine the current actual size of the parent element.</span>
            </span>
            <span data-ttu-id="6950f-1218">La demande de grande taille est une convention qui indique que l’interrogation de l’élément enfant est si votre élément parent peut prendre en charge le contenu de défilement dans une zone d’affichage de contenu.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1218">The large size request is a convention that indicates that the child element is querying whether your parent element can support content scrolling within a content display region.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1219">Se produit lorsqu'un bouton de la souris est enfoncé alors que le pointeur est sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1219">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1220">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.MouseDown> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-1220">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-1221">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.MouseDown> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1221">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-1222">Le <xref:System.Windows.UIElement.MouseDown> événement est déclenché souvent avec <xref:System.Windows.UIElement.MouseLeftButtonDown> ou <xref:System.Windows.UIElement.MouseRightButtonDown>, ce qui correspond à une action sur l’un des deux boutons de souris standard.</span><span class="sxs-lookup"><span data-stu-id="6950f-1222">The <xref:System.Windows.UIElement.MouseDown> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="6950f-1223"><xref:System.Windows.UIElement.MouseLeftButtonDown> et <xref:System.Windows.UIElement.MouseRightButtonDown> sont également des événements routés, mais ils sont les événements routés directs, et l’événement spécifique au bouton approprié est déclenché lorsque la <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> événement atteint cet élément le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1223"><xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="6950f-1224">Consultez la section Notes pour <xref:System.Windows.UIElement.MouseLeftButtonDown> ou <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1224">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6950f-1225">Certains contrôles peuvent disposer inhérents à la gestion de classe pour les événements de bouton de souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-1225">Some controls might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="6950f-1226">Le bouton gauche de la souris vers le bas des événements est l’événement le plus probable pour que la gestion de classe dans un contrôle.</span><span class="sxs-lookup"><span data-stu-id="6950f-1226">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="6950f-1227">La fréquence de gestion de classe marque sous-jacent <xref:System.Windows.Input.Mouse> événement comme géré de la classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1227">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="6950f-1228">Une fois que l’événement est marqué comme géré, les autres gestionnaires d’instance associés à cet élément ne sont généralement pas déclenchés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1228">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="6950f-1229">Tous les autres gestionnaires instance ou la classe qui sont attachés à des éléments dans la direction de propagation vers la racine dans l’arborescence de l’interface utilisateur sont également généralement pas déclenchés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1229">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="6950f-1230">Vous pouvez résoudre le problème qui est décrit dans le paragraphe Important ci-dessus et recevez toujours <xref:System.Windows.UIElement.MouseDown> événements pour le bouton gauche de la souris sur une classe dérivée qui a l’aide d’une de ces solutions de gestion de classe :</span><span class="sxs-lookup"><span data-stu-id="6950f-1230">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="6950f-1231">Attacher des gestionnaires pour les <xref:System.Windows.UIElement.PreviewMouseDown> événement, qui n’est pas marqué comme géré par les contrôles.</span><span class="sxs-lookup"><span data-stu-id="6950f-1231">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="6950f-1232">Notez que, car il s’agit d’un événement d’aperçu, l’itinéraire démarre à la racine et au contrôle des tunnels.</span><span class="sxs-lookup"><span data-stu-id="6950f-1232">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="6950f-1233">Enregistrez un gestionnaire sur le contrôle en appelant <xref:System.Windows.UIElement.AddHandler%2A> et en choisissant l’option de signature qui permet aux gestionnaires d’écouter des événements même s’ils sont déjà marqués comme gérés dans les données de l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1233">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1234">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1234">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1235">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1235">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseDownEvent>|  
|<span data-ttu-id="6950f-1236">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1236">Routing strategy</span></span>|<span data-ttu-id="6950f-1237">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1237">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1238">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1238">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-1239">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1239">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="6950f-1240">Substituer <xref:System.Windows.UIElement.OnMouseDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1240">Override <xref:System.Windows.UIElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1241">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.MouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1241">Identifies the <see cref="E:System.Windows.UIElement.MouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1242">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1242">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1243">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1243">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1244">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1244">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1245">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1245">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1246">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1246">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1247">Se produit lorsque le pointeur de la souris entre dans les limites de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1247">Occurs when the mouse pointer enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1248"><xref:System.Windows.UIElement.MouseEnter> est une qui utilise l’événement directement la gestion des stratégie de routage.</span><span class="sxs-lookup"><span data-stu-id="6950f-1248"><xref:System.Windows.UIElement.MouseEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="6950f-1249">Les événements routés directs ne sont pas déclenchés sur un itinéraire. au lieu de cela, ils sont gérés dans le même élément dans lequel ils sont déclenchés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1249">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="6950f-1250">Toutefois, ils activent d’autres aspects du comportement de l’événement routé, telles que les déclencheurs d’événements dans les styles.</span><span class="sxs-lookup"><span data-stu-id="6950f-1250">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="6950f-1251">Bien que <xref:System.Windows.UIElement.MouseEnter> effectue le suivi lorsque le pointeur de la souris entre dans les limites d’un élément, cet événement plus signale littéralement qui le <xref:System.Windows.UIElement.IsMouseOver%2A> valeur de propriété a été modifiée à partir de `false` à `true` sur cet élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-1251">Although <xref:System.Windows.UIElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="6950f-1252">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.MouseEnter> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-1252">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-1253">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.MouseEnter> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1253">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-1254">A <xref:System.Windows.Controls.Button> (ou n’importe quel <xref:System.Windows.Controls.Primitives.ButtonBase> classe dérivée) dispose de gestion native pour un <xref:System.Windows.UIElement.KeyDown> événement lorsque le bouton est activé et que la touche enfoncée est la barre d’espace.</span><span class="sxs-lookup"><span data-stu-id="6950f-1254">A <xref:System.Windows.Controls.Button> (or any <xref:System.Windows.Controls.Primitives.ButtonBase> derived class) has native handling for a <xref:System.Windows.UIElement.KeyDown> event when the button has focus, and the pressed key is the space bar.</span></span> <span data-ttu-id="6950f-1255">La gestion native déclenche le <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement avec le bouton de la source et capture également la souris, même si le pointeur de souris n’apparaît pas à déplacer.</span><span class="sxs-lookup"><span data-stu-id="6950f-1255">The native handling raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event with the button as the source, and also captures the mouse, even though the mouse pointer does not appear to move.</span></span> <span data-ttu-id="6950f-1256">À la suite de la capture de la souris, un <xref:System.Windows.UIElement.MouseEnter> est également déclenché avec le bouton comme source.</span><span class="sxs-lookup"><span data-stu-id="6950f-1256">As a result of the mouse capture, a <xref:System.Windows.UIElement.MouseEnter> event is also raised with the button as the source.</span></span> <span data-ttu-id="6950f-1257">En général, si un élément capture la souris, puis <xref:System.Windows.UIElement.MouseEnter> est déclenché, ainsi que <xref:System.Windows.UIElement.GotMouseCapture> et éventuellement d’autres événements propres au contrôle.</span><span class="sxs-lookup"><span data-stu-id="6950f-1257">In general, if an element captures the mouse, then <xref:System.Windows.UIElement.MouseEnter> is raised, as well as <xref:System.Windows.UIElement.GotMouseCapture> and possibly other control-specific events.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1258">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1258">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1259">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1259">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseEnterEvent>|  
|<span data-ttu-id="6950f-1260">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1260">Routing strategy</span></span>|<span data-ttu-id="6950f-1261">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-1261">Direct</span></span>|  
|<span data-ttu-id="6950f-1262">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1262">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="6950f-1263">Substituer <xref:System.Windows.UIElement.OnMouseEnter%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1263">Override <xref:System.Windows.UIElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1264">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.MouseEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1264">Identifies the <see cref="E:System.Windows.UIElement.MouseEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1265">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1265">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1266">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1266">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1267">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1267">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1268">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1268">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1269">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1269">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1270">Se produit lorsque le pointeur de la souris quitte les limites de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1270">Occurs when the mouse pointer leaves the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1271"><xref:System.Windows.UIElement.MouseLeave> est une qui utilise l’événement directement la gestion des stratégie de routage.</span><span class="sxs-lookup"><span data-stu-id="6950f-1271"><xref:System.Windows.UIElement.MouseLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="6950f-1272">Les événements routés directs ne sont pas déclenchés sur un itinéraire. au lieu de cela, ils sont gérés dans le même élément dans lequel ils sont déclenchés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1272">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="6950f-1273">Toutefois, ils activent d’autres aspects du comportement de l’événement routé, telles que les déclencheurs d’événements dans les styles.</span><span class="sxs-lookup"><span data-stu-id="6950f-1273">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="6950f-1274">Bien que <xref:System.Windows.UIElement.MouseLeave> littéralement, effectue le suivi lorsque la souris quitte un élément, cet événement plus signale que le <xref:System.Windows.UIElement.IsMouseOver%2A> valeur de propriété a été modifiée à partir de `true` à `false` sur cet élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-1274">Although <xref:System.Windows.UIElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="6950f-1275">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.MouseLeave> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-1275">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-1276">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.MouseLeave> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1276">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1277">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1277">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1278">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1278">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeaveEvent>|  
|<span data-ttu-id="6950f-1279">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1279">Routing strategy</span></span>|<span data-ttu-id="6950f-1280">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-1280">Direct</span></span>|  
|<span data-ttu-id="6950f-1281">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1281">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="6950f-1282">Substituer <xref:System.Windows.UIElement.OnMouseLeave%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1282">Override <xref:System.Windows.UIElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1283">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.MouseLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1283">Identifies the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1284">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1284">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1285">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1285">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1286">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1286">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1287">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1287">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1288">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1288">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1289">Se produit lorsque le bouton gauche de la souris est enfoncé alors que le pointeur est sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1289">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1290">Bien que cela semble suivre un itinéraire de propagation dans une arborescence d’éléments, il est en fait un événement routé direct qui est déclenché à plusieurs reprises dans l’arborescence d’éléments, chacun <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1290">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-1291">Cet événement est parmi plusieurs événements associés qui signalent les caractéristiques de sous-jacent pour le bouton de la souris <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> événement, qui est un événement attaché traité par chaque élément le long d’un itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1291">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="6950f-1292">Les données de cet événement exposent les données d’événement de l’objet sous-jacent <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1292">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="6950f-1293">Si cet événement est marqué comme géré sur l’itinéraire, le bouton de la souris spécifiques sont toujours déclenchés ; Toutefois, les gestionnaires des événements spécifiques de bouton de la souris doivent être ajoutés en appelant explicitement <xref:System.Windows.UIElement.AddHandler%2A>, avec l’option pour gérer les événements qui sont déjà marqués comme gérés, afin d’être des écouteurs à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1293">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="6950f-1294">Si vous marquez <xref:System.Windows.UIElement.MouseLeftButtonDown> gérée, vous marquez essentiellement <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> prise en charge pour toutes les autres écouteurs sur l’itinéraire et tous les événements associés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1294">If you mark <xref:System.Windows.UIElement.MouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="6950f-1295">Cela peut inclure les événements du Gestionnaire de la classe générée comme <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1295">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="6950f-1296">Point de vue conceptuel, considérez cet événement (et d’autres événements de bouton de la souris sur <xref:System.Windows.UIElement>) pour être une « service » de la souris (avec la définition de service fournie par le <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="6950f-1296">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="6950f-1297">L’événement ajoute la commodité de ne nécessitant ne pas de vérifier les États de bouton de souris (gauche à droite, haut-bas) des événements de souris d’origine dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1297">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="6950f-1298">Pour des scénarios plus avancés, tels que la vérification des États de boutons non standard, vous devrez peut-être utiliser le [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sur la <xref:System.Windows.Input.Mouse> classe plutôt que ceux sur <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1298">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6950f-1299">Certaines classes de contrôle peuvent avoir inhérents à la gestion de classe pour les événements de bouton de souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-1299">Some control classes might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="6950f-1300">Le bouton gauche de la souris vers le bas des événements est l’événement le plus probable pour que la gestion de classe dans un contrôle.</span><span class="sxs-lookup"><span data-stu-id="6950f-1300">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="6950f-1301">La fréquence de gestion de classe marque sous-jacent <xref:System.Windows.Input.Mouse> événement comme géré de la classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1301">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="6950f-1302">Une fois que l’événement est marqué comme géré, les autres gestionnaires d’instance associés à cet élément ne sont généralement pas déclenchés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1302">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="6950f-1303">Tous les autres gestionnaires instance ou la classe qui sont attachés à des éléments dans la direction de propagation vers la racine dans l’arborescence de l’interface utilisateur sont également généralement pas déclenchés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1303">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="6950f-1304">Vous pouvez résoudre le problème qui est décrit dans le paragraphe Important ci-dessus et recevez toujours <xref:System.Windows.UIElement.MouseLeftButtonDown> événements pour le bouton gauche de la souris sur une classe dérivée qui a l’aide d’une de ces solutions de gestion de classe :</span><span class="sxs-lookup"><span data-stu-id="6950f-1304">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="6950f-1305">Attacher des gestionnaires pour les <xref:System.Windows.UIElement.PreviewMouseDown> événement, qui n’est pas marqué comme géré par les contrôles.</span><span class="sxs-lookup"><span data-stu-id="6950f-1305">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="6950f-1306">Notez que, car il s’agit d’un événement d’aperçu, l’itinéraire démarre à la racine et au contrôle des tunnels.</span><span class="sxs-lookup"><span data-stu-id="6950f-1306">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="6950f-1307">Enregistrez un gestionnaire sur le contrôle en appelant <xref:System.Windows.UIElement.AddHandler%2A> et en choisissant l’option de signature qui permet aux gestionnaires d’écouter des événements même s’ils sont déjà marqués comme gérés dans les données de l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1307">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1308">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1308">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1309">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1309">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="6950f-1310">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1310">Routing strategy</span></span>|<span data-ttu-id="6950f-1311">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-1311">Direct</span></span>|  
|<span data-ttu-id="6950f-1312">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1312">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-1313">Substituer <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1313">Override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1314">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1314">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1315">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1315">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1316">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1316">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1317">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1317">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1318">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1318">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1319">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1319">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1320">Se produit lorsque le bouton gauche de la souris est relâché alors que le pointeur est sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1320">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1321">Bien que cela semble suivre un itinéraire de propagation dans une arborescence d’éléments, il est en fait un événement routé direct qui est déclenché à plusieurs reprises dans l’arborescence d’éléments, chacun <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1321">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-1322">Cet événement est parmi plusieurs événements associés qui signalent les caractéristiques de sous-jacent pour le bouton de la souris <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> événement, qui est un événement attaché traité par chaque élément le long d’un itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1322">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="6950f-1323">Les données de cet événement exposent les données d’événement de l’objet sous-jacent <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1323">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="6950f-1324">Si cet événement est marqué comme géré sur l’itinéraire, le bouton de la souris spécifiques sont toujours déclenchés ; Toutefois, les gestionnaires des événements spécifiques de bouton de la souris doivent être ajoutés en appelant explicitement <xref:System.Windows.UIElement.AddHandler%2A>, avec l’option pour gérer les événements qui sont déjà marqués comme gérés, afin d’être des écouteurs à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1324">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="6950f-1325">Si vous marquez <xref:System.Windows.UIElement.MouseLeftButtonUp> gérée, vous marquez essentiellement <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> prise en charge pour toutes les autres écouteurs sur l’itinéraire et tous les événements associés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1325">If you mark <xref:System.Windows.UIElement.MouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="6950f-1326">Point de vue conceptuel, considérez cet événement (et d’autres événements de bouton de la souris sur <xref:System.Windows.UIElement>) pour être une « service » de la souris (avec la définition de service fournie par le <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="6950f-1326">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="6950f-1327">L’événement ajoute la commodité de ne nécessitant ne pas de vérifier les États de bouton de souris (gauche à droite, haut-bas) des événements de souris d’origine dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1327">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="6950f-1328">Pour des scénarios plus avancés, tels que la vérification des États de boutons non standard, vous devrez peut-être utiliser le [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sur la <xref:System.Windows.Input.Mouse> classe plutôt que ceux sur <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1328">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1329">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1330">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1330">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="6950f-1331">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1331">Routing strategy</span></span>|<span data-ttu-id="6950f-1332">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-1332">Direct</span></span>|  
|<span data-ttu-id="6950f-1333">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1333">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-1334">Substituer <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1334">Override <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1335">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1335">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1336">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1336">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1337">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1337">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1338">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1338">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1339">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1339">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1340">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1340">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1341">Se produit lorsque le pointeur de la souris est déplacé alors qu'il se trouve sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1341">Occurs when the mouse pointer moves while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1342">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.MouseMove> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-1342">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-1343">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.MouseMove> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1343">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1344">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1344">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1345">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1345">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseMoveEvent>|  
|<span data-ttu-id="6950f-1346">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1346">Routing strategy</span></span>|<span data-ttu-id="6950f-1347">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1347">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1348">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1348">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="6950f-1349">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1349">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="6950f-1350">Substituer <xref:System.Windows.UIElement.OnMouseMove%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1350">Override <xref:System.Windows.UIElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1351">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.MouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1351">Identifies the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1352">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1352">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1353">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1353">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1354">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1354">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1355">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1355">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1356">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1356">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1357">Se produit lorsque le bouton droit de la souris est enfoncé avec le pointeur de la souris sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1357">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1358">Bien que cela semble suivre un itinéraire de propagation dans une arborescence d’éléments, il est en fait un événement routé direct qui est déclenché à plusieurs reprises dans l’arborescence d’éléments, chacun <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1358">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-1359">Cet événement est parmi plusieurs événements associés qui signalent les caractéristiques de sous-jacent pour le bouton de la souris <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> événement, qui est un événement attaché traité par chaque élément le long d’un itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1359">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="6950f-1360">Les données de cet événement exposent les données d’événement de l’objet sous-jacent <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1360">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="6950f-1361">Si cet événement est marqué comme géré sur l’itinéraire, le bouton de la souris spécifiques sont toujours déclenchés ; Toutefois, les gestionnaires des événements spécifiques de bouton de la souris doivent être ajoutés en appelant explicitement <xref:System.Windows.UIElement.AddHandler%2A>, avec l’option pour gérer les événements qui sont déjà marqués comme gérés, afin d’être des écouteurs à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1361">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="6950f-1362">Si vous marquez <xref:System.Windows.UIElement.MouseRightButtonDown> gérée, vous marquez essentiellement <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> prise en charge pour toutes les autres écouteurs sur l’itinéraire et tous les événements associés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1362">If you mark <xref:System.Windows.UIElement.MouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="6950f-1363">Cela peut inclure les événements du Gestionnaire de la classe générée comme <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1363">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="6950f-1364">Point de vue conceptuel, considérez cet événement (et d’autres événements de bouton de la souris sur <xref:System.Windows.UIElement>) pour être une « service » de la souris (avec la définition de service fournie par le <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="6950f-1364">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="6950f-1365">L’événement ajoute la commodité de ne nécessitant ne pas de vérifier les États de bouton de souris (gauche à droite, haut-bas) des événements de souris d’origine dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1365">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="6950f-1366">Pour des scénarios plus avancés, tels que la vérification des États de boutons non standard, vous devrez peut-être utiliser le [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sur la <xref:System.Windows.Input.Mouse> classe plutôt que ceux sur <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1366">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-1367">Les événements de souris avec le bouton droit ont fréquemment une gestion native dans les scénarios d’application.</span><span class="sxs-lookup"><span data-stu-id="6950f-1367">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="6950f-1368">Par exemple, un bouton droit de la souris vers le bas peut afficher un menu contextuel.</span><span class="sxs-lookup"><span data-stu-id="6950f-1368">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="6950f-1369">Consultez [vue d’ensemble de ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-1369">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1370">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1370">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1371">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1371">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="6950f-1372">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1372">Routing strategy</span></span>|<span data-ttu-id="6950f-1373">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-1373">Direct</span></span>|  
|<span data-ttu-id="6950f-1374">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1374">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-1375">Substituer <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1375">Override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1376">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.MouseRightButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1376">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1377">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1377">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1378">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1378">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1379">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1379">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1380">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1380">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1381">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1381">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1382">Se produit lorsque le bouton droit de la souris est relâché avec le pointeur de la souris sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1382">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1383">Bien que cela semble suivre un itinéraire de propagation dans une arborescence d’éléments, il est en fait un événement routé direct qui est déclenché à plusieurs reprises dans l’arborescence d’éléments, chacun <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1383">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-1384">Cet événement est parmi plusieurs événements associés qui signalent les caractéristiques de sous-jacent pour le bouton de la souris <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> événement, qui est un événement attaché traité par chaque élément le long d’un itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1384">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="6950f-1385">Les données de cet événement exposent les données d’événement de l’objet sous-jacent <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1385">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="6950f-1386">Si cet événement est marqué comme géré sur l’itinéraire, le bouton de la souris spécifiques sont toujours déclenchés ; Toutefois, les gestionnaires des événements spécifiques de bouton de la souris doivent être ajoutés en appelant explicitement <xref:System.Windows.UIElement.AddHandler%2A>, avec l’option pour gérer les événements qui sont déjà marqués comme gérés, afin d’être des écouteurs à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1386">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="6950f-1387">Si vous marquez <xref:System.Windows.UIElement.MouseRightButtonUp> gérée, vous marquez essentiellement <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> prise en charge pour toutes les autres écouteurs sur l’itinéraire et tous les événements associés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1387">If you mark <xref:System.Windows.UIElement.MouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="6950f-1388">Point de vue conceptuel, considérez cet événement (et d’autres événements de bouton de la souris sur <xref:System.Windows.UIElement>) pour être une « service » de la souris (avec la définition de service fournie par le <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="6950f-1388">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="6950f-1389">L’événement ajoute la commodité de ne nécessitant ne pas de vérifier les États de bouton de souris (gauche à droite, haut-bas) des événements de souris d’origine dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1389">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="6950f-1390">Pour des scénarios plus avancés, tels que la vérification des États de boutons non standard, vous devrez peut-être utiliser le [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sur la <xref:System.Windows.Input.Mouse> classe plutôt que ceux sur <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1390">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1391">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1391">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1392">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1392">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="6950f-1393">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1393">Routing strategy</span></span>|<span data-ttu-id="6950f-1394">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-1394">Direct</span></span>|  
|<span data-ttu-id="6950f-1395">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1395">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-1396">Substituer <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1396">Override <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1397">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.MouseRightButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1397">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1398">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1398">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1399">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1399">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1400">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1400">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1401">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1401">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1402">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1402">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1403">Se produit lorsqu’un bouton de la souris est relâché au-dessus de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1403">Occurs when any mouse button is released over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1404">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.MouseUp> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-1404">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-1405">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.MouseUp> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1405">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-1406">Le <xref:System.Windows.UIElement.MouseUp> événement est déclenché souvent avec <xref:System.Windows.UIElement.MouseLeftButtonUp> ou <xref:System.Windows.UIElement.MouseRightButtonUp>, ce qui correspond à une version de l’un des deux boutons de souris standard.</span><span class="sxs-lookup"><span data-stu-id="6950f-1406">The <xref:System.Windows.UIElement.MouseUp> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="6950f-1407"><xref:System.Windows.UIElement.MouseLeftButtonUp> et <xref:System.Windows.UIElement.MouseRightButtonUp> sont également des événements routés, mais ils sont les événements routés directs, et l’événement spécifique au bouton approprié est déclenché lorsque la <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> événement atteint cet élément le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1407"><xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="6950f-1408">Consultez la section Notes pour <xref:System.Windows.UIElement.MouseLeftButtonUp> ou <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1408">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1409">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1409">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1410">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1410">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseUpEvent>|  
|<span data-ttu-id="6950f-1411">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1411">Routing strategy</span></span>|<span data-ttu-id="6950f-1412">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1412">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1413">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1413">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-1414">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1414">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="6950f-1415">Substituer <xref:System.Windows.UIElement.OnMouseUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1415">Override <xref:System.Windows.UIElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1416">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.MouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1416">Identifies the <see cref="E:System.Windows.UIElement.MouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1417">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1417">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1418">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1418">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1419">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1419">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1420">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1420">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1421">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1421">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1422">Se produit lorsque l'utilisateur utilise la roulette de la souris avec le pointeur de la souris sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1422">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1423">Capture le focus ou de la souris sont prioritaires sur les où se trouve le pointeur de souris ; Par conséquent, si vous recevez le <xref:System.Windows.UIElement.MouseWheel> événement à partir d’un élément ayant le focus ou la capture, le pointeur de la souris peut en fait être sur un autre élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-1423">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.UIElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="6950f-1424">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.MouseWheel> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-1424">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseWheel> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-1425">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.MouseWheel> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1425">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-1426">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-1426">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-1427">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-1427">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseWheelEvent>|  
|<span data-ttu-id="6950f-1428">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-1428">Routing strategy</span></span>|<span data-ttu-id="6950f-1429">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-1429">Bubbling</span></span>|  
|<span data-ttu-id="6950f-1430">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-1430">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="6950f-1431">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1431">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="6950f-1432">Substituer <xref:System.Windows.UIElement.OnMouseWheel%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-1432">Override <xref:System.Windows.UIElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1433">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.MouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1433">Identifies the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1434">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-1434">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-1435">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1435">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-1436">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1436">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-1437">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1437">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-1438">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1438">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="6950f-1439">Requête de parcours qui contient une propriété spécifiant un mode pour parcourir les éléments selon un ordre de tabulation établi ou un sens de déplacement sur le plan visuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1439">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1440">Essaie de déplacer le focus de cet élément vers un autre élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1440">Attempts to move focus from this element to another element.</span>
          </span>
          <span data-ttu-id="6950f-1441">Le sens de déplacement du focus est indiqué par un sens guide, interprété dans l'agencement du parent visuel pour cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1441">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-1442">
            <see langword="true" /> si le parcours demandé a été effectué ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1442">
              <see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1443">Vérifiez la valeur de retour de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6950f-1443">Make sure you check the return value of this method.</span></span> <span data-ttu-id="6950f-1444">La valeur de retour `false` peut être retournée si le parcours s’exécute sur un taquet de tabulation qui est défini par la composition d’un contrôle, et la requête de parcours n’a pas demandé à encapsuler.</span><span class="sxs-lookup"><span data-stu-id="6950f-1444">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1445">Données de l'événement de touche d'accès rapide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1445">The event data to the access key event.</span>
          </span>
          <span data-ttu-id="6950f-1446">Les données d'événement signalent la touche qui a été appelée et indiquent si l'objet <see cref="T:System.Windows.Input.AccessKeyManager" /> qui contrôle que l'envoi de ces événements a également envoyé cet appel de touche d'accès rapide à d'autres éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1446">The event data reports which key was invoked, and indicate whether the <see cref="T:System.Windows.Input.AccessKeyManager" /> object that controls the sending of these events also sent this access key invocation to other elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1447">Fournit la gestion de classe dans les cas où une touche d'accès rapide explicite pour cet élément est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1447">Provides class handling for when an access key that is meaningful for this element is invoked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1448">Il n’existe aucun événement AccessKey dans la <xref:System.Windows.UIElement> classe ou un autre emplacement, vous pouvez déclencher ou attachez des gestionnaires pour.</span><span class="sxs-lookup"><span data-stu-id="6950f-1448">There is no actual AccessKey event in the <xref:System.Windows.UIElement> class, or elsewhere, which you can raise or attach handlers for.</span></span> <span data-ttu-id="6950f-1449">Au lieu de cela, l’événement provient d’une classe de gestionnaire dédiée, <xref:System.Windows.Input.AccessKeyManager>, qui post-traite toutes les entrées pour rechercher des clés d’accès qui s’appliquent à l’ensemble du modèle d’entrée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1449">Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-1450">L’implémentation par défaut de cette méthode dans <see cref="T:System.Windows.UIElement" /> définit le focus clavier sur cet élément (en appelant <see cref="M:System.Windows.UIElement.Focus" />).</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1450">The default implementation of this method in <see cref="T:System.Windows.UIElement" /> sets keyboard focus to this element (by calling <see cref="M:System.Windows.UIElement.Focus" />).</span>
            </span>
            <span data-ttu-id="6950f-1451">Ce comportement doivent se propage à toutes les implémentations s’ils sont peut être actif, car il s’agit d’un comportement attendu pour les scénarios d’accessibilité.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1451">Implementations should perpetuate this behavior if they are focusable, because it is an expected behavior for accessibility scenarios.</span>
            </span>
            <span data-ttu-id="6950f-1452">Notez que l’implémentation de base ne fait rien avec les données d’événement passé et ne déclenche aucun événement supplémentaire ; Elle définit uniquement le focus.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1452">Note that the base implementation does nothing with the passed event data and raises no further event; it just sets the focus.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="6950f-1453">Élément enfant faisant l'objet du redimensionnement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1453">The child element that is being resized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1454">Prend en charge les comportements de disposition lorsqu'un élément enfant est redimensionné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1454">Supports layout behavior when a child element is resized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1455">Cette méthode n’est généralement pas appelée par votre code d’application.</span><span class="sxs-lookup"><span data-stu-id="6950f-1455">This method is typically not called by your application code.</span></span> <span data-ttu-id="6950f-1456">Il est exposé pour cet élément dérivé les classes peuvent effectuer plus de vérifications sur leur état de disposition éventuellement non valide.</span><span class="sxs-lookup"><span data-stu-id="6950f-1456">It is exposed so that derived element classes can make further checks on their own possibly invalid layout state.</span></span> <span data-ttu-id="6950f-1457">Classes peuvent également tenter des optimisations pour réduire le temps de traitement pour une passe de disposition en fonction des modifications de taille aux éléments enfants.</span><span class="sxs-lookup"><span data-stu-id="6950f-1457">Classes could also attempt optimizations to minimize the processing time for a layout pass based on size changes to child elements.</span></span> <span data-ttu-id="6950f-1458">Un exemple élément classe dérivée qui implémente <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> est la <xref:System.Windows.Controls.Grid> contrôle.</span><span class="sxs-lookup"><span data-stu-id="6950f-1458">An example derived element class that implements <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> is the <xref:System.Windows.Controls.Grid> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-1459">Le <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> méthode a l’implémentation par défaut de l’appel de <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> sur lui-même.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1459">The <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> method has the default implementation of calling <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> on itself.</span>
            </span>
            <span data-ttu-id="6950f-1460">Une implémentation classique serait : effectuez l’optimisation quelconque que votre élément prend en charge et appelez ensuite la base <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> d’au moins une des branches de code (celui qui indique l’état « modifié » par votre propre logique de mise en cache de mesure).</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1460">A typical implementation would be: do whatever optimization your own element supports, and then typically call base <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> from at least one of the code branches (the one that indicated "dirty" state per your own measure caching logic).</span>
            </span>
            <span data-ttu-id="6950f-1461">Cette méthode est appelée uniquement dans le traitement de disposition si l’enfant elle-même qui a créé les modifications de taille.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1461">This method is only called in the layout processing if it was the child itself that originated the size changes.</span>
            </span>
            <span data-ttu-id="6950f-1462">Sinon, si l’élément parent lance le <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> passer, selon les règles de système de disposition, le parent est un nouveau calcul de disposition déjà.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1462">Otherwise, if the parent element initiates the <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> pass, according to the layout system rules, the parent is recalculating layout already.</span>
            </span>
            <span data-ttu-id="6950f-1463">Le système de disposition traite la mise en page dans l’ordre d’enfant-parent, aucun retour au redimensionnement d’élément parent à partir des appels de disposition d’élément enfant n’est donc nécessaire.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1463">The layout system processes layout in the order of child-to-parent, so no return to parent element sizing from the child element layout calls is necessary.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-1464">Retourne des implémentations <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> spécifiques aux classes pour l'infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1464">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-1465">Implémentation de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> spécifique au type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1465">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-1466">L’implémentation de cette méthode est généralement d’appeler le constructeur d’un spécifique <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implémentation et renvoyer la valeur de retour.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1466">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span>
            </span>
            <span data-ttu-id="6950f-1467">Tous les <see cref="T:System.Windows.UIElement" /> classes dérivées doivent implémenter cette méthode afin de fournir leurs propres <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> les implémentations du [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1467">All <see cref="T:System.Windows.UIElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span>
            </span>
            <span data-ttu-id="6950f-1468">Pour plus d’informations sur l’implémentation de ce modèle, consultez <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1468">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1469">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1469">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1470">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.DragEnter" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1470">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1471">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1471">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1472">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1472">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1473">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1473">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1474">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1474">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1475">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1475">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1476">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1476">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1477">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1477">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1478">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1478">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1479">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1479">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1480">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1480">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1481">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1481">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1482">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.DragLeave" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1482">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1483">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1483">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1484">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1484">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1485">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1485">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1486">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1486">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1487">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1487">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1488">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1488">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1489">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1489">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1490">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1490">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1491">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1491">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1492">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1492">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1493">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1493">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1494">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.DragOver" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1494">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1495">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1495">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1496">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1496">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1497">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1497">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1498">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1498">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1499">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1499">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1500">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1500">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1501">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1501">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1502">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1502">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1503">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1503">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1504">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1504">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1505">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1505">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1506">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.DragEnter" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1506">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1507">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1507">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1508">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1508">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1509">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1509">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1510">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1510">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1511">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1511">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1512">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1512">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1513">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1513">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1514">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1514">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1515">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1515">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1516">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1516">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1517">
            <see cref="T:System.Windows.GiveFeedbackEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1517">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1518">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.GiveFeedback" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1518">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1519">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1519">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1520">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1520">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1521">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1521">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1522">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1522">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1523">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1523">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1524">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1524">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1525">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1525">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1526">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1526">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1527">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1527">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1528">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1528">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1529">
            <see cref="T:System.Windows.RoutedEventArgs" /> qui contient les données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1529">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="6950f-1530">Les données de cet événement doivent contenir l'identificateur de l'événement <see cref="E:System.Windows.UIElement.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1530">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1531">Déclenche l’événement routé <see cref="E:System.Windows.UIElement.GotFocus" /> en utilisant les données d’événement fournies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1531">Raises the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event by using the event data provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1532">Cette méthode, bien que virtuelle, a une implémentation par défaut qui déclenche l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1532">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="6950f-1533">Cela sur \* implémentation de méthode est conçue pour déclencher l’événement, et ce même implémentation de méthode est appelée en interne pour déclencher l’événement lorsque la <xref:System.Windows.UIElement.IsFocused%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="6950f-1533">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="6950f-1534">Le <xref:System.Windows.UIElement.OnGotFocus%2A> implémentation diffère d’un autre [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] sur \* implémentations qui seulement fournissent un moyen pratique pour ajouter la gestion de classe pour cet événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1534">The <xref:System.Windows.UIElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-1535">Sauf si vous avez un besoin délibéré et exceptionnel de ne pas déclencher les événements de focus, assurez-vous que votre implémentation appelle l’implémentation de base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1535">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span>
            </span>
            <span data-ttu-id="6950f-1536">Dans le cas contraire, le <see cref="E:System.Windows.UIElement.GotFocus" /> événement n’est pas déclenché lors des opérations utilisateur classiques qui normalement défini le focus sur cet élément.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1536">Otherwise, the <see cref="E:System.Windows.UIElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span>
            </span>
            <span data-ttu-id="6950f-1537">Si vous n’envisagez pas de votre élément soit actif, vous pouvez empêcher l’élément en affectant la valeur <see cref="P:System.Windows.UIElement.Focusable" /> à <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1537">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1538">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1538">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1539">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1539">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1540">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1540">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1541">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1541">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1542">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1542">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1543">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1543">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1544">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1544">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1545">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1545">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1546">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1546">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1547">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1547">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1548">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1548">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1549">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1549">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1550">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1550">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1551">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1551">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1552">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1552">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1553">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1553">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1554">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1554">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1555">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1555">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1556">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1556">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1557">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1557">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1558">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1558">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1559">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1559">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1560">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1560">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1561">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1561">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1562">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1562">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1563">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1563">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1564">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1564">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1565">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1565">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1566">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1566">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1567">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1567">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1568">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1568">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1569">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1569">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1570">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1570">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1571">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1571">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1572">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1572">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1573">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1573">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1574">
            <see cref="T:System.Windows.Input.TouchEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1574">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1575">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.GotTouchCapture" /> qui se produit lorsqu'une pression tactile est capturée pour cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1575">Provides class handling for the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1576">Le <xref:System.Windows.UIElement.OnGotTouchCapture%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1576">The <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-1577">Substituer <xref:System.Windows.UIElement.OnGotTouchCapture%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.GotTouchCapture> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1577">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.GotTouchCapture> event.</span></span> <span data-ttu-id="6950f-1578">Veillez à appeler la classe de base <xref:System.Windows.UIElement.OnGotTouchCapture%2A> méthode afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1578">Be sure to call the base class’s <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1579">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1579">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1580">Appelé lorsqu'un événement <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> non géré est déclenché sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1580">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="6950f-1581">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1581">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1582">Cette méthode virtuelle est déclenchée lorsque la valeur de la <xref:System.Windows.UIElement.IsKeyboardFocused%2A> les modifications de propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1582">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="6950f-1583">La méthode virtuelle est déclenchée en premier et peut manipuler les données d’événements si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1583">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="6950f-1584">Le <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> événement est déclenché avec cette même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1584">Then the <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="6950f-1585">Notez que le <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> événement n’est pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1585">Notice that the  <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="6950f-1586">Par conséquent, vous ne pouvez pas le marquer comme géré dans le Gestionnaire de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1586">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="6950f-1587">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1587">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1588">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1588">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="6950f-1589">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-1589">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1590">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1590">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1591">Appelé juste avant que l'événement <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> soit déclenché par cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1591">Invoked just before the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span>
          </span>
          <span data-ttu-id="6950f-1592">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1592">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1593">Cette méthode virtuelle est déclenchée lorsque la valeur de la <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> les modifications de propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1593">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> dependency property changes .</span></span> <span data-ttu-id="6950f-1594">La méthode virtuelle est déclenchée en premier et peut manipuler les données d’événements si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1594">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="6950f-1595">Le <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> événement est déclenché avec cette même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1595">Then the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="6950f-1596">Notez que le <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> événement n’est pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1596">Notice that the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="6950f-1597">Par conséquent, vous ne pouvez pas le marquer comme géré dans le Gestionnaire de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1597">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="6950f-1598">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1598">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1599">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1599">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="6950f-1600">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-1600">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1601">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1601">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1602">Appelé lorsqu'un événement <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> non géré est déclenché sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1602">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="6950f-1603">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1603">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1604">Cette méthode virtuelle est déclenchée lorsque la valeur de la <xref:System.Windows.UIElement.IsMouseCaptured%2A> propriété de dépendance change sa valeur.</span><span class="sxs-lookup"><span data-stu-id="6950f-1604">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="6950f-1605">La méthode virtuelle est déclenchée en premier et peut manipuler les données d’événements si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1605">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="6950f-1606">Le <xref:System.Windows.UIElement.IsMouseCapturedChanged> événement est déclenché avec cette même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1606">Then the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="6950f-1607">Notez que le <xref:System.Windows.UIElement.IsMouseCapturedChanged> événement n’est pas un événement routé. Par conséquent, vous ne pouvez pas le marquer comme géré dans le Gestionnaire de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1607">Notice that the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is not a routed event; Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="6950f-1608">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1608">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1609">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1609">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="6950f-1610">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-1610">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1611">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1611">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1612">Appelé lorsqu'un événement <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> non géré est déclenché sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1612">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="6950f-1613">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1613">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-1614">Cette méthode virtuelle est déclenchée lorsque la valeur de la <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> propriété de dépendance change sa valeur.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1614">This virtual method is raised when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property changes its value.</span>
            </span>
            <span data-ttu-id="6950f-1615">La méthode virtuelle est déclenchée en premier et peut manipuler les données d’événements si nécessaire.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1615">The virtual method is raised first and can manipulate the event data as necessary.</span>
            </span>
            <span data-ttu-id="6950f-1616">Le <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> événement est déclenché avec cette même instance de données d’événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1616">Then the <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span>
            </span>
            <span data-ttu-id="6950f-1617">Notez que l’événement n’est pas un événement routé. Par conséquent, vous ne pouvez pas le marquer comme géré dans le Gestionnaire de classe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1617">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span>
            </span>
            <span data-ttu-id="6950f-1618">Cette méthode n’a aucune implémentation par défaut.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1618">This method has no default implementation.</span>
            </span>
            <span data-ttu-id="6950f-1619">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1619">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span>
            </span>
            <span data-ttu-id="6950f-1620">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1620">You may call base either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1621">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1621">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1622">Appelé lorsqu'un événement <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> non géré est déclenché sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1622">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="6950f-1623">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1623">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1624">Cette méthode virtuelle est déclenchée lorsque la valeur de la <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> propriété de dépendance change sa valeur.</span><span class="sxs-lookup"><span data-stu-id="6950f-1624">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="6950f-1625">La méthode virtuelle est déclenchée en premier et peut manipuler les données d’événements si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1625">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="6950f-1626">Le <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> événement est déclenché avec cette même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1626">Then the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="6950f-1627">Notez que le <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> événement n’est pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1627">Notice that the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="6950f-1628">Par conséquent, vous ne pouvez pas le marquer comme géré dans le Gestionnaire de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1628">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="6950f-1629">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1629">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1630">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1630">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="6950f-1631">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-1631">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1632">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1632">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1633">Appelé lorsqu'un événement <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> non géré est déclenché sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1633">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="6950f-1634">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1634">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1635">Cette méthode virtuelle est déclenchée lorsque la valeur de la <xref:System.Windows.UIElement.IsStylusCaptured%2A> propriété de dépendance change sa valeur.</span><span class="sxs-lookup"><span data-stu-id="6950f-1635">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="6950f-1636">La méthode virtuelle est déclenchée en premier et peut manipuler les données d’événements si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1636">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="6950f-1637">Le <xref:System.Windows.UIElement.IsStylusCapturedChanged> événement est déclenché avec cette même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1637">Then the <xref:System.Windows.UIElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="6950f-1638">Notez que l’événement n’est pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1638">Notice that the event is not a routed event.</span></span> <span data-ttu-id="6950f-1639">Par conséquent, vous ne pouvez pas le marquer comme géré dans le Gestionnaire de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1639">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="6950f-1640">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1640">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1641">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1641">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="6950f-1642">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-1642">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1643">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1643">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1644">Appelé lorsqu'un événement <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> non géré est déclenché sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1644">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="6950f-1645">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1645">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1646">Cette méthode virtuelle est déclenchée lorsque la valeur de la <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> propriété de dépendance change sa valeur.</span><span class="sxs-lookup"><span data-stu-id="6950f-1646">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="6950f-1647">La méthode virtuelle est déclenchée en premier et peut manipuler les données d’événements si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1647">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="6950f-1648">Le <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> événement est déclenché avec cette même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1648">Then the <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="6950f-1649">Notez que l’événement n’est pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1649">Notice that the event is not a routed event.</span></span> <span data-ttu-id="6950f-1650">Par conséquent, vous ne pouvez pas le marquer comme géré dans le Gestionnaire de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1650">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="6950f-1651">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1651">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1652">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1652">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="6950f-1653">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-1653">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1654">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1654">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1655">Appelé lorsqu'un événement <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> non géré est déclenché sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1655">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="6950f-1656">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1656">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1657">Cette méthode virtuelle est déclenchée lorsque la valeur de la <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> propriété de dépendance change sa valeur.</span><span class="sxs-lookup"><span data-stu-id="6950f-1657">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="6950f-1658">La méthode virtuelle est déclenchée en premier et peut manipuler les données d’événements si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1658">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="6950f-1659">Le <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> événement est déclenché avec cette même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1659">Then the <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="6950f-1660">Notez que l’événement n’est pas un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1660">Notice that the event is not a routed event.</span></span> <span data-ttu-id="6950f-1661">Par conséquent vous ne pouvez pas le marquer comme géré dans le Gestionnaire de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-1661">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="6950f-1662">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1662">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1663">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1663">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="6950f-1664">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-1664">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1665">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1665">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1666">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1666">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1667">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1667">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1668">Séquences de touches sont gérées par un gestionnaire d’entrée dédié.</span><span class="sxs-lookup"><span data-stu-id="6950f-1668">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="6950f-1669">Autres fonctionnalités de programmation qui s’appuient sur des séquences de touches, par exemple, les liaisons d’entrée et de commande, peuvent gérer la séquence de touches avant qu’elle est exposée comme séquence générale.</span><span class="sxs-lookup"><span data-stu-id="6950f-1669">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="6950f-1670">Si ces fonctionnalités d’entrée système marquent l’événement comme géré, puis <xref:System.Windows.UIElement.OnKeyDown%2A> n’est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1670">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="6950f-1671">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1671">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1672">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1672">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1673">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1673">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1674">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1674">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1675">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1675">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1676">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1676">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1677">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1677">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1678">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1678">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1679">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1679">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1680">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1680">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1681">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1681">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1682">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1682">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1683">Séquences de touches sont gérées par un gestionnaire d’entrée dédié.</span><span class="sxs-lookup"><span data-stu-id="6950f-1683">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="6950f-1684">Autres fonctionnalités de programmation qui s’appuient sur des séquences de touches, par exemple, les liaisons d’entrée et de commande, peuvent gérer la séquence de touches avant qu’elle est exposée comme séquence générale.</span><span class="sxs-lookup"><span data-stu-id="6950f-1684">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="6950f-1685">Si ces fonctionnalités d’entrée système marquent l’événement comme géré, puis <xref:System.Windows.UIElement.OnKeyUp%2A> n’est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1685">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="6950f-1686">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1686">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1687">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1687">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1688">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1688">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1689">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1689">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1690">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1690">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1691">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1691">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1692">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1692">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1693">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1693">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1694">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1694">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1695">
            <see cref="T:System.Windows.RoutedEventArgs" /> qui contient les données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1695">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="6950f-1696">Les données de cet événement doivent contenir l'identificateur de l'événement <see cref="E:System.Windows.UIElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1696">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1697">Déclenche l’événement routé <see cref="E:System.Windows.UIElement.LostFocus" /> en utilisant les données d’événement fournies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1697">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event by using the event data that is provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1698">Cette méthode, bien que virtuelle, a une implémentation par défaut qui déclenche l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1698">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="6950f-1699">Cela sur \* implémentation de méthode est conçue pour déclencher l’événement, et ce même implémentation de méthode est appelée en interne pour déclencher l’événement lorsque la <xref:System.Windows.UIElement.IsFocused%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="6950f-1699">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="6950f-1700">Cette implémentation diffère d’un autre [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] sur \* implémentations qui seulement fournissent un moyen pratique pour ajouter la gestion de classe pour cet événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1700">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-1701">Sauf si vous avez un besoin délibéré et exceptionnel de ne pas déclencher les événements de focus, assurez-vous que votre implémentation appelle l’implémentation de base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1701">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span>
            </span>
            <span data-ttu-id="6950f-1702">Dans le cas contraire, le <see cref="E:System.Windows.UIElement.LostFocus" /> événement n’est pas déclenché lors des opérations utilisateur classiques qui normalement défini le focus sur cet élément.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1702">Otherwise, the <see cref="E:System.Windows.UIElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span>
            </span>
            <span data-ttu-id="6950f-1703">Si vous n’envisagez pas de votre élément soit actif, vous pouvez empêcher l’élément en affectant la valeur <see cref="P:System.Windows.UIElement.Focusable" /> à <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-1703">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1704">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> qui contient les données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1704">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1705">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1705">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1706">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1706">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1707">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1707">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1708">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1708">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1709">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1709">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1710">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1710">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1711">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1711">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1712">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1712">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1713">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1713">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1714">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1714">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1715">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1715">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1716">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> qui contient les données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1716">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1717">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1717">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1718">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1718">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1719">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1719">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1720">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1720">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1721">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1721">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1722">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1722">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1723">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1723">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1724">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1724">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1725">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1725">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1726">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1726">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1727">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1727">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1728">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1728">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1729">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1729">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1730">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1730">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1731">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1731">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1732">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1732">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1733">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1733">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1734">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1734">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1735">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1735">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1736">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1736">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1737">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1737">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1738">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1738">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1739">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1739">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1740">
            <see cref="T:System.Windows.Input.TouchEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1740">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1741">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.LostTouchCapture" /> qui se produit lorsque cet élément perd une capture de pression tactile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1741">Provides class handling for the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1742">Le <xref:System.Windows.UIElement.OnLostTouchCapture%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1742">The <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-1743">Substituer <xref:System.Windows.UIElement.OnLostTouchCapture%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.LostTouchCapture> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1743">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.LostTouchCapture> event.</span></span> <span data-ttu-id="6950f-1744">Veillez à appeler la classe de base <xref:System.Windows.UIElement.OnLostTouchCapture%2A> méthode afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1744">Be sure to call the base class’s <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1745">Données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1745">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1746">Appelée lorsque l'événement <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1746">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1747">Le <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1747">The <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-1748">Substituer <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1748">Override <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event.</span></span> <span data-ttu-id="6950f-1749">Veillez à appeler la <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> méthode de la classe de base afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1749">Be sure to call the <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationCompleted (System.Windows.Input.ManipulationCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationCompleted(class System.Windows.Input.ManipulationCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationCompleted (e As ManipulationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationCompleted(System::Windows::Input::ManipulationCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1750">Données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1750">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1751">Appelée lorsque l'événement <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1751">Called when the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1752">Le <xref:System.Windows.UIElement.OnManipulationCompleted%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1752">The <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-1753">Substituer <xref:System.Windows.UIElement.OnManipulationCompleted%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.ManipulationCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1753">Override <xref:System.Windows.UIElement.OnManipulationCompleted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationCompleted> event.</span></span> <span data-ttu-id="6950f-1754">Veillez à appeler la <xref:System.Windows.UIElement.OnManipulationCompleted%2A> méthode de la classe de base afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1754">Be sure to call the <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationDelta">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationDelta (System.Windows.Input.ManipulationDeltaEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationDelta(class System.Windows.Input.ManipulationDeltaEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationDelta (e As ManipulationDeltaEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationDelta(System::Windows::Input::ManipulationDeltaEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationDeltaEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1755">Données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1755">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1756">Appelée lorsque l'événement <see cref="E:System.Windows.UIElement.ManipulationDelta" /> se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1756">Called when the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1757">Le <xref:System.Windows.UIElement.OnManipulationDelta%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1757">The <xref:System.Windows.UIElement.OnManipulationDelta%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-1758">Substituer <xref:System.Windows.UIElement.OnManipulationDelta%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.ManipulationDelta> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1758">Override <xref:System.Windows.UIElement.OnManipulationDelta%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="6950f-1759">Veillez à appeler la <xref:System.Windows.UIElement.OnManipulationDelta%2A> méthode de la classe de base afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1759">Be sure to call the <xref:System.Windows.UIElement.OnManipulationDelta%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationInertiaStarting (System.Windows.Input.ManipulationInertiaStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationInertiaStarting(class System.Windows.Input.ManipulationInertiaStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationInertiaStarting (e As ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationInertiaStarting(System::Windows::Input::ManipulationInertiaStartingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationInertiaStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1760">Données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1760">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1761">Appelée lorsque l'événement <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1761">Called when the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1762">Le <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1762">The <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-1763">Substituer <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.ManipulationInertiaStarting> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1763">Override <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event.</span></span> <span data-ttu-id="6950f-1764">Veillez à appeler la <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> méthode de la classe de base afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1764">Be sure to call the <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted (System.Windows.Input.ManipulationStartedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted(class System.Windows.Input.ManipulationStartedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted (e As ManipulationStartedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted(System::Windows::Input::ManipulationStartedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1765">Données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1765">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1766">Appelée lorsque l'événement <see cref="E:System.Windows.UIElement.ManipulationStarted" /> se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1766">Called when the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1767">Le <xref:System.Windows.UIElement.OnManipulationStarted%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1767">The <xref:System.Windows.UIElement.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-1768">Substituer <xref:System.Windows.UIElement.OnManipulationStarted%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.ManipulationStarted> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1768">Override <xref:System.Windows.UIElement.OnManipulationStarted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarted> event.</span></span> <span data-ttu-id="6950f-1769">Veillez à appeler la <xref:System.Windows.UIElement.OnManipulationStarted%2A> méthode de la classe de base afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1769">Be sure to call the <xref:System.Windows.UIElement.OnManipulationStarted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarting (System.Windows.Input.ManipulationStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarting(class System.Windows.Input.ManipulationStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarting (e As ManipulationStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarting(System::Windows::Input::ManipulationStartingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1770">
            <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1770">A <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1771">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.ManipulationStarting" /> qui se produit lors de la création initiale du processeur de manipulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1771">Provides class handling for the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event that occurs when the manipulation processor is first created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1772">Le <xref:System.Windows.UIElement.OnManipulationStarting%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1772">The <xref:System.Windows.UIElement.OnManipulationStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-1773">Substituer <xref:System.Windows.UIElement.OnManipulationStarting%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.ManipulationStarting> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1773">Override <xref:System.Windows.UIElement.OnManipulationStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span> <span data-ttu-id="6950f-1774">Veillez à appeler la classe de base <xref:System.Windows.UIElement.OnManipulationStarting%2A> méthode afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1774">Be sure to call the base class’s <xref:System.Windows.UIElement.OnManipulationStarting%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1775">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1775">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-1776">Ces données d’événement signalent des informations concernant le bouton de la souris qui a été appuyé et l’état géré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1776">This event data reports details about the mouse button that was pressed and the handled state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1777">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Mouse.MouseDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1777">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1778">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1778">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1779">Les actions de bouton de souris sont également gérées par un gestionnaire d’entrée dédié.</span><span class="sxs-lookup"><span data-stu-id="6950f-1779">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="6950f-1780">Autres fonctionnalités de programmation qui s’appuient sur les actions de bouton de la souris, comme entrée et les liaisons, des commandes peuvent appeler des gestionnaires pour l’action avant qu’elle est exposée comme une action de bouton de souris général.</span><span class="sxs-lookup"><span data-stu-id="6950f-1780">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="6950f-1781">Si ces d’entrée système fonctionnalités marque le <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> événement comme géré, <xref:System.Windows.UIElement.OnMouseDown%2A> n’est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1781">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="6950f-1782">Si vous utilisez ce gestionnaire de classe pour marquer l’événement comme géré, vous risquez d’influer sur les événements suivants : <xref:System.Windows.UIElement.MouseLeftButtonDown> et <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1782">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="6950f-1783">Un de ces événements peuvent être déclenché sur l’élément cible lorsque <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> est reçu.</span><span class="sxs-lookup"><span data-stu-id="6950f-1783">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="6950f-1784">Si vous marquez cet événement comme géré dans la gestion de classe, les sous-événements sont toujours déclenchés ; Toutefois, elles passent de l’état géré dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1784">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="6950f-1785">Si l’événement est géré dans la gestion de classe, les gestionnaires d’instance pour les sous-événements ne sont pas appelés, sauf si vous utilisez explicitement <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> avec `handledEventsToo` `true` pour joindre des gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1785">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="6950f-1786">Gestionnaires de classe sont également pas appelés à moins que ces gestionnaires de classe ont été inscrits avec la <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature avec `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-1786">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="6950f-1787">En gérant <xref:System.Windows.UIElement.OnMouseDown%2A>, sont ce qui implique que la gestion de votre classe pris en compte pour tous les boutons de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-1787">By handling <xref:System.Windows.UIElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="6950f-1788">Ce comportement peut être indésirable ; Par conséquent, soyez prudent lorsque vous utilisez cette méthode virtuelle pour marquer des événements comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1788">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="6950f-1789">Chacun des événements directs spécifique au bouton possède également une machine virtuelle \* méthode ; prendre en compte si la substitution de ces gestionnaires de classe spécifiques au bouton peut être plus approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-1789">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="6950f-1790">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1790">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1791">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1791">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1792">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1792">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1793">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1793">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1794">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1794">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1795">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1795">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1796">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1796">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1797">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1797">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1798">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1798">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1799">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1799">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1800">Méthode appelée quand un événement attaché <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> non géré est déclenché sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1800">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="6950f-1801">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1801">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1802">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1802">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1803">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1803">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="6950f-1804">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-1804">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="6950f-1805">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1805">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1806">Dans ce cas, l’événement correspondant est un événement routé, avec une stratégie de routage direct.</span><span class="sxs-lookup"><span data-stu-id="6950f-1806">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="6950f-1807">Marquer l’événement comme géré est toujours utile pour empêcher que les gestionnaires d’instance habituels (ceux qui ne spécifient pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1807">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1808">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1808">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1809">Méthode appelée quand un événement attaché <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> non géré est déclenché sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1809">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="6950f-1810">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1810">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1811">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1811">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1812">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1812">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="6950f-1813">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-1813">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="6950f-1814">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1814">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1815">Dans ce cas, l’événement correspondant est un événement routé, avec une stratégie de routage direct.</span><span class="sxs-lookup"><span data-stu-id="6950f-1815">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="6950f-1816">Marquer l’événement comme géré est toujours utile pour empêcher que les gestionnaires d’instance habituels (ceux qui ne spécifient pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1816">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1817">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1817">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-1818">Les données d’événement signalent que le bouton gauche de la souris a été enfoncé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1818">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1819">Méthode appelée quand un événement routé <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> non géré est déclenché sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1819">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event is raised on this element.</span>
          </span>
          <span data-ttu-id="6950f-1820">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1820">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1821">Le <xref:System.Windows.UIElement.MouseLeftButtonDown> événement semble suivre un itinéraire de propagation mais réellement se déplace de manière indirecte.</span><span class="sxs-lookup"><span data-stu-id="6950f-1821">The <xref:System.Windows.UIElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="6950f-1822"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> est l’événement sous-jacent qui est routé par propagation et chaque <xref:System.Windows.UIElement> le long de l’événement itinéraire utilise une gestion identique pour déclencher l’événement routé direct <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1822"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="6950f-1823">Bien que vous pouvez marquer le <xref:System.Windows.UIElement.MouseLeftButtonDown> événement comme géré dans le cadre de cet élément, l’état géré ne se propage pas à d’autres éléments le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1823">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="6950f-1824">Toutefois, vous pouvez souhaiter marquer l’événement comme géré pour empêcher des gestionnaires d’instance généraux (ceux qui ne spécifie pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1824">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="6950f-1825">L’implémentation par défaut de gestion dans des événements de souris général <xref:System.Windows.UIElement> écoute <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> et la convertit en un événement local approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-1825">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="6950f-1826">Si vous souhaitez changer cette logique, vous devez créer une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1826">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="6950f-1827">Dans le constructeur statique de votre classe dérivée, enregistrez un gestionnaire de classe de remplacement pour <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1827">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6950f-1828">Vous ne pouvez pas modifier la comportement de gestion de la souris <xref:System.Windows.UIElement> en substituant <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1828">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="6950f-1829">Ou bien, vous pouvez substituer cette méthode pour modifier la gestion des événements pour un état spécifique de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-1829">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="6950f-1830">Vous pouvez choisir d’appeler l’implémentation de base dépend de votre scénario.</span><span class="sxs-lookup"><span data-stu-id="6950f-1830">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="6950f-1831">Ne pas appeler la base désactive la gestion de l’entrée par défaut pour cet événement de souris sur les classes ancêtres qui prévoient également d’appeler <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1831">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="6950f-1832">Par exemple, vous pouvez dériver de <xref:System.Windows.Controls.Button> et remplacez <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> dans votre classe dérivée sans appeler l’implémentation de base ; Toutefois, cette substitution désactive le <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1832">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1833">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1833">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-1834">Les données d’événement signalent que le bouton gauche de la souris a été relâché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1834">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1835">Méthode appelée quand un événement routé <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1835">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1836">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1836">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1837">Le <xref:System.Windows.UIElement.MouseLeftButtonUp> événement semble suivre un itinéraire de propagation mais réellement se déplace de manière indirecte.</span><span class="sxs-lookup"><span data-stu-id="6950f-1837">The <xref:System.Windows.UIElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="6950f-1838"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> est l’événement sous-jacent qui est routé par propagation et chaque <xref:System.Windows.UIElement> le long de l’événement itinéraire utilise une gestion identique pour déclencher l’événement routé direct <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1838"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="6950f-1839">Bien que vous pouvez marquer le <xref:System.Windows.UIElement.MouseLeftButtonUp> événement comme géré dans le cadre de cet élément, l’état géré ne se propage pas à d’autres éléments le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1839">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="6950f-1840">Toutefois, vous pouvez souhaiter marquer l’événement comme géré pour empêcher des gestionnaires d’instance généraux (ceux qui ne spécifie pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1840">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="6950f-1841">L’implémentation par défaut de gestion dans des événements de souris général <xref:System.Windows.UIElement> écoute <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> et la convertit en un événement local approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-1841">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="6950f-1842">Si vous souhaitez changer cette logique, vous devez créer une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1842">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="6950f-1843">Dans le constructeur statique de votre classe dérivée, enregistrez un gestionnaire de classe de remplacement pour <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1843">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6950f-1844">Vous ne pouvez pas modifier la comportement de gestion de la souris <xref:System.Windows.UIElement> en substituant <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1844">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1845">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1845">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1846">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Mouse.MouseMove" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1846">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1847">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1847">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1848">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1848">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1849">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1849">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1850">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1850">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1851">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1851">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1852">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1852">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1853">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1853">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1854">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1854">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1855">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1855">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1856">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1856">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1857">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1857">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-1858">Les données d’événement indiquent que le bouton droit de la souris a été enfoncé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1858">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1859">Méthode appelée quand un événement routé <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1859">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1860">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1860">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1861">Le <xref:System.Windows.UIElement.MouseRightButtonDown> événement semble suivre un itinéraire de propagation mais réellement se déplace de manière indirecte.</span><span class="sxs-lookup"><span data-stu-id="6950f-1861">The <xref:System.Windows.UIElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="6950f-1862"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> est l’événement sous-jacent qui est routé par propagation et chaque <xref:System.Windows.UIElement> le long de l’événement itinéraire utilise une gestion identique pour déclencher l’événement routé direct <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1862"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="6950f-1863">Bien que vous pouvez marquer le <xref:System.Windows.UIElement.MouseRightButtonDown> événement comme géré dans le cadre de cet élément, l’état géré ne se propage pas à d’autres éléments le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1863">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="6950f-1864">Toutefois, vous pouvez souhaiter marquer l’événement comme géré pour empêcher des gestionnaires d’instance généraux (ceux qui ne spécifie pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1864">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="6950f-1865">L’implémentation par défaut de gestion dans des événements de souris général <xref:System.Windows.UIElement> écoute <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> et la convertit en un événement local approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-1865">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="6950f-1866">Si vous souhaitez changer cette logique, vous devez créer une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1866">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="6950f-1867">Dans le constructeur statique de votre classe dérivée, enregistrez un gestionnaire de classe de remplacement pour <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1867">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6950f-1868">Vous ne pouvez pas modifier la comportement de gestion de la souris <xref:System.Windows.UIElement> en substituant <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1868">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="6950f-1869">Ou bien, vous pouvez substituer cette méthode pour modifier la gestion des événements pour un état spécifique de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-1869">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="6950f-1870">Vous pouvez choisir d’appeler l’implémentation de base dépend de votre scénario.</span><span class="sxs-lookup"><span data-stu-id="6950f-1870">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="6950f-1871">Ne pas appeler la base désactive la gestion de l’entrée par défaut pour cet événement de souris sur les classes ancêtres qui prévoient également d’appeler <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1871">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="6950f-1872">Par exemple, vous pouvez dériver de <xref:System.Windows.Controls.Control> et remplacez <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> dans votre classe dérivée sans base de l’appelant ; toutefois, ce remplacement désactive les services de menus contextuels sur votre contrôle, qui font partie de la <xref:System.Windows.Controls.Control> comportement par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1872">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1873">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1873">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-1874">Les données de l’événement signalent que le bouton droit de la souris a été relâché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1874">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1875">Méthode appelée quand un événement routé <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1875">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1876">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1876">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1877">Le <xref:System.Windows.UIElement.MouseRightButtonUp> événement semble suivre un itinéraire de propagation mais réellement se déplace de manière indirecte.</span><span class="sxs-lookup"><span data-stu-id="6950f-1877">The <xref:System.Windows.UIElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="6950f-1878"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> est l’événement sous-jacent qui est routé par propagation et chaque <xref:System.Windows.UIElement> le long de l’événement itinéraire utilise une gestion identique pour déclencher l’événement routé direct <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1878"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="6950f-1879">Bien que vous pouvez marquer le <xref:System.Windows.UIElement.MouseRightButtonUp> événement comme géré dans le cadre de cet élément, l’état géré ne se propage pas à d’autres éléments le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1879">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="6950f-1880">Toutefois, vous pouvez souhaiter marquer l’événement comme géré pour empêcher des gestionnaires d’instance généraux (ceux qui ne spécifie pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1880">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="6950f-1881">L’implémentation par défaut de gestion dans des événements de souris général <xref:System.Windows.UIElement> écoute <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> et la convertit en un événement local approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-1881">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="6950f-1882">Si vous souhaitez changer cette logique, vous devez créer une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="6950f-1882">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="6950f-1883">Dans le constructeur statique de votre classe dérivée, enregistrez un gestionnaire de classe de remplacement pour <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1883">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6950f-1884">Vous ne pouvez pas modifier la comportement de gestion de la souris <xref:System.Windows.UIElement> en substituant <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1884">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1885">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1885">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-1886">Les données d’événement signalent que le bouton de la souris a été relâché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1886">The event data reports that the mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1887">Méthode appelée quand un événement routé <see cref="E:System.Windows.Input.Mouse.MouseUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1887">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1888">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1888">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1889">Les actions de bouton de souris sont également gérées par un gestionnaire d’entrée dédié.</span><span class="sxs-lookup"><span data-stu-id="6950f-1889">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="6950f-1890">Autres fonctionnalités de programmation qui s’appuient sur les actions de bouton de la souris, comme entrée et les liaisons, des commandes peuvent appeler des gestionnaires pour l’action avant qu’elle est exposée comme une action de bouton de souris général.</span><span class="sxs-lookup"><span data-stu-id="6950f-1890">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="6950f-1891">Si ces d’entrée système fonctionnalités marque le <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> événement comme géré, <xref:System.Windows.UIElement.OnMouseUp%2A> n’est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1891">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="6950f-1892">Si vous utilisez ce gestionnaire de classe pour marquer l’événement comme géré, vous risquez d’influer sur les événements suivants : <xref:System.Windows.UIElement.MouseLeftButtonUp> et <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-1892">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="6950f-1893">Un de ces événements peuvent être déclenché sur l’élément cible lorsque <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> est reçu.</span><span class="sxs-lookup"><span data-stu-id="6950f-1893">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="6950f-1894">Si vous marquez cet événement comme géré dans la gestion de classe, les sous-événements sont toujours déclenchés ; Toutefois, elles passent de l’état géré dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1894">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="6950f-1895">Si l’événement est géré dans la gestion de classe, les gestionnaires d’instance pour les sous-événements ne sont pas appelés, sauf si vous utilisez explicitement <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> avec `handledEventsToo` `true` pour joindre des gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1895">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="6950f-1896">Gestionnaires de classe sont également pas appelés à moins que ces gestionnaires de classe ont été inscrits avec la <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature avec `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-1896">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="6950f-1897">En gérant <xref:System.Windows.UIElement.OnMouseUp%2A>, sont ce qui implique que la gestion de votre classe pris en compte pour tous les boutons de la souris des actions.</span><span class="sxs-lookup"><span data-stu-id="6950f-1897">By handling <xref:System.Windows.UIElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="6950f-1898">Ce comportement peut être indésirable ; Par conséquent, soyez prudent lorsque vous utilisez cette méthode virtuelle pour marquer des événements comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1898">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="6950f-1899">Chacun des événements directs spécifique au bouton possède également une machine virtuelle \* méthode ; prendre en compte si la substitution de ces gestionnaires de classe spécifiques au bouton peut être plus approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-1899">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="6950f-1900">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1900">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1901">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1901">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1902">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1902">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1903">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1903">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1904">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1904">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1905">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1905">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1906">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1906">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1907">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1907">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1908">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1908">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1909">
            <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1909">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1910">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1910">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1911">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1911">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1912">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1912">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1913">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1913">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1914">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1914">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1915">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1915">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1916">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1916">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1917">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1917">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1918">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1918">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1919">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1919">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1920">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1920">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1921">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1921">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1922">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1922">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1923">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1923">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1924">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1924">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1925">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1925">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1926">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1926">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1927">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1927">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1928">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1928">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1929">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1929">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1930">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1930">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1931">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1931">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1932">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1932">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-1933">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1933">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1934">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1934">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1935">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1935">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1936">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1936">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1937">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1937">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1938">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1938">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1939">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1939">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1940">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1940">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1941">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1941">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1942">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1942">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1943">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1943">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1944">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1944">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1945">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1945">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-1946">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1946">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1947">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1947">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1948">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1948">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1949">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1949">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1950">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1950">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1951">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1951">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1952">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1952">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1953">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1953">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1954">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1954">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1955">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1955">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1956">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1956">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1957">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1957">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1958">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1958">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-1959">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1959">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1960">
            <see cref="T:System.Windows.DragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1960">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1961">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.PreviewDrop" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1961">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1962">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1962">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1963">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1963">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1964">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1964">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1965">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1965">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1966">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1966">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1967">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1967">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1968">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1968">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1969">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1969">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1970">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1970">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1971">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1971">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-1972">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1972">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1973">
            <see cref="T:System.Windows.GiveFeedbackEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1973">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1974">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1974">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1975">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1975">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1976">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1976">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1977">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1977">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1978">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1978">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1979">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1979">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1980">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1980">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1981">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1981">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1982">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1982">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1983">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1983">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1984">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1984">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-1985">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1985">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1986">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1986">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-1987">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1987">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-1988">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1988">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-1989">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-1989">This method has no default implementation.</span></span> <span data-ttu-id="6950f-1990">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-1990">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-1991">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-1991">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-1992">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-1992">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-1993">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-1993">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-1994">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-1994">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-1995">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-1995">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-1996">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-1996">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-1997">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-1997">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-1998">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-1998">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-1999">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-1999">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2000">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2000">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2001">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2001">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2002">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2002">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2003">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2003">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2004">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2004">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2005">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2005">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2006">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2006">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2007">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2007">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2008">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2008">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2009">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2009">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2010">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2010">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2011">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2011">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2012">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2012">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2013">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2013">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2014">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2014">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2015">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2015">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2016">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2016">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2017">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2017">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2018">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2018">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2019">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2019">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2020">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2020">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2021">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2021">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2022">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2022">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2023">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2023">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2024">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2024">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2025">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2025">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2026">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2026">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2027">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2027">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2028">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2028">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2029">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2029">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2030">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2030">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2031">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2031">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2032">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2032">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2033">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2033">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2034">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2034">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2035">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2035">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2036">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2036">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2037">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2037">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2038">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2038">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-2039">Les données d’événement indiquent qu’un ou plusieurs boutons de la souris ont été enfoncés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2039">The event data reports that one or more mouse buttons were pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2040">Méthode appelée quand un événement routé attaché <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2040">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2041">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2041">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2042">Les actions de bouton de souris sont également gérées par un gestionnaire d’entrée dédié.</span><span class="sxs-lookup"><span data-stu-id="6950f-2042">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="6950f-2043">Autres fonctionnalités de programmation qui s’appuient sur les actions de bouton de la souris, comme entrée et les liaisons, des commandes peuvent appeler des gestionnaires pour l’action avant qu’elle est exposée comme une action de bouton de souris général.</span><span class="sxs-lookup"><span data-stu-id="6950f-2043">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="6950f-2044">Si ces d’entrée système fonctionnalités marque le <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> événement comme géré, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> n’est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2044">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="6950f-2045">Si vous utilisez ce gestionnaire de classe pour marquer l’événement comme géré, vous risquez d’influer sur les événements suivants : <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> et <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2045">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="6950f-2046">Un de ces événements peuvent être déclenché sur l’élément cible lorsque <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> est reçu.</span><span class="sxs-lookup"><span data-stu-id="6950f-2046">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="6950f-2047">Si vous marquez cet événement comme géré dans la gestion de classe, les sous-événements sont toujours déclenchés ; Toutefois, elles passent de l’état géré dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2047">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="6950f-2048">Si l’événement est géré dans la gestion de classe, les gestionnaires d’instance pour les sous-événements ne sont pas appelés, sauf si vous utilisez explicitement <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> avec `handledEventsToo` `true` pour joindre des gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2048">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="6950f-2049">Gestionnaires de classe sont également pas appelés à moins que ces gestionnaires de classe ont été inscrits avec la <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature avec `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-2049">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="6950f-2050">En gérant <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, sont ce qui implique que la gestion de votre classe pris en compte pour tous les boutons de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-2050">By handling <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="6950f-2051">Ce comportement peut être indésirable ; Par conséquent, soyez prudent lorsque vous utilisez cette méthode virtuelle pour marquer des événements comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2051">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="6950f-2052">Chacun des événements directs spécifique au bouton possède également une machine virtuelle \* méthode ; prendre en compte si la substitution de ces gestionnaires de classe spécifiques au bouton peut être plus approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-2052">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="6950f-2053">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2053">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2054">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2054">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2055">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2055">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2056">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2056">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2057">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2057">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2058">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2058">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2059">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2059">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2060">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2060">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2061">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2061">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2062">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2062">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2063">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2063">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-2064">Les données d’événement signalent que le bouton gauche de la souris a été enfoncé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2064">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2065">Méthode appelée quand un événement routé <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2065">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2066">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2066">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2067">Le <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> événement semble suivre un itinéraire de tunneling mais réellement se déplace de manière indirecte.</span><span class="sxs-lookup"><span data-stu-id="6950f-2067">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="6950f-2068"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> est l’événement sous-jacent qui est routé par tunneling et chaque <xref:System.Windows.UIElement> le long de l’événement itinéraire utilise une gestion identique pour déclencher l’événement routé direct <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2068"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="6950f-2069">Bien que vous pouvez marquer le <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> événement comme géré dans le cadre de cet élément, l’état géré ne se propage pas à d’autres éléments le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2069">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="6950f-2070">Toutefois, vous pouvez souhaiter marquer l’événement comme géré pour empêcher des gestionnaires d’instance généraux (ceux qui ne spécifie pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2070">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="6950f-2071">L’implémentation par défaut de gestion dans des événements de souris général <xref:System.Windows.UIElement> écoute <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> et la convertit en un événement local approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-2071">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="6950f-2072">Si vous souhaitez changer cette logique, vous devez créer une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2072">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="6950f-2073">Dans le constructeur statique de votre classe dérivée, enregistrez un gestionnaire de classe de remplacement pour <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2073">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6950f-2074">Vous ne pouvez pas modifier la comportement de gestion de la souris <xref:System.Windows.UIElement> en substituant <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2074">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="6950f-2075">Ou bien, vous pouvez substituer cette méthode pour modifier la gestion des événements pour un état spécifique de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-2075">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="6950f-2076">Vous pouvez choisir d’appeler l’implémentation de base dépend de votre scénario.</span><span class="sxs-lookup"><span data-stu-id="6950f-2076">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="6950f-2077">Ne pas appeler la base désactive la gestion de l’entrée par défaut pour cet événement de souris sur les classes ancêtres qui prévoient également d’appeler <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2077">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="6950f-2078">Par exemple, vous pouvez dériver de <xref:System.Windows.Controls.Button> et remplacez <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> dans votre classe dérivée sans appeler l’implémentation de base ; Toutefois, cette substitution désactive le <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2078">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2079">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2079">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-2080">Les données d’événement signalent que le bouton gauche de la souris a été relâché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2080">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2081">Méthode appelée quand un événement routé <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2081">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2082">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2082">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2083">Le <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> événement semble suivre un itinéraire de tunneling mais réellement se déplace de manière indirecte.</span><span class="sxs-lookup"><span data-stu-id="6950f-2083">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="6950f-2084"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> est l’événement sous-jacent qui est routé par tunneling et chaque <xref:System.Windows.UIElement> le long de l’événement itinéraire utilise une gestion identique pour déclencher l’événement routé direct <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2084"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="6950f-2085">Bien que vous pouvez marquer le <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> événement comme géré dans le cadre de cet élément, l’état géré ne se propage pas à d’autres éléments le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2085">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="6950f-2086">Toutefois, vous pouvez souhaiter marquer l’événement comme géré pour empêcher des gestionnaires d’instance généraux (ceux qui ne spécifie pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2086">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="6950f-2087">L’implémentation par défaut de gestion dans des événements de souris général <xref:System.Windows.UIElement> écoute <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> et la convertit en un événement local approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-2087">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="6950f-2088">Si vous souhaitez changer cette logique, vous devez créer une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2088">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="6950f-2089">Dans le constructeur statique de votre classe dérivée, enregistrez un gestionnaire de classe de remplacement pour <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2089">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6950f-2090">Vous ne pouvez pas modifier la comportement de gestion de la souris <xref:System.Windows.UIElement> en substituant <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2090">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2091">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2091">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2092">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2092">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2093">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2093">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2094">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2094">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2095">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2095">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2096">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2096">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2097">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2097">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2098">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2098">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2099">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2099">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2100">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2100">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2101">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2101">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2102">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2102">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2103">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2103">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2104">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2104">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-2105">Les données d’événement indiquent que le bouton droit de la souris a été enfoncé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2105">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2106">Méthode appelée quand un événement routé <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2106">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2107">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2107">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2108">Le <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> événement semble suivre un itinéraire de tunneling mais réellement se déplace de manière indirecte.</span><span class="sxs-lookup"><span data-stu-id="6950f-2108">The <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="6950f-2109"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> est l’événement sous-jacent qui est routé par tunneling et chaque <xref:System.Windows.UIElement> le long de l’événement itinéraire utilise une gestion identique pour déclencher l’événement routé direct <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2109"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="6950f-2110">Bien que vous pouvez marquer le <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> événement comme géré dans le cadre de cet élément, l’état géré ne se propage pas à d’autres éléments le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2110">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="6950f-2111">Toutefois, vous pouvez souhaiter marquer l’événement comme géré pour empêcher des gestionnaires d’instance généraux (ceux qui ne spécifie pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2111">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="6950f-2112">L’implémentation par défaut de gestion dans des événements de souris général <xref:System.Windows.UIElement> écoute <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> et la convertit en un événement local approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-2112">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="6950f-2113">Si vous souhaitez changer cette logique, vous devez créer une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2113">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="6950f-2114">Dans le constructeur statique de votre classe dérivée, enregistrez un gestionnaire de classe de remplacement pour <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2114">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6950f-2115">Vous ne pouvez pas modifier la comportement de gestion de la souris <xref:System.Windows.UIElement> en substituant <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2115">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="6950f-2116">Ou bien, vous pouvez substituer cette méthode pour modifier la gestion des événements pour un état spécifique de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-2116">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="6950f-2117">Vous pouvez choisir d’appeler l’implémentation de base dépend de votre scénario.</span><span class="sxs-lookup"><span data-stu-id="6950f-2117">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="6950f-2118">Ne pas appeler la base désactive la gestion de l’entrée par défaut pour cet événement de souris sur les classes ancêtres qui prévoient également d’appeler <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2118">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="6950f-2119">Par exemple, vous pouvez dériver de <xref:System.Windows.Controls.Control> et remplacez <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> dans votre classe dérivée sans base de l’appelant ; toutefois, ce remplacement désactive les services de menus contextuels sur votre contrôle, qui font partie de la <xref:System.Windows.Controls.Control> comportement par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2119">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2120">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2120">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-2121">Les données de l’événement signalent que le bouton droit de la souris a été relâché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2121">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2122">Méthode appelée quand un événement routé <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2122">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2123">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2123">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2124">Le <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> événement semble suivre un itinéraire de tunneling mais réellement se déplace de manière indirecte.</span><span class="sxs-lookup"><span data-stu-id="6950f-2124">The <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="6950f-2125"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> est l’événement sous-jacent qui est routé par tunneling et chaque <xref:System.Windows.UIElement> le long de l’événement itinéraire utilise une gestion identique pour déclencher l’événement routé direct <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2125"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="6950f-2126">Bien que vous pouvez marquer le <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> événement comme géré dans le cadre de cet élément, l’état géré ne se propage pas à d’autres éléments le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2126">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="6950f-2127">Toutefois, vous pouvez souhaiter marquer l’événement comme géré pour empêcher des gestionnaires d’instance généraux (ceux qui ne spécifie pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2127">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="6950f-2128">L’implémentation par défaut de gestion dans des événements de souris général <xref:System.Windows.UIElement> écoute <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> et la convertit en un événement local approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-2128">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="6950f-2129">Si vous souhaitez changer cette logique, vous devez créer une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2129">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="6950f-2130">Dans le constructeur statique de votre classe dérivée, enregistrez un gestionnaire de classe de remplacement pour <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2130">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6950f-2131">Vous ne pouvez pas modifier la comportement de gestion de la souris <xref:System.Windows.UIElement> en substituant <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2131">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2132">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2132">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="6950f-2133">Les données des événements signalent qu’un ou plusieurs boutons de la souris ont été relâchés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2133">The event data reports that one or more mouse buttons were released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2134">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2134">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2135">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2135">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2136">Les actions de bouton de souris sont également gérées par un gestionnaire d’entrée dédié.</span><span class="sxs-lookup"><span data-stu-id="6950f-2136">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="6950f-2137">Autres fonctionnalités de programmation qui s’appuient sur les actions de bouton de la souris, comme entrée et les liaisons, des commandes peuvent appeler des gestionnaires pour l’action avant qu’elle est exposée comme une action de bouton de souris général.</span><span class="sxs-lookup"><span data-stu-id="6950f-2137">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="6950f-2138">Si ces d’entrée système fonctionnalités marque le <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> événement comme géré, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> n’est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2138">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="6950f-2139">Si vous utilisez ce gestionnaire de classe pour marquer l’événement comme géré, vous risquez d’influer sur les événements suivants : <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> et <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2139">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="6950f-2140">Un de ces événements peuvent être déclenché sur l’élément cible lorsque <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> est reçu.</span><span class="sxs-lookup"><span data-stu-id="6950f-2140">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="6950f-2141">Si vous marquez cet événement comme géré dans la gestion de classe, les sous-événements sont toujours déclenchés ; Toutefois, elles passent de l’état géré dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2141">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="6950f-2142">Si l’événement est géré dans la gestion de classe, les gestionnaires d’instance pour les sous-événements ne sont pas appelés, sauf si vous utilisez explicitement <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> avec `handledEventsToo` `true` pour joindre des gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2142">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="6950f-2143">Gestionnaires de classe sont également pas appelés à moins que ces gestionnaires de classe ont été inscrits avec la <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature avec `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-2143">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="6950f-2144">En gérant <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, sont ce qui implique que la gestion de votre classe pris en compte pour tous les boutons de la souris des actions.</span><span class="sxs-lookup"><span data-stu-id="6950f-2144">By handling <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="6950f-2145">Ce comportement peut être indésirable ; Par conséquent, soyez prudent lorsque vous utilisez cette méthode virtuelle pour marquer des événements comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2145">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="6950f-2146">Chacun des événements directs spécifique au bouton possède également une machine virtuelle \* méthode ; prendre en compte si la substitution de ces gestionnaires de classe spécifiques au bouton peut être plus approprié.</span><span class="sxs-lookup"><span data-stu-id="6950f-2146">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="6950f-2147">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2147">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2148">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2148">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2149">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2149">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2150">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2150">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2151">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2151">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2152">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2152">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2153">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2153">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2154">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2154">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2155">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2155">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2156">
            <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2156">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2157">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2157">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2158">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2158">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2159">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2159">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2160">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2160">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2161">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2161">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2162">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2162">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2163">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2163">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2164">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2164">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2165">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2165">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2166">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2166">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2167">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2167">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2168">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2168">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2169">
            <see cref="T:System.Windows.QueryContinueDragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2169">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2170">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2170">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2171">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2171">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2172">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2172">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2173">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2173">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2174">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2174">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2175">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2175">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2176">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2176">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2177">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2177">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2178">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2178">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2179">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2179">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2180">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2180">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2181">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2181">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2182">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2182">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2183">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2183">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2184">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2184">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2185">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2185">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2186">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2186">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2187">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2187">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2188">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2188">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2189">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2189">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2190">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2190">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2191">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2191">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2192">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2192">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2193">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2193">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2194">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2194">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2195">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2195">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2196">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2196">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2197">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2197">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2198">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2198">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2199">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2199">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2200">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2200">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2201">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2201">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2202">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2202">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2203">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2203">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2204">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2204">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2205">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2205">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2206">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2206">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2207">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2207">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2208">
            <see cref="T:System.Windows.Input.StylusDownEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2208">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2209">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2209">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2210">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2210">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2211">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2211">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2212">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2212">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2213">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2213">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2214">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2214">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2215">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2215">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2216">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2216">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2217">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2217">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2218">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2218">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2219">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2219">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2220">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2220">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2221">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2221">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2222">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2222">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2223">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2223">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2224">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2224">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2225">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2225">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2226">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2226">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2227">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2227">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2228">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2228">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2229">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2229">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2230">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2230">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2231">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2231">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2232">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2232">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2233">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2233">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2234">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2234">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2235">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2235">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2236">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2236">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2237">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2237">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2238">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2238">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2239">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2239">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2240">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2240">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2241">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2241">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2242">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2242">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2243">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2243">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2244">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2244">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2245">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2245">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2246">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2246">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2247">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2247">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2248">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2248">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2249">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2249">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2250">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2250">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2251">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2251">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2252">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2252">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2253">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2253">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2254">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2254">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2255">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2255">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2256">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2256">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2257">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2257">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2258">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2258">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2259">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2259">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2260">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2260">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2261">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2261">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2262">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2262">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2263">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2263">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2264">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2264">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2265">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2265">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2266">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2266">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2267">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2267">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2268">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2268">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2269">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2269">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2270">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2270">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2271">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2271">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2272">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2272">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2273">
            <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2273">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2274">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2274">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2275">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2275">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2276">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2276">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2277">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2277">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2278">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2278">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2279">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2279">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2280">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2280">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2281">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2281">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2282">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2282">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2283">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2283">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2284">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2284">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2285">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2285">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2286">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2286">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2287">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2287">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2288">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2288">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2289">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2289">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2290">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2290">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2291">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2291">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2292">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2292">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2293">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2293">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2294">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2294">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2295">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2295">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2296">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2296">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2297">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2297">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2298">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2298">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2299">
            <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2299">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2300">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2300">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2301">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2301">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2302">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2302">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2303">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2303">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2304">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2304">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2305">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2305">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2306">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2306">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2307">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2307">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2308">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2308">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2309">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2309">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2310">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2310">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="6950f-2311">Un autre scénario qui est spécifiquement conçu pour les événements d’aperçu est de les marquer comme gérés afin que les gestionnaires de classe par propagation correspondants ne sont pas appelés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2311">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2312">
            <see cref="T:System.Windows.Input.TouchEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2312">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2313">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> qui se produit lorsqu'une pression tactile est exercée sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2313">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2314">Le <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2314">The <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-2315">Substituer <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.PreviewTouchDown> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2315">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="6950f-2316">Veillez à appeler la classe de base <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> méthode afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2316">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2317">
            <see cref="T:System.Windows.Input.TouchEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2317">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2318">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> qui se produit lorsqu'une pression tactile se déplace à l'intérieur de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2318">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2319">Le <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2319">The <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-2320">Substituer <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.PreviewTouchMove> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2320">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="6950f-2321">Veillez à appeler la classe de base <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> méthode afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2321">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2322">
            <see cref="T:System.Windows.Input.TouchEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2322">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2323">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> qui se produit lorsqu'une pression tactile se relâche à l'intérieur de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2323">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2324">Le <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2324">The <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-2325">Substituer <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.PreviewTouchUp> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2325">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="6950f-2326">Veillez à appeler la classe de base <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> méthode afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2326">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2327">
            <see cref="T:System.Windows.QueryContinueDragEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2327">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2328">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2328">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2329">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2329">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2330">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2330">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2331">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2331">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2332">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2332">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2333">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2333">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2334">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2334">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2335">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2335">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2336">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2336">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2337">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2337">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2338">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2338">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2339">
            <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2339">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2340">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2340">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2341">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2341">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2342">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2342">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2343">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2343">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2344">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2344">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2345">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2345">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2346">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2346">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2347">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2347">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2348">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2348">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2349">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2349">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2350">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2350">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected virtual void OnRender (System.Windows.Media.DrawingContext drawingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRender(class System.Windows.Media.DrawingContext drawingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRender(System::Windows::Media::DrawingContext ^ drawingContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="drawingContext">
          <span data-ttu-id="6950f-2351">Instructions de dessin pour un élément spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2351">The drawing instructions for a specific element.</span>
          </span>
          <span data-ttu-id="6950f-2352">Ce contexte est fourni au système de disposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2352">This context is provided to the layout system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2353">En cas de substitution dans une classe dérivée, participe aux opérations de rendu dirigées par le système de disposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2353">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span>
          </span>
          <span data-ttu-id="6950f-2354">Les instructions de rendu pour cet élément ne sont pas utilisées directement lorsque cette méthode est appelée, et sont en fait conservées en vue de leur utilisation asynchrone ultérieure pour la disposition et le dessin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2354">The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2355">Cette méthode n’a aucune implémentation par défaut le <xref:System.Windows.UIElement> classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2355">This method has no default implementation in the <xref:System.Windows.UIElement> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-2356">L’exemple de code suivant montre une implémentation possible pour une classe dérivée de panneau.</span><span class="sxs-lookup"><span data-stu-id="6950f-2356">The following code example shows a possible implementation for a panel derived class.</span></span>  
  
 [!code-csharp[LightWeightCustomPanel#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LightWeightCustomPanel/CSharp/OffsetPanel.cs#1)]
 [!code-vb[LightWeightCustomPanel#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/LightWeightCustomPanel/visualbasic/offsetpanel.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-2357">Le <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> méthode peut être substituée pour ajouter d’autres éléments graphiques (non définis précédemment dans une arborescence logique) à un élément de rendu, tels que des effets ou des ornements.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-2357">The <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> method can be overridden to add further graphical elements (not previously defined in a logical tree) to a rendered element, such as effects or adorners.</span>
            </span>
            <span data-ttu-id="6950f-2358">A <see cref="T:System.Windows.Media.DrawingContext" /> objet est passé en tant qu’argument, qui fournit des méthodes pour dessiner des formes, texte, images ou vidéos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-2358">A <see cref="T:System.Windows.Media.DrawingContext" /> object is passed as an argument, which provides methods for drawing shapes, text, images or videos.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRenderSizeChanged (System.Windows.SizeChangedInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRenderSizeChanged (info As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ info);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="6950f-2359">Paramètres empaquetés (<see cref="T:System.Windows.SizeChangedInfo" />) qui incluent des tailles anciennes et nouvelles et dont les dimensions changent effectivement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2359">The packaged parameters (<see cref="T:System.Windows.SizeChangedInfo" />), which includes old and new sizes, and which dimension actually changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2360">En cas de substitution dans une classe dérivée, participe aux opérations de rendu dirigées par le système de disposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2360">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span>
          </span>
          <span data-ttu-id="6950f-2361">Cette méthode est appelée après l'actualisation de la disposition, et avant d'effectuer le rendu, si <see cref="P:System.Windows.UIElement.RenderSize" /> pour l'élément a changé suite à cette actualisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2361">This method is invoked after layout update, and before rendering, if the element's <see cref="P:System.Windows.UIElement.RenderSize" /> has changed as a result of layout update.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2362">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2362">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2363">Élément de niveau infrastructure WPF classique utilise l’implémentation de substitution de <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2363">A typical WPF framework-level element uses the override implementation from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="6950f-2364">Le <xref:System.Windows.FrameworkElement> implémentation invalide le <xref:System.Windows.FrameworkElement.Width%2A> et <xref:System.Windows.FrameworkElement.Height%2A> propriétés et gère les bases de données essentielles au retraçage de la disposition.</span><span class="sxs-lookup"><span data-stu-id="6950f-2364">The <xref:System.Windows.FrameworkElement> implementation invalidates the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties and handles the basics of remaking the layout.</span></span> <span data-ttu-id="6950f-2365">Substitution de <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> à la <xref:System.Windows.UIElement> niveau implique que votre implémentation de l’élément n’est délibérément pas à l’aide de l’implémentation de niveau infrastructure WPF, et par conséquent, votre élément doit gérer la logique de présentation plus directement, généralement en écrivant un système de disposition de remplacement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2365">Overriding <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> at the <xref:System.Windows.UIElement> level implies that your element implementation is deliberately not using the WPF framework-level implementation, and therefore your element must handle layout logic more directly, typically by writing a replacement layout system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2366">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2366">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2367">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2367">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2368">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2368">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2369">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2369">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2370">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2370">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2371">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2371">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2372">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2372">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2373">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2373">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2374">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2374">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2375">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2375">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2376">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2376">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2377">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2377">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2378">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2378">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2379">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2379">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2380">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2380">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2381">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2381">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2382">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2382">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2383">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2383">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2384">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2384">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2385">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2385">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2386">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2386">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2387">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2387">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2388">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2388">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2389">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2389">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2390">
            <see cref="T:System.Windows.Input.StylusDownEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2390">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2391">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.StylusDown" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2391">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2392">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2392">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2393">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2393">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2394">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2394">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2395">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2395">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2396">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2396">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2397">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2397">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2398">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2398">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2399">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2399">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2400">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2400">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2401">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2401">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2402">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2402">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2403">Appelée quand un événement attaché <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> non géré est déclenché par cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2403">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="6950f-2404">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2404">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2405">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2405">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2406">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2406">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="6950f-2407">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-2407">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="6950f-2408">L’objectif de cette méthode est similaire à [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2408">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2409">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2409">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2410">Marquer l’événement comme géré est néanmoins utile pour empêcher les gestionnaires d’instance habituels (ceux qui ne spécifient pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2410">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2411">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2411">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2412">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2412">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2413">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2413">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2414">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2414">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2415">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2415">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2416">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2416">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2417">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2417">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2418">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2418">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2419">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2419">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2420">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2420">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2421">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2421">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2422">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2422">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2423">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2423">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2424">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2424">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2425">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2425">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2426">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2426">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2427">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2427">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2428">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2428">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2429">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2429">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2430">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2430">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2431">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2431">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2432">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2432">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2433">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2433">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2434">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2434">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2435">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2435">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2436">Appelée quand un événement attaché <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> non géré est déclenché par cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2436">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="6950f-2437">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2437">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2438">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2438">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2439">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2439">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="6950f-2440">Vous pouvez appeler le base avant ou après le traitement spécial, selon vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-2440">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="6950f-2441">L’objectif de cette méthode est similaire à [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2441">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2442">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2442">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2443">Marquer l’événement comme géré est néanmoins utile pour empêcher les gestionnaires d’instance habituels (ceux qui ne spécifient pas `handledEventsToo`) ne soit appelée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2443">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2444">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2444">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2445">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.StylusMove" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2445">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2446">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2446">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2447">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2447">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2448">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2448">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2449">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2449">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2450">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2450">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2451">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2451">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2452">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2452">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2453">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2453">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2454">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2454">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2455">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2455">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2456">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2456">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2457">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2457">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2458">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2458">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2459">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2459">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2460">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2460">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2461">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2461">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2462">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2462">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2463">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2463">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2464">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2464">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2465">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2465">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2466">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2466">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2467">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2467">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2468">
            <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2468">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2469">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2469">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2470">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2470">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2471">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2471">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2472">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2472">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2473">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2473">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2474">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2474">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2475">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2475">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2476">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2476">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2477">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2477">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2478">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2478">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2479">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2479">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2480">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2480">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2481">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.Stylus.StylusUp" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2481">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2482">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2482">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2483">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2483">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2484">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2484">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2485">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2485">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2486">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2486">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2487">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2487">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2488">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2488">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2489">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2489">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2490">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2490">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2491">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2491">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2492">
            <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2492">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2493">Méthode appelée lorsqu'un événement attaché <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> non géré atteint un élément de son itinéraire qui est dérivé de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2493">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="6950f-2494">Implémentez cette méthode pour ajouter la gestion de classes pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2494">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2495">Cette méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2495">This method has no default implementation.</span></span> <span data-ttu-id="6950f-2496">Comme une classe intermédiaire dans l’héritage peut implémenter cette méthode, nous recommandons d’appeler l’implémentation de base dans votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-2496">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="6950f-2497">L’objectif de cette méthode est similaire à la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] du modèle d’événement sur \* méthodes : cette méthode fournit les moyens de gérer l’événement correspondant à partir de classes dérivées en établissant un gestionnaire de classe au lieu d’un gestionnaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="6950f-2497">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="6950f-2498">Dans ce cas, l’événement correspondant est un événement routé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2498">In this case the matching event is a routed event.</span></span> <span data-ttu-id="6950f-2499">Le modèle d’implémentation des méthodes On \* est différent pour les événements routés car un événement routé peut être déclenché par un élément enfant, qui n’est pas nécessairement l’élément qui appelle les gestionnaires.</span><span class="sxs-lookup"><span data-stu-id="6950f-2499">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="6950f-2500">Par conséquent, votre implémentation doit examiner les propriétés de la source des données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2500">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="6950f-2501">Il ne doit pas tenter de redéclencher l’événement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="6950f-2501">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="6950f-2502">En substituant cette méthode ou en inscrivant avec les gestionnaires de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A>, les classes dérivées de <xref:System.Windows.UIElement> peut appeler des méthodes de gestionnaire de classe privée lorsque l’événement est reçu sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-2502">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="6950f-2503">Un scénario dans lequel la gestion de classe est appropriée consiste à manipuler les données d’événement et de marquer l’événement routé comme géré.</span><span class="sxs-lookup"><span data-stu-id="6950f-2503">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2504">
            <see cref="T:System.Windows.Input.TouchEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2504">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2505">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.TouchDown" /> qui se produit lorsqu'une pression tactile est exercée à l'intérieur de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2505">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2506">Le <xref:System.Windows.UIElement.OnTouchDown%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2506">The <xref:System.Windows.UIElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-2507">Substituer <xref:System.Windows.UIElement.OnTouchDown%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.TouchDown> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2507">Override <xref:System.Windows.UIElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="6950f-2508">Veillez à appeler la classe de base <xref:System.Windows.UIElement.OnTouchDown%2A> méthode afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2508">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2509">
            <see cref="T:System.Windows.Input.TouchEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2509">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2510">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.TouchEnter" /> qui se produit lorsqu'une pression tactile se déplace de l'extérieur vers l'intérieur des limites de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2510">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2511">Le <xref:System.Windows.UIElement.OnTouchEnter%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2511">The <xref:System.Windows.UIElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-2512">Substituer <xref:System.Windows.UIElement.OnTouchEnter%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.TouchEnter> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2512">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchEnter> event.</span></span> <span data-ttu-id="6950f-2513">Veillez à appeler la classe de base <xref:System.Windows.UIElement.OnTouchEnter%2A> méthode afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2513">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2514">
            <see cref="T:System.Windows.Input.TouchEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2514">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2515">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.TouchLeave" /> qui se produit lorsqu'une pression tactile se déplace de l'intérieur vers l'extérieur des limites de ce <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2515">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2516">Le <xref:System.Windows.UIElement.OnTouchLeave%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2516">The <xref:System.Windows.UIElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-2517">Substituer <xref:System.Windows.UIElement.OnTouchLeave%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.TouchLeave> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2517">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchLeave> event.</span></span> <span data-ttu-id="6950f-2518">Veillez à appeler la classe de base <xref:System.Windows.UIElement.OnTouchLeave%2A> méthode afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2518">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2519">
            <see cref="T:System.Windows.Input.TouchEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2519">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2520">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.TouchMove" /> qui se produit lorsqu'une pression tactile se déplace à l'intérieur de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2520">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2521">Le <xref:System.Windows.UIElement.OnTouchMove%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2521">The <xref:System.Windows.UIElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-2522">Substituer <xref:System.Windows.UIElement.OnTouchMove%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.TouchMove> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2522">Override <xref:System.Windows.UIElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchMove> event.</span></span> <span data-ttu-id="6950f-2523">Veillez à appeler la classe de base <xref:System.Windows.UIElement.OnTouchMove%2A> méthode afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2523">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-2524">
            <see cref="T:System.Windows.Input.TouchEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2524">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2525">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.TouchUp" /> qui se produit lorsqu'une pression tactile se relâche à l'intérieur de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2525">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2526">Le <xref:System.Windows.UIElement.OnTouchUp%2A> méthode n’a aucune implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-2526">The <xref:System.Windows.UIElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="6950f-2527">Substituer <xref:System.Windows.UIElement.OnTouchUp%2A> dans une classe dérivée pour gérer les <xref:System.Windows.UIElement.TouchUp> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2527">Override <xref:System.Windows.UIElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="6950f-2528">Veillez à appeler la classe de base <xref:System.Windows.UIElement.OnTouchUp%2A> méthode afin que les classes de base reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2528">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="6950f-2529">Parent précédent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2529">The previous parent.</span>
          </span>
          <span data-ttu-id="6950f-2530">
            <see langword="null" /> peut être fourni si <see cref="T:System.Windows.DependencyObject" /> n'avait pas d'élément parent auparavant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2530">This may be provided as <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a parent element previously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2531">Appelé lorsque l'élément parent de <see cref="T:System.Windows.UIElement" /> signale une modification à son parent visuel sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2531">Invoked when the parent element of this <see cref="T:System.Windows.UIElement" /> reports a change to its underlying visual parent.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6950f-2532">Si vous substituez cette méthode, appelez toujours l’implémentation de base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-2532">If you override this method, always call the base implementation.</span>
            </span>
            <span data-ttu-id="6950f-2533">L’implémentation de base par défaut effectue une maintenance interne de l’état de la propriété héritée en sens inverse.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-2533">The default base implementation performs some internal maintenance of reverse-inherited property state.</span>
            </span>
            <span data-ttu-id="6950f-2534">Ne pas appeler l’implémentation de base invalide cet état.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-2534">Failing to call the base implementation will invalidate this state.</span>
            </span>
            <span data-ttu-id="6950f-2535">Cette méthode se substitue à <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-2535">This method overrides <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span>
            </span>
            <span data-ttu-id="6950f-2536">
              <see cref="T:System.Windows.FrameworkElement" /> et <see cref="T:System.Windows.Window" /> substituent tous deux également le <see cref="T:System.Windows.UIElement" /> implémentation de <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, et <see cref="T:System.Windows.Window" /> scelle.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6950f-2536">
                <see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.Window" /> both also override the <see cref="T:System.Windows.UIElement" /> implementation of <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, and <see cref="T:System.Windows.Window" /> seals it.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2537">Obtient ou définit le facteur d'opacité appliqué à l'intégralité d'<see cref="T:System.Windows.UIElement" /> lorsqu'il est restitué dans l'[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2537">Gets or sets the opacity factor applied to the entire <see cref="T:System.Windows.UIElement" /> when it is rendered in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
          <span data-ttu-id="6950f-2538">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2538">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-2539">Facteur d’opacité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2539">The opacity factor.</span>
          </span>
          <span data-ttu-id="6950f-2540">L’opacité par défaut est 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2540">Default opacity is 1.0.</span>
          </span>
          <span data-ttu-id="6950f-2541">Les valeurs attendues sont comprises entre 0,0 et 1,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2541">Expected values are between 0.0 and 1.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2542">La valeur par 1,0 défaut est la valeur par défaut fournie par les métadonnées initiales de cette propriété de dépendance sur la <xref:System.Windows.UIElement> classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2542">The 1.0 default value is the default provided by the initial metadata of this dependency property on the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="6950f-2543">Autres classes dérivées peuvent potentiellement modifier cette valeur par défaut en substituant les métadonnées à partir de son constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2543">Other derived classes may potentially change this default value by overriding the metadata from within their class constructor.</span></span>  
  
 <span data-ttu-id="6950f-2544">La valeur de <xref:System.Windows.UIElement.Opacity%2A> n’est pas appliqué à la disposition réelle à moins que l’élément est également visible (<xref:System.Windows.UIElement.IsVisible%2A> est `true`).</span><span class="sxs-lookup"><span data-stu-id="6950f-2544">The value of <xref:System.Windows.UIElement.Opacity%2A> won't be applied to actual layout unless the element is also visible (<xref:System.Windows.UIElement.IsVisible%2A> is `true`).</span></span>  
  
 <span data-ttu-id="6950f-2545"><xref:System.Windows.UIElement.Opacity%2A> est appliqué à partir des éléments parents sur dans l’arborescence d’éléments à des éléments enfants, mais les effets visibles de l’opacité imbriquée paramètres ne sont pas indiquées dans la valeur de propriété de chaque élément enfant.</span><span class="sxs-lookup"><span data-stu-id="6950f-2545"><xref:System.Windows.UIElement.Opacity%2A> is applied from parent elements on down the element tree to child elements, but the visible effects of the nested opacity settings aren't indicated in the property value of individual child elements.</span></span> <span data-ttu-id="6950f-2546">Par exemple, si une liste a une opacité de 50 % (0,5) et de ses éléments de liste a son propre opacité de 20 % (0,2), l’opacité visible pour cet élément de liste est rendue comme s’il s’agissait de 10 % (0,1), mais la valeur de propriété de l’élément de liste <xref:System.Windows.UIElement.Opacity%2A> propriété serait toujours  0,2 lorsqu’il est interrogé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2546">For instance, if a list has a 50% (0.5) opacity and one of its list items has its own opacity set to 20% (0.2), the net visible opacity for that list item will be rendered as if it were 10% (0.1), but the property value of the list item <xref:System.Windows.UIElement.Opacity%2A> property would still be 0.2 when queried.</span></span>  
  
 <span data-ttu-id="6950f-2547">Même si l’opacité déclarée ou évaluée est 0, un élément toujours participe aux commandes et les événements d’entrée et potentiellement peut recevoir le focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-2547">Even if the declared or evaluated opacity is 0, an element still participates in input events and commands, and is potentially focusable.</span></span> <span data-ttu-id="6950f-2548">Cet aspect peut être utile, par exemple, vous pouvez utiliser un objet d’opacité nulle (par exemple, une forme) pour le masquage des objets sous-jacents avec des éléments transparents.</span><span class="sxs-lookup"><span data-stu-id="6950f-2548">This aspect can be useful, for instance you can use an opacity-zero object (such as a shape) for masking underlying objects with transparent elements.</span></span> <span data-ttu-id="6950f-2549">L’objet d’opacité nulle peut alors gérer l’événement d’entrée de traitement pour une zone sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="6950f-2549">The opacity-zero object can then handle all the input event processing for an underlying area.</span></span> <span data-ttu-id="6950f-2550">Toutefois, le `Background` ou `Fill` de l’objet ou de la forme doit être définie à une valeur, même si elle est <xref:System.Windows.Media.Brushes.Transparent%2A>, sinon le test de positionnement n’est pas activé et aucun événement n’est reçus.</span><span class="sxs-lookup"><span data-stu-id="6950f-2550">However, the `Background` or `Fill` of the object or shape should be set to a value, even if it is <xref:System.Windows.Media.Brushes.Transparent%2A>, otherwise hit testing is not enabled, and no events are received.</span></span>  
  
<a name="dependencyPropertyInfo_Opacity"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-2551">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-2551">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2552">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2552">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityProperty>|  
|<span data-ttu-id="6950f-2553">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-2553">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-2554">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-2554">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.OpacityMask" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush OpacityMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush OpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.OpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property OpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ OpacityMask { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2555">Obtient ou définit un masque d'opacité, sous forme d'implémentation de <see cref="T:System.Windows.Media.Brush" /> appliquée à tout masque de canal alpha sur le contenu rendu de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2555">Gets or sets an opacity mask, as a <see cref="T:System.Windows.Media.Brush" /> implementation that is applied to any alpha-channel masking for the rendered content of this element.</span>
          </span>
          <span data-ttu-id="6950f-2556">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2556">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-2557">Pinceau à utiliser pour les masquage d’opacité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2557">The brush to use for opacity masking.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2558">Cette propriété utilise uniquement ce que la valeur du canal alpha pour fourni <xref:System.Windows.Media.Brush>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2558">This property only uses whatever the alpha channel value is for the supplied <xref:System.Windows.Media.Brush>.</span></span> <span data-ttu-id="6950f-2559">Les autres canaux de la <xref:System.Windows.Media.Brush>du rendu de contenu (rouge, vert ou bleu) sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2559">The other channels of the <xref:System.Windows.Media.Brush>'s rendered content (Red, Green, or Blue) are ignored.</span></span>  
  
 <span data-ttu-id="6950f-2560">Le plus courant <xref:System.Windows.Media.Brush> pour cet objectif est une <xref:System.Windows.Media.ImageBrush>, qui peut être utilisé pour diverses techniques telles que de l’application d’une vignette de masquage de photos.</span><span class="sxs-lookup"><span data-stu-id="6950f-2560">The most typical <xref:System.Windows.Media.Brush> for this purpose is an <xref:System.Windows.Media.ImageBrush>, which can be used for a variety of photo masking techniques such as a vignette.</span></span> <span data-ttu-id="6950f-2561">Mais les défini <xref:System.Windows.Media.Brush> (tel que <xref:System.Windows.Media.LinearGradientBrush>) peut être utilisé.</span><span class="sxs-lookup"><span data-stu-id="6950f-2561">But any defined <xref:System.Windows.Media.Brush> (such as <xref:System.Windows.Media.LinearGradientBrush>) can be used.</span></span>  
  
 <span data-ttu-id="6950f-2562">Dans [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], cette valeur de propriété peut utiliser une syntaxe inline qui est spécifique à chaque implémentation de la <xref:System.Windows.Media.Brush> classe abstraite.</span><span class="sxs-lookup"><span data-stu-id="6950f-2562">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property value can use an inline syntax that is specific to each implementation of the <xref:System.Windows.Media.Brush> abstract class.</span></span> <span data-ttu-id="6950f-2563">Pour plus d’informations, consultez [peinture avec des couleurs unies et vue d’ensemble des dégradés](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-2563">For more information, see [Painting with Solid Colors and Gradients Overview](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_OpacityMask"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-2564">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-2564">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2565">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2565">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityMaskProperty>|  
|<span data-ttu-id="6950f-2566">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-2566">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-2567">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-2567">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-2568">L’exemple de balise suivant montre un <xref:System.Windows.Media.ImageBrush> masque d’opacité appliqué à un autre <xref:System.Windows.Controls.Image>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2568">The following markup example shows an <xref:System.Windows.Media.ImageBrush> opacity mask applied to another <xref:System.Windows.Controls.Image>.</span></span>  
  
 [!code-xaml[OpacityMasksSnippet#UIElementOpacityMask](~/samples/snippets/csharp/VS_Snippets_Wpf/OpacityMasksSnippet/CS/ImageBrushExample.xaml#uielementopacitymask)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMaskProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityMaskProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityMaskProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityMaskProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityMaskProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityMaskProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2569">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.OpacityMask" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2569">Identifies the <see cref="P:System.Windows.UIElement.OpacityMask" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2570">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.Opacity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2570">Identifies the <see cref="P:System.Windows.UIElement.Opacity" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistId">
      <MemberSignature Language="C#" Value="public int PersistId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PersistId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.PersistId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PersistId { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2571">Obtient une valeur qui identifie cet élément de manière unique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2571">Gets a value that uniquely identifies this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-2572">Identificateur unique pour cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2572">The unique identifier for this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2573"><xref:System.Windows.UIElement.PersistId%2A> identifie de façon unique chaque élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-2573"><xref:System.Windows.UIElement.PersistId%2A> uniquely identifies each element.</span></span> <span data-ttu-id="6950f-2574">Un élément conserve le même <xref:System.Windows.UIElement.PersistId%2A> chaque fois que le même [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] est chargé (y compris les représentations binaires).</span><span class="sxs-lookup"><span data-stu-id="6950f-2574">An element keeps the same <xref:System.Windows.UIElement.PersistId%2A> every time the same [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] is loaded (including binary representations).</span></span> <span data-ttu-id="6950f-2575">Cet identificateur est utilisé pour la configuration requise lors du chargement, de l’analyse et de sérialisation interne.</span><span class="sxs-lookup"><span data-stu-id="6950f-2575">This identifier is used for internal loading, parsing and serialization requirements.</span></span> <span data-ttu-id="6950f-2576">Elle n’est pas destinée à être utilisée par votre code d’application.</span><span class="sxs-lookup"><span data-stu-id="6950f-2576">It is not intended to be used by your application code.</span></span>  
  
 <span data-ttu-id="6950f-2577">Cette propriété n’a aucune relation avec la <xref:System.Object.GetHashCode%2A> résultat pour toute instance donnée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2577">This property has no relationship to the <xref:System.Object.GetHashCode%2A> result for any given instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="6950f-2578">Sens de parcours indiqué du focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2578">The direction of the requested focus traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-2579">En cas de substitution dans une classe dérivée, retourne l'élément prévu pour faire l'objet du focus selon un sens spécifié de parcours du focus, sans pour autant déplacer le focus sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2579">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-2580">L'élément qui devrait recevoir le focus si <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> était effectivement appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2580">The element that would have received focus if <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2581">L’implémentation par défaut de cette méthode dans cette classe est incomplète et retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="6950f-2581">The default implementation of this method in this class is incomplete, and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2582">Se produit quand le système d’entrée signale un événement de glissement sous-jacent qui a pour cible cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2582">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2583">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewDragEnter> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2583">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2584">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewDragEnter> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2584">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2585">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2585">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2586">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2586">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="6950f-2587">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2587">Routing strategy</span></span>|<span data-ttu-id="6950f-2588">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2588">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2589">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2589">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="6950f-2590">L’événement par propagation correspondant est <xref:System.Windows.UIElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2590">The corresponding bubbling event is <xref:System.Windows.UIElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="6950f-2591">Substituer <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2591">Override <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2592">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewDragEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2592">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2593">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2593">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2594">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2594">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2595">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2595">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2596">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2596">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2597">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2597">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2598">Se produit quand le système d’entrée signale un événement de glissement sous-jacent qui a pour origine cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2598">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2599">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewDragLeave> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2599">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2600">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewDragLeave> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2600">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2601">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2601">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2602">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2602">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="6950f-2603">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2603">Routing strategy</span></span>|<span data-ttu-id="6950f-2604">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2604">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2605">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2605">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="6950f-2606">L’événement par propagation correspondant est <xref:System.Windows.UIElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2606">The corresponding bubbling event is <xref:System.Windows.UIElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="6950f-2607">Substituer <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2607">Override <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2608">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewDragLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2608">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2609">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2609">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2610">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2610">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2611">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2611">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2612">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2612">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2613">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2613">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2614">Se produit quand le système d’entrée signale un événement de glissement sous-jacent avec pour cible de déplacement potentielle cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2614">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2615">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewDragOver> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2615">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2616">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewDragOver> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2616">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2617">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2617">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2618">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2618">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragOverEvent>|  
|<span data-ttu-id="6950f-2619">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2619">Routing strategy</span></span>|<span data-ttu-id="6950f-2620">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2620">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2621">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2621">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="6950f-2622">L’événement par propagation correspondant est <xref:System.Windows.UIElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2622">The corresponding bubbling event is <xref:System.Windows.UIElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="6950f-2623">Substituer <xref:System.Windows.UIElement.OnPreviewDragOver%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2623">Override <xref:System.Windows.UIElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2624">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewDragOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2624">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2625">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2625">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2626">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2626">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2627">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2627">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2628">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2628">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2629">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2629">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2630">Se produit quand le système d’entrée signale un événement de déplacement sous-jacent avec cet élément comme cible de déplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2630">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2631">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewDrop> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2631">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDrop> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2632">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewDrop> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2632">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2633">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2633">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2634">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2634">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDropEvent>|  
|<span data-ttu-id="6950f-2635">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2635">Routing strategy</span></span>|<span data-ttu-id="6950f-2636">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2636">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2637">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2637">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="6950f-2638">L’événement par propagation correspondant est <xref:System.Windows.UIElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2638">The corresponding bubbling event is <xref:System.Windows.UIElement.Drop>.</span></span>  
  
-   <span data-ttu-id="6950f-2639">Substituer <xref:System.Windows.UIElement.OnPreviewDrop%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2639">Override <xref:System.Windows.UIElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2640">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewDrop" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2640">Identifies the <see cref="E:System.Windows.UIElement.PreviewDrop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2641">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2641">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2642">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2642">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2643">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2643">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2644">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2644">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2645">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2645">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2646">Se produit au début d’une opération de glisser-déposer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2646">Occurs when a drag-and-drop operation is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2647">Le <xref:System.Windows.UIElement.PreviewGiveFeedback> événement permet à la source d’un événement glisser de modifier l’apparence du pointeur de la souris, pour fournir une rétroaction visuelle pendant une opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="6950f-2647">The <xref:System.Windows.UIElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="6950f-2648">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewGiveFeedback> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2648">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2649">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewGiveFeedback> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2649">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2650">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2650">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2651">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2651">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="6950f-2652">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2652">Routing strategy</span></span>|<span data-ttu-id="6950f-2653">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2653">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2654">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2654">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="6950f-2655">L’événement par propagation correspondant est <xref:System.Windows.UIElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2655">The corresponding bubbling event is <xref:System.Windows.UIElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="6950f-2656">Substituer <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2656">Override <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2657">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2657">Identifies the <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2658">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2658">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2659">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2659">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2660">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2660">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2661">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2661">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2662">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2662">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2663">Se produit lorsque le focus du clavier est sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2663">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2664">Cet événement utilise le tunneling de routage, l’élément qui a le focus peut être un élément enfant au lieu de l’élément où le Gestionnaire d’événements est attaché de réellement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2664">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="6950f-2665">Vérifiez le <xref:System.Windows.RoutedEventArgs.Source%2A> dans les données d’événement pour déterminer l’élément qui a le focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-2665">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="6950f-2666">Cet événement crée un alias pour le <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2666">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2667">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> événements sont attachés à sous-jacent <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2667">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2668">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2668">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2669">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2669">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="6950f-2670">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2670">Routing strategy</span></span>|<span data-ttu-id="6950f-2671">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2671">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2672">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2672">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="6950f-2673">L’événement par propagation correspondant est <xref:System.Windows.UIElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2673">The corresponding bubbling event is <xref:System.Windows.UIElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="6950f-2674">Substituer <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2674">Override <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2675">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2675">Identifies the <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2676">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2676">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2677">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2677">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2678">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2678">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2679">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2679">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2680">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2680">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2681">Se produit quand une touche est enfoncée alors que l’élément a le focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2681">Occurs when a key is pressed while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2682">Gestion des touches interagit avec d’autres fonctionnalités de plateforme telles que de la composition d’exécution des commandes et le texte.</span><span class="sxs-lookup"><span data-stu-id="6950f-2682">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="6950f-2683">Le <xref:System.Windows.UIElement.KeyDown> événement est un événement d’entrée de texte de niveau inférieur qui peuvent ne pas fonctionner comme prévu sur certains contrôles.</span><span class="sxs-lookup"><span data-stu-id="6950f-2683">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="6950f-2684">Il s’agit, car certains contrôles disposent de composition de contrôle ou la gestion de classe qui fournit une version de niveau supérieur du texte d’entrée de la gestion et des événements connexes.</span><span class="sxs-lookup"><span data-stu-id="6950f-2684">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="6950f-2685">Cet événement crée un alias pour le <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewKeyDown> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2685">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2686">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewKeyDown> événements sont attachés à sous-jacent <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2686">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2687">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2687">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2688">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2688">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="6950f-2689">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2689">Routing strategy</span></span>|<span data-ttu-id="6950f-2690">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2690">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2691">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2691">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="6950f-2692">L’événement par propagation correspondant est <xref:System.Windows.UIElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2692">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="6950f-2693">Substituer <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2693">Override <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2694">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewKeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2694">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2695">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2695">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2696">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2696">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2697">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2697">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2698">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2698">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2699">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2699">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2700">Se produit quand une touche est relâchée alors que l’élément a le focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2700">Occurs when a key is released while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2701">Gestion des touches interagit avec d’autres fonctionnalités de plateforme telles que de la composition d’exécution des commandes et le texte.</span><span class="sxs-lookup"><span data-stu-id="6950f-2701">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="6950f-2702">Le <xref:System.Windows.UIElement.KeyUp> événement est un événement d’entrée de texte de niveau inférieur qui peuvent ne pas fonctionner comme prévu sur certains contrôles.</span><span class="sxs-lookup"><span data-stu-id="6950f-2702">The <xref:System.Windows.UIElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="6950f-2703">Il s’agit, car certains contrôles disposent de composition de contrôle ou la gestion de classe qui fournit une version de niveau supérieur du texte d’entrée de la gestion et des événements connexes.</span><span class="sxs-lookup"><span data-stu-id="6950f-2703">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="6950f-2704">Pour plus d’informations, consultez la documentation pour les contrôles individuels.</span><span class="sxs-lookup"><span data-stu-id="6950f-2704">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="6950f-2705">Cet événement crée un alias pour le <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewKeyUp> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2705">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2706">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewKeyUp> événements sont attachés à sous-jacent <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2706">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2707">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2707">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2708">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2708">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="6950f-2709">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2709">Routing strategy</span></span>|<span data-ttu-id="6950f-2710">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2710">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2711">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2711">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="6950f-2712">L’événement par propagation correspondant est <xref:System.Windows.UIElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2712">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="6950f-2713">Substituer <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2713">Override <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2714">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewKeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2714">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2715">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2715">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2716">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2716">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2717">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2717">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2718">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2718">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2719">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2719">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2720">Se produit lorsque le focus du clavier n'est plus sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2720">Occurs when the keyboard is no longer focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2721">Cet événement utilise le tunneling de routage, l’élément qui perd le focus peut être un élément enfant au lieu de l’élément où le Gestionnaire d’événements est attaché de réellement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2721">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="6950f-2722">Vérifiez le <xref:System.Windows.RoutedEventArgs.Source%2A> dans les données d’événement pour déterminer l’élément réel qui perd le focus.</span><span class="sxs-lookup"><span data-stu-id="6950f-2722">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="6950f-2723">Cet événement crée un alias pour le <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2723">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2724">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> événements sont attachés à sous-jacent <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2724">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2725">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2725">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2726">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2726">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="6950f-2727">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2727">Routing strategy</span></span>|<span data-ttu-id="6950f-2728">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2728">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2729">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2729">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="6950f-2730">L’événement par propagation correspondant est <xref:System.Windows.UIElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2730">The corresponding bubbling event is <xref:System.Windows.UIElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="6950f-2731">Substituer <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2731">Override <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2732">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2732">Identifies the <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2733">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2733">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2734">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2734">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2735">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2735">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2736">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2736">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2737">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2737">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2738">Se produit lorsqu'un bouton de la souris est enfoncé alors que le pointeur est sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2738">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2739">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewMouseDown> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2739">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2740">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewMouseDown> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2740">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-2741">Le <xref:System.Windows.UIElement.PreviewMouseDown> événement est déclenché souvent avec <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> ou <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, ce qui correspond à une action sur l’un des deux boutons de souris standard.</span><span class="sxs-lookup"><span data-stu-id="6950f-2741">The <xref:System.Windows.UIElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="6950f-2742"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> et <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> sont également des événements routés, mais ils sont les événements routés directs, et l’événement spécifique au bouton approprié est déclenché lorsque la <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> événement atteint cet élément le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2742"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="6950f-2743">Consultez la section Notes pour <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> ou <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2743">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2744">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2744">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2745">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2745">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="6950f-2746">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2746">Routing strategy</span></span>|<span data-ttu-id="6950f-2747">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2747">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2748">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2748">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-2749">L’événement par propagation correspondant est <xref:System.Windows.UIElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2749">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="6950f-2750">Substituer <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2750">Override <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2751">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewMouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2751">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2752">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2752">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2753">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2753">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2754">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2754">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2755">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2755">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2756">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2756">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2757">Se produit lorsque le bouton gauche de la souris est enfoncé alors que le pointeur est sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2757">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2758">Bien que cela semble suivre un itinéraire de tunneling dans une arborescence d’éléments, il est en fait un événement routé direct qui est déclenché à plusieurs reprises dans l’arborescence d’éléments, chacun <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2758">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-2759">Cet événement est parmi plusieurs événements associés qui signalent les caractéristiques de sous-jacent pour le bouton de la souris <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> événement, qui est un événement attaché traité par chaque élément le long d’un itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2759">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="6950f-2760">Les données de cet événement exposent les données d’événement de l’objet sous-jacent <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2760">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="6950f-2761">Si cet événement est marqué comme géré sur l’itinéraire, le bouton de la souris spécifiques sont toujours déclenchés ; Toutefois, les gestionnaires des événements spécifiques de bouton de la souris doivent être ajoutés en appelant explicitement <xref:System.Windows.UIElement.AddHandler%2A>, avec l’option pour gérer les événements qui sont déjà marqués comme gérés, afin d’être des écouteurs à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2761">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="6950f-2762">Si vous marquez <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> gérée, vous marquez essentiellement <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> prise en charge pour toutes les autres écouteurs sur l’itinéraire et tous les événements associés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2762">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="6950f-2763">Cela peut inclure les événements du Gestionnaire de la classe générée comme <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2763">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="6950f-2764">Point de vue conceptuel, considérez cet événement (et d’autres événements de bouton de la souris sur <xref:System.Windows.UIElement>) pour être une « service » de la souris (avec la définition de service fournie par le <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="6950f-2764">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="6950f-2765">L’événement ajoute la commodité de ne nécessitant ne pas de vérifier les États de bouton de souris (gauche à droite, haut-bas) des événements de souris d’origine dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2765">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="6950f-2766">Pour des scénarios plus avancés, tels que la vérification des États de boutons non standard, vous devrez peut-être utiliser le [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sur la <xref:System.Windows.Input.Mouse> classe plutôt que ceux sur <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2766">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2767">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2767">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2768">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2768">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="6950f-2769">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2769">Routing strategy</span></span>|<span data-ttu-id="6950f-2770">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-2770">Direct</span></span>|  
|<span data-ttu-id="6950f-2771">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2771">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-2772">Substituer <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2772">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2773">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2773">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2774">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2774">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2775">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2775">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2776">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2776">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2777">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2777">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2778">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2778">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2779">Se produit lorsque le bouton gauche de la souris est relâché alors que le pointeur est sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2779">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2780">Bien que cela semble suivre un itinéraire de tunneling dans une arborescence d’éléments, il est en fait un événement routé direct qui est déclenché à plusieurs reprises dans l’arborescence d’éléments, chacun <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2780">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-2781">Cet événement est parmi plusieurs événements associés qui signalent les caractéristiques de sous-jacent pour le bouton de la souris <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> événement, qui est un événement attaché traité par chaque élément le long d’un itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2781">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="6950f-2782">Les données de cet événement exposent les données d’événement de l’objet sous-jacent <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2782">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="6950f-2783">Si cet événement est marqué comme géré sur l’itinéraire, le bouton de la souris spécifiques sont toujours déclenchés ; Toutefois, les gestionnaires des événements spécifiques de bouton de la souris doivent être ajoutés en appelant explicitement <xref:System.Windows.UIElement.AddHandler%2A>, avec l’option pour gérer les événements qui sont déjà marqués comme gérés, afin d’être des écouteurs à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2783">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="6950f-2784">Si vous marquez <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> gérée, vous marquez essentiellement <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> prise en charge pour toutes les autres écouteurs sur l’itinéraire et tous les événements associés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2784">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="6950f-2785">Point de vue conceptuel, considérez cet événement (et d’autres événements de bouton de la souris sur <xref:System.Windows.UIElement>) pour être une « service » de la souris (avec la définition de service fournie par le <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="6950f-2785">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="6950f-2786">L’événement ajoute la commodité de ne nécessitant ne pas de vérifier les États de bouton de souris (gauche à droite, haut-bas) des événements de souris d’origine dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2786">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="6950f-2787">Pour des scénarios plus avancés, tels que la vérification des États de boutons non standard, vous devrez peut-être utiliser le [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sur la <xref:System.Windows.Input.Mouse> classe plutôt que ceux sur <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2787">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2788">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2788">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2789">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2789">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="6950f-2790">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2790">Routing strategy</span></span>|<span data-ttu-id="6950f-2791">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-2791">Direct</span></span>|  
|<span data-ttu-id="6950f-2792">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2792">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-2793">Substituer <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2793">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2794">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2794">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2795">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2795">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2796">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2796">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2797">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2797">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2798">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2798">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2799">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2799">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2800">Se produit lorsque le pointeur de la souris se déplace en étant sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2800">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2801">Cet événement produit lorsque le pointeur de souris entrée dans les limites de l’élément, et lorsque le pointeur de la souris se déplace également tout en restant dans les limites de l’élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-2801">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="6950f-2802">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewMouseMove> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2802">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2803">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewMouseMove> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2803">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2804">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2804">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2805">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2805">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="6950f-2806">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2806">Routing strategy</span></span>|<span data-ttu-id="6950f-2807">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2807">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2808">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2808">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="6950f-2809">L’événement par propagation correspondant est <xref:System.Windows.UIElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2809">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="6950f-2810">Substituer <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2810">Override <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2811">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewMouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2811">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2812">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2812">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2813">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2813">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2814">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2814">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2815">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2815">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2816">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2816">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2817">Se produit lorsque le bouton droit de la souris est enfoncé avec le pointeur de la souris sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2817">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2818">Bien que cela semble suivre un itinéraire de tunneling dans une arborescence d’éléments, il est en fait un événement routé direct qui est déclenché à plusieurs reprises dans l’arborescence d’éléments, chacun <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2818">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-2819">Cet événement est parmi plusieurs événements associés qui signalent les caractéristiques de sous-jacent pour le bouton de la souris <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> événement, qui est un événement attaché traité par chaque élément le long d’un itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2819">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="6950f-2820">Les données de cet événement exposent les données d’événement de l’objet sous-jacent <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2820">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="6950f-2821">Si cet événement est marqué comme géré sur l’itinéraire, le bouton de la souris spécifiques sont toujours déclenchés ; Toutefois, les gestionnaires des événements spécifiques de bouton de la souris doivent être ajoutés en appelant explicitement <xref:System.Windows.UIElement.AddHandler%2A>, avec l’option pour gérer les événements qui sont déjà marqués comme gérés, afin d’être des écouteurs à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2821">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="6950f-2822">Si vous marquez <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> gérée, vous marquez essentiellement <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> prise en charge pour toutes les autres écouteurs sur l’itinéraire et tous les événements associés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2822">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="6950f-2823">Cela peut inclure les événements du Gestionnaire de la classe générée comme <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2823">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="6950f-2824">Point de vue conceptuel, considérez cet événement (et d’autres événements de bouton de la souris sur <xref:System.Windows.UIElement>) pour être une « service » de la souris (avec la définition de service fournie par le <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="6950f-2824">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="6950f-2825">L’événement ajoute la commodité de ne nécessitant ne pas de vérifier les États de bouton de souris (gauche à droite, haut-bas) des événements de souris d’origine dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2825">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="6950f-2826">Pour des scénarios plus avancés, tels que la vérification des États de boutons non standard, vous devrez peut-être utiliser le [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sur la <xref:System.Windows.Input.Mouse> classe plutôt que ceux sur <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2826">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2827">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2827">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2828">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2828">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="6950f-2829">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2829">Routing strategy</span></span>|<span data-ttu-id="6950f-2830">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-2830">Direct</span></span>|  
|<span data-ttu-id="6950f-2831">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2831">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-2832">Substituer <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2832">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2833">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2833">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2834">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2834">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2835">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2835">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2836">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2836">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2837">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2837">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2838">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2838">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2839">Se produit lorsque le bouton droit de la souris est relâché avec le pointeur de la souris sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2839">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2840">Bien que cela semble suivre un itinéraire de tunneling dans une arborescence d’éléments, il est en fait un événement routé direct qui est déclenché à plusieurs reprises dans l’arborescence d’éléments, chacun <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2840">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-2841">Cet événement est parmi plusieurs événements associés qui signalent les caractéristiques de sous-jacent pour le bouton de la souris <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> événement, qui est un événement attaché traité par chaque élément le long d’un itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2841">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="6950f-2842">Les données de cet événement exposent les données d’événement de l’objet sous-jacent <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2842">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="6950f-2843">Si cet événement est marqué comme géré sur l’itinéraire, le bouton de la souris spécifiques sont toujours déclenchés ; Toutefois, les gestionnaires des événements spécifiques de bouton de la souris doivent être ajoutés en appelant explicitement <xref:System.Windows.UIElement.AddHandler%2A>, avec l’option pour gérer les événements qui sont déjà marqués comme gérés, afin d’être des écouteurs à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2843">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="6950f-2844">Si vous marquez <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> gérée, vous marquez essentiellement <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> prise en charge pour toutes les autres écouteurs sur l’itinéraire et tous les événements associés.</span><span class="sxs-lookup"><span data-stu-id="6950f-2844">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="6950f-2845">Point de vue conceptuel, considérez cet événement (et d’autres événements de bouton de la souris sur <xref:System.Windows.UIElement>) pour être une « service » de la souris (avec la définition de service fournie par le <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="6950f-2845">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="6950f-2846">L’événement ajoute la commodité de ne nécessitant ne pas de vérifier les États de bouton de souris (gauche à droite, haut-bas) des événements de souris d’origine dans les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2846">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="6950f-2847">Pour des scénarios plus avancés, tels que la vérification des États de boutons non standard, vous devrez peut-être utiliser le [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sur la <xref:System.Windows.Input.Mouse> classe plutôt que ceux sur <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2847">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2848">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2848">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2849">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2849">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="6950f-2850">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2850">Routing strategy</span></span>|<span data-ttu-id="6950f-2851">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-2851">Direct</span></span>|  
|<span data-ttu-id="6950f-2852">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2852">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-2853">Substituer <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2853">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2854">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2854">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2855">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2855">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2856">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2856">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2857">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2857">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2858">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2858">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2859">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2859">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2860">Se produit lorsqu’un bouton de la souris est relâché alors que le pointeur est sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2860">Occurs when any mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2861">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewMouseUp> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2861">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2862">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewMouseUp> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2862">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-2863">Le <xref:System.Windows.UIElement.PreviewMouseUp> événement est déclenché souvent avec <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> ou <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, ce qui correspond à une action sur l’un des deux boutons de souris standard.</span><span class="sxs-lookup"><span data-stu-id="6950f-2863">The <xref:System.Windows.UIElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="6950f-2864"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> et <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> sont également des événements routés, mais ils sont les événements routés directs, et l’événement spécifique au bouton approprié est déclenché lorsque la <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> événement atteint cet élément le long de l’itinéraire d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2864"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="6950f-2865">Consultez la section Notes pour <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> ou <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2865">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2866">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2866">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2867">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2867">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="6950f-2868">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2868">Routing strategy</span></span>|<span data-ttu-id="6950f-2869">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2869">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2870">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2870">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-2871">L’événement par propagation correspondant est <xref:System.Windows.UIElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2871">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="6950f-2872">Substituer <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2872">Override <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2873">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewMouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2873">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2874">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2874">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2875">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2875">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2876">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2876">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2877">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2877">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2878">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2878">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2879">Se produit lorsque l'utilisateur utilise la roulette de la souris avec le pointeur de la souris sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2879">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2880">Capture le focus ou de la souris sont prioritaires sur les où se trouve le pointeur de souris ; Par conséquent, si vous recevez cet événement d’un élément ayant le focus ou de la capture, le pointeur de la souris peut en fait être sur un autre élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-2880">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="6950f-2881">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewMouseMove> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2881">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2882">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewMouseMove> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2882">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2883">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2883">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2884">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2884">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="6950f-2885">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2885">Routing strategy</span></span>|<span data-ttu-id="6950f-2886">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2886">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2887">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2887">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="6950f-2888">L’événement par propagation correspondant est <xref:System.Windows.UIElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2888">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="6950f-2889">Substituer <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2889">Override <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2890">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewMouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2890">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2891">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2891">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2892">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2892">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2893">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2893">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2894">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2894">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2895">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2895">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2896">Se produit lorsque l’état du clavier ou des boutons de la souris change au cours d’une opération de glisser-déposer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2896">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2897">Le <xref:System.Windows.UIElement.PreviewQueryContinueDrag> événement permet à la source de glissement déclarer si l’opération de glisser-déplacer doit être annulée.</span><span class="sxs-lookup"><span data-stu-id="6950f-2897">The <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="6950f-2898">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewQueryContinueDrag> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2898">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2899">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewQueryContinueDrag> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2899">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2900">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2900">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2901">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2901">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="6950f-2902">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2902">Routing strategy</span></span>|<span data-ttu-id="6950f-2903">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2903">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2904">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2904">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="6950f-2905">L’événement par propagation correspondant est <xref:System.Windows.UIElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2905">The corresponding bubbling event is <xref:System.Windows.UIElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="6950f-2906">Substituer <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2906">Override <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2907">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2907">Identifies the <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2908">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2908">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2909">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2909">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2910">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2910">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2911">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2911">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2912">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2912">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2913">Se produit lorsque le bouton du stylet est enfoncé avec le pointeur sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2913">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2914">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewStylusButtonDown> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2914">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2915">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewStylusButtonDown> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2915">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-2916">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-2916">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-2917">Pour plus d’informations, consultez [entrée tactile prise en charge dans Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) et [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-2917">For more information, see [Touch Input Support in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2918">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2918">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2919">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2919">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="6950f-2920">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2920">Routing strategy</span></span>|<span data-ttu-id="6950f-2921">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2921">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2922">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2922">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-2923">L’événement par propagation correspondant est <xref:System.Windows.UIElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2923">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="6950f-2924">Substituer <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2924">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2925">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2925">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2926">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2926">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2927">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2927">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2928">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2928">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2929">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2929">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2930">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2930">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2931">Se produit lorsque le bouton du stylet est relâché avec le pointeur sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2931">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2932">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewStylusButtonUp> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2932">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2933">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewStylusButtonUp> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2933">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-2934">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-2934">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-2935">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-2935">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2936">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2936">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2937">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2937">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="6950f-2938">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2938">Routing strategy</span></span>|<span data-ttu-id="6950f-2939">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2939">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2940">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2940">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-2941">L’événement par propagation correspondant est <xref:System.Windows.UIElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2941">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="6950f-2942">Substituer <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2942">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2943">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2943">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2944">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2944">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2945">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2945">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2946">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2946">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2947">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2947">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2948">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2948">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2949">Se produit quand le stylet touche le numériseur alors qu’il est au-dessus de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2949">Occurs when the stylus touches the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2950">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewStylusDown> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2950">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2951">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewStylusDown> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2951">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-2952">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-2952">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-2953">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-2953">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2954">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2954">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2955">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2955">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="6950f-2956">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2956">Routing strategy</span></span>|<span data-ttu-id="6950f-2957">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2957">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2958">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2958">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="6950f-2959">L’événement par propagation correspondant est <xref:System.Windows.UIElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2959">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="6950f-2960">Substituer <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2960">Override <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2961">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewStylusDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2961">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2962">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2962">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2963">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2963">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2964">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2964">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2965">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2965">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2966">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2966">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2967">Se produit quand le stylet se déplace au-dessus d’un élément sans réellement toucher le numériseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2967">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2968">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewStylusInAirMove> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2968">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2969">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewStylusInAirMove> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2969">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-2970">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-2970">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-2971">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-2971">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2972">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2972">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2973">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2973">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="6950f-2974">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2974">Routing strategy</span></span>|<span data-ttu-id="6950f-2975">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2975">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2976">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2976">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-2977">L’événement par propagation correspondant est <xref:System.Windows.UIElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2977">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="6950f-2978">Substituer <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2978">Override <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2979">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2979">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2980">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2980">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2981">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2981">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-2982">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-2982">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-2983">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2983">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-2984">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2984">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2985">Se produit quand le stylet est suffisamment près du numériseur pour être détecté quand il se trouve au-dessus de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2985">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2986">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewStylusInRange> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-2986">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-2987">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewStylusInRange> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2987">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-2988">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-2988">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-2989">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-2989">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-2990">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-2990">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-2991">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-2991">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="6950f-2992">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-2992">Routing strategy</span></span>|<span data-ttu-id="6950f-2993">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-2993">Tunneling</span></span>|  
|<span data-ttu-id="6950f-2994">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-2994">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-2995">L’événement par propagation correspondant est <xref:System.Windows.UIElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="6950f-2995">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="6950f-2996">Substituer <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-2996">Override <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-2997">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewStylusInRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-2997">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-2998">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-2998">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-2999">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-2999">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3000">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3000">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3001">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3001">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3002">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3002">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3003">Se produit quand le stylet se déplace alors qu’il est au-dessus de l’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3003">Occurs when the stylus moves while over the element.</span>
          </span>
          <span data-ttu-id="6950f-3004">Pour déclencher cet événement, le stylet doit se déplacer au moment où il est détecté par le numériseur ; sinon, <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> est déclenché à la place.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3004">The stylus must move while being detected by the digitizer to raise this event, otherwise, <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3005">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewStylusMove> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3005">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3006">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewStylusMove> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3006">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3007">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3007">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3008">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3008">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3009">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3009">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3010">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3010">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="6950f-3011">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3011">Routing strategy</span></span>|<span data-ttu-id="6950f-3012">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-3012">Tunneling</span></span>|  
|<span data-ttu-id="6950f-3013">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3013">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-3014">L’événement par propagation correspondant est <xref:System.Windows.UIElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3014">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="6950f-3015">Substituer <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3015">Override <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3016">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewStylusMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3016">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3017">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3017">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3018">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3018">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3019">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3019">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3020">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3020">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3021">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3021">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3022">Se produit lorsque le stylet est trop loin du numériseur pour être détecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3022">Occurs when the stylus is too far from the digitizer to be detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3023">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewStylusOutOfRange> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3023">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3024">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewStylusOutOfRange> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3024">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3025">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3025">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3026">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3026">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3027">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3027">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3028">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3028">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="6950f-3029">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3029">Routing strategy</span></span>|<span data-ttu-id="6950f-3030">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-3030">Tunneling</span></span>|  
|<span data-ttu-id="6950f-3031">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3031">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-3032">L’événement par propagation correspondant est <xref:System.Windows.UIElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3032">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="6950f-3033">Substituer <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3033">Override <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3034">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3034">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3035">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3035">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3036">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3036">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3037">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3037">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3038">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3038">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3039">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3039">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3040">Se produit lorsqu'un utilisateur exécute un mouvement du stylet parmi plusieurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3040">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3041">Pour plus d’informations sur les mouvements de stylet, consultez <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3041">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="6950f-3042">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewStylusSystemGesture> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3042">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3043">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewStylusSystemGesture> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3043">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3044">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3044">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3045">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3045">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3046">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3046">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3047">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3047">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="6950f-3048">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3048">Routing strategy</span></span>|<span data-ttu-id="6950f-3049">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-3049">Tunneling</span></span>|  
|<span data-ttu-id="6950f-3050">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3050">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="6950f-3051">L’événement par propagation correspondant est <xref:System.Windows.UIElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3051">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="6950f-3052">Substituer <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3052">Override <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3053">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3053">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3054">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3054">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3055">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3055">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3056">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3056">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3057">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3057">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3058">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3058">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3059">Se produit quand l’utilisateur lève le stylet du numériseur alors qu’il se trouve sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3059">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3060">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewStylusDown> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3060">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3061">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewStylusDown> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3061">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3062">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3062">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3063">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3063">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3064">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3064">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3065">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3065">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="6950f-3066">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3066">Routing strategy</span></span>|<span data-ttu-id="6950f-3067">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-3067">Tunneling</span></span>|  
|<span data-ttu-id="6950f-3068">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3068">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-3069">L’événement par propagation correspondant est <xref:System.Windows.UIElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3069">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="6950f-3070">Substituer <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3070">Override <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3071">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewStylusUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3071">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3072">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3072">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3073">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3073">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3074">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3074">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3075">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3075">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3076">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3076">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3077">Se produit lorsque cet élément recueille du texte indépendamment du périphérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3077">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3078">Le <xref:System.Windows.UIElement.PreviewTextInput> événement permet à un composant ou une application à l’écoute pour l’entrée de texte de manière indépendante du périphérique.</span><span class="sxs-lookup"><span data-stu-id="6950f-3078">The <xref:System.Windows.UIElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="6950f-3079">Le clavier est le principal moyen de <xref:System.Windows.UIElement.PreviewTextInput>; mais la synthèse vocale, l’écriture manuscrite et autres périphériques d’entrée peuvent également générer <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3079">The keyboard is the primary means of <xref:System.Windows.UIElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="6950f-3080">En raison des combinaisons de touches, dans les claviers par défaut ou via des éditeurs de méthode d’entrée, plusieurs événements de touches peuvent déclencher qu’un seul événement d’entrée de texte.</span><span class="sxs-lookup"><span data-stu-id="6950f-3080">Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="6950f-3081">Cet événement crée un alias pour le <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.PreviewTextInput> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3081">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3082">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.PreviewTextInput> événements sont attachés à sous-jacent <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3082">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3083">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3083">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3084">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3084">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTextInputEvent>|  
|<span data-ttu-id="6950f-3085">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3085">Routing strategy</span></span>|<span data-ttu-id="6950f-3086">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-3086">Tunneling</span></span>|  
|<span data-ttu-id="6950f-3087">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3087">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="6950f-3088">L’événement par propagation correspondant est <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3088">The corresponding bubbling event is <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="6950f-3089">Substituer <xref:System.Windows.UIElement.OnPreviewTextInput%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3089">Override <xref:System.Windows.UIElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3090">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewTextInput" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3090">Identifies the <see cref="E:System.Windows.UIElement.PreviewTextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3091">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3091">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3092">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3092">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3093">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3093">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3094">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3094">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3095">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3095">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3096">Se produit quand l’utilisateur touche l’écran avec le doigt sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3096">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3097">Par défaut, le <xref:System.Windows.UIElement.PreviewTouchDown> et <xref:System.Windows.UIElement.TouchDown> événements ne se produisent pas jusqu'à ce qu’un doigt touche l’écran et se déplace.</span><span class="sxs-lookup"><span data-stu-id="6950f-3097">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="6950f-3098">Appuyer sur un doigt sur l’écran et maintenir sans le déplacer provoque l’appui sur le comportement et maintenir d’un <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3098">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="6950f-3099">Le comportement appuyer et maintenir est équivalent à un clic droit de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-3099">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="6950f-3100">Pour provoquer le <xref:System.Windows.UIElement.PreviewTouchDown> et <xref:System.Windows.UIElement.TouchDown> événements se produisent dès qu’un doigt touche l’écran, définissez la <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> propriété attachée `false` pour cet élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-3100">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3101">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3101">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3102">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3102">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="6950f-3103">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3103">Routing strategy</span></span>|<span data-ttu-id="6950f-3104">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-3104">Tunneling</span></span>|  
|<span data-ttu-id="6950f-3105">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3105">Delegate</span></span>|<span data-ttu-id="6950f-3106"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3106"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="6950f-3107">L’événement par propagation correspondant est <xref:System.Windows.UIElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3107">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="6950f-3108">Substituer <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3108">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3109">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewTouchDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3109">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3110">Se produit quand vous déplacez votre doigt sur l’écran pendant qu’il se trouve sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3110">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3111">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3111">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3112">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3112">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="6950f-3113">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3113">Routing strategy</span></span>|<span data-ttu-id="6950f-3114">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-3114">Tunneling</span></span>|  
|<span data-ttu-id="6950f-3115">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3115">Delegate</span></span>|<span data-ttu-id="6950f-3116"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3116"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="6950f-3117">L’événement par propagation correspondant est <xref:System.Windows.UIElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3117">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="6950f-3118">Substituer <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3118">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3119">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewTouchMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3119">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3120">Se produit quand vous soulevez votre doigt de l’écran pendant qu’il se trouve sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3120">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3121">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3121">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3122">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3122">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="6950f-3123">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3123">Routing strategy</span></span>|<span data-ttu-id="6950f-3124">Tunneling</span><span class="sxs-lookup"><span data-stu-id="6950f-3124">Tunneling</span></span>|  
|<span data-ttu-id="6950f-3125">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3125">Delegate</span></span>|<span data-ttu-id="6950f-3126"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3126"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="6950f-3127">L’événement par propagation correspondant est <xref:System.Windows.UIElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3127">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="6950f-3128">Substituer <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3128">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3129">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.PreviewTouchUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3129">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3130">Se produit lorsque l’état du clavier ou des boutons de la souris change au cours d’une opération de glisser-déposer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3130">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3131">Le <xref:System.Windows.UIElement.QueryContinueDrag> événement permet à la source déterminer si l’opération de glisser-déplacer doit être annulée.</span><span class="sxs-lookup"><span data-stu-id="6950f-3131">The <xref:System.Windows.UIElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="6950f-3132">Cet événement crée un alias pour le <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.QueryContinueDrag> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3132">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3133">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.QueryContinueDrag> événements sont attachés à sous-jacent <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3133">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3134">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3134">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3135">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3135">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryContinueDragEvent>|  
|<span data-ttu-id="6950f-3136">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3136">Routing strategy</span></span>|<span data-ttu-id="6950f-3137">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3137">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3138">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3138">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="6950f-3139">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3139">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="6950f-3140">Substituer <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3140">Override <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3141">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.QueryContinueDrag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3141">Identifies the <see cref="E:System.Windows.UIElement.QueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3142">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3142">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3143">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3143">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3144">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3144">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3145">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3145">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3146">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3146">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3147">Se produit quand l’affichage du curseur est demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3147">Occurs when the cursor is requested to display.</span>
          </span>
          <span data-ttu-id="6950f-3148">Cet événement est déclenché sur un élément chaque fois que le pointeur de la souris se déplace vers un nouvel emplacement, ce qui signifie qu’il peut être nécessaire de modifier l’objet curseur en fonction de sa nouvelle position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3148">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3149">Cet événement crée un alias pour le <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.QueryCursor> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3149">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryCursor> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3150">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.QueryCursor> événements sont attachés à sous-jacent <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3150">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3151">Le curseur qui est référencé par ce nom de l’événement n’est pas nécessairement le curseur de texte (parfois connu en tant que le point d’insertion).</span><span class="sxs-lookup"><span data-stu-id="6950f-3151">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="6950f-3152">Au lieu de cela, le curseur dans ce contexte est l’objet qui déclare l’affichage graphique actuel relatif à plusieurs périphériques d’entrée possibles ou les concepts de [!INCLUDE[TLA2#tla_win](~/includes/tla2sharptla-win-md.md)] de programmation.</span><span class="sxs-lookup"><span data-stu-id="6950f-3152">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in [!INCLUDE[TLA2#tla_win](~/includes/tla2sharptla-win-md.md)] programming.</span></span> <span data-ttu-id="6950f-3153">Cet objet est représenté par le <xref:System.Windows.Input.Cursor> classe dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="6950f-3153">That object is represented by the <xref:System.Windows.Input.Cursor> class in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="6950f-3154">Le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] système d’entrée permet de modifier ce curseur lorsqu’il représente la position à l’écran du pointeur de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-3154">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="6950f-3155">Vous pouvez utiliser des valeurs prédéfinies à partir de la <xref:System.Windows.Input.Cursors> énumération, ou vous pouvez déclarer un curseur personnalisé comme un fichier image.</span><span class="sxs-lookup"><span data-stu-id="6950f-3155">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="6950f-3156">À l’écoute pour le <xref:System.Windows.UIElement.QueryCursor> événement n’est pas une technique efficace pour la gestion de curseur.</span><span class="sxs-lookup"><span data-stu-id="6950f-3156">Listening for the <xref:System.Windows.UIElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="6950f-3157">Au lieu de cela, chaque élément doit définir son propre comportement du curseur avec <xref:System.Windows.FrameworkContentElement.Cursor%2A> et <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3157">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="6950f-3158">Vous pouvez vous fier uniquement <xref:System.Windows.UIElement.QueryCursor> si vous n’utilisez pas les éléments de base de niveau infrastructure WPF, ou dans des cas très rares où la définition du comportement du curseur sur une base par élément ne satisfait pas vos besoins.</span><span class="sxs-lookup"><span data-stu-id="6950f-3158">You should only rely on <xref:System.Windows.UIElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="6950f-3159">Pour plus d’informations sur l’implémentation du comportement du curseur en réponse à <xref:System.Windows.UIElement.QueryCursor>, consultez <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3159">For more information on implementing cursor behavior in response to <xref:System.Windows.UIElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3160">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3160">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3161">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3161">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryCursorEvent>|  
|<span data-ttu-id="6950f-3162">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3162">Routing strategy</span></span>|<span data-ttu-id="6950f-3163">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3163">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3164">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3164">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="6950f-3165">Il n’existe aucun événement de tunneling correspondant défini.</span><span class="sxs-lookup"><span data-stu-id="6950f-3165">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="6950f-3166">Substituer <xref:System.Windows.UIElement.OnQueryCursor%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3166">Override <xref:System.Windows.UIElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3167">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.QueryCursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3167">Identifies the <see cref="E:System.Windows.UIElement.QueryCursor" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3168">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3168">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3169">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3169">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3170">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3170">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3171">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3171">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3172">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3172">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6950f-3173">
            <see cref="T:System.Windows.RoutedEventArgs" /> qui contient les données de l'événement et qui identifie l'événement à déclencher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3173">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-3174">Déclenche un événement routé spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3174">Raises a specific routed event.</span>
          </span>
          <span data-ttu-id="6950f-3175">L'événement <see cref="T:System.Windows.RoutedEvent" /> à déclencher est identifié dans l'instance de <see cref="T:System.Windows.RoutedEventArgs" /> fournie (comme propriété <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> des données de cet événement).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3175">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3176">Le `e` paramètre est typé en tant que le type de base commun à toutes les données de l’événement routé ; Toutefois, les données d’événement doivent être indiquées le type de données d’événement plus spécifique qui est disponible pour l’événement déclenché, car <xref:System.Windows.RoutedEventArgs> contiennent des classes dérivées de la propriétés spécifiques des données prévues pour l’événement spécifique lorsqu’il est déclenché.</span><span class="sxs-lookup"><span data-stu-id="6950f-3176">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="6950f-3177"><xref:System.Windows.RoutedEventArgs> n’est pas simplement les propriétés de l’état de l’événement ; Il identifie également l’événement routé à déclencher.</span><span class="sxs-lookup"><span data-stu-id="6950f-3177"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="6950f-3178">Ce modèle de déclenchement d’événement et les données d’événement routé diffèrent [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] classes d’événements et des données, qui contiennent seulement des propriétés associées à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3178">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-3179">L’exemple suivant crée les données d’événement ajoute l’identificateur d’événement aux données et utilise ensuite l’instance de données d’événement à déclencher un événement routé personnalisé.</span><span class="sxs-lookup"><span data-stu-id="6950f-3179">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[RoutedEventCustom#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#raiseevent)]
 [!code-vb[RoutedEventCustom#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3180">Libère tous les périphériques tactiles capturés de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3180">Releases all captured touch devices from this element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3181">Libère la capture de la souris si cet élément suspend la capture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3181">Releases the mouse capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3182">Si cet élément ne contenait pas la capture, cette méthode n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="6950f-3182">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="6950f-3183">Pensez à vérifier la valeur de <xref:System.Windows.UIElement.IsMouseCaptured%2A> avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6950f-3183">Consider checking the value of <xref:System.Windows.UIElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-3184">L’exemple suivant est parallèle à l’exemple donné pour <xref:System.Windows.UIElement.CaptureMouse%2A>: il gère le bouton de la souris jusqu'à la capture de la souris de version et réactiver le déplacement de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-3184">The following example is the parallel to the example given for <xref:System.Windows.UIElement.CaptureMouse%2A>: it handles mouse button up to release mouse capture and re-enable moving the mouse.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3185">Libère la capture du stylet périphérique si cet élément suspend la capture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3185">Releases the stylus device capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3186">Si cet élément ne contenait pas la capture, cette méthode n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="6950f-3186">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="6950f-3187">Pensez à vérifier la valeur de <xref:System.Windows.UIElement.IsStylusCaptured%2A> avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6950f-3187">Consider checking the value of <xref:System.Windows.UIElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="6950f-3188">Périphérique à libérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3188">The device to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-3189">Tente de libérer le périphérique tactile spécifié de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3189">Attempts to release the specified touch device from this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-3190">
            <see langword="true" /> si le périphérique tactile est libéré ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3190">
              <see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6950f-3191">
            <paramref name="touchDevice" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3191">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="6950f-3192">Identificateur de l'événement routé pour lequel le gestionnaire est attaché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3192">The identifier of the routed event for which the handler is attached.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6950f-3193">Implémentation de gestionnaire spécifique à supprimer de la collection de gestionnaires d’événements de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3193">The specific handler implementation to remove from the event handler collection on this element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-3194">Supprime le gestionnaire d’événements routés spécifié de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3194">Removes the specified routed event handler from this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3195">Le scénario le plus courant pour utiliser cette [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] est lorsque vous implémentez le [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] événement « wrapper » qui est associé à un événement routé personnalisé, en particulier lorsque vous implémentez la logique de « supprimer » pour les gestionnaires le [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] niveau.</span><span class="sxs-lookup"><span data-stu-id="6950f-3195">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="6950f-3196">L’exemple qui suit cette section illustre ce scénario de remarques.</span><span class="sxs-lookup"><span data-stu-id="6950f-3196">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="6950f-3197">Appel de cette méthode n’a aucun effet s’il n’existe aucun gestionnaire inscrit avec les critères qui correspond aux paramètres d’entrée pour l’appel de méthode.</span><span class="sxs-lookup"><span data-stu-id="6950f-3197">Calling this method has no effect if there were no handlers registered with criteria that matches the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="6950f-3198">Si plusieurs gestionnaire est attaché qui correspond aux critères, uniquement le premier gestionnaire dans le gestionnaire a été supprimée des événements.</span><span class="sxs-lookup"><span data-stu-id="6950f-3198">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="6950f-3199">Ce comportement est cohérent avec [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] comportement de la `-=` opérateur.</span><span class="sxs-lookup"><span data-stu-id="6950f-3199">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="6950f-3200">Ni `routedEvent` ni `handler` peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="6950f-3200">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="6950f-3201">Tentative de valeur `null` lève une exception.</span><span class="sxs-lookup"><span data-stu-id="6950f-3201">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="6950f-3202">Cette méthode ignore la `handledEventsToo` informations de paramètre, qui sont fournies si le gestionnaire a d’abord été ajoutée avec la <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature qui permet la gestion des événements déjà gérés.</span><span class="sxs-lookup"><span data-stu-id="6950f-3202">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="6950f-3203">Type de gestionnaire est supprimé.</span><span class="sxs-lookup"><span data-stu-id="6950f-3203">Either type of handler is removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-3204">L’exemple suivant utilise <xref:System.Windows.UIElement.RemoveHandler%2A> dans le cadre d’une définition de wrapper d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3204">The following example uses <xref:System.Windows.UIElement.RemoveHandler%2A> as part of an event wrapper definition.</span></span>  
  
 [!code-csharp[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#addremovehandler)]
 [!code-vb[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#addremovehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="RenderSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size RenderSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size RenderSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderSize" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size RenderSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3205">Obtient (ou définit) la taille de rendu finale de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3205">Gets (or sets) the final render size of this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-3206">Taille de rendu de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3206">The rendered size for this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="6950f-3207">N’essayez pas de définir cette propriété dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ou dans le code, si vous utilisez le système de mise en page de niveau infrastructure WPF.</span><span class="sxs-lookup"><span data-stu-id="6950f-3207">Do not attempt to set this property, either in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or in code, if using the WPF framework-level layout system.</span></span> <span data-ttu-id="6950f-3208">Presque tous les scénarios d’application standard utilisera ce système de disposition.</span><span class="sxs-lookup"><span data-stu-id="6950f-3208">Nearly all typical application scenarios will use this layout system.</span></span> <span data-ttu-id="6950f-3209">Le système de disposition ne respecte pas les dimensions définies le <xref:System.Windows.UIElement.RenderSize%2A> propriété directement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3209">The layout system will not respect sizes set in the <xref:System.Windows.UIElement.RenderSize%2A> property directly.</span></span> <span data-ttu-id="6950f-3210">Le <xref:System.Windows.UIElement.RenderSize%2A> propriété est déclarée accessible en écriture uniquement afin d’activer certain cas qui contournent délibérément les protocoles typiques de disposition, telles que la prise en charge pour le pontage au niveau du noyau WPF la <xref:System.Windows.Documents.Adorner> classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3210">The <xref:System.Windows.UIElement.RenderSize%2A> property is declared writable only to enable certain WPF core-level bridging cases that deliberately circumvent the typical layout protocols, such as support for the <xref:System.Windows.Documents.Adorner> class.</span></span>  
  
 <span data-ttu-id="6950f-3211">Cette propriété peut être utilisée pour la vérification de la taille de rendu applicables au sein du système de disposition remplace comme <xref:System.Windows.UIElement.OnRender%2A> ou <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3211">This property can be used for checking the applicable render size within layout system overrides such as <xref:System.Windows.UIElement.OnRender%2A> or <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span></span>  
  
 <span data-ttu-id="6950f-3212">Un scénario plus courant consiste à gérer le <xref:System.Windows.FrameworkElement.SizeChanged> remplacer de l’événement avec le Gestionnaire de classe ou la <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3212">A more common scenario is handling the <xref:System.Windows.FrameworkElement.SizeChanged> event with the class handler override or the <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> event.</span></span>  
  
## Examples  
 <span data-ttu-id="6950f-3213">L’exemple suivant montre comment un ornement personnalisé utilise le <xref:System.Windows.UIElement.RenderSize%2A> valeur afin de créer et dimensionner le rectangle qui définit l’ornement, dans le cadre de son <xref:System.Windows.UIElement.OnRender%2A> implémentation.</span><span class="sxs-lookup"><span data-stu-id="6950f-3213">The following example shows how a custom adorner uses the <xref:System.Windows.UIElement.RenderSize%2A> value in order to create and size the rectangle graphic that defines the adorner, as part of its <xref:System.Windows.UIElement.OnRender%2A> implementation.</span></span>  
  
 [!code-csharp[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/csharp/VS_Snippets_Wpf/AdornersMiscCode/CSharp/Window1.xaml.cs#uielementdesiredsize)]
 [!code-vb[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AdornersMiscCode/visualbasic/window1.xaml.vb#uielementdesiredsize)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform RenderTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform RenderTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Transform ^ RenderTransform { System::Windows::Media::Transform ^ get(); void set(System::Windows::Media::Transform ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3214">Obtient ou définit les informations de transformation qui affectent la position de rendu de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3214">Gets or sets transform information that affects the rendering position of this element.</span>
          </span>
          <span data-ttu-id="6950f-3215">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3215">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-3216">Décrit les caractéristiques de la transformation de rendu souhaitée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3216">Describes the specifics of the desired render transform.</span>
          </span>
          <span data-ttu-id="6950f-3217">La valeur par défaut est <see cref="P:System.Windows.Media.Transform.Identity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3217">The default is <see cref="P:System.Windows.Media.Transform.Identity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3218">Une transformation de rendu ne pas régénérer la taille de la disposition ou afficher des informations sur la taille.</span><span class="sxs-lookup"><span data-stu-id="6950f-3218">A render transform does not regenerate layout size or render size information.</span></span> <span data-ttu-id="6950f-3219">Rendre les transformations sont généralement destinées à l’animation ou appliquer un effet temporaire à un élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-3219">Render transforms are typically intended for animating or applying a temporary effect to an element.</span></span> <span data-ttu-id="6950f-3220">Par exemple, l’élément peut effectuer un zoom lorsqu’ou placé le curseur au-dessus ou lors du chargement pour attirer l’attention sur cette partie de la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="6950f-3220">For example, the element might zoom when focused or moused over, or might jitter on load to draw the eye to that part of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransform"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-3221">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-3221">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3222">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3222">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformProperty>|  
|<span data-ttu-id="6950f-3223">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-3223">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-3224">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-3224">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point RenderTransformOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point RenderTransformOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransformOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransformOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point RenderTransformOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3225">Obtient ou définit le point central de toute transformation de rendu possible déclarée par <see cref="P:System.Windows.UIElement.RenderTransform" />, relative aux limites de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3225">Gets or sets the center point of any possible render transform declared by <see cref="P:System.Windows.UIElement.RenderTransform" />, relative to the bounds of the element.</span>
          </span>
          <span data-ttu-id="6950f-3226">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3226">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-3227">Valeur qui déclare la transformation de rendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3227">The value that declares the render transform.</span>
          </span>
          <span data-ttu-id="6950f-3228">La valeur par défaut est un <see cref="T:System.Windows.Point" /> caractérisé par les coordonnées (0,0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3228">The default value is a <see cref="T:System.Windows.Point" /> with coordinates (0,0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3229"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> utilisation quelque peu non standard de la <xref:System.Windows.Point> structure de valeur, qui le <xref:System.Windows.Point> ne représente pas un emplacement absolu dans un système de coordonnées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3229"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> has a somewhat nonstandard use of the <xref:System.Windows.Point> structure value, in that the <xref:System.Windows.Point> does not represent an absolute location in a coordinate system.</span></span> <span data-ttu-id="6950f-3230">Au lieu de cela, les valeurs comprises entre 0 et 1 sont interprétées comme un facteur pour la plage de l’élément actuel dans chaque axes x et y.</span><span class="sxs-lookup"><span data-stu-id="6950f-3230">Instead, values between 0 and 1 are interpreted as a factor for the range of the current element in each x,y axis.</span></span> <span data-ttu-id="6950f-3231">Par exemple, (0.5,0.5) provoquera la transformation de rendu sera centré sur l’élément, ou (1,1) placez la transformation de rendu dans la partie inférieure droite de l’élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-3231">For example, (0.5,0.5) will cause the render transform to be centered on the element, or (1,1) would place the render transform at the bottom right corner of the element.</span></span> <span data-ttu-id="6950f-3232"><xref:System.Double.NaN> n’est pas une valeur admise.</span><span class="sxs-lookup"><span data-stu-id="6950f-3232"><xref:System.Double.NaN> is not an accepted value.</span></span>  
  
 <span data-ttu-id="6950f-3233">Les valeurs supérieures à 0 et 1 sont également acceptées et seront produit dans d’autres effets de transformation non conventionnelle.</span><span class="sxs-lookup"><span data-stu-id="6950f-3233">Values beyond 0 and 1 are also accepted, and will result in more unconventional transform effects.</span></span> <span data-ttu-id="6950f-3234">Par exemple, si vous définissez <xref:System.Windows.UIElement.RenderTransformOrigin%2A> (5,5), puis appliquer un <xref:System.Windows.Media.RotateTransform>, le point de rotation sera bien en dehors des limites de l’élément lui-même.</span><span class="sxs-lookup"><span data-stu-id="6950f-3234">For instance, if you set <xref:System.Windows.UIElement.RenderTransformOrigin%2A> to be (5,5), and then apply a <xref:System.Windows.Media.RotateTransform>, the rotation point will be well outside the bounds of the element itself.</span></span> <span data-ttu-id="6950f-3235">La transformation sera lancer votre élément autour d’un cercle big provenant au-delà de la partie inférieure droite.</span><span class="sxs-lookup"><span data-stu-id="6950f-3235">The transform will spin your element around in a big circle that originates beyond bottom right.</span></span> <span data-ttu-id="6950f-3236">L’origine peut être quelque part à l’intérieur de son élément parent et ne peut être éventuellement hors trame ou la vue.</span><span class="sxs-lookup"><span data-stu-id="6950f-3236">The origin might be somewhere inside its parent element and could possibly be possibly out of frame or view.</span></span> <span data-ttu-id="6950f-3237">Valeurs de points négatives sont similaires, il va au-delà de l’angle supérieur gauche des limites.</span><span class="sxs-lookup"><span data-stu-id="6950f-3237">Negative point values are similar, these will go beyond the top left bounds.</span></span>  
  
 <span data-ttu-id="6950f-3238">Rendre les transformations n’affectent pas la mise en page et sont généralement utilisées pour animer ou appliquer un effet temporaire à un élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-3238">Render transforms do not affect layout, and are typically used to animate or apply a temporary effect to an element.</span></span>  
  
<a name="xamlAttributeUsage_RenderTransformOrigin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6950f-3239">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="6950f-3239">XAML Attribute Usage</span></span>  
  
```  
<object RenderTransformOrigin="xOrigin, yOrigin"/>  
```  
  
<a name="xamlPropertyElementUsage_RenderTransformOrigin"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="6950f-3240">Utilisation des éléments de propriété XAML</span><span class="sxs-lookup"><span data-stu-id="6950f-3240">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.RenderTransformOrigin>  
    <Point X=" xOrigin " Y=" yOrigin "/>  
  </object.RenderTransformOrigin>  
</object>  
```  
  
<a name="xamlValues_RenderTransformOrigin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="6950f-3241">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="6950f-3241">XAML Values</span></span>  
 <span data-ttu-id="6950f-3242">*xOrigin*</span><span class="sxs-lookup"><span data-stu-id="6950f-3242">*xOrigin*</span></span>  
 <span data-ttu-id="6950f-3243">Facteur d’origine horizontal.</span><span class="sxs-lookup"><span data-stu-id="6950f-3243">The horizontal origin factor.</span></span> <span data-ttu-id="6950f-3244">Cela est généralement indiquée comme une valeur comprise entre 0 et 1.</span><span class="sxs-lookup"><span data-stu-id="6950f-3244">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="6950f-3245">Consultez la section Notes.</span><span class="sxs-lookup"><span data-stu-id="6950f-3245">See Remarks.</span></span>  
  
 <span data-ttu-id="6950f-3246">*yOrigin*</span><span class="sxs-lookup"><span data-stu-id="6950f-3246">*yOrigin*</span></span>  
 <span data-ttu-id="6950f-3247">Facteur d’origine vertical.</span><span class="sxs-lookup"><span data-stu-id="6950f-3247">The vertical origin factor.</span></span> <span data-ttu-id="6950f-3248">Cela est généralement indiquée comme une valeur comprise entre 0 et 1.</span><span class="sxs-lookup"><span data-stu-id="6950f-3248">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="6950f-3249">Consultez la section Notes.</span><span class="sxs-lookup"><span data-stu-id="6950f-3249">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransformOrigin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-3250">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-3250">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3251">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3251">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformOriginProperty>|  
|<span data-ttu-id="6950f-3252">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-3252">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-3253">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-3253">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-3254">L’exemple suivant génère des éléments dans le code, applique un <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, puis applique une <xref:System.Windows.UIElement.RenderTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3254">The following example builds up elements in code, applies a <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, and then applies a  <xref:System.Windows.UIElement.RenderTransform%2A>.</span></span>  
  
 [!code-csharp[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/csharp/VS_Snippets_Wpf/transformanimations_snip/CSharp/RotateAboutCenterExample.cs#uielementrendertransformorigin)]
 [!code-vb[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/visualbasic/VS_Snippets_Wpf/transformanimations_snip/visualbasic/rotateaboutcenterexample.vb#uielementrendertransformorigin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.RenderTransform" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOriginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformOriginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformOriginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformOriginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformOriginProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3255">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.RenderTransformOrigin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3255">Identifies the <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3256">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.RenderTransform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3256">Identifies the <see cref="P:System.Windows.UIElement.RenderTransform" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3257">Indique si les processus de sérialisation doivent sérialiser le contenu de la propriété <see cref="P:System.Windows.UIElement.CommandBindings" /> sur les instances de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3257">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.CommandBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-3258">
            <see langword="true" /> si la valeur de la propriété <see cref="P:System.Windows.UIElement.CommandBindings" /> doit être sérialisée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3258">
              <see langword="true" /> if the <see cref="P:System.Windows.UIElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3259">Cette opération retourne `true` si <xref:System.Windows.UIElement.CommandBindings%2A> est défini localement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3259">This will return `true` if <xref:System.Windows.UIElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="6950f-3260">Cela `ShouldSerialize` méthode est fournie car la <xref:System.Windows.UIElement.CommandBindings%2A> propriété n’a pas de valeur par défaut simple.</span><span class="sxs-lookup"><span data-stu-id="6950f-3260">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="6950f-3261">Cette méthode indique si la propriété a changé sa valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-3261">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="6950f-3262">En règle générale, vous appelez cette méthode si vous développer un concepteur ou votre propre contrôle incorporant un <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3262">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-3263">Pour plus d’informations, consultez [définissant les valeurs par défaut avec les méthodes ShouldSerialize et Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3263">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3264">Indique si les processus de sérialisation doivent sérialiser le contenu de la propriété <see cref="P:System.Windows.UIElement.InputBindings" /> sur les instances de cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3264">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.InputBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-3265">
            <see langword="true" /> si la valeur de la propriété <see cref="P:System.Windows.UIElement.InputBindings" /> doit être sérialisée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3265">
              <see langword="true" /> if the <see cref="P:System.Windows.UIElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3266">Cette opération retourne `true` si <xref:System.Windows.UIElement.InputBindings%2A> est défini localement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3266">This will return `true` if <xref:System.Windows.UIElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="6950f-3267">Cela `ShouldSerialize` méthode est fournie car la <xref:System.Windows.UIElement.InputBindings%2A> propriété n’a pas de valeur par défaut simple.</span><span class="sxs-lookup"><span data-stu-id="6950f-3267">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="6950f-3268">Cette méthode indique si la propriété a changé sa valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="6950f-3268">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="6950f-3269">En règle générale, vous appelez cette méthode si vous développer un concepteur ou votre propre contrôle incorporant un <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3269">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="6950f-3270">Pour plus d’informations, consultez [définissant les valeurs par défaut avec les méthodes ShouldSerialize et Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3270">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixels">
      <MemberSignature Language="C#" Value="public bool SnapsToDevicePixels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapsToDevicePixels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapsToDevicePixels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SnapsToDevicePixels { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3271">Obtient ou définit une valeur qui détermine si le rendu de cet élément doit utiliser les paramètres de pixel spécifiques à l’appareil pendant le rendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3271">Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.</span>
          </span>
          <span data-ttu-id="6950f-3272">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3272">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-3273">
            <see langword="true" /> si le rendu de l'élément doit suivre les pixels du périphérique ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3273">
              <see langword="true" /> if the element should render in accordance to device pixels; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6950f-3274">La valeur par défaut telle qu'elle est déclarée sur <see cref="T:System.Windows.UIElement" /> est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3274">The default as declared on <see cref="T:System.Windows.UIElement" /> is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3275">Vous pouvez définir cette propriété `true` sur votre élément racine pour activer le pixel aligner rendu tout au long de l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="6950f-3275">You can set this property to `true` on your root element to enable pixel snap rendering throughout the UI.</span></span> <span data-ttu-id="6950f-3276">Pour les appareils fonctionnant supérieure à 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], pixel aligner rendu peut réduire les artefacts visuels d’anticrénelage à proximité des lignes pleines seule unité.</span><span class="sxs-lookup"><span data-stu-id="6950f-3276">For devices operating at greater than 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], pixel snap rendering can minimize anti-aliasing visual artifacts in the vicinity of single-unit solid lines.</span></span>  
  
 <span data-ttu-id="6950f-3277">Lors de l’héritage par <xref:System.Windows.FrameworkElement> ou toute autre classe, dérivée <xref:System.Windows.FrameworkElement> substitue les métadonnées pour cette propriété de dépendance définir le <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> propriété de métadonnées à `true`.</span><span class="sxs-lookup"><span data-stu-id="6950f-3277">When inherited by <xref:System.Windows.FrameworkElement> or any possible derived classes, <xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property to set the <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> metadata property to `true`.</span></span> <span data-ttu-id="6950f-3278">Ce qui en découle est que seul l’élément extérieur d’une sous-arborescence doit spécifier <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> en tant que `true`, et tous les éléments enfants de la sous-arborescence signalera puis <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> en tant que `true` et aura la <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> effet visuel.</span><span class="sxs-lookup"><span data-stu-id="6950f-3278">What this achieves is that only the outermost element in a subtree needs to specify <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true`, and all child elements of that subtree will then report <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true` and will have the <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> visual effect.</span></span>  
  
<a name="dependencyPropertyInfo_SnapsToDevicePixels"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-3279">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-3279">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3280">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3280">Identifier field</span></span>|<xref:System.Windows.UIElement.SnapsToDevicePixelsProperty>|  
|<span data-ttu-id="6950f-3281">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-3281">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-3282">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-3282">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixelsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SnapsToDevicePixelsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SnapsToDevicePixelsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SnapsToDevicePixelsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3283">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3283">Identifies the <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3284">Se produit lorsque le bouton du stylet est enfoncé avec le pointeur sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3284">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3285">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.StylusButtonDown> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3285">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3286">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.StylusButtonDown> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3286">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3287">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3287">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3288">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3288">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3289">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3289">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3290">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3290">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonDownEvent>|  
|<span data-ttu-id="6950f-3291">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3291">Routing strategy</span></span>|<span data-ttu-id="6950f-3292">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3292">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3293">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3293">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-3294">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3294">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="6950f-3295">Substituer <xref:System.Windows.UIElement.OnStylusButtonDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3295">Override <xref:System.Windows.UIElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3296">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.StylusButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3296">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3297">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3297">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3298">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3298">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3299">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3299">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3300">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3300">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3301">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3301">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3302">Se produit lorsque le bouton du stylet est relâché avec le pointeur sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3302">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3303">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.StylusButtonUp> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3303">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3304">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.StylusButtonUp> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3304">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3305">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3305">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3306">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3306">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3307">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3307">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3308">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3308">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonUpEvent>|  
|<span data-ttu-id="6950f-3309">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3309">Routing strategy</span></span>|<span data-ttu-id="6950f-3310">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3310">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3311">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3311">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="6950f-3312">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3312">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="6950f-3313">Substituer <xref:System.Windows.UIElement.OnStylusButtonUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3313">Override <xref:System.Windows.UIElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3314">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.StylusButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3314">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3315">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3315">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3316">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3316">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3317">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3317">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3318">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3318">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3319">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3319">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3320">Se produit quand le stylet touche le numériseur alors qu’il est au-dessus de l’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3320">Occurs when the stylus touches the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3321">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.StylusDown> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3321">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3322">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.StylusDown> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3322">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3323">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3323">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3324">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3324">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3325">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3325">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3326">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3326">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusDownEvent>|  
|<span data-ttu-id="6950f-3327">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3327">Routing strategy</span></span>|<span data-ttu-id="6950f-3328">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3328">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3329">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3329">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="6950f-3330">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3330">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="6950f-3331">Substituer <xref:System.Windows.UIElement.OnStylusDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3331">Override <xref:System.Windows.UIElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3332">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.StylusDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3332">Identifies the <see cref="E:System.Windows.UIElement.StylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3333">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3333">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3334">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3334">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3335">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3335">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3336">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3336">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3337">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3337">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3338">Se produit lorsque le stylet entre dans les limites de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3338">Occurs when the stylus enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3339"><xref:System.Windows.UIElement.StylusEnter> est une qui utilise l’événement directement la gestion des stratégie de routage.</span><span class="sxs-lookup"><span data-stu-id="6950f-3339"><xref:System.Windows.UIElement.StylusEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="6950f-3340">Les événements routés directs ne sont pas déclenchés sur un itinéraire. au lieu de cela, ils sont gérés dans le même élément dans lequel ils sont déclenchés.</span><span class="sxs-lookup"><span data-stu-id="6950f-3340">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="6950f-3341">Toutefois, ils activent d’autres aspects du comportement de l’événement routé, telles que les déclencheurs d’événements dans les styles.</span><span class="sxs-lookup"><span data-stu-id="6950f-3341">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="6950f-3342">Bien que <xref:System.Windows.UIElement.StylusEnter> effectue le suivi lorsque le stylet entre dans les limites d’un élément, cet événement plus signale littéralement qui le <xref:System.Windows.UIElement.IsStylusOver%2A> valeur de propriété a été modifiée à partir de `false` à `true` sur cet élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-3342">Although <xref:System.Windows.UIElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="6950f-3343">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.StylusEnter> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3343">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3344">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.StylusEnter> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3344">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3345">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3345">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3346">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3346">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3347">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3347">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3348">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3348">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusEnterEvent>|  
|<span data-ttu-id="6950f-3349">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3349">Routing strategy</span></span>|<span data-ttu-id="6950f-3350">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-3350">Direct</span></span>|  
|<span data-ttu-id="6950f-3351">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3351">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-3352">Substituer <xref:System.Windows.UIElement.OnStylusEnter%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3352">Override <xref:System.Windows.UIElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3353">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.StylusEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3353">Identifies the <see cref="E:System.Windows.UIElement.StylusEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3354">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3354">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3355">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3355">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3356">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3356">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3357">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3357">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3358">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3358">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3359">Se produit quand le stylet se déplace au-dessus d’un élément sans réellement toucher le numériseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3359">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3360">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.StylusInAirMove> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3360">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3361">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.StylusInAirMove> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3361">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3362">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3362">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3363">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3363">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3364">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3364">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3365">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3365">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="6950f-3366">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3366">Routing strategy</span></span>|<span data-ttu-id="6950f-3367">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3367">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3368">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3368">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-3369">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3369">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="6950f-3370">Substituer <xref:System.Windows.UIElement.OnStylusInAirMove%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3370">Override <xref:System.Windows.UIElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3371">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.StylusInAirMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3371">Identifies the <see cref="E:System.Windows.UIElement.StylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3372">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3372">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3373">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3373">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3374">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3374">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3375">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3375">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3376">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3376">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3377">Se produit quand le stylet est suffisamment près du numériseur pour être détecté quand il se trouve au-dessus de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3377">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3378">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.StylusInRange> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3378">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3379">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.StylusInRange> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3379">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3380">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3380">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3381">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3381">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3382">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3382">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3383">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3383">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInRangeEvent>|  
|<span data-ttu-id="6950f-3384">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3384">Routing strategy</span></span>|<span data-ttu-id="6950f-3385">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3385">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3386">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3386">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-3387">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3387">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="6950f-3388">Substituer <xref:System.Windows.UIElement.OnStylusInRange%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3388">Override <xref:System.Windows.UIElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3389">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.StylusInRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3389">Identifies the <see cref="E:System.Windows.UIElement.StylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3390">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3390">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3391">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3391">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3392">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3392">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3393">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3393">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3394">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3394">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3395">Se produit lorsque le stylet quitte les limites de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3395">Occurs when the stylus leaves the bounds of the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3396"><xref:System.Windows.UIElement.StylusLeave> est une qui utilise l’événement directement la gestion des stratégie de routage.</span><span class="sxs-lookup"><span data-stu-id="6950f-3396"><xref:System.Windows.UIElement.StylusLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="6950f-3397">Les événements routés directs ne sont pas déclenchés sur un itinéraire. au lieu de cela, ils sont gérés dans le même élément dans lequel ils sont déclenchés.</span><span class="sxs-lookup"><span data-stu-id="6950f-3397">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="6950f-3398">Toutefois, ils activent d’autres aspects du comportement de l’événement routé, telles que les déclencheurs d’événements dans les styles.</span><span class="sxs-lookup"><span data-stu-id="6950f-3398">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="6950f-3399">Bien que <xref:System.Windows.UIElement.StylusLeave> assure le suivi lorsque le stylet quitte les limites d’un élément, cet événement plusieurs rapports littéralement le <xref:System.Windows.UIElement.IsStylusOver%2A> valeur de propriété a été modifiée à partir de `true` à `false` sur cet élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-3399">Although <xref:System.Windows.UIElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="6950f-3400">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.StylusLeave> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3400">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3401">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.StylusLeave> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3401">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3402">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3402">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3403">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3403">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3404">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3404">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3405">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3405">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusLeaveEvent>|  
|<span data-ttu-id="6950f-3406">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3406">Routing strategy</span></span>|<span data-ttu-id="6950f-3407">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-3407">Direct</span></span>|  
|<span data-ttu-id="6950f-3408">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3408">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-3409">Substituer <xref:System.Windows.UIElement.OnStylusLeave%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3409">Override <xref:System.Windows.UIElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3410">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.StylusLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3410">Identifies the <see cref="E:System.Windows.UIElement.StylusLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3411">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3411">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3412">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3412">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3413">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3413">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3414">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3414">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3415">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3415">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3416">Se produit quand le stylet se déplace sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3416">Occurs when the stylus moves over this element.</span>
          </span>
          <span data-ttu-id="6950f-3417">Le stylet doit se déplacer alors qu’il est sur le numériseur pour déclencher cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3417">The stylus must move while on the digitizer to raise this event.</span>
          </span>
          <span data-ttu-id="6950f-3418">Dans le cas contraire, <see cref="E:System.Windows.UIElement.StylusInAirMove" /> est déclenché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3418">Otherwise, <see cref="E:System.Windows.UIElement.StylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3419">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.StylusMove> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3419">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3420">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.StylusMove> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3420">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3421">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3421">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3422">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3422">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3423">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3423">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3424">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3424">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusMoveEvent>|  
|<span data-ttu-id="6950f-3425">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3425">Routing strategy</span></span>|<span data-ttu-id="6950f-3426">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3426">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3427">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3427">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-3428">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3428">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="6950f-3429">Substituer <xref:System.Windows.UIElement.OnStylusMove%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3429">Override <xref:System.Windows.UIElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3430">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.StylusMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3430">Identifies the <see cref="E:System.Windows.UIElement.StylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3431">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3431">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3432">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3432">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3433">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3433">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3434">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3434">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3435">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3435">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3436">Se produit quand le stylet est trop éloigné du numériseur pour être détecté, alors qu’il se trouve sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3436">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3437">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.StylusOutOfRange> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3437">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3438">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.StylusOutOfRange> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3438">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3439">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3439">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3440">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3440">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3441">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3441">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3442">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3442">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="6950f-3443">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3443">Routing strategy</span></span>|<span data-ttu-id="6950f-3444">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3444">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3445">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3445">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-3446">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3446">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="6950f-3447">Substituer <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3447">Override <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3448">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.StylusOutOfRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3448">Identifies the <see cref="E:System.Windows.UIElement.StylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3449">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3449">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3450">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3450">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3451">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3451">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3452">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3452">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3453">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3453">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPlugIns">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.StylusPlugIns" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StylusPlugIns As StylusPlugInCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ StylusPlugIns { System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.StylusPlugInCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3454">Obtient une collection de tous les objets de plug-in (personnalisation) du stylet associés à cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3454">Gets a collection of all stylus plug-in (customization) objects associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-3455">Collection de plug-in de stylet, sous forme de collection spécialisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3455">The collection of stylus plug-ins, as a specialized collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3456">Est un exemple d’un contrôle qui remplit cette collection <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3456">An example of a control that populates this collection is <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="6950f-3457"><xref:System.Windows.Controls.InkCanvas> Ajoute le <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> comme un élément de la collection, ce qui permet la <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> pour interagir avec l’entrée du stylet et produire le rendu unique en réponse à pilotée par les événements de stylet.</span><span class="sxs-lookup"><span data-stu-id="6950f-3457"><xref:System.Windows.Controls.InkCanvas> adds the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> as a collection item, which enables the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to interact with stylus input and produce the unique rendering in response to stylus driven events.</span></span>  
  
 <span data-ttu-id="6950f-3458">Pour plus d’informations sur la création de plug-ins personnalisés qui peut recevoir et interpréter l’entrée de stylet, consultez [interception d’entrée du stylet](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3458">For information on creating custom plug-ins that can receive and interpret stylus input, see [Intercepting Input from the Stylus](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6950f-3459">L’exemple suivant crée un <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> de l’instance et l’ajoute à la <xref:System.Windows.UIElement.StylusPlugIns%2A> collection pour un contrôle de gestion de l’encre personnalisé.</span><span class="sxs-lookup"><span data-stu-id="6950f-3459">The following example creates a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> instance and adds it to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection for a custom ink handling control.</span></span>  
  
 [!code-csharp[StylusPluginSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusPluginSamples/CSharp/StylusControl.cs#3)]
 [!code-vb[StylusPluginSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusPluginSamples/VisualBasic/StylusControl.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />
        <altmember cref="T:System.Windows.Controls.InkCanvas" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3460">Se produit lorsqu'un utilisateur exécute un mouvement du stylet parmi plusieurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3460">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3461">Pour plus d’informations sur les mouvements de stylet, consultez <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3461">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="6950f-3462">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.StylusSystemGesture> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3462">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3463">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.StylusSystemGesture> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3463">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3464">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3464">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3465">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3465">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3466">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3467">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3467">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="6950f-3468">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3468">Routing strategy</span></span>|<span data-ttu-id="6950f-3469">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3469">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3470">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3470">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="6950f-3471">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3471">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="6950f-3472">Substituer <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3472">Override <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3473">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.StylusSystemGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3473">Identifies the <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3474">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3474">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3475">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3475">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3476">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3476">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3477">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3477">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3478">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3478">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3479">Se produit quand l’utilisateur lève le stylet du numériseur alors qu’il se trouve sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3479">Occurs when the user raises the stylus off the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3480">Cet événement crée un alias pour le <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.StylusUp> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3480">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3481">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.StylusUp> événements sont attachés à sous-jacent <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3481">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="6950f-3482">Fonction tactile, la souris et entrée de stylet existent dans une relation particulière.</span><span class="sxs-lookup"><span data-stu-id="6950f-3482">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="6950f-3483">Pour plus d’informations, consultez [vue d’ensemble de l’entrée](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6950f-3483">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3484">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3484">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3485">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3485">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusUpEvent>|  
|<span data-ttu-id="6950f-3486">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3486">Routing strategy</span></span>|<span data-ttu-id="6950f-3487">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3487">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3488">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3488">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="6950f-3489">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3489">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="6950f-3490">Substituer <xref:System.Windows.UIElement.OnStylusUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3490">Override <xref:System.Windows.UIElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3491">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.StylusUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3491">Identifies the <see cref="E:System.Windows.UIElement.StylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3492">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3492">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3493">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3493">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3494">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3494">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3495">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3495">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3496">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3496">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3497">Se produit lorsque cet élément recueille du texte indépendamment du périphérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3497">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="6950f-3498">Cet événement peut déjà être marqué comme géré par les implémentations internes des contrôles composés.</span><span class="sxs-lookup"><span data-stu-id="6950f-3498">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="6950f-3499">Consultez la Remarque ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="6950f-3499">See Remark below.</span></span>  
  
 <span data-ttu-id="6950f-3500">Le <xref:System.Windows.UIElement.TextInput> événement peut déjà être marqué comme géré par les implémentations internes des contrôles composés.</span><span class="sxs-lookup"><span data-stu-id="6950f-3500">The <xref:System.Windows.UIElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="6950f-3501">Par exemple, un <xref:System.Windows.Controls.TextBox> est un contrôle composé où le <xref:System.Windows.UIElement.TextInput> événement est déjà marqué comme géré ; dans sa composition.</span><span class="sxs-lookup"><span data-stu-id="6950f-3501">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.UIElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="6950f-3502">Contrôles pour cela, car le contrôle doit interpréter certains types d’entrées, telles que les touches de direction, comme ayant une signification particulière pour ce contrôle.</span><span class="sxs-lookup"><span data-stu-id="6950f-3502">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="6950f-3503">Si vous utilisez <xref:System.Windows.UIElement.PreviewTextInput> que l’événement auquel vous attachez des gestionnaires pour l’entrée de texte, vous pouvez recevoir les meilleurs résultats.</span><span class="sxs-lookup"><span data-stu-id="6950f-3503">If you use <xref:System.Windows.UIElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="6950f-3504">Cette technique permet de contourner la plupart des cas où la composition de contrôle a déjà marqué cet événement comme géré et empêche votre gestionnaire de réception de l’événement sur son itinéraire.</span><span class="sxs-lookup"><span data-stu-id="6950f-3504">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="6950f-3505">Le <xref:System.Windows.UIElement.TextInput> événement permet à un composant ou une application à l’écoute pour l’entrée de texte de manière indépendante du périphérique.</span><span class="sxs-lookup"><span data-stu-id="6950f-3505">The <xref:System.Windows.UIElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="6950f-3506">Le clavier est le principal moyen de <xref:System.Windows.UIElement.TextInput>, mais la reconnaissance vocale, l’écriture manuscrite et autres périphériques d’entrée peuvent également déclencher <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3506">The keyboard is the primary means of <xref:System.Windows.UIElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
 <span data-ttu-id="6950f-3507">En raison des combinaisons de touches, dans les claviers par défaut ou via des éditeurs de méthode d’entrée, plusieurs événements de clés peuvent déclencher qu’un seul événement d’entrée de texte.</span><span class="sxs-lookup"><span data-stu-id="6950f-3507">Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="6950f-3508">Cet événement crée un alias pour le <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> joint des événements pour cette classe, afin que <xref:System.Windows.UIElement.TextInput> fait partie de la classe de liste des membres lorsque <xref:System.Windows.UIElement> est hérité comme élément de base.</span><span class="sxs-lookup"><span data-stu-id="6950f-3508">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.TextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="6950f-3509">Gestionnaires d’événements qui sont attachés à la <xref:System.Windows.UIElement.TextInput> événements sont attachés à sous-jacent <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> événement attaché et reçoivent la même instance de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3509">Event handlers that are attached to the <xref:System.Windows.UIElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3510">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3510">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3511">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3511">Identifier field</span></span>|<xref:System.Windows.UIElement.TextInputEvent>|  
|<span data-ttu-id="6950f-3512">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3512">Routing strategy</span></span>|<span data-ttu-id="6950f-3513">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3513">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3514">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3514">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="6950f-3515">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3515">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="6950f-3516">Substituer <xref:System.Windows.UIElement.OnTextInput%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3516">Override <xref:System.Windows.UIElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3517">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.TextInput" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3517">Identifies the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3518">Les identificateurs d’événements routés sont créés quand les événements routés sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="6950f-3518">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="6950f-3519">Ces identificateurs contiennent un nom identificateur, le type de propriétaire, le type de gestionnaire, la stratégie de routage et la méthode utilitaire pour ajouter des propriétaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3519">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="6950f-3520">Vous pouvez utiliser ces identificateurs pour ajouter des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="6950f-3520">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="6950f-3521">Pour plus d'informations sur l'inscription d'événements routés, consultez <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3521">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="6950f-3522">Pour plus d'informations sur l'utilisation d'identificateurs d'événement routés afin d'ajouter des gestionnaires de classe, consultez <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3522">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3523">Se produit quand l’utilisateur touche l’écran avec le doigt sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3523">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3524">Par défaut, le <xref:System.Windows.UIElement.PreviewTouchDown> et <xref:System.Windows.UIElement.TouchDown> événements ne se produisent pas jusqu'à ce qu’un doigt touche l’écran et se déplace.</span><span class="sxs-lookup"><span data-stu-id="6950f-3524">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="6950f-3525">Appuyer sur un doigt sur l’écran et maintenir sans le déplacer provoque l’appui sur le comportement et maintenir d’un <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3525">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="6950f-3526">Le comportement appuyer et maintenir est équivalent à un clic droit de la souris.</span><span class="sxs-lookup"><span data-stu-id="6950f-3526">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="6950f-3527">Pour provoquer le <xref:System.Windows.UIElement.PreviewTouchDown> et <xref:System.Windows.UIElement.TouchDown> événements se produisent dès qu’un doigt touche l’écran, définissez la <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> propriété attachée `false` pour cet élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-3527">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3528">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3528">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3529">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3529">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchDownEvent>|  
|<span data-ttu-id="6950f-3530">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3530">Routing strategy</span></span>|<span data-ttu-id="6950f-3531">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3531">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3532">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3532">Delegate</span></span>|<span data-ttu-id="6950f-3533"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3533"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="6950f-3534">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3534">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="6950f-3535">Substituer <xref:System.Windows.UIElement.OnTouchDown%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3535">Override <xref:System.Windows.UIElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3536">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.TouchDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3536">Identifies the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3537">Se produit lorsqu'une entrée tactile se déplace depuis l'extérieur vers l'intérieur des limites de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3537">Occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3538">Cet événement est toujours déclenché, le périphérique tactile est capturé pour cet élément ou non.</span><span class="sxs-lookup"><span data-stu-id="6950f-3538">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3539">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3539">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3540">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3540">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchEnterEvent>|  
|<span data-ttu-id="6950f-3541">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3541">Routing strategy</span></span>|<span data-ttu-id="6950f-3542">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-3542">Direct</span></span>|  
|<span data-ttu-id="6950f-3543">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3543">Delegate</span></span>|<span data-ttu-id="6950f-3544"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3544"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="6950f-3545">Substituer <xref:System.Windows.UIElement.OnTouchEnter%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3545">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3546">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.TouchEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3546">Identifies the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3547">Obtient tous les périphériques tactiles capturés dans cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3547">Gets all touch devices that are captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-3548">Énumération d'objets <see cref="T:System.Windows.Input.TouchDevice" /> capturés dans cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3548">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3549">Obtient tous les périphériques tactiles capturés dans cet élément ou les éléments enfants de son arborescence d'éléments visuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3549">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-3550">Énumération d'objets <see cref="T:System.Windows.Input.TouchDevice" /> capturés dans cet élément ou les éléments enfants de son arborescence d'éléments visuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3550">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3551">Obtient tous les périphériques tactiles qui se trouvent sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3551">Gets all touch devices that are over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-3552">Énumération d'objets <see cref="T:System.Windows.Input.TouchDevice" /> situés au-dessus de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3552">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3553">Obtient tous les périphériques tactiles se trouvant sur cet élément ou les éléments enfants de son arborescence d'éléments visuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3553">Gets all touch devices that are over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-3554">Énumération d'objets <see cref="T:System.Windows.Input.TouchDevice" /> se trouvant sur cet élément ou les éléments enfants de son arborescence d'éléments visuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3554">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3555">Se produit lorsqu'une entrée tactile se déplace depuis l'intérieur vers l'extérieur des limites de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3555">Occurs when a touch moves from inside to outside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3556">Cet événement est toujours déclenché, le périphérique tactile est capturé pour cet élément ou non.</span><span class="sxs-lookup"><span data-stu-id="6950f-3556">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3557">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3557">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3558">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3558">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchLeaveEvent>|  
|<span data-ttu-id="6950f-3559">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3559">Routing strategy</span></span>|<span data-ttu-id="6950f-3560">Direct</span><span class="sxs-lookup"><span data-stu-id="6950f-3560">Direct</span></span>|  
|<span data-ttu-id="6950f-3561">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3561">Delegate</span></span>|<span data-ttu-id="6950f-3562"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3562"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="6950f-3563">Substituer <xref:System.Windows.UIElement.OnTouchLeave%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3563">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3564">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.TouchLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3564">Identifies the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3565">Se produit quand vous déplacez votre doigt sur l’écran pendant qu’il se trouve sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3565">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3566">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3566">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3567">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3567">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchMoveEvent>|  
|<span data-ttu-id="6950f-3568">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3568">Routing strategy</span></span>|<span data-ttu-id="6950f-3569">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3569">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3570">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3570">Delegate</span></span>|<span data-ttu-id="6950f-3571"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3571"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="6950f-3572">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3572">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="6950f-3573">Substituer <xref:System.Windows.UIElement.OnTouchMove%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3573">Override <xref:System.Windows.UIElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3574">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.TouchMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3574">Identifies the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3575">Se produit quand vous soulevez votre doigt de l’écran pendant qu’il se trouve sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3575">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="6950f-3576">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="6950f-3576">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3577">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3577">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchUpEvent>|  
|<span data-ttu-id="6950f-3578">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="6950f-3578">Routing strategy</span></span>|<span data-ttu-id="6950f-3579">Propagation</span><span class="sxs-lookup"><span data-stu-id="6950f-3579">Bubbling</span></span>|  
|<span data-ttu-id="6950f-3580">délégué</span><span class="sxs-lookup"><span data-stu-id="6950f-3580">Delegate</span></span>|<span data-ttu-id="6950f-3581"><xref:System.EventHandler%601> de type <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3581"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="6950f-3582">L’événement de tunneling correspondant est <xref:System.Windows.UIElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3582">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="6950f-3583">Substituer <xref:System.Windows.UIElement.OnTouchUp%2A> pour implémenter la gestion de classe pour cet événement dans les classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3583">Override <xref:System.Windows.UIElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3584">Identifie l'événement acheminé <see cref="E:System.Windows.UIElement.TouchUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3584">Identifies the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslatePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point TranslatePoint (System.Windows.Point point, System.Windows.UIElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point TranslatePoint(valuetype System.Windows.Point point, class System.Windows.UIElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point TranslatePoint(System::Windows::Point point, System::Windows::UIElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="relativeTo" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="6950f-3585">Valeur de point par rapport à cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3585">The point value, as relative to this element.</span>
          </span>
        </param>
        <param name="relativeTo">
          <span data-ttu-id="6950f-3586">Élément à convertir dans le point donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3586">The element to translate the given point into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6950f-3587">Convertit un point relatif à cet élément en coordonnées relatives à l’élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3587">Translates a point relative to this element to coordinates that are relative to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6950f-3588">Valeur de point maintenant relative à l’élément cible et non à cet élément source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3588">A point value, now relative to the target element rather than this source element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3589">Passage `null` pour `relativeTo` est autorisée et indique que les coordonnées doivent être relative à l’élément racine dans l’arborescence logique auquel appartient cet élément.</span><span class="sxs-lookup"><span data-stu-id="6950f-3589">Passing `null` for `relativeTo` is permitted, and indicates that coordinates should be relative to the root element in the logical tree that this element belongs to.</span></span>  
  
 <span data-ttu-id="6950f-3590">Cette méthode est utilisée pour la traduction des valeurs de point de test d’accès.</span><span class="sxs-lookup"><span data-stu-id="6950f-3590">This method is used for translating hit test point values.</span></span> <span data-ttu-id="6950f-3591">Appel de cette méthode est principalement utile si vous créez un contrôle et que vous devez traiter l’entrée à un niveau inférieur.</span><span class="sxs-lookup"><span data-stu-id="6950f-3591">Calling this method is mainly relevant if you are authoring a control and need to process input at a lower level.</span></span> <span data-ttu-id="6950f-3592">Si vous utilisez des contrôles existants, vous pouvez généralement supposer que les contrôles terminés signalent des résultats de test de positionnement traduit correctement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3592">If you are using existing controls, you can generally assume that completed controls will report correctly translated hit test results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uid">
      <MemberSignature Language="C#" Value="public string Uid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Uid" />
      <MemberSignature Language="VB.NET" Value="Public Property Uid As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uid { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3593">Obtient ou définit l’identificateur unique (pour la localisation) de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3593">Gets or sets the unique identifier (for localization) for this element.</span>
          </span>
          <span data-ttu-id="6950f-3594">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3594">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-3595">Chaîne qui est l’identificateur unique de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3595">A string that is the unique identifier for this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3596">Utilisée par les concepteurs pour obtenir la `x:Uid` valeur (consultez [vue d’ensemble de la localisation et de globalisation de WPF](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) pour plus d’informations).</span><span class="sxs-lookup"><span data-stu-id="6950f-3596">Used by designers to get the `x:Uid` value (see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) for more information).</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-3597">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-3597">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3598">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3598">Identifier field</span></span>|<xref:System.Windows.UIElement.UidProperty>|  
|<span data-ttu-id="6950f-3599">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-3599">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-3600">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-3600">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UidProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UidProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UidProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.UidProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UidProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UidProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3601">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.Uid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3601">Identifies the <see cref="P:System.Windows.UIElement.Uid" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLayout">
      <MemberSignature Language="C#" Value="public void UpdateLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.UpdateLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLayout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3602">Permet de s'assurer que tous les éléments enfants visuels de cet élément sont correctement mis à jour en vue de la disposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3602">Ensures that all visual child elements of this element are properly updated for layout.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3603">Lorsque vous appelez cette méthode, les éléments avec <xref:System.Windows.UIElement.IsMeasureValid%2A> `false` ou <xref:System.Windows.UIElement.IsArrangeValid%2A> `false` appellera spécifiques à un élément <xref:System.Windows.UIElement.MeasureCore%2A> et <xref:System.Windows.UIElement.ArrangeCore%2A> mettre à jour des méthodes, ce qui force la mise en page, et toutes les tailles calculées seront validées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3603">When you call this method, elements with <xref:System.Windows.UIElement.IsMeasureValid%2A>`false` or <xref:System.Windows.UIElement.IsArrangeValid%2A>`false` will call element-specific <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> methods, which forces layout update, and all computed sizes will be validated.</span></span>  
  
 <span data-ttu-id="6950f-3604">Appel de cette méthode n’a aucun effet si la disposition est inchangée, ou si l’état d’agencement ou de mesure d’une disposition n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="6950f-3604">Calling this method has no effect if layout is unchanged, or if neither arrangement nor measurement state of a layout is invalid.</span></span> <span data-ttu-id="6950f-3605">Toutefois, si la disposition n’est pas valide à l’égard, le <xref:System.Windows.UIElement.UpdateLayout%2A> appel doit rétablir la disposition complète.</span><span class="sxs-lookup"><span data-stu-id="6950f-3605">However, if layout is invalid in either respect, the <xref:System.Windows.UIElement.UpdateLayout%2A> call will redo the entire layout.</span></span> <span data-ttu-id="6950f-3606">Par conséquent, vous devez éviter d’appeler <xref:System.Windows.UIElement.UpdateLayout%2A> après chaque modification incrémentielle et mineure dans l’arborescence d’éléments.</span><span class="sxs-lookup"><span data-stu-id="6950f-3606">Therefore, you should avoid calling <xref:System.Windows.UIElement.UpdateLayout%2A> after each incremental and minor change in the element tree.</span></span> <span data-ttu-id="6950f-3607">Le système de disposition effectue la disposition des éléments de manière différée, à l’aide d’un algorithme qui équilibre la performance et des devises, et avec une stratégie de pondération de différer des modifications aux racines jusqu'à ce que tous les éléments enfants sont valides.</span><span class="sxs-lookup"><span data-stu-id="6950f-3607">The layout system will perform element layout in a deferred manner, using an algorithm that balances performance and currency, and with a weighting strategy to defer changes to roots until all child elements are valid.</span></span> <span data-ttu-id="6950f-3608">Vous devez uniquement appeler <xref:System.Windows.UIElement.UpdateLayout%2A> si vous avez absolument besoin de mise à jour des tailles et leurs positions, et uniquement une fois que vous êtes certain que toutes les modifications apportées aux propriétés que vous contrôlez et qui pouvez affecter la disposition sont terminées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3608">You should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if you absolutely need updated sizes and positions, and only after you are certain that all changes to properties that you control and that may affect layout are completed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3609">Obtient ou définit la visibilité de cet élément dans l'[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3609">Gets or sets the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] visibility of this element.</span>
          </span>
          <span data-ttu-id="6950f-3610">Il s’agit d’une propriété de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3610">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6950f-3611">Valeur de l’énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3611">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="6950f-3612">La valeur par défaut est <see cref="F:System.Windows.Visibility.Visible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3612">The default value is <see cref="F:System.Windows.Visibility.Visible" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6950f-3613">Cette propriété affecte la valeur de <xref:System.Windows.UIElement.IsVisible%2A>, ce qui peut déclencher la <xref:System.Windows.UIElement.IsVisibleChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3613">Setting this property affects the value of <xref:System.Windows.UIElement.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement.IsVisibleChanged> event.</span></span> <span data-ttu-id="6950f-3614">Toutefois, <xref:System.Windows.UIElement.IsVisible%2A> présente d’autres facteurs qui influencent, par exemple les paramètres de visibilité des parents qui le contiennent.</span><span class="sxs-lookup"><span data-stu-id="6950f-3614">However, <xref:System.Windows.UIElement.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.</span></span>  
  
 <span data-ttu-id="6950f-3615">Éléments où <xref:System.Windows.UIElement.Visibility%2A> n’est pas <xref:System.Windows.Visibility.Visible> ne participent pas aux événements d’entrée (ou commandes), n’influent pas sur la mesure ou organiser les passes de disposition, ne sont pas dans une séquence d’onglet et ne seront pas signalées dans un test de positionnement.</span><span class="sxs-lookup"><span data-stu-id="6950f-3615">Elements where <xref:System.Windows.UIElement.Visibility%2A> is not <xref:System.Windows.Visibility.Visible> do not participate in input events (or commands), do not influence either the Measure or Arrange passes of layout, are not in a tab sequence, and will not be reported in hit testing.</span></span>  
  
 <span data-ttu-id="6950f-3616">Lors de l’héritage par <xref:System.Windows.Window> ou ses classes dérivées, <xref:System.Windows.Window> redéfinit la valeur par défaut de cette propriété doit être <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3616">When inherited by <xref:System.Windows.Window> or its derived classes, <xref:System.Windows.Window> redefines the default value of this property to be <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="6950f-3617">Cela a pour effet de ne pas exécuter la passe de mesure de disposition sur initialement créé <xref:System.Windows.Window>, et <xref:System.Windows.UIElement.RenderSize%2A> retourne (0,0).</span><span class="sxs-lookup"><span data-stu-id="6950f-3617">This has the effect of not running the Measure pass of layout on an initially created <xref:System.Windows.Window>, and <xref:System.Windows.UIElement.RenderSize%2A> returns (0,0).</span></span> <span data-ttu-id="6950f-3618">Pour plus d'informations, consultez <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3618">For details, see <xref:System.Windows.Window>.</span></span> <span data-ttu-id="6950f-3619"><xref:System.Windows.Controls.Primitives.Popup> redéfinit la valeur par défaut pour être <xref:System.Windows.Visibility.Collapsed>, avec un comportement similaire pour <xref:System.Windows.Controls.Primitives.Popup> et ses classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="6950f-3619"><xref:System.Windows.Controls.Primitives.Popup> also redefines the default value to be <xref:System.Windows.Visibility.Collapsed>, with similar resulting behavior for <xref:System.Windows.Controls.Primitives.Popup> and its derived classes.</span></span>  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="6950f-3620">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="6950f-3620">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="6950f-3621">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="6950f-3621">Identifier field</span></span>|<xref:System.Windows.UIElement.VisibilityProperty>|  
|<span data-ttu-id="6950f-3622">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="6950f-3622">Metadata properties set to `true`</span></span>|<span data-ttu-id="6950f-3623">Aucun.</span><span class="sxs-lookup"><span data-stu-id="6950f-3623">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6950f-3624">L’exemple suivant implémente un gestionnaire qui fait référence à deux boutons différents intitulés qui sont destinés à être une paire mutuellement exclusive dans l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="6950f-3624">The following example implements a handler that references two different named buttons that are intended to be a mutually exclusive pair in the user interface.</span></span> <span data-ttu-id="6950f-3625">Avant d’exécuter la logique de programme associée au bouton, le bouton est défini comme étant <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, et l’autre bouton de la paire est défini sur <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6950f-3625">Prior to running the actual program logic associated with the button, the button itself is set to be <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, and the other button in the pair is set to <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[MediaElement_snip#UIElementVisibility](~/samples/snippets/csharp/VS_Snippets_Wpf/MediaElement_snip/CSharp/PlaybackExample.cs#uielementvisibility)]
 [!code-vb[MediaElement_snip#UIElementVisibility](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MediaElement_snip/VB/PlaybackExample.vb#uielementvisibility)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6950f-3626">Identifie la propriété de dépendance <see cref="P:System.Windows.UIElement.Visibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6950f-3626">Identifies the <see cref="P:System.Windows.UIElement.Visibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>