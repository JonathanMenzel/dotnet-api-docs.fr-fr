<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fabd3e8ca79d0ed50a5a9c8a6f00299e7b8f9dd" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37491193" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Objet où le gestionnaire d’événements est attaché.</param>
    <param name="e">Données d'événement.</param>
    <summary>Représente la méthode qui va gérer l’événement routé <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérant cet événement est généralement uniquement au sein des éléments qui prennent en charge une région défilante, ou sinon affectez délibérément à leur taille de rendu plus petite que combiné taille de leur contenu enfant de l’élément souhaité et est uniquement effectué en gérant délibérément la événement une fois qu’il a acheminé vers le haut dans l’arborescence d’éléments et a atteint le premier parent qui charge. Est une implémentation existante qui gère les zones de défilement d’une manière qui est généralement souhaitable pour les contrôles utilisateur <xref:System.Windows.Controls.ScrollViewer>. Si vous dérivez de <xref:System.Windows.Controls.ScrollViewer>, vous pouvez inscrire un gestionnaire de classe pour <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> et compléter la gestion de classe de base de l’événement. Vous devez également envisager l’utilisation ou définies par la classe de gestion de classe <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> événements au lieu de <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>. Vous pouvez également, si vous créez une classe entièrement personnalisée qui ne dérive pas de <xref:System.Windows.Controls.ScrollViewer>, vous pouvez toujours ajouter la gestion de classe en appelant <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> dans votre instanciation de classe.  Pour plus d’informations sur la gestion de classe, consultez [marquage des événements routés comme gérés et gestion de classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).  
  
 Éléments de contenu peuvent provoquer l’événement à déclencher par leurs hôtes de contenu (via l’appel <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> et déclenchement <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> à partir de l’hôte de contenu). De même, vous pouvez demander des éléments d’arborescence logique pour être affichés avec la méthode d’assistance <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.  
  
 Un <xref:System.Windows.Controls.ListBox> implémente une méthode connexe mais différente <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>