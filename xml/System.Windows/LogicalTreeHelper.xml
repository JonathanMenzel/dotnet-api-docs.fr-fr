<Type Name="LogicalTreeHelper" FullName="System.Windows.LogicalTreeHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62b7945787d0b94dce6ae67c8577e1d895687cda" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36458578" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class LogicalTreeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LogicalTreeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LogicalTreeHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class LogicalTreeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalTreeHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type LogicalTreeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="531a4-101">Fournit des méthodes d’assistance statiques permettant d’interroger des objets dans l’arborescence logique.</span>
      <span class="sxs-lookup">
        <span data-stu-id="531a4-101">Provides static helper methods for querying objects in the logical tree.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a4-102">La <xref:System.Windows.LogicalTreeHelper> classe fournit des méthodes qui vous permet de retourner des collections enfants d’objets ou des objets spécifiques à partir de sous-nœuds de l’arborescence logique.</span><span class="sxs-lookup"><span data-stu-id="531a4-102">The <xref:System.Windows.LogicalTreeHelper> class provides methods that you can use to return child collections of objects, or specific objects from within subnodes of the logical tree.</span></span> <span data-ttu-id="531a4-103">Toutefois, la plupart des opérations d’arborescence objet que vous effectuez en général est également exposée par les propriétés ou méthodes semblables sur <xref:System.Windows.FrameworkElement> ou <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="531a4-103">However, most of the object tree operations that you typically perform are also exposed by similar methods or properties on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="531a4-104">Par exemple, essayez ce qui suit :</span><span class="sxs-lookup"><span data-stu-id="531a4-104">For example, try the following:</span></span>  
  
-   <span data-ttu-id="531a4-105">Au lieu d’appeler la méthode statique <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> (méthode), qui retourne un énumérateur pour les enfants logiques des objets, utilisez la collection dédiée exposée dans le modèle de contenu pour cet objet.</span><span class="sxs-lookup"><span data-stu-id="531a4-105">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> method, which returns an enumerator for the logical child objects, use the dedicated collection exposed in the content model for that object.</span></span> <span data-ttu-id="531a4-106">Presque tous les objets qui prennent en charge un modèle de contenu exposent une propriété qui contient la collection d’objets enfants et fournit l’interface prise en charge directement dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="531a4-106">Nearly all objects that support a content model expose some property that contains the collection of child objects, and provides collection interface support directly on that collection.</span></span>  
  
-   <span data-ttu-id="531a4-107">Au lieu d’appeler la méthode statique <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> méthode pour obtenir un objet enfant en spécifiant son nom, appelez le <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> ou <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> méthode sur des objets spécifiques.</span><span class="sxs-lookup"><span data-stu-id="531a4-107">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> method to obtain a child object by specifying its name, call the <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> method on specific objects.</span></span>  
  
 <span data-ttu-id="531a4-108"><xref:System.Windows.LogicalTreeHelper> est particulièrement utile pour les scénarios d’analyse où vous êtes en déplacement vers le haut ou vers le bas l’arborescence logique de manière récursive à travers plusieurs niveaux et à utiliser une approche cohérente pour examiner les différents objets parents ou enfants.</span><span class="sxs-lookup"><span data-stu-id="531a4-108"><xref:System.Windows.LogicalTreeHelper> is most useful for analysis scenarios where you are traveling up or down the logical tree recursively through multiple levels, and want to use a consistent approach for examining the various parent or child objects.</span></span> <span data-ttu-id="531a4-109">Dans ce cas, vous pouvez accéder à une combinaison des modèles de contenu, et en utilisant le modèle de contenu plus API spécifiques serait trop complexes.</span><span class="sxs-lookup"><span data-stu-id="531a4-109">In this case, you might be accessing a mixture of content models, and using the more content-model specific APIs would be too complex.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public static void BringIntoView (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BringIntoView(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BringIntoView (current As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BringIntoView(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member BringIntoView : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.LogicalTreeHelper.BringIntoView current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="531a4-110">Élément d'interface utilisateur à afficher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-110">The UI element to bring into view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531a4-111">Tente d'afficher l'élément d'interface utilisateur demandé et déclenche l'événement <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> sur la cible pour signaler les résultats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-111">Attempts to bring the requested UI element into view and raises the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event on the target in order to report the results.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a4-112">Il est généralement plus pratique appeler les méthodes d’instance <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> ou <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> au lieu de cette méthode utilitaire statique.</span><span class="sxs-lookup"><span data-stu-id="531a4-112">It is typically more convenient to call the instance methods <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> rather than this static utility method.</span></span> <span data-ttu-id="531a4-113">Le comportement des méthodes d’instance est équivalent au comportement de la méthode statique.</span><span class="sxs-lookup"><span data-stu-id="531a4-113">The behavior of the instance methods is equivalent to the behavior of the static method.</span></span>  
  
 <span data-ttu-id="531a4-114">Même si le `current` élément d’interface utilisateur fournie était un <xref:System.Windows.FrameworkContentElement>, l’événement résultant est le même <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> événement, avec l’origine <xref:System.Windows.FrameworkContentElement> identifiable par la vérification des données de l’événement.</span><span class="sxs-lookup"><span data-stu-id="531a4-114">Even if the `current` UI element provided was a <xref:System.Windows.FrameworkContentElement>, the resulting event is still the same <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> event, with the originating <xref:System.Windows.FrameworkContentElement> identifiable by checking the event data of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />
      </Docs>
    </Member>
    <Member MemberName="FindLogicalNode">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject FindLogicalNode(class System.Windows.DependencyObject logicalTreeNode, string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLogicalNode (logicalTreeNode As DependencyObject, elementName As String) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ FindLogicalNode(System::Windows::DependencyObject ^ logicalTreeNode, System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="static member FindLogicalNode : System.Windows.DependencyObject * string -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.FindLogicalNode (logicalTreeNode, elementName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalTreeNode" Type="System.Windows.DependencyObject" />
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logicalTreeNode">
          <span data-ttu-id="531a4-115">Objet à partir duquel commencer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-115">The object to start searching from.</span>
          </span>
          <span data-ttu-id="531a4-116">Cet objet doit être un type <see cref="T:System.Windows.FrameworkElement" /> ou <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-116">This object must be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <param name="elementName">
          <span data-ttu-id="531a4-117">Nom de l'objet à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-117">The name of the object to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531a4-118">Tente de rechercher et de retourner un objet qui a le nom spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-118">Attempts to find and return an object that has the specified name.</span>
          </span>
          <span data-ttu-id="531a4-119">La recherche démarre à partir de l'objet spécifié et continue dans les sous-nœuds de l'arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-119">The search starts from the specified object and continues into subnodes of the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="531a4-120">Objet avec le nom correspondant, si la recherche aboutit ; retourne <see langword="null" /> si aucun nom correspondant n'a été trouvé dans l'arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-120">The object with the matching name, if one is found; returns <see langword="null" /> if no matching name was found in the logical tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a4-121">Les méthodes <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> et <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> sont superficiellement semblables à <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, mais fonctionnent par logique différente :</span><span class="sxs-lookup"><span data-stu-id="531a4-121">The methods <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> and <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> are superficially similar to <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, but operate by different logic:</span></span>  
  
-   <span data-ttu-id="531a4-122">Le sens de la recherche pour <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> vers les objets enfants (vers le bas l’arborescence) ; le sens de la recherche pour le `FindName` méthodes est vers les objets parents (dans l’arborescence).</span><span class="sxs-lookup"><span data-stu-id="531a4-122">The search direction for <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> is toward child objects (down the tree); the search direction for the `FindName` methods is towards parent objects (up the tree).</span></span>  
  
-   <span data-ttu-id="531a4-123">Le `FindName` méthodes sont régies par le concept d’une portée de nom XAML.</span><span class="sxs-lookup"><span data-stu-id="531a4-123">The `FindName` methods are governed by the concept of a XAML namescope.</span></span> <span data-ttu-id="531a4-124">À l’aide de `FindName` vous avez la garantie qu’un seul objet de ce nom existe, car l’unicité de portées de nom XAML.</span><span class="sxs-lookup"><span data-stu-id="531a4-124">Using `FindName` you are guaranteed that only one object of that name exists, because XAML namescopes enforce uniqueness.</span></span> <span data-ttu-id="531a4-125">En revanche, <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> ignore la portée de nom XAML et peut traverser les limites de portée de nom XAML pendant la recherche.</span><span class="sxs-lookup"><span data-stu-id="531a4-125">In contrast, <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> ignores XAML namescope and might cross XAML namescope boundaries during the search.</span></span> <span data-ttu-id="531a4-126">Par conséquent, il n’existe aucune garantie d’unicité de la `elementName` nom une fois que les limites sont traversées.</span><span class="sxs-lookup"><span data-stu-id="531a4-126">As such, there is no guarantee of uniqueness of the `elementName` name once boundaries are crossed.</span></span> <span data-ttu-id="531a4-127">Pour plus d’informations sur les portées de nom XAML, consultez [portées de nom XAML WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="531a4-127">For more information about XAML namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildren">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="531a4-128">Retourne la collection d'objets enfants immédiats de l'objet spécifié, en traitant l'arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-128">Returns the collection of immediate child objects of the specified object by processing the logical tree.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As DependencyObject) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.DependencyObject -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="531a4-129">Objet à partir duquel commencer le traitement de l’arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-129">The object from which to start processing the logical tree.</span>
          </span>
          <span data-ttu-id="531a4-130">Il peut s'agir de <see cref="T:System.Windows.FrameworkElement" /> ou <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-130">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531a4-131">Retourne la collection d’objets enfants immédiats de l’objet spécifié en traitant l’arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-131">Returns the collection of immediate child objects of the specified object, by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="531a4-132">Collection énumérable d’objets enfants immédiats de l’arborescence logique de l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-132">The enumerable collection of immediate child objects from the logical tree of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a4-133">Utilisez cette méthode de signature et d’assistance essentiellement lorsque vous n’êtes pas certain si `current` est un <xref:System.Windows.FrameworkElement> ou <xref:System.Windows.FrameworkContentElement> et également si les classes de cet objet prend en charge sa propre collection de modèle de contenu.</span><span class="sxs-lookup"><span data-stu-id="531a4-133">Use this signature and helper method primarily when you are unsure whether `current` is a <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> and are also unsure whether that object's class supports its own content model collection.</span></span> <span data-ttu-id="531a4-134">Si vous pouvez déterminer le type de l’objet que vous interrogez, vérifiez la propriété de contenu spécifique dont vous savez qu’il existe sur ce type.</span><span class="sxs-lookup"><span data-stu-id="531a4-134">If you can determine the type of the object you are querying, check the specific content property that you know exists on that type.</span></span> <span data-ttu-id="531a4-135">Par exemple, si vous savez que l’objet que vous interrogez est un <xref:System.Windows.Controls.ItemsControl>, vérifiez le <xref:System.Windows.Controls.ItemsControl.Items%2A> propriété à obtenir une collection fortement typée, qui prend en charge les interface de collection et est probablement plus utile qu’un énumérateur.</span><span class="sxs-lookup"><span data-stu-id="531a4-135">For example, if you know that the object you are querying is an <xref:System.Windows.Controls.ItemsControl>, check the <xref:System.Windows.Controls.ItemsControl.Items%2A> property to get a strongly typed collection, which has collection interface support and is probably more useful than an enumerator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkContentElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkContentElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkContentElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkContentElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="531a4-136">Objet à partir duquel commencer le traitement de l’arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-136">The object from which to start processing the logical tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531a4-137">Retourne la collection d'objets enfants immédiats de l'objet <see cref="T:System.Windows.FrameworkContentElement" /> spécifié, en traitant l'arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-137">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkContentElement" /> by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="531a4-138">Collection énumérable d'objets enfants immédiats en commençant par <paramref name="current" /> dans l'arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-138">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="531a4-139">Objet à partir duquel commencer le traitement de l’arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-139">The object from which to start processing the logical tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531a4-140">Retourne la collection d'objets enfants immédiats de l'objet <see cref="T:System.Windows.FrameworkElement" /> spécifié, en traitant l'arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-140">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkElement" /> by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="531a4-141">Collection énumérable d'objets enfants immédiats en commençant par <paramref name="current" /> dans l'arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-141">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetParent(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (current As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetParent(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetParent : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.GetParent current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="531a4-142">Objet pour lequel rechercher l'objet parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-142">The object to find the parent object for.</span>
          </span>
          <span data-ttu-id="531a4-143">Il peut s'agir de <see cref="T:System.Windows.FrameworkElement" /> ou <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-143">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531a4-144">Retourne l'objet parent de l'objet spécifié en traitant l'arborescence logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-144">Returns the parent object of the specified object by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="531a4-145">Objet parent demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531a4-145">The requested parent object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531a4-146">Cette méthode est simplement un wrapper qui obtient la version du type approprié (<xref:System.Windows.FrameworkElement> ou <xref:System.Windows.FrameworkContentElement>) de la <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> ou <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> propriété ; ainsi, sauf si vous ne parvenez pas à déterminer le `current` type, vous souhaiterez vérifier respectifs propriétés de l’instance à la place.</span><span class="sxs-lookup"><span data-stu-id="531a4-146">This method is merely a wrapper that gets the appropriate type version (<xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>) of the <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> property; so unless you are unable to determine the `current` type, you might want to check the respective instance properties instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>