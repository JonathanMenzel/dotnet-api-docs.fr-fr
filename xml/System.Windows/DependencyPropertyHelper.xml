<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d597cd5f450f95f3ab2d5d0597aa8da7e36488a4" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37493063" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type DependencyPropertyHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une méthode d’assistance unique (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />) qui indique la source du système de propriétés pour la valeur effective d’une propriété de dépendance.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] système de propriétés est relativement complexe et repose sur la rationalisation des valeurs qui proviennent potentiellement de diverses entrées, selon une priorité de détermination de valeur établie. Étant donné que ces sources proviennent potentiellement de code au moment de l’exécution, de balisage compilé ou même à partir des paramètres de l’utilisateur de l’exécution, il peut être utile de savoir exactement quel participant dans le système de valeur de propriété de dépendance établie à la valeur que vous obtenez lors de l’appel <xref:System.Windows.DependencyObject.GetValue%2A>au moment de l’exécution sur cette propriété. Si la valeur provenait d’une autre source que vous aviez prévu, vous devrez peut-être ajuster certains aspects de votre application. La source de la valeur peut être un style, un thème, une valeur locale, une animation, une liaison ou une valeur en fonction d’exécution tels que les paramètres système via les thèmes ou les ressources système. Pour plus d’informations, consultez [Priorité de la valeur de propriété de dépendance](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  
  
 Un autre mécanisme de rapports sur la propriété en général, au lieu d’une instance spécifique de la propriété sur un objet, correspond aux métadonnées de propriété. Les métadonnées de propriété sont peuvent être trouvées en appelant <xref:System.Windows.DependencyProperty.GetMetadata%2A> et en examinant retourné <xref:System.Windows.PropertyMetadata> (ou une de plusieurs classes dérivées possible que les métadonnées de propriété retournés sont convertibles à).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member GetValueSource : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.ValueSource" Usage="System.Windows.DependencyPropertyHelper.GetValueSource (dependencyObject, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Élément contenant la <c>dependencyProperty</c> au sujet de laquelle signaler des informations.</param>
        <param name="dependencyProperty">Identificateur de la propriété de dépendance au sujet de laquelle signaler des informations.</param>
        <summary>Retourne une structure qui signale différentes métadonnées et caractéristiques du système de propriétés d’une propriété de dépendance spécifiée sur un <see cref="T:System.Windows.DependencyObject" /> donné.</summary>
        <returns>Structure <see cref="T:System.Windows.ValueSource" /> qui enregistre les informations spécifiques.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez appeler cette méthode dans un contexte de telle sorte que les participants tardifs dans la détermination de valeur de propriété sont en mesure d’agir sur une propriété. Par exemple, les liaisons ne peuvent pas actives sur une propriété, sauf si tous les éléments des participants dans l’arborescence d’éléments sont chargés et la liaison asynchrone est propagée, et l’objet de source de liaison est connecté. De même, les ressources, y compris tous les dictionnaires de thèmes nécessaires doivent être disponibles.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member IsTemplatedValueDynamic : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic (elementInTemplate, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate">Élément qui appartient à une instance de modèle.</param>
        <param name="dependencyProperty">Propriété de dépendance.</param>
        <summary>Indique si un élément spécifié appartient à une instance d’un modèle qui définit une valeur pour la propriété spécifiée susceptible de changer au moment de l’exécution en fonction de modifications apportées ailleurs.</summary>
        <returns>
          <see langword="true" /> si <paramref name="elementInTemplate" /> appartient à une instance d’un modèle qui définit une valeur pour la propriété spécifiée susceptible de changer au moment de l’exécution en fonction de modifications apportées ailleurs ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Exemples de valeurs qui peuvent changer pendant l’exécution selon les modifications apportées ailleurs sont des valeurs définies par <xref:System.Windows.Data.Binding>, <xref:System.Windows.TemplateBindingExtension> et <xref:System.Windows.DynamicResourceExtension> objets.

Cette méthode fournit plus d’informations dans les cas où la valeur de la <xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType> propriété est <xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>.
Les informations sont principalement utile aux outils de diagnostic.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>