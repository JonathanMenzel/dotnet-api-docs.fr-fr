<Type Name="FreezableCollection&lt;T&gt;" FullName="System.Windows.FreezableCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7846065575c6f12b7266cde59d99095fa434823f" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52905792" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FreezableCollection&lt;T&gt; : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged where T : DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FreezableCollection`1&lt;(class System.Windows.DependencyObject) T&gt; extends System.Windows.Media.Animation.Animatable implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FreezableCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class FreezableCollection(Of T)&#xA;Inherits Animatable&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), INotifyCollectionChanged, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : DependencyObjectpublic ref class FreezableCollection : System::Windows::Media::Animation::Animatable, System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList, System::Collections::Specialized::INotifyCollectionChanged, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type FreezableCollection&lt;'T (requires 'T :&gt; DependencyObject)&gt; = class&#xA;    inherit Animatable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface ICollection&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface seq&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface INotifyCollectionChanged&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="19910-101">Type de collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19910-101">The type of collection.</span>
      </span>
      <span data-ttu-id="19910-102">Ce type doit être un <see cref="T:System.Windows.DependencyObject" /> ou une classe dérivée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19910-102">This type must be a <see cref="T:System.Windows.DependencyObject" /> or a derived class.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="19910-103">Représente une collection d’objets <see cref="T:System.Windows.DependencyObject" />, <see cref="T:System.Windows.Freezable" /> ou <see cref="T:System.Windows.Media.Animation.Animatable" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19910-103">Represents a collection of <see cref="T:System.Windows.DependencyObject" />, <see cref="T:System.Windows.Freezable" />, or <see cref="T:System.Windows.Media.Animation.Animatable" /> objects.</span>
      </span>
      <span data-ttu-id="19910-104">
        <see cref="T:System.Windows.FreezableCollection`1" /> est lui-même un type <see cref="T:System.Windows.Media.Animation.Animatable" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19910-104">
          <see cref="T:System.Windows.FreezableCollection`1" /> is itself an <see cref="T:System.Windows.Media.Animation.Animatable" /> type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-105">Cette classe est fournie pour permettre la création de types de collection personnalisée entièrement en charge la liaison de données, notification de modification, invalidation de la propriété et l’animation de son contenu.</span><span class="sxs-lookup"><span data-stu-id="19910-105">This class is provided to enable the creation of custom collection types that fully support data binding, change notification, property invalidation, and animation of its contents.</span></span>  
  
### <a name="xaml-usage-for-freezablecollection"></a><span data-ttu-id="19910-106">Utilisation XAML pour FreezableCollection</span><span class="sxs-lookup"><span data-stu-id="19910-106">XAML Usage for FreezableCollection</span></span>  
 <span data-ttu-id="19910-107"><xref:System.Windows.FreezableCollection%601> prend en charge une limitée [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntaxe.</span><span class="sxs-lookup"><span data-stu-id="19910-107"><xref:System.Windows.FreezableCollection%601> supports a limited [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span>  
  
-   <span data-ttu-id="19910-108">Un élément de l’objet à la racine, vous pouvez théoriquement spécifier un sans contrainte <xref:System.Windows.FreezableCollection%601> élément objet, qui doit également spécifier le [x : TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) pour déclarer la contrainte.</span><span class="sxs-lookup"><span data-stu-id="19910-108">As an object element at the root, you can theoretically specify an unconstrained <xref:System.Windows.FreezableCollection%601> object element, which must also specify the [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) to declare the constraint.</span></span> <span data-ttu-id="19910-109">Toutefois, cela n’est pas un scénario courant, car pour ce faire, le <xref:System.Windows.FreezableCollection%601> doit être l’élément racine.</span><span class="sxs-lookup"><span data-stu-id="19910-109">However, this is not a common scenario, because to do this, the <xref:System.Windows.FreezableCollection%601> must be the root element.</span></span> <span data-ttu-id="19910-110">Cette limitation existe parce que le [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] implémentation du processeur dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] peut uniquement prise en charge [x : TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) lorsque l’élément, il est défini sur est l’élément racine, et vous devez utiliser sur n’importe quel open contrainte générique si vous souhaitez instancier un type générique dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="19910-110">This limitation exists because the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor implementation in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can only support [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) when the element it is being set on is the root element, and you must use  on any open constraint generic if you want to instantiate a generic type in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="19910-111">Il est peu probable que vous souhaitez un <xref:System.Windows.FreezableCollection%601> comme élément racine, même comme libre [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="19910-111">It is unlikely that you want a <xref:System.Windows.FreezableCollection%601> as the root element, even as loose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
-   <span data-ttu-id="19910-112">Si vous dérivez de <xref:System.Windows.FreezableCollection%601> et appliquer une contrainte de type dans la collection dérivée, la collection dérivée peut prendre en charge diverses utilisations.</span><span class="sxs-lookup"><span data-stu-id="19910-112">If you derive from <xref:System.Windows.FreezableCollection%601> and apply a type constraint in the derived collection, the derived collection can support a variety of usages.</span></span> <span data-ttu-id="19910-113">Cela est possible, car la contrainte de votre dérivation vous évite de devoir passer.</span><span class="sxs-lookup"><span data-stu-id="19910-113">This is possible because the constraint in your derivation eliminates the need to pass .</span></span>  
  
    -   <span data-ttu-id="19910-114">Le type [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] pour une telle collection dérivée est via la syntaxe de collection implicite.</span><span class="sxs-lookup"><span data-stu-id="19910-114">The typical [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage for such a derived collection is through implicit collection syntax.</span></span> <span data-ttu-id="19910-115">Les collections qui prennent en charge certaines interfaces n’avez pas besoin de spécifier la collection elle-même comme un élément objet.</span><span class="sxs-lookup"><span data-stu-id="19910-115">Collections that support certain interfaces do not need to specify the collection itself as an object element.</span></span> <span data-ttu-id="19910-116">Pour plus d’informations sur la syntaxe de collection en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], consultez [syntaxe de XAML en détail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="19910-116">For details on collection syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span> <span data-ttu-id="19910-117">Par exemple, un *objet* avec un *propriété* où le *propriété* était de type <xref:System.Windows.FreezableCollection%601> contraint par <xref:System.Windows.DependencyObject> Impossible de prendre en charge la syntaxe suivante :</span><span class="sxs-lookup"><span data-stu-id="19910-117">For instance, an *object* with a *property* where the *property* was of type <xref:System.Windows.FreezableCollection%601> constrained by <xref:System.Windows.DependencyObject> could support the following syntax:</span></span>  
  
        ```  
        <object>  
          <object.property>  
            oneOrMoreDependencyObjectElements  
          </object.property>  
        </object>  
        ```  
  
    -   <span data-ttu-id="19910-118">Tant que vous ne masquez pas le constructeur par défaut, la collection dérivée peut prendre également en charge une syntaxe d’élément objet (où l’élément objet est explicite, par opposition à l’utilisation implicite indiquée ci-dessus).</span><span class="sxs-lookup"><span data-stu-id="19910-118">As long as you do not hide the default constructor, the derived collection can also support an object element syntax (where the object element is explicit, as opposed to the implicit usage shown above).</span></span> <span data-ttu-id="19910-119">Il est inutile d’être l’élément racine.</span><span class="sxs-lookup"><span data-stu-id="19910-119">It does not need to be the root element.</span></span> <span data-ttu-id="19910-120">Ou bien, vous pouvez également utiliser la collection dérivée comme élément racine, sans avoir à spécifier, bien que l’utilisation d’une collection comme élément racine est rare.</span><span class="sxs-lookup"><span data-stu-id="19910-120">Or, you can also use the derived collection as a root element, without needing to specify , although using a collection as a root element is uncommon.</span></span>  
  
-   <span data-ttu-id="19910-121">Les éléments enfants de la collection dans un des scénarios ci-dessus doivent être du type de la contrainte implémentée ou comme spécifié par.</span><span class="sxs-lookup"><span data-stu-id="19910-121">Any child elements of the collection in either of the above scenarios must be of the type of either the implemented constraint, or as specified by .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19910-122">Initialise une nouvelle instance de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-122">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19910-123">Initialise une nouvelle instance de <see cref="T:System.Windows.FreezableCollection`1" /> qui est vide et possède la capacité initiale par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-123">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; : seq&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="19910-124">La collection dont les éléments doivent être ajoutés au nouveau <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-124">The collection whose items should be added to the new <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-125">Initialise une nouvelle instance de la <see cref="T:System.Windows.FreezableCollection`1" /> classe qui contient les mêmes éléments que la collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-125">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> class that contains the same elements as the specified collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-126">Cette opération effectue une copie superficielle de la collection spécifiée ; uniquement les références aux éléments de la collection sont copiés, les éléments eux-mêmes ne sont pas clonés.</span><span class="sxs-lookup"><span data-stu-id="19910-126">This operation performs a shallow copy on the specified collection; only references to the collection's elements are copied, the elements themselves are not cloned.</span></span> <span data-ttu-id="19910-127">Modification d’un élément de la nouvelle <xref:System.Windows.FreezableCollection%601> modifie également cet élément pour `collection`.</span><span class="sxs-lookup"><span data-stu-id="19910-127">Modifying an element of the new <xref:System.Windows.FreezableCollection%601> also modifies that element for `collection`.</span></span>  
  
 <span data-ttu-id="19910-128">Les éléments sont placés dans le nouveau <xref:System.Windows.FreezableCollection%601> dans le même ordre qu’ils sont lus par l’énumérateur de la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="19910-128">The elements are placed in the new <xref:System.Windows.FreezableCollection%601> in the same order they are read by the enumerator of the specified collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19910-129">
            <paramref name="collection" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-129">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; : int -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="19910-130">Une valeur qui est supérieure ou égale à 0 qui spécifie le nombre d’éléments de la nouvelle collection peut stocker initialement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-130">A value that is greater than or equal to 0 that specifies the number of elements the new collection can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-131">Initialise une nouvelle instance de la <see cref="T:System.Windows.FreezableCollection`1" /> qui est vide et possède la capacité initiale spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-131">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="19910-132">
            <paramref name="capacity" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-132">
              <paramref name="capacity" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T value);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="freezableCollection.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="19910-133">Objet à ajouter à la fin de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-133">The object to be added to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
          <span data-ttu-id="19910-134">Cette valeur ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-134">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-135">Ajoute l’objet spécifié à la fin de la <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-135">Adds the specified object to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19910-136">
            <paramref name="value" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-136">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="19910-137">Le <see cref="T:System.Windows.FreezableCollection`1" /> est figée (sa <see cref="P:System.Windows.Freezable.IsFrozen" /> propriété est <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-137">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="freezableCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19910-138">Supprime tous les éléments de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-138">Removes all elements from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="freezableCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19910-139">Crée un clone modifiable de ce <see cref="T:System.Windows.FreezableCollection`1" /> et son contenu, en effectuant des copies complètes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-139">Creates a modifiable clone of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies.</span>
          </span>
          <span data-ttu-id="19910-140">Si cette collection (ou son contenu) comporte des propriétés de dépendance animées, la valeur de base de la propriété est copiée, et non sa valeur animée actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-140">If this collection (or its contents) has animated dependency properties, the property's base value is copied, not its current animated value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-141">Une copie modifiable de cette collection et son contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-141">A modifiable copy of this collection and its contents.</span>
          </span>
          <span data-ttu-id="19910-142">La copie <see cref="P:System.Windows.Freezable.IsFrozen" /> valeur est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-142">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> value is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-143">Cette méthode occulte héritées <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType> méthode avec une implémentation fortement typée pour des raisons pratiques.</span><span class="sxs-lookup"><span data-stu-id="19910-143">This method shadows the inherited <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.CloneCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="19910-144">
            <see cref="T:System.Windows.FreezableCollection`1" /> à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-144">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-145">Convertit cette instance en clone (copie complète) du spécifié <see cref="T:System.Windows.FreezableCollection`1" /> à l’aide de valeurs de propriété (non-animées) de base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-145">Makes this instance a clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-146">Cette méthode est appelée par le <xref:System.Windows.FreezableCollection%601.Clone%2A> (méthode) et ne doit pas être appelée directement à partir de votre code, à l’exception lors de l’appel de l’implémentation de base lors de la substitution de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="19910-146">This method is called by the <xref:System.Windows.FreezableCollection%601.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="19910-147">Pour créer une copie modifiable de l’objet en cours, appelez <xref:System.Windows.FreezableCollection%601.Clone%2A> au lieu d’appeler cette méthode directement.</span><span class="sxs-lookup"><span data-stu-id="19910-147">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.Clone%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="19910-148">Consultez le <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> page pour plus d’informations sur quand vous devez substituer cette méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="19910-148">See the <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> page for information about when you should override this method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="freezableCollection.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19910-149">Crée une copie modifiable de ce <see cref="T:System.Windows.FreezableCollection`1" /> et son contenu, en effectuant des copies complètes des valeurs actuelles de cet objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-149">Creates a modifiable copy of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="19910-150">Si cet objet (ou les objets qu’il contient) contient les propriétés de dépendance animées, leurs valeurs animées actuelles sont copiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-150">If this object (or the objects it contains) contains animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-151">Un clone modifiable de la collection et son contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-151">A modifiable clone of the collection and its contents.</span>
          </span>
          <span data-ttu-id="19910-152">La propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de l’objet cloné sera <see langword="false" />, même si la propriété <see cref="P:System.Windows.Freezable.IsFrozen" /> de la source était <see langword="true." />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-152">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-153">Cette méthode occulte héritées <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> méthode avec une implémentation fortement typée pour des raisons pratiques.</span><span class="sxs-lookup"><span data-stu-id="19910-153">This method shadows the inherited <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Animatable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.CloneCurrentValueCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="19910-154">
            <see cref="T:System.Windows.FreezableCollection`1" /> à cloner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-154">The <see cref="T:System.Windows.FreezableCollection`1" /> to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-155">Convertit cette instance un clone modifiable (copie intégrale) de l’objet <see cref="T:System.Windows.FreezableCollection`1" /> à l’aide de valeurs de propriété actuelles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-155">Makes this instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using current property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-156">Cette méthode est appelée par le <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> (méthode) et ne doit pas être appelée directement à partir de votre code, à l’exception lors de l’appel de l’implémentation de base lors de la substitution de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="19910-156">This method is called by the <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="19910-157">Pour créer une copie modifiable de l’objet en cours, appelez <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> au lieu d’appeler cette méthode directement.</span><span class="sxs-lookup"><span data-stu-id="19910-157">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="19910-158">Consultez le <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> page pour plus d’informations sur quand vous devez substituer cette méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="19910-158">See the <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> page for information about when you should override this method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="freezableCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="19910-159">Objet à localiser dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-159">The object to locate in this collection.</span>
          </span>
          <span data-ttu-id="19910-160">Cet objet peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-160">This object may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-161">Détermine si ce <see cref="T:System.Windows.FreezableCollection`1" /> contient la valeur spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-161">Determines whether this <see cref="T:System.Windows.FreezableCollection`1" /> contains the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-162">
            <see langword="true" /> Si la valeur se trouve dans le <see cref="T:System.Windows.FreezableCollection`1" />; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-162">
              <see langword="true" /> if value is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="freezableCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="19910-163">Tableau unidimensionnel correspondant à la destination des éléments copiés à partir depuis <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-163">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="19910-164">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-164">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-165">Copie l'ensemble du <see cref="T:System.Windows.FreezableCollection`1" /> dans un tableau compatible unidimensionnel en partant de l'index spécifié du tableau cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-165">Copies the entire <see cref="T:System.Windows.FreezableCollection`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-166">Notez que cette opération effectue une copie superficielle.</span><span class="sxs-lookup"><span data-stu-id="19910-166">Note that this operation performs a shallow copy.</span></span> <span data-ttu-id="19910-167">Les éléments sont copiés dans le tableau cible dans le même ordre que celui dans lequel l’énumérateur itère au sein cela <xref:System.Windows.FreezableCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="19910-167">The elements are copied to the target array in the same order in which the enumerator iterates through this <xref:System.Windows.FreezableCollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19910-168">
            <paramref name="array" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-168">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="19910-169">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-169">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19910-170">Le nombre d’éléments dans la source de <see cref="T:System.Windows.FreezableCollection`1" /> est supérieur à l’espace disponible à partir de l’index à la fin de la destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-170">The number of elements in the source <see cref="T:System.Windows.FreezableCollection`1" /> is greater than the available space from index to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19910-171">Obtient le nombre d’éléments contenus par ce <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-171">Gets the number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19910-172">Le nombre d’éléments contenus par ce <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-172">The number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="freezableCollection.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19910-173">Crée une nouvelle instance de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-173">Creates a new instance of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-174">Nouvelle instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-174">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-175">N’appelez pas cette méthode directement (sauf lorsque vous appelez base dans une implémentation).</span><span class="sxs-lookup"><span data-stu-id="19910-175">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="19910-176">Cette méthode est appelée en interne par <xref:System.Windows.Freezable.CreateInstance%2A>, chaque fois qu’une nouvelle instance de la <xref:System.Windows.Freezable> est créé.</span><span class="sxs-lookup"><span data-stu-id="19910-176">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A>, whenever a new instance of the <xref:System.Windows.Freezable> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19910-177">L’exemple suivant montre une implémentation classique de <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="19910-177">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="19910-178">Chaque <see cref="T:System.Windows.Freezable" /> sous-classe doit implémenter cette méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="19910-178">Every <see cref="T:System.Windows.Freezable" /> subclass must implement this method.</span>
            </span>
            <span data-ttu-id="19910-179">Implémentation classique consiste à simplement appeler le constructeur par défaut de classe et retournent le résultat.</span>
            <span class="sxs-lookup">
              <span data-stu-id="19910-179">Typical implementation is to simply call the class default constructor and return the result.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="freezableCollection.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="19910-180">
            <see langword="true" /> Si le <see cref="T:System.Windows.FreezableCollection`1" /> doit simplement indiquer s’il peut être figé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-180">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> should simply return whether it can be frozen.</span>
          </span>
          <span data-ttu-id="19910-181">
            <see langword="false" /> Si le <see cref="T:System.Windows.FreezableCollection`1" /> instance doit se figer réellement lorsque cette méthode est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-181">
              <see langword="false" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> instance should actually freeze itself when this method is called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-182">Cela rend <see cref="T:System.Windows.FreezableCollection`1" /> objet non modifiable ou détermine s’il peut être rendu non modifiable ou pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-182">Makes this <see cref="T:System.Windows.FreezableCollection`1" /> object unmodifiable or determines whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-183">Si <paramref name="isChecking" /> est <see langword="true" />, cette méthode retourne <see langword="true" /> si ce <see cref="T:System.Windows.FreezableCollection`1" /> peut être rendu non modifiable, ou <see langword="false" /> si elle ne peut pas être rendu non modifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-183">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if this <see cref="T:System.Windows.FreezableCollection`1" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="19910-184">Si <paramref name="isChecking" /> est <see langword="false" />, cette méthode retourne <see langword="true" /> si if spécifié <see cref="T:System.Windows.FreezableCollection`1" /> est désormais non modifiable, ou <see langword="false" /> s’il ne peut pas être rendu non modifiable, avec comme conséquence la modification de l’état figé de cet objet .</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-184">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.FreezableCollection`1" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-185">N’appelez pas cette méthode directement (sauf lorsque vous appelez base dans une implémentation).</span><span class="sxs-lookup"><span data-stu-id="19910-185">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="19910-186">Cette méthode est appelée en interne par <xref:System.Windows.Freezable.CanFreeze%2A> (avec `isChecking` égal à `true`) et <xref:System.Windows.Freezable.Freeze%2A> (avec `isChecking` égale à `false`).</span><span class="sxs-lookup"><span data-stu-id="19910-186">This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="19910-187">Pour plus d’informations sur la façon de substituer cette méthode, consultez <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="19910-187">For information about when to override this method, see <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.GetAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="19910-188">
            <see cref="T:System.Windows.FreezableCollection`1" /> à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-188">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-189">Convertit cette instance en clone figé du spécifié <see cref="T:System.Windows.FreezableCollection`1" /> à l’aide de valeurs de propriété (non-animées) de base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-189">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-190">Cette méthode est appelée par <xref:System.Windows.Freezable.GetAsFrozen%2A> et ne doit pas être appelée directement à partir de votre code, à l’exception lors de l’appel de l’implémentation de base lors de la substitution de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="19910-190">This method is called by <xref:System.Windows.Freezable.GetAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="19910-191">Pour créer une copie figée de l’objet en cours, appelez <xref:System.Windows.Freezable.GetAsFrozen%2A> au lieu d’appeler cette méthode directement.</span><span class="sxs-lookup"><span data-stu-id="19910-191">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="19910-192">Pour plus d’informations sur la façon de substituer cette méthode, consultez <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="19910-192">For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.GetCurrentValueAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="19910-193">
            <see cref="T:System.Windows.FreezableCollection`1" /> à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-193">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-194">Convertit cette instance en un clone figé du <see cref="T:System.Windows.Freezable" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-194">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="19910-195">Si cet objet possède des propriétés de dépendance animées, leurs valeurs animées actuelles sont copiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-195">If this object has animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-196">Cette méthode est appelée par <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> et ne doit pas être appelée directement à partir de votre code, à l’exception lors de l’appel de l’implémentation de base lors de la substitution de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="19910-196">This method is called by <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="19910-197">Pour créer une copie figée de l’objet en cours, appelez <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> au lieu d’appeler cette méthode directement.</span><span class="sxs-lookup"><span data-stu-id="19910-197">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="19910-198">Pour plus d’informations sur la façon de substituer cette méthode, consultez <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="19910-198">For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.FreezableCollection`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As FreezableCollection(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Enumerator" Usage="freezableCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19910-199">Retourne un énumérateur pour le <see cref="T:System.Windows.FreezableCollection`1" /> entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-199">Returns an enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-200">Un énumérateur pour l’ensemble de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-200">An enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="freezableCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="19910-201">Objet à rechercher dans <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-201">The object to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-202">Recherche l'objet spécifié et retourne l'index de base zéro de la première occurrence trouvée dans l'ensemble du <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-202">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-203">Index de base zéro de la première occurrence de <paramref name="value" /> dans l'ensemble du <see cref="T:System.Windows.FreezableCollection`1" />, s'il existe ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-203">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Windows.FreezableCollection`1" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="freezableCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="19910-204">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-204">The zero-based index at which <paramref name="value" /> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="19910-205">Objet à insérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-205">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-206">Insère l’objet spécifié dans le <see cref="T:System.Windows.FreezableCollection`1" /> à l’index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-206">Inserts the specified object into the <see cref="T:System.Windows.FreezableCollection`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19910-207">
            <paramref name="value" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-207">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="19910-208">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-208">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="19910-209">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-209">\- or -</span>
          </span>
          <span data-ttu-id="19910-210">
            <paramref name="index" /> est supérieur à <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-210">
              <paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="19910-211">Le <see cref="T:System.Windows.FreezableCollection`1" /> est figée (sa <see cref="P:System.Windows.Freezable.IsFrozen" /> propriété est <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-211">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="19910-212">Index de base zéro de l'élément à obtenir ou à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-212">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-213">Obtient ou définit l'élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-213">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19910-214">Élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-214">The element at the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="19910-215">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-215">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="19910-216">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-216">\- or -</span>
          </span>
          <span data-ttu-id="19910-217">
            <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-217">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19910-218">L’élément spécifié est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-218">The specified element is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="19910-219">Tentative de définition d’un élément dans la collection lorsque la collection est figée (sa <see cref="P:System.Windows.Freezable.IsFrozen" /> propriété est <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-219">Attempting to set an item in the collection when the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="freezableCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="19910-220">Objet à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-220">The object to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-221">Supprime la première occurrence de l’objet spécifié à partir de la <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-221">Removes the first occurrence of the specified object from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-222">
            <see langword="true" /> Si une occurrence de <paramref name="value" /> a été trouvé dans la collection et supprimée ; <see langword="false" /> si <paramref name="value" /> est introuvable dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-222">
              <see langword="true" /> if an occurrence of <paramref name="value" /> was found in the collection and removed; <see langword="false" /> if <paramref name="value" /> could not be found in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="19910-223">Le <see cref="T:System.Windows.FreezableCollection`1" /> est figée (sa <see cref="P:System.Windows.Freezable.IsFrozen" /> propriété est <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-223">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="freezableCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="19910-224">Index de base zéro de l’objet à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-224">The zero-based index of the object to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-225">Supprime l’objet à l’index de base zéro spécifié du <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-225">Removes the object at the specified zero-based index of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="19910-226">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-226">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="19910-227">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-227">\- or -</span>
          </span>
          <span data-ttu-id="19910-228">
            <paramref name="index" /> est supérieur à <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-228">
              <paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="19910-229">Le <see cref="T:System.Windows.FreezableCollection`1" /> est figée (sa <see cref="P:System.Windows.Freezable.IsFrozen" /> propriété est <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-229">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19910-230">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-230">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19910-231">
            <see langword="true" /> si <see cref="T:System.Windows.FreezableCollection`1" /> est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-231">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-232">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-232">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-233">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="19910-233">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19910-234">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-234">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-235">Objet <see cref="T:System.Collections.Generic.IEnumerator`1" /> pouvant être utilisé pour itérer au sein de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-235">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-236">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-236">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-237">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="19910-237">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="19910-238">Un élément de base zéro <see cref="T:System.Array" /> qui reçoit les éléments copiés à partir de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-238">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="19910-239">La première position dans le texte spécifié <see cref="T:System.Array" /> pour recevoir le contenu copié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-239">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-240">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-240">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-241">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-241">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-242">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="19910-242">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19910-243">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-243">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19910-244">
            <see langword="true" /> si l'accès à <see cref="T:System.Windows.FreezableCollection`1" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-244">
              <see langword="true" /> if access to the <see cref="T:System.Windows.FreezableCollection`1" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-245">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-245">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-246">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="19910-246">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19910-247">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-247">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19910-248">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-248">An object that can be used to synchronize access to the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-249">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-249">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-250">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="19910-250">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19910-251">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-251">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-252">Objet <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-252">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-253">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-253">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-254">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="19910-254">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="19910-255">
            <see cref="T:System.Object" /> à ajouter à <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-255">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-256">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-256">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-257">Position à laquelle le nouvel élément est inséré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-257">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-258">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-258">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-259">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="19910-259">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Add(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="19910-260">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-260">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-261">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-261">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-262">
            <see langword="true" /> si le <see cref="T:System.Object" /> se trouve dans le <see cref="T:System.Windows.FreezableCollection`1" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-262">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-263">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-263">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-264">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="19910-264">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="19910-265">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-265">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-266">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-266">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19910-267">Index de <paramref name="value" /> s'il figure dans la liste ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-267">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-268">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-268">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-269">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="19910-269">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="19910-270">Index de base zéro au niveau duquel insérer le <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-270">The zero-based index at which to insert the <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="19910-271">
            <see cref="T:System.Object" /> à insérer dans le <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-271">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-272">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-272">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-273">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-273">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-274">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="19910-274">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19910-275">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-275">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19910-276">
            <see langword="true" /> si <see cref="T:System.Windows.FreezableCollection`1" /> est de taille fixe ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-276">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-277">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-277">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-278">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="19910-278">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19910-279">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-279">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19910-280">
            <see langword="true" /> si <see cref="T:System.Windows.FreezableCollection`1" /> est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-280">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-281">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-281">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-282">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="19910-282">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="19910-283">Index de base zéro de l'élément à obtenir ou à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-283">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-284">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-284">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19910-285">Élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-285">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-286">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-287">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="19910-287">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="19910-288">
            <see cref="T:System.Object" /> à supprimer de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-288">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19910-289">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-289">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19910-290">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-291">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="19910-291">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
      <MemberSignature Language="C#" Value="event System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FreezableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event CollectionChanged As NotifyCollectionChangedEventHandler Implements System.Collections.Specialized.INotifyCollectionChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19910-292">Pour obtenir une description de ce membre, consultez <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-292">For a description of this members, see <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="19910-293">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-293">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-294">Il peut être utilisé uniquement lorsqu'un cast de l'instance de <xref:System.Windows.FreezableCollection%601> est effectué en une interface <xref:System.Collections.Specialized.INotifyCollectionChanged>.</span><span class="sxs-lookup"><span data-stu-id="19910-294">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Specialized.INotifyCollectionChanged> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FreezableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19910-295">Pour obtenir une description de ce membre, consultez <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19910-295">For a description of this members, see <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="19910-296">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="19910-296">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="19910-297">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.FreezableCollection%601> est castée en interface <xref:System.ComponentModel.INotifyPropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="19910-297">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.ComponentModel.INotifyPropertyChanged> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>