<Type Name="WebSocket" FullName="System.Net.WebSockets.WebSocket">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf4f01f890d0349a5ca5282124817bb4f1ee854e" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebSocket : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebSocket extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebSocket&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebSocket abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.WebSockets</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c9fb6-101">La classe WebSocket permet aux applications d’envoyer et de recevoir des données une fois la mise à niveau WebSocket terminée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9fb6-101">The WebSocket class allows applications to send and receive data after the WebSocket upgrade has completed.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9fb6-102">Certaines des classes dans le <xref:System.Net.WebSockets> espace de noms sont pris en charge sur Windows 7, Windows Vista SP2 et Windows Server 2008.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-102">Some of the classes in the <xref:System.Net.WebSockets> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008.</span></span> <span data-ttu-id="c9fb6-103">Toutefois, les implémentations publics uniquement du client et serveur WebSocket sont pris en charge sur Windows 8 et Windows Server 2012.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-103">However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012.</span></span> <span data-ttu-id="c9fb6-104">Les classes et les éléments de la classe dans le <xref:System.Net.WebSockets> espace de noms qui sont pris en charge sur Windows 7, Windows Vista SP2 et Windows Server 2008 sont des classes abstraites.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-104">The classes and class elements in the <xref:System.Net.WebSockets> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract classes.</span></span> <span data-ttu-id="c9fb6-105">Cela permet à un développeur d’applications hériter et étendre ces classes abstraites avec une implémentation réelle du client WebSocket.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-105">This allows an application developer to inherit and extend these abstract classes with an actual implementation of client WebSockets.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebSocket();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9fb6-106">Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-106">Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocket" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9fb6-107">Abandonne la connexion WebSocket et annule les opérations d’E/S en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-107">Aborts the WebSocket connection and cancels any pending IO operations.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus">
          <span data-ttu-id="c9fb6-108">Indique la raison de la fermeture de la connexion de WebSocket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-108">Indicates the reason for closing the WebSocket connection.</span>
          </span>
        </param>
        <param name="statusDescription">
          <span data-ttu-id="c9fb6-109">Indique dans un format lisible pourquoi la connexion a été fermée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-109">Specifies a human readable explanation as to why the connection is closed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c9fb6-110">Jeton qui peut être utilisé pour propager la notification d’annulation des opérations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-110">The token that can be used to propagate notification that operations should be canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9fb6-111">Ferme la connexion de WebSocket en tant qu’opération asynchrone à l’aide du protocole de transfert de fermeture défini dans la section 7 de la [spécification du protocole WebSocket](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-111">Closes the WebSocket connection as an asynchronous operation using the close handshake defined in the [WebSocket protocol specification](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06) section 7.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9fb6-112">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-112">Returns <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
          <span data-ttu-id="c9fb6-113">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-113">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9fb6-114">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-114">This operation will not block.</span></span> <span data-ttu-id="c9fb6-115">Retourné <xref:System.Threading.Tasks.Task> objet se termine après le WebSocket a été fermé.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-115">The returned <xref:System.Threading.Tasks.Task> object will complete after the WebSocket has been closed.</span></span>  
  
 <span data-ttu-id="c9fb6-116">Cette méthode ferme la connexion WebSocket à l’aide de la négociation de fermeture définie dans le [spécification du protocole WebSocket](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06) section 7.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-116">This method closes the WebSocket connection using the close handshake defined in the [WebSocket protocol specification](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06) section 7.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus">
          <span data-ttu-id="c9fb6-117">Indique la raison de la fermeture de la connexion de WebSocket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-117">Indicates the reason for closing the WebSocket connection.</span>
          </span>
        </param>
        <param name="statusDescription">
          <span data-ttu-id="c9fb6-118">Autorise les applications à indiquer dans un format lisible pourquoi la connexion a été fermée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-118">Allows applications to specify a human readable explanation as to why the connection is closed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c9fb6-119">Jeton qui peut être utilisé pour propager la notification d’annulation des opérations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-119">The token that can be used to propagate notification that operations should be canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9fb6-120">Démarre ou termine le protocole de transfert de fermeture défini dans la [section 7 de la spécification du protocole WebSocket](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-120">Initiates or completes the close handshake defined in the [WebSocket protocol specification section 7](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9fb6-121">Retourne <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-121">Returns <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
          <span data-ttu-id="c9fb6-122">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-122">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9fb6-123">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-123">This operation will not block.</span></span> <span data-ttu-id="c9fb6-124">Retourné <xref:System.Threading.Tasks.Task> objet se termine après la sortie sur le WebSocket a été fermée.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-124">The returned <xref:System.Threading.Tasks.Task> object will complete after the output on the WebSocket has been closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public abstract Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.WebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9fb6-125">Indique la raison pour laquelle le point de terminaison distant a initié le protocole de transfert de fermeture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-125">Indicates the reason why the remote endpoint initiated the close handshake.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9fb6-126">Retourne <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-126">Returns <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9fb6-127">Si le protocole de transfert de fermeture n’a pas encore été lancé, WebSocketCloseStatus.None est retournée.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-127">If the close handshake has not been initiated yet, WebSocketCloseStatus.None is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public abstract string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.WebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9fb6-128">Permet au point de terminaison distant de décrire la raison pour laquelle la connexion a été fermée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-128">Allows the remote endpoint to describe the reason why the connection was closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9fb6-129">Retourne <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-129">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClientBuffer">
      <MemberSignature Language="C#" Value="public static ArraySegment&lt;byte&gt; CreateClientBuffer (int receiveBufferSize, int sendBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ArraySegment`1&lt;unsigned int8&gt; CreateClientBuffer(int32 receiveBufferSize, int32 sendBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateClientBuffer (receiveBufferSize As Integer, sendBufferSize As Integer) As ArraySegment(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ArraySegment&lt;System::Byte&gt; CreateClientBuffer(int receiveBufferSize, int sendBufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ArraySegment&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiveBufferSize" Type="System.Int32" />
        <Parameter Name="sendBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="receiveBufferSize">
          <span data-ttu-id="c9fb6-130">Taille, en octets, de la mémoire tampon de réception client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-130">The size, in bytes, of the client receive buffer.</span>
          </span>
        </param>
        <param name="sendBufferSize">
          <span data-ttu-id="c9fb6-131">Taille, en octets, de la mémoire tampon d’envoi</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-131">The size, in bytes, of the send buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9fb6-132">Crée les mémoires tampons du client pour l'utiliser avec cette instance <see cref="T:System.Net.WebSockets.WebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-132">Create client buffers to use with this <see cref="T:System.Net.WebSockets.WebSocket" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9fb6-133">Retourne <see cref="T:System.ArraySegment`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-133">Returns <see cref="T:System.ArraySegment`1" />.</span>
          </span>
          <span data-ttu-id="c9fb6-134">Tableau avec les mémoires tampons du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-134">An array with the client buffers.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClientWebSocket">
      <MemberSignature Language="C#" Value="public static System.Net.WebSockets.WebSocket CreateClientWebSocket (System.IO.Stream innerStream, string subProtocol, int receiveBufferSize, int sendBufferSize, TimeSpan keepAliveInterval, bool useZeroMaskingKey, ArraySegment&lt;byte&gt; internalBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebSockets.WebSocket CreateClientWebSocket(class System.IO.Stream innerStream, string subProtocol, int32 receiveBufferSize, int32 sendBufferSize, valuetype System.TimeSpan keepAliveInterval, bool useZeroMaskingKey, valuetype System.ArraySegment`1&lt;unsigned int8&gt; internalBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateClientWebSocket (innerStream As Stream, subProtocol As String, receiveBufferSize As Integer, sendBufferSize As Integer, keepAliveInterval As TimeSpan, useZeroMaskingKey As Boolean, internalBuffer As ArraySegment(Of Byte)) As WebSocket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebSockets::WebSocket ^ CreateClientWebSocket(System::IO::Stream ^ innerStream, System::String ^ subProtocol, int receiveBufferSize, int sendBufferSize, TimeSpan keepAliveInterval, bool useZeroMaskingKey, ArraySegment&lt;System::Byte&gt; internalBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" />
        <Parameter Name="sendBufferSize" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
        <Parameter Name="useZeroMaskingKey" Type="System.Boolean" />
        <Parameter Name="internalBuffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="c9fb6-135">Connexion à utiliser pour les opérations d'E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-135">The connection to be used for IO operations.</span>
          </span>
        </param>
        <param name="subProtocol">
          <span data-ttu-id="c9fb6-136">Sous-protocole accepté par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-136">The subprotocol accepted by the client.</span>
          </span>
        </param>
        <param name="receiveBufferSize">
          <span data-ttu-id="c9fb6-137">Taille en octets de la mémoire tampon de réception du WebSocket client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-137">The size in bytes of the client WebSocket receive buffer.</span>
          </span>
        </param>
        <param name="sendBufferSize">
          <span data-ttu-id="c9fb6-138">Taille en octets de la mémoire tampon d'envoi du WebSocket client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-138">The size in bytes of the client WebSocket send buffer.</span>
          </span>
        </param>
        <param name="keepAliveInterval">
          <span data-ttu-id="c9fb6-139">Détermine la fréquence à laquelle une image est envoyée par connexion en tant que persistante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-139">Determines how regularly a frame is sent over the connection as a keep-alive.</span>
          </span>
          <span data-ttu-id="c9fb6-140">S'applique uniquement lorsque la connexion est inactive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-140">Applies only when the connection is idle.</span>
          </span>
        </param>
        <param name="useZeroMaskingKey">
          <span data-ttu-id="c9fb6-141">Indique si une clé aléatoire ou une clé statique (seulement des zéros) doit être utilisée pour le masquage WebSocket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-141">Indicates whether a random key or a static key (just zeros) should be used for the WebSocket masking.</span>
          </span>
        </param>
        <param name="internalBuffer">
          <span data-ttu-id="c9fb6-142">Sera utilisé comme mémoire tampon interne dans le WPC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-142">Will be used as the internal buffer in the WPC.</span>
          </span>
          <span data-ttu-id="c9fb6-143">La taille doit être au moins égale à <c>2 \* ReceiveBufferSize + SendBufferSize + 256 + 20 (16 on 32-bit)</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-143">The size has to be at least <c>2 \* ReceiveBufferSize + SendBufferSize + 256 + 20 (16 on 32-bit)</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9fb6-144">Cette API prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-144">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="c9fb6-145">Permet aux appelants de créer une classe de WebSocket côté client qui utilisera le WSPC pour ce qui concerne les cadres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-145">Allows callers to create a client side WebSocket class which will use the WSPC for framing purposes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9fb6-146">Retourne <see cref="T:System.Net.WebSockets.WebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-146">Returns <see cref="T:System.Net.WebSockets.WebSocket" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromStream">
      <MemberSignature Language="C#" Value="public static System.Net.WebSockets.WebSocket CreateFromStream (System.IO.Stream stream, bool isServer, string subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebSockets.WebSocket CreateFromStream(class System.IO.Stream stream, bool isServer, string subProtocol, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CreateFromStream(System.IO.Stream,System.Boolean,System.String,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebSockets::WebSocket ^ CreateFromStream(System::IO::Stream ^ stream, bool isServer, System::String ^ subProtocol, TimeSpan keepAliveInterval);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isServer" Type="System.Boolean" />
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="stream">To be added.</param>
        <param name="isServer">To be added.</param>
        <param name="subProtocol">To be added.</param>
        <param name="keepAliveInterval">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServerBuffer">
      <MemberSignature Language="C#" Value="public static ArraySegment&lt;byte&gt; CreateServerBuffer (int receiveBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ArraySegment`1&lt;unsigned int8&gt; CreateServerBuffer(int32 receiveBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateServerBuffer (receiveBufferSize As Integer) As ArraySegment(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ArraySegment&lt;System::Byte&gt; CreateServerBuffer(int receiveBufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ArraySegment&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiveBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="receiveBufferSize">
          <span data-ttu-id="c9fb6-147">Taille en octets, de la mémoire tampon désirée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-147">The size, in bytes, of the desired buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9fb6-148">Crée une mémoire tampon WebSocket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-148">Creates a WebSocket server buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9fb6-149">Retourne <see cref="T:System.ArraySegment`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-149">Returns <see cref="T:System.ArraySegment`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultKeepAliveInterval">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultKeepAliveInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultKeepAliveInterval" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultKeepAliveInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan DefaultKeepAliveInterval { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9fb6-150">Obtient ou définit l'intervalle par défaut pendant lequel maintenir l'activité du protocole WebSocket en millisecondes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-150">Gets the default WebSocket protocol keep-alive interval in milliseconds.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9fb6-151">Retourne <see cref="T:System.TimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-151">Returns <see cref="T:System.TimeSpan" />.</span>
          </span>
          <span data-ttu-id="c9fb6-152">Intervalle par défaut, en millisecondes, pendant lequel maintenir l'activité du protocole WebSocket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-152">The default WebSocket protocol keep-alive interval in milliseconds.</span>
          </span>
          <span data-ttu-id="c9fb6-153">La valeur type pour cet intervalle de temps est 30 secondes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-153">The typical value for this interval is 30 seconds.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9fb6-154">Permet de nettoyer les ressources non managées pour ASP.NET et les implémentations auto-hébergées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-154">Used to clean up unmanaged resources for ASP.NET and self-hosted implementations.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsApplicationTargeting45">
      <MemberSignature Language="C#" Value="public static bool IsApplicationTargeting45 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsApplicationTargeting45() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsApplicationTargeting45 () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsApplicationTargeting45();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9fb6-155">Retourne une valeur qui indique si l'instance de WebSocket cible [!INCLUDE[net_v45](~/includes/net-v45-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-155">Returns a value that indicates if the WebSocket instance is targeting [!INCLUDE[net_v45](~/includes/net-v45-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9fb6-156">Retourne <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-156">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="c9fb6-157">
            <see langword="true" /> si <see cref="T:System.Net.WebSockets.WebSocket" /> cible [!INCLUDE[net_v45](~/includes/net-v45-md.md)] ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-157">
              <see langword="true" /> if the <see cref="T:System.Net.WebSockets.WebSocket" /> is targeting [!INCLUDE[net_v45](~/includes/net-v45-md.md)]; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStateTerminal">
      <MemberSignature Language="C#" Value="protected static bool IsStateTerminal (System.Net.WebSockets.WebSocketState state);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool IsStateTerminal(valuetype System.Net.WebSockets.WebSocketState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function IsStateTerminal (state As WebSocketState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool IsStateTerminal(System::Net::WebSockets::WebSocketState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Net.WebSockets.WebSocketState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="c9fb6-158">État actuel du WebSocket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-158">The current state of the WebSocket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9fb6-159">Retourne une valeur qui indique si l'état de l'instance WebSocket est fermé ou abandonné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-159">Returns a value that indicates if the state of the WebSocket instance is closed or aborted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9fb6-160">Retourne <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-160">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="c9fb6-161">
            <see langword="true" /> si <see cref="T:System.Net.WebSockets.WebSocket" /> est fermé ou abandonné ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-161">
              <see langword="true" /> if the <see cref="T:System.Net.WebSockets.WebSocket" /> is closed or aborted; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c9fb6-162">Fait référence à la mémoire tampon d’application qui est l’emplacement de stockage des données reçues.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-162">References the application buffer that is the storage location for the received data.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c9fb6-163">Propage la notification indiquant que des opérations doivent être annulées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-163">Propagates the notification that operations should be canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9fb6-164">Reçoit les données de façon asynchrone à partir de la connexion <see cref="T:System.Net.WebSockets.WebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-164">Receives data from the <see cref="T:System.Net.WebSockets.WebSocket" /> connection asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9fb6-165">Retourne <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-165">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="c9fb6-166">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-166">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="c9fb6-167">La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l’objet de tâche retourne un tableau de <see cref="T:System.Byte" /> contenant les données reçues.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-167">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Byte" /> array containing the received data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9fb6-168">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-168">This operation will not block.</span></span> <span data-ttu-id="c9fb6-169">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine une fois que les données ont été reçues sur le <xref:System.Net.WebSockets.WebSocket>.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-169">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the data has been received on the <xref:System.Net.WebSockets.WebSocket>.</span></span>  
  
 <span data-ttu-id="c9fb6-170">Un seul envoi et l’autre réception est pris en charge sur chaque <xref:System.Net.WebSockets.WebSocket> objet en parallèle.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-170">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.WebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt; ReceiveAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.Net.WebSockets.ValueWebSocketReceiveResult&gt; ReceiveAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask&lt;System::Net::WebSockets::ValueWebSocketReceiveResult&gt; ReceiveAsync(Memory&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPrefixes">
      <MemberSignature Language="C#" Value="public static void RegisterPrefixes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterPrefixes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.RegisterPrefixes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterPrefixes ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterPrefixes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9fb6-171">Cette API prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-171">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="c9fb6-172">Autorise les appelants à enregistrer des préfixes pour les requêtes de WebSocket (WS et WSS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-172">Allows callers to register prefixes for WebSocket requests (ws and wss).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c9fb6-173">Mémoire tampon à envoyer via la connexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-173">The buffer to be sent over the connection.</span>
          </span>
        </param>
        <param name="messageType">
          <span data-ttu-id="c9fb6-174">Indique si l’application envoie un message binaire ou texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-174">Indicates whether the application is sending a binary or text message.</span>
          </span>
        </param>
        <param name="endOfMessage">
          <span data-ttu-id="c9fb6-175">Indique si les données en mémoire tampon (« buffer ») constituent la dernière partie d’un message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-175">Indicates whether the data in "buffer" is the last part of a message.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c9fb6-176">Jeton qui propage la notification d’annulation des opérations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-176">The token that propagates the notification that operations should be canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9fb6-177">Envoie les données de façon asynchrone via la connexion <see cref="T:System.Net.WebSockets.WebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-177">Sends data over the <see cref="T:System.Net.WebSockets.WebSocket" /> connection asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9fb6-178">Objet de tâche représentant l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-178">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9fb6-179">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-179">This operation will not block.</span></span> <span data-ttu-id="c9fb6-180">Retourné <xref:System.Threading.Tasks.Task> objet se termine une fois que les données ont été envoyées le <xref:System.Net.WebSockets.WebSocket>.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-180">The returned <xref:System.Threading.Tasks.Task> object will complete after the data has been sent on the <xref:System.Net.WebSockets.WebSocket>.</span></span>  
  
 <span data-ttu-id="c9fb6-181">Un seul envoi et l’autre réception est pris en charge sur chaque <xref:System.Net.WebSockets.WebSocket> objet en parallèle.</span><span class="sxs-lookup"><span data-stu-id="c9fb6-181">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.WebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask SendAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask SendAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask SendAsync(ReadOnlyMemory&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="messageType">To be added.</param>
        <param name="endOfMessage">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public abstract System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.WebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9fb6-182">Retourne l’état actuel de la connexion WebSocket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-182">Returns the current state of the WebSocket connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9fb6-183">Retourne <see cref="T:System.Net.WebSockets.WebSocketState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-183">Returns <see cref="T:System.Net.WebSockets.WebSocketState" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public abstract string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.WebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9fb6-184">Sous-protocole qui a été négocié pendant le protocole de transfert d’ouverture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-184">The subprotocol that was negotiated during the opening handshake.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9fb6-185">Retourne <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-185">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnInvalidState">
      <MemberSignature Language="C#" Value="protected static void ThrowOnInvalidState (System.Net.WebSockets.WebSocketState state, params System.Net.WebSockets.WebSocketState[] validStates);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void ThrowOnInvalidState(valuetype System.Net.WebSockets.WebSocketState state, valuetype System.Net.WebSockets.WebSocketState[] validStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub ThrowOnInvalidState (state As WebSocketState, ParamArray validStates As WebSocketState())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void ThrowOnInvalidState(System::Net::WebSockets::WebSocketState state, ... cli::array &lt;System::Net::WebSockets::WebSocketState&gt; ^ validStates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Net.WebSockets.WebSocketState" />
        <Parameter Name="validStates" Type="System.Net.WebSockets.WebSocketState[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="c9fb6-186">État actuel du WebSocket à tester par rapport à la liste d'états valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-186">The current state of the WebSocket to be tested against the list of valid states.</span>
          </span>
        </param>
        <param name="validStates">
          <span data-ttu-id="c9fb6-187">Liste des états de connexion valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-187">List of valid connection states.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9fb6-188">Vérifie que la connexion est dans un état attendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fb6-188">Verifies that the connection is in an expected state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>