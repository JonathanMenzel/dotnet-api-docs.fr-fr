<Type Name="WebApplicationLifetimeEvent" FullName="System.Web.Management.WebApplicationLifetimeEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7310888860f051e34e5f7da02773949e0c63776d" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46680756" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebApplicationLifetimeEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationLifetimeEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebApplicationLifetimeEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebApplicationLifetimeEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebApplicationLifetimeEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un événement significatif dans la durée de vie d'une application.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Contrôle d’état ASP.NET permet de personnel d’exploitation et de production gérer les applications Web déployées. Le <xref:System.Web.Management> espace de noms contient les types d’événements d’état responsables de l’empaquetage des données de l’état d’intégrité d’application et les types de fournisseur chargés de traiter ces données. Il contient également des types de prise en charge qui facilitent la gestion des événements d’état.  
  
 Événements de durée de vie d’application incluent des événements, tels que le démarrage de l’application et les événements d’arrêt. Si l’application est arrêtée, vous pouvez déterminer pourquoi en affichant le champ de message d’événement associé.  
  
 Quand un <xref:System.Web.Management.WebApplicationLifetimeEvent> instance se produit, ASP.NET sur l’intégrité des mises à jour le compteur de performance événements de durée de vie d’Application. Vous pouvez enregistrer ces événements en ajoutant le <xref:System.Web.Management.WebApplicationLifetimeEvent> de l’objet à la `rules` sous-section de la `healthMonitoring` section du fichier de configuration, comme indiqué dans l’exemple suivant.  
  
```  
<rules>  
  <add name="Application Events"  
    eventName="Application Lifetime Events"  
    provider="EventLogProvider"  
    profile="Default"  
    minInterval="00:01:00" />  
</rules>  
  
```  
  
 Le compteur de performance événements de durée de vie d’Application contient la somme totale de tous les événements de durée de vie ASP.NET. Pour afficher ce compteur de performance dans le Moniteur système (PerfMon), dans le **ajouter des compteurs** fenêtre Sélectionnez **ASP.NET** à partir de la **objet de Performance** liste déroulante. Sélectionnez le **événements de durée de vie d’Application** compteur de performance, puis cliquez sur le **ajouter** bouton. Pour plus d’informations, consultez « Utilisation du Moniteur système (PerfMon) avec les Applications ASP.NET » sur [MSDN](http://go.microsoft.com/fwlink/?linkid=37118). Si vous autorisez des événements par la norme <xref:System.Web.Management.EventLogWebEventProvider>, vous pouvez les afficher dans l’Observateur d’événements en sélectionnant le **Application** journal. Pour plus d’informations, consultez [Observateur d’événements](http://go.microsoft.com/fwlink/?linkid=24845&clcid=0x409) dans la documentation de Windows Server 2003 sur TechNet.  
  
> [!CAUTION]
>  Étant donné que le <xref:System.Web.Management.WebApplicationLifetimeEvent> objet est un événement à fort volume, journalisation il consomme beaucoup de ressources et peut ralentir votre système. Cela peut également provoquer d’autres événements doivent être remplacées dans le cas de la <xref:System.Web.Management.EventLogWebEventProvider> classe en raison du grand nombre d’événements et la manière dont le journal des événements fonctionne.  
  
> [!NOTE]
>  Dans la plupart des cas, vous serez en mesure d’utiliser les types de contrôle d’état ASP.NET tel qu’implémenté, et vous surveillerez le système de contrôle d’intégrité en spécifiant des valeurs dans le `healthMonitoring` section de configuration. Vous pouvez également dériver les types de contrôle d’intégrité pour créer vos propres événements personnalisés et les fournisseurs. Pour obtenir un exemple de la dérivation de la <xref:System.Web.Management.WebApplicationLifetimeEvent> de classe, consultez l’exemple fourni dans cette rubrique.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment dériver à partir de la <xref:System.Web.Management.WebApplicationLifetimeEvent> classe pour créer un événement personnalisé.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#1)]  
  
 L’extrait de fichier de configuration suivant montre comment configurer le `healthMonitoring` section d’un fichier de configuration pour ajouter le `SampleWebApplicationLifetimeEvent` code défini ci-dessus pour le système de contrôle d’état ASP.NET. Pour ajouter l’événement au système, vous devez définir l’événement en ajoutant une nouvelle entrée à la `eventMappings` section et mapper l’événement à un fournisseur en ajoutant une nouvelle entrée à la `rules` section.  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <eventMappings>  
       <clear />  
       <!-- Configure the application lifetime event -->  
       <!-- object to handle the Web application events. -->  
       <add name="SampleApplicationLifetimeEvents"  
         type="System.Web.Management.SampleWebApplicationLifetimeEvent,  
         System.Web,Version=2.0.3600.0,  
         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a" />  
     </eventMappings>  
  
    <rules>  
      <clear/>  
       // Configure the connection between the   
       // application lifetime event object   
       // and the provider that must process it.  
       <add name="Custom Application Events"  
         eventName="SampleApplicationLifetimeEvents"  
         provider="EventLogProvider"  
         profile="Default"  
         minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Lors de la mise en forme de vos informations d’événement personnalisé pour l’affichage, substituez le <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> méthode plutôt que la <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> (méthode). Cela évitera de remplacement ou la falsification des informations système sensibles.</para>
    </block>
    <related type="Article" href="http://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Vue d’ensemble de la surveillance d’état ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" />.</summary>
        <related type="Article" href="http://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Vue d’ensemble de la surveillance d’état ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Message associé à l'événement.</param>
        <param name="eventSource">Objet qui représente la source de l'événement.</param>
        <param name="eventCode">Code associé à l'événement. Lorsque vous implémentez un événement personnalisé, le code d'événement doit être supérieur à <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Initialise la classe <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> en utilisant les paramètres fournis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est utilisé en interne par le système de contrôle d’état ASP.NET. Vous ne l’utiliserez jamais pour créer une instance de la <xref:System.Web.Management.WebApplicationLifetimeEvent> classe, mais vous pouvez appeler ce constructeur lorsque vous implémentez votre propre type d’événement qui hérite de cette classe.  
  
> [!NOTE]
>  Le <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructeur n’est pas destiné à être utilisé directement à partir de votre code. Elle est appelée par ASP.NET. Vous pouvez appeler la <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructeur lors de la dérivation à partir de la <xref:System.Web.Management.WebApplicationLifetimeEvent> classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> dans un événement de contrôle d’intégrité personnalisées ASP.NET. Cet exemple de code est principalement destiné à afficher la syntaxe correcte à utiliser.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#2)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Vue d’ensemble de la surveillance d’état ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Message associé à l'événement.</param>
        <param name="eventSource">Objet qui représente la source de l'événement.</param>
        <param name="eventCode">Code associé à l'événement. Lorsque vous implémentez un événement personnalisé, le code d'événement doit être supérieur à <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Valeur <see cref="T:System.Web.Management.WebEventCodes" /> qui spécifie l'identificateur détaillé de l'événement.</param>
        <summary>Initialise la classe <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> en utilisant les paramètres fournis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est utilisé en interne par le système de contrôle d’état ASP.NET. Vous ne l’utiliserez jamais pour créer une instance de la <xref:System.Web.Management.WebApplicationLifetimeEvent> classe, mais vous pouvez appeler ce constructeur lorsque vous implémentez votre propre type d’événement qui hérite de cette classe.  
  
> [!NOTE]
>  Le <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructeur n’est pas destiné à être utilisé directement à partir de votre code. Elle est appelée par ASP.NET. Vous pouvez appeler la <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructeur lors de la dérivation à partir de la <xref:System.Web.Management.WebApplicationLifetimeEvent> classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> dans un événement de contrôle d’intégrité personnalisées ASP.NET. Cet exemple de code est principalement destiné à afficher la syntaxe correcte à utiliser.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#3)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Vue d’ensemble de la surveillance d’état ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webApplicationLifetimeEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Utilisé en interne pour incrémenter des compteurs de performance.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Vue d’ensemble de la surveillance d’état ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>