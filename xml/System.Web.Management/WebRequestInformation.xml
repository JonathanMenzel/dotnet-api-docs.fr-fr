<Type Name="WebRequestInformation" FullName="System.Web.Management.WebRequestInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7bd011e445989fc0ec2555517ab864aac0037b1e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37545426" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebRequestInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebRequestInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebRequestInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebRequestInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequestInformation sealed" />
  <TypeSignature Language="F#" Value="type WebRequestInformation = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9b782-101">Fournit des informations sur la demande Web en cours.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9b782-101">Provides information about the current Web request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b782-102">Contrôle d’état ASP.NET permet de personnel d’exploitation et de production gérer les applications Web déployées.</span><span class="sxs-lookup"><span data-stu-id="9b782-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="9b782-103">Le <xref:System.Web.Management> espace de noms contient les types d’événements d’état responsables de l’empaquetage des données de l’état d’intégrité d’application et les types de fournisseur chargés de traiter ces données.</span><span class="sxs-lookup"><span data-stu-id="9b782-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="9b782-104">Il contient également des types de prise en charge qui facilitent la gestion des événements d’état.</span><span class="sxs-lookup"><span data-stu-id="9b782-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="9b782-105">Instances de la <xref:System.Web.Management.WebRequestInformation> classe contiennent des informations obtenues à l’aide de la <xref:System.Web.Management.WebRequestEvent>, <xref:System.Web.Management.WebAuditEvent>, <xref:System.Web.Management.WebErrorEvent>, ou <xref:System.Web.Management.WebRequestErrorEvent> types.</span><span class="sxs-lookup"><span data-stu-id="9b782-105">Instances of the <xref:System.Web.Management.WebRequestInformation> class contain information that is obtained using the <xref:System.Web.Management.WebRequestEvent>, <xref:System.Web.Management.WebAuditEvent>, <xref:System.Web.Management.WebErrorEvent>, or <xref:System.Web.Management.WebRequestErrorEvent> types.</span></span>  
  
 <span data-ttu-id="9b782-106">Votre application a besoin des autorisations appropriées pour accéder aux informations protégées fournies par ce type.</span><span class="sxs-lookup"><span data-stu-id="9b782-106">Your application needs the appropriate permissions to access protected information provided by this type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9b782-107">Dans la plupart des cas, vous serez en mesure d’utiliser les types de contrôle d’état ASP.NET tel qu’implémenté, et vous surveillerez le système de contrôle d’intégrité en spécifiant des valeurs dans le `healthMonitoring` section de configuration.</span><span class="sxs-lookup"><span data-stu-id="9b782-107">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="9b782-108">Vous pouvez également dériver les types de contrôle d’intégrité pour créer vos propres événements personnalisés et les fournisseurs.</span><span class="sxs-lookup"><span data-stu-id="9b782-108">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="9b782-109">Pour obtenir un exemple de création d’une classe d’événements personnalisés, consultez l’exemple fourni dans cette rubrique.</span><span class="sxs-lookup"><span data-stu-id="9b782-109">For an example of creating a custom event class, see the example provided in this topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b782-110">L’exemple de code suivant montre comment implémenter un événement personnalisé qui utilise le <xref:System.Web.Management.WebRequestInformation> type.</span><span class="sxs-lookup"><span data-stu-id="9b782-110">The following code example shows how to implement a custom event that uses the <xref:System.Web.Management.WebRequestInformation> type.</span></span>  
  
 <span data-ttu-id="9b782-111">Un extrait du fichier de configuration qui permet à ASP.NET d’utiliser cet événement personnalisé est également affiché.</span><span class="sxs-lookup"><span data-stu-id="9b782-111">Also shown is an excerpt of the configuration file that enables ASP.NET to use this custom event.</span></span>  
  
 <span data-ttu-id="9b782-112">Assurez-vous que votre événement personnalisé est déclenché au bon moment, autrement dit, lorsque l’événement d’état système équivalent qu’il remplace doit l’être.</span><span class="sxs-lookup"><span data-stu-id="9b782-112">Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.</span></span>  
  
```  
<healthMonitoring  
  heartBeatInterval="0" enabled="true">  
  
  <profiles>  
    <add name="Custom"   
      minInstances="1"   
      maxLimit="Infinite"   
      minInterval="00:00:00" />  
  </profiles>  
  
  <eventMappings>  
  
    <add   
      name="SampleWebRequestInformation"   
      type="SamplesAspNet.SampleWebRequestInformation,webrequestinformation,Version=1.0.1782.28745, Culture=neutral, PublicKeyToken=79955d9b8521c250,processorArchitecture=MSIL" />  
  
  </eventMappings>  
  
  <rules>  
  
    <add name="Custom Web Request Info Event"   
      eventName="SampleWebRequestInformation"   
      provider="EventLogProvider"  
      profile="Custom" />  
  
  </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#1)]
 [!code-vb[System.Web.Management.WebRequestInformation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebRequestEvent" />
  </Docs>
  <Members>
    <Member MemberName="FormatToString">
      <MemberSignature Language="C#" Value="public void FormatToString (System.Web.Management.WebEventFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatToString(class System.Web.Management.WebEventFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebRequestInformation.FormatToString(System.Web.Management.WebEventFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FormatToString (formatter As WebEventFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FormatToString(System::Web::Management::WebEventFormatter ^ formatter);" />
      <MemberSignature Language="F#" Value="member this.FormatToString : System.Web.Management.WebEventFormatter -&gt; unit" Usage="webRequestInformation.FormatToString formatter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="System.Web.Management.WebEventFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">
          <span data-ttu-id="9b782-113">
            <see cref="T:System.Web.Management.WebEventFormatter" /> qui contient les paramètres de tabulation et de mise en retrait utilisés pour mettre en forme les informations d’événements d’intégrité web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-113">The <see cref="T:System.Web.Management.WebEventFormatter" /> that contains the tab and indentation settings used to format the Web health event information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b782-114">Met en forme les informations sur la demande Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-114">Formats the Web-request information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b782-115">Le <xref:System.Web.Management.WebRequestInformation.FormatToString%2A> méthode fournit un modèle uniforme pour les informations d’événement, ce qui est utiles si les données d’événement doivent être enregistrées et présentées ultérieurement à l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="9b782-115">The <xref:System.Web.Management.WebRequestInformation.FormatToString%2A> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user.</span></span> <span data-ttu-id="9b782-116">Elle est appelée en interne lorsque le fournisseur appelle l’une de le <xref:System.Web.Management.WebBaseEvent.ToString%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="9b782-116">It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b782-117">L’exemple de code suivant montre comment mettre en forme des informations personnalisées.</span><span class="sxs-lookup"><span data-stu-id="9b782-117">The following code example shows how to format custom information.</span></span>  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#9)]
 [!code-vb[System.Web.Management.WebRequestInformation#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal Principal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebRequestInformation.Principal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Principal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ Principal { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Principal : System.Security.Principal.IPrincipal" Usage="System.Web.Management.WebRequestInformation.Principal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b782-118">Obtient l'instance de l'instance principale de code managé associée à la demande Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-118">Gets the instance of the managed-code principal associated with the Web request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b782-119">L'instance <see cref="T:System.Security.Principal.IPrincipal" /> associée à l'événement de demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-119">The <see cref="T:System.Security.Principal.IPrincipal" /> instance that is associated with the request event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b782-120">Le principal fait référence à l’entité authentifiée qui a émis la demande Web.</span><span class="sxs-lookup"><span data-stu-id="9b782-120">The principal refers to the authenticated entity that issued the Web request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b782-121">L’exemple de code suivant montre comment utiliser l’identité associée à la demande Web.</span><span class="sxs-lookup"><span data-stu-id="9b782-121">The following code example shows how to use the principal associated with the Web request.</span></span>  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#8)]
 [!code-vb[System.Web.Management.WebRequestInformation#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPath">
      <MemberSignature Language="C#" Value="public string RequestPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebRequestInformation.RequestPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestPath : string" Usage="System.Web.Management.WebRequestInformation.RequestPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b782-122">Obtient le chemin d'accès physique de la demande Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-122">Gets the physical path of the Web request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b782-123">Chemin d'accès physique de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-123">The physical path of the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9b782-124">L’exemple de code suivant montre comment obtenir le chemin d’accès de la demande Web.</span><span class="sxs-lookup"><span data-stu-id="9b782-124">The following code example shows how to get the Web-request path.</span></span>  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#5)]
 [!code-vb[System.Web.Management.WebRequestInformation#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUrl">
      <MemberSignature Language="C#" Value="public string RequestUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebRequestInformation.RequestUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUrl : string" Usage="System.Web.Management.WebRequestInformation.RequestUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b782-125">Obtient le chemin d'accès logique de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-125">Gets the logical path of the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b782-126">Chemin d'accès logique de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-126">The logical path of the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b782-127">L’exemple de code suivant montre comment obtenir le chemin d’accès logique de demande Web.</span><span class="sxs-lookup"><span data-stu-id="9b782-127">The following code example shows how to get the Web-request logical path.</span></span>  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#6)]
 [!code-vb[System.Web.Management.WebRequestInformation#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadAccountName">
      <MemberSignature Language="C#" Value="public string ThreadAccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadAccountName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebRequestInformation.ThreadAccountName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadAccountName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadAccountName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadAccountName : string" Usage="System.Web.Management.WebRequestInformation.ThreadAccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b782-128">Obtient une chaîne qui représente le nom de connexion Windows de l'utilisateur au nom duquel le code est en cours d'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-128">Gets a string that represents the Windows logon name of the user on whose behalf the code is being run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b782-129">Nom de connexion Windows de l'utilisateur au nom duquel le code est en cours d'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-129">The Windows logon name of the user on whose behalf the code is being run.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b782-130">La valeur de cette propriété est déterminée par l’actuel <xref:System.Security.Principal.WindowsIdentity> l’objet <xref:System.Security.Principal.WindowsIdentity.Name%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="9b782-130">The value of this property is determined by the current <xref:System.Security.Principal.WindowsIdentity> object's <xref:System.Security.Principal.WindowsIdentity.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebRequestInformation.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Web.Management.WebRequestInformation.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b782-131">Obtient l'adresse d'hôte de l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-131">Gets the user host address.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b782-132">Adresse d'hôte de l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b782-132">The user host address.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b782-133">L’exemple de code suivant montre comment obtenir l’adresse d’hôte utilisateur.</span><span class="sxs-lookup"><span data-stu-id="9b782-133">The following code example shows how to get the user host address.</span></span>  
  
 [!code-csharp[System.Web.Management.WebRequestInformation#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/CS/webrequestinformation.cs#7)]
 [!code-vb[System.Web.Management.WebRequestInformation#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestInformation/VB/webrequestinformation.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>