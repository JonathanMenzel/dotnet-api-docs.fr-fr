<Type Name="WebManagementEvent" FullName="System.Web.Management.WebManagementEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="358f85e6400cf85aac27a07b42c31a2bda153cb4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36400410" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebManagementEvent : System.Web.Management.WebBaseEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebManagementEvent extends System.Web.Management.WebBaseEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebManagementEvent&#xA;Inherits WebBaseEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebManagementEvent : System::Web::Management::WebBaseEvent" />
  <TypeSignature Language="F#" Value="type WebManagementEvent = class&#xA;    inherit WebBaseEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebBaseEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit la classe de base pour les événements qui transportent des informations sur les applications et les processus.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Contrôle d’état ASP.NET permet de production et les opérations personnel gérer les applications Web déployées. Le <xref:System.Web.Management?displayProperty=nameWithType> espace de noms contient les types d’événements d’état responsables de l’empaquetage des données d’état de santé et les types de fournisseur responsables du traitement de ces données. Il contient également des types pris en charge qui facilitent la gestion des événements d’état.  
  
 Le <xref:System.Web.Management.WebManagementEvent> est la classe de base pour tous les types d’événements de contrôle d’état ASP.NET. Elle utilise le <xref:System.Web.Management.WebProcessInformation> classe pour obtenir des informations de processus qui sont disponibles pour ses classes dérivées.  
  
> [!NOTE]
>  Dans la plupart des cas, vous serez en mesure d’utiliser les types de contrôle d’état ASP.NET implémenté et contrôle le système de contrôle d’intégrité en spécifiant des valeurs dans la `healthMonitoring` section de configuration. Vous pouvez également dériver des types d’analyse du fonctionnement pour créer vos propres fournisseurs et événements personnalisés. Pour obtenir un exemple de dérivation à partir de la <xref:System.Web.Management.WebManagementEvent> de classe, consultez l’exemple fourni dans cette rubrique.  
  
   
  
## Examples  
 L’exemple suivant montre comment implémenter un événement personnalisé en dérivant de la <xref:System.Web.Management.WebManagementEvent> classe.  
  
 [!code-csharp[System.Web.Management.WebManagementEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/CS/webmanagementevent.cs#1)]
 [!code-vb[System.Web.Management.WebManagementEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/VB/webmanagementevent.vb#1)]  
  
 Voici un extrait du fichier de configuration qui permet à ASP.NET d’utiliser l’événement personnalisé.  
  
```  
<healthMonitoring enabled="true"   
  heartBeatInterval="0">  
  <eventMappings>  
  
    <add  name="SampleWebManagementEvent" type="SamplesAspNet.SampleWebManagementEvent,webmanagementevent,Version=1.0.1573.24438, Culture=neutral, PublicKeyToken=2f5f337ae5c9bdaa, processorArchitecture=MSIL"/>  
  
  </eventMappings>  
  <rules>  
    <add   
      name="Custom WebManagementEvent"  
      eventName="SampleWebManagementEvent"  
      provider="EventLogProvider"  
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Lors de la mise en forme vos informations d’événement personnalisés pour l’affichage, remplacer le <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> méthode plutôt que la <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> (méthode). Cela permet d’éviter remplacement ou la falsification des informations système sensibles.  Le code d’événement que vous spécifiez pour votre événement personnalisé doit être supérieur à <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</para>
    </block>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebManagementEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebManagementEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebManagementEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebManagementEvent : string * obj * int -&gt; System.Web.Management.WebManagementEvent" Usage="new System.Web.Management.WebManagementEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Description de l'événement.</param>
        <param name="eventSource">Objet qui représente la source de l'événement.</param>
        <param name="eventCode">Code associé à l'événement. Lorsque vous implémentez un événement personnalisé, le code d'événement doit être supérieur à <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebManagementEvent" /> avec les paramètres spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> constructeur n’est pas destiné à être utilisée directement à partir de votre code. Elle est appelée par ASP.NET. Vous pouvez appeler la <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> constructeur lors de la dérivation à partir de la <xref:System.Web.Management.WebManagementEvent> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebManagementEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebManagementEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebManagementEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebManagementEvent : string * obj * int * int -&gt; System.Web.Management.WebManagementEvent" Usage="new System.Web.Management.WebManagementEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Description de l'événement.</param>
        <param name="eventSource">Objet qui représente la source de l'événement.</param>
        <param name="eventCode">Code associé à l'événement. Lorsque vous implémentez un événement personnalisé, le code d'événement doit être supérieur à <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Valeur <see cref="T:System.Web.Management.WebEventCodes" /> qui spécifie l'identificateur détaillé de l'événement.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebManagementEvent" /> avec les paramètres spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> constructeur n’est pas destiné à être utilisée directement à partir de votre code. Elle est appelée par ASP.NET. Vous pouvez appeler la <xref:System.Web.Management.WebManagementEvent.%23ctor%2A> constructeur lors de la dérivation à partir de la <xref:System.Web.Management.WebManagementEvent> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebProcessInformation ProcessInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebProcessInformation ProcessInformation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebManagementEvent.ProcessInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessInformation As WebProcessInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Management::WebProcessInformation ^ ProcessInformation { System::Web::Management::WebProcessInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessInformation : System.Web.Management.WebProcessInformation" Usage="System.Web.Management.WebManagementEvent.ProcessInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebProcessInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient des informations sur le processus d'hébergement d'application ASP.NET.</summary>
        <value>Objet <see cref="T:System.Web.Management.WebProcessInformation" /> qui contient des informations sur le processus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment obtenir le <xref:System.Web.Management.WebManagementEvent.ProcessInformation%2A> valeur.  
  
 [!code-csharp[System.Web.Management.WebManagementEvent#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/CS/webmanagementevent.cs#5)]
 [!code-vb[System.Web.Management.WebManagementEvent#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebManagementEvent/VB/webmanagementevent.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebProcessInformation" />
      </Docs>
    </Member>
  </Members>
</Type>