<Type Name="WmiWebEventProvider" FullName="System.Web.Management.WmiWebEventProvider">
  <TypeSignature Language="C#" Value="public class WmiWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WmiWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WmiWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WmiWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiWebEventProvider : System::Web::Management::WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="96d1e-101">Implémente un fournisseur d'événements qui mappe les événements de contrôle d'état ASP.NET aux événements WMI (Windows Management Instrumentation).</span><span class="sxs-lookup"><span data-stu-id="96d1e-101">Implements an event provider that maps ASP.NET health-monitoring events to Windows Management Instrumentation (WMI) events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96d1e-102">Contrôle d’état ASP.NET permet de production et les opérations personnel gérer les applications Web déployées.</span><span class="sxs-lookup"><span data-stu-id="96d1e-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="96d1e-103">Le <xref:System.Web.Management> espace de noms contient les types d’événements d’état responsables de l’empaquetage des données d’état de santé et les types de fournisseur responsables du traitement de ces données.</span><span class="sxs-lookup"><span data-stu-id="96d1e-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="96d1e-104">Il contient également des types pris en charge qui facilitent la gestion des événements d’état.</span><span class="sxs-lookup"><span data-stu-id="96d1e-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="96d1e-105">ASP.NET utilise cette classe pour mapper les événements de contrôle d’intégrité aux événements WMI.</span><span class="sxs-lookup"><span data-stu-id="96d1e-105">ASP.NET uses this class to map health-monitoring events to WMI events.</span></span> <span data-ttu-id="96d1e-106">Pour activer la remise des événements de contrôle d’état ASP.NET au sous-système WMI, vous devez configurer le <xref:System.Web.Management.WmiWebEventProvider> classe en ajoutant les paramètres appropriés dans la `<healthMonitoring>` section du fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="96d1e-106">To enable the delivery of ASP.NET health-monitoring events to the WMI subsystem, you must configure the <xref:System.Web.Management.WmiWebEventProvider> class by adding the appropriate settings in the `<healthMonitoring>` section of the configuration file.</span></span>  
  
 <span data-ttu-id="96d1e-107">Les informations contenues dans le fichier Aspnet.mof décrivent les paramètres des événements WMI déclenchés lorsque les événements de contrôle d’état ASP.NET sont routés vers le <xref:System.Web.Management.WmiWebEventProvider> classe et mappés aux événements WMI.</span><span class="sxs-lookup"><span data-stu-id="96d1e-107">The information contained in the Aspnet.mof file describes the parameters of the WMI events raised when ASP.NET health-monitoring events are routed to the <xref:System.Web.Management.WmiWebEventProvider> class and mapped into WMI events.</span></span> <span data-ttu-id="96d1e-108">Le fichier Aspnet.mof est stocké dans le répertoire de build de .NET Framework, par exemple %windir%\Microsoft.NET\Framework\\*BuildNumber*.</span><span class="sxs-lookup"><span data-stu-id="96d1e-108">The Aspnet.mof file is stored in the .NET Framework build directory, for example %windir%\Microsoft.NET\Framework\\*BuildNumber*.</span></span> <span data-ttu-id="96d1e-109">Pour plus d’informations sur les événements de contrôle d’intégrité en tant qu’événements WMI, consultez [NIB : à l’aide de WMI pour remettre des événements de contrôle de l’intégrité de ASP.NET](http://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).</span><span class="sxs-lookup"><span data-stu-id="96d1e-109">For more information about reporting health-monitoring events as WMI events, see [NIB: Using WMI to Deliver ASP.NET Health Monitoring Events](http://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96d1e-110">Dans la plupart des cas, vous serez en mesure d’utiliser les types de contrôle d’état ASP.NET implémenté et contrôle le système de contrôle d’intégrité en spécifiant des valeurs dans la `<healthMonitoring>` section de configuration.</span><span class="sxs-lookup"><span data-stu-id="96d1e-110">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section.</span></span> <span data-ttu-id="96d1e-111">Vous pouvez également dériver des types d’analyse du fonctionnement pour créer vos propres fournisseurs et événements personnalisés.</span><span class="sxs-lookup"><span data-stu-id="96d1e-111">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="96d1e-112">Pour obtenir un exemple de création d’un fournisseur personnalisé, consultez [Comment : implémenter l’exemple analyse des fournisseur personnalisé de contrôle d’intégrité](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span><span class="sxs-lookup"><span data-stu-id="96d1e-112">For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96d1e-113">L’exemple suivant montre comment créer un consommateur d’événements WMI émis par la suite à des événements de contrôle d’intégrité d’application Web de contrôle d’état ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="96d1e-113">The following example shows how to create a consumer of WMI events issued by ASP.NET health monitoring as a result of Web-application health events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96d1e-114">La <xref:System.Web.Management.WmiWebEventProvider> classe et les types d’événements de contrôle d’intégrité à surveiller sont déjà configurés par défaut.</span><span class="sxs-lookup"><span data-stu-id="96d1e-114">The <xref:System.Web.Management.WmiWebEventProvider> class and the health event types to monitor are already configured by default.</span></span> <span data-ttu-id="96d1e-115">La seule chose que vous devez faire est de définir la règle pour tous les événements de contrôle d’intégrité.</span><span class="sxs-lookup"><span data-stu-id="96d1e-115">The only thing you need to do is to define the rule for all the health events.</span></span> <span data-ttu-id="96d1e-116">Souvenez-vous que les événements d’état ne sont pas distribuées au <xref:System.Web.Management.WmiWebEventProvider> fournisseur par défaut.</span><span class="sxs-lookup"><span data-stu-id="96d1e-116">Remember that the health events are not dispatched to the <xref:System.Web.Management.WmiWebEventProvider> provider by default.</span></span>  
  
 [!code-csharp[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/CS/WmiWebEventListener.cs#1)]
 [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/VB/WmiWebEventListener.vb#1)]  
  
 <span data-ttu-id="96d1e-117">L’exemple suivant est un extrait du fichier de configuration qui montre une `<healthMonitoring>` section de configuration qui permet à ASP.NET d’utiliser le <xref:System.Web.Management.WmiWebEventProvider> fournisseur pour traiter tous les événements de contrôle d’état.</span><span class="sxs-lookup"><span data-stu-id="96d1e-117">The following example is a configuration file excerpt that shows a `<healthMonitoring>` configuration section that enables ASP.NET to use the <xref:System.Web.Management.WmiWebEventProvider> provider to process all health-monitoring events.</span></span>  
  
```  
<healthMonitoring>  
  <rules>  
    <add   
      name="Using Wmi"  
      eventName="All Events"   
      provider="WmiWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiWebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96d1e-118">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WmiWebEventProvider" />.</span><span class="sxs-lookup"><span data-stu-id="96d1e-118">Initializes a new instance of the <see cref="T:System.Web.Management.WmiWebEventProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96d1e-119">Ce constructeur est utilisé en interne par le système de contrôle d’état ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="96d1e-119">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="96d1e-120">Vous ne l’utiliserez jamais pour créer une instance de la <xref:System.Web.Management.TraceWebEventProvider> classe, mais vous pouvez appeler ce constructeur lorsque vous implémentez votre propre type de fournisseur qui hérite de cette classe.</span><span class="sxs-lookup"><span data-stu-id="96d1e-120">You will never use it to create an instance of the <xref:System.Web.Management.TraceWebEventProvider> class, but you can call this constructor when you implement your own provider type that inherits from this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96d1e-121">Supprime tous les événements de la mémoire tampon du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="96d1e-121">Removes all events from the provider's buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96d1e-122">Lorsque cette méthode est appelée, tous les événements dans la mémoire tampon du fournisseur sont immédiatement supprimés, indépendamment de la durée écoulée depuis la dernière écriture ou le nombre d’événements est dans la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="96d1e-122">When this method is called, all the events in the provider's buffer are immediately removed, regardless of how much time has elapsed since the last write or how many events are in the buffer.</span></span> <span data-ttu-id="96d1e-123">L’heure de la dernière écriture est réinitialisée à l’heure de l’action de vidage.</span><span class="sxs-lookup"><span data-stu-id="96d1e-123">The time of the last write is reset to the time of the flushing action.</span></span> <span data-ttu-id="96d1e-124">Lorsque le mécanisme de mise en mémoire tampon n’est pas activé, l’appel de cette méthode n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="96d1e-124">Calling this method when the buffering mechanism is not enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="96d1e-125">Nom utilisé dans le fichier de configuration pour identifier ce fournisseur.</span><span class="sxs-lookup"><span data-stu-id="96d1e-125">The name used in the configuration file to identify this provider.</span></span></param>
        <param name="config"><span data-ttu-id="96d1e-126">Objet <see cref="T:System.Collections.Specialized.NameValueCollection" /> qui spécifie les attributs assignés à ce fournisseur dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="96d1e-126">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that specifies the attributes assigned for this provider in the configuration file.</span></span></param>
        <summary><span data-ttu-id="96d1e-127">Définit les valeurs initiales de cet objet.</span><span class="sxs-lookup"><span data-stu-id="96d1e-127">Sets the initial values for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96d1e-128">ASP.NET appelle le <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> méthode après avoir appelé la <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="96d1e-128">ASP.NET calls the <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> method after calling the <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="96d1e-129">Cette méthode est appelée pour initialiser le <xref:System.Web.Management.WmiWebEventProvider> classe avec les paramètres de configuration et le nom spécifié dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="96d1e-129">This method is called to initialize the <xref:System.Web.Management.WmiWebEventProvider> class with the configuration settings and name specified in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised"><span data-ttu-id="96d1e-130">L'objet <see cref="T:System.Web.Management.WebBaseEvent" /> à traiter.</span><span class="sxs-lookup"><span data-stu-id="96d1e-130">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span></span></param>
        <summary><span data-ttu-id="96d1e-131">Traite l'événement passé au fournisseur.</span><span class="sxs-lookup"><span data-stu-id="96d1e-131">Processes the event passed to the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96d1e-132">Il s’agit de la méthode que le contrôle d’état ASP.NET appelle pour démarrer le traitement de l’événement.</span><span class="sxs-lookup"><span data-stu-id="96d1e-132">This is the method that ASP.NET health monitoring calls to start the processing of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="96d1e-133">L'événement n'a pas pu être déclenché.</span><span class="sxs-lookup"><span data-stu-id="96d1e-133">The event could not be raised.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96d1e-134">Exécute les tâches associées à l'arrêt du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="96d1e-134">Performs tasks associated with shutting down the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96d1e-135">ASP.NET appelle le <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> méthode lorsque le domaine d’application qui héberge l’application Web se termine.</span><span class="sxs-lookup"><span data-stu-id="96d1e-135">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain that hosts the Web application terminates.</span></span> <span data-ttu-id="96d1e-136">La méthode est appelée pour effectuer des tâches qui permettent à l’application de se terminer correctement.</span><span class="sxs-lookup"><span data-stu-id="96d1e-136">The method is called to perform tasks that will allow the application to end gracefully.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>