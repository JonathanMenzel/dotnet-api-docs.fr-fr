<Type Name="WebSuccessAuditEvent" FullName="System.Web.Management.WebSuccessAuditEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba8631ac99a8425208ffd28b81693ba0500242fd" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51864818" /></Metadata><TypeSignature Language="C#" Value="public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebSuccessAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebSuccessAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebSuccessAuditEvent : System::Web::Management::WebAuditEvent" />
  <TypeSignature Language="F#" Value="type WebSuccessAuditEvent = class&#xA;    inherit WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des informations sur les événements de sécurité réussis.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Contrôle d’état ASP.NET permet de personnel d’exploitation et de production gérer les applications Web déployées. Le <xref:System.Web.Management> espace de noms contient les types d’événements d’intégrité responsables de l’empaquetage des données de l’état d’intégrité d’application et les types de fournisseur chargés de traiter ces données. Il contient également des types de prise en charge qui facilitent la gestion des événements d’état.  
  
 Le <xref:System.Web.Management.WebSuccessAuditEvent> classe est utilisée lorsqu’une opération ayant réussi liées à la sécurité se produit. Un exemple de ceci est une autorisation d’URL réussie pour une demande Web.  
  
 La liste suivante décrit les fonctionnalités pour lequel des événements de type <xref:System.Web.Management.WebSuccessAuditEvent> sont déclenchés par ASP.NET :  
  
-   Autorisation de fichier. Conditions réussies sont auditées. Autorisation de fichier est uniquement tentée par ASP.NET lorsqu’une identité Windows est associée à la demande. Le code d’audit d’événement associé est <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>.  
  
-   Autorisation d’URL. Il désigne l’accès d’une ressource URL pour laquelle l’autorisation est accordée. Conditions réussies sont auditées. Le code d’audit d’événement associé est <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>.  
  
-   Autres conditions de sécurité. Voici une liste de codes d’événement associés :  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>  
  
 Quand un <xref:System.Web.Management.WebSuccessAuditEvent> est déclenché, le contrôle d’état ASP.NET incrémente le compteur de performance événements de succès d’Audit déclenchés associé, puis vérifie la `healthMonitoring` configuration pour déterminer si tous les fournisseurs s’abonnent à l’événement. Si les fournisseurs s’abonnent à l’événement, ASP.NET distribue l’événement leur pour traitement.  
  
> [!NOTE]
>  Pour afficher le compteur de performance événements de succès d’Audit déclenchés dans le Moniteur système (PerfMon), dans le **ajouter des compteurs** fenêtre Sélectionnez **ASP.NET** à partir de la **objet de Performance** liste déroulante, sélectionnez le **événements de succès d’Audit déclenchés** compteur de performance, puis cliquez sur le **ajouter** bouton. Pour plus d’informations, consultez [analyse des performances ASP.NET Application](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5).  
  
 Étant donné que les audits des succès représentent une condition attendue, vous souhaiterez pas vous y abonner. Vous pouvez vous y abonner afin de fournir un accès de l’audit pour le site.  
  
> [!NOTE]
>  Dans la plupart des cas, vous serez en mesure d’utiliser les types de contrôle d’état ASP.NET tel qu’implémenté, et vous surveillerez le système de contrôle d’intégrité en spécifiant des valeurs dans le `healthMonitoring` section de configuration. Vous pouvez également dériver les types de contrôle d’intégrité pour créer vos propres événements personnalisés et les fournisseurs. Pour obtenir un exemple de la dérivation de la <xref:System.Web.Management.WebSuccessAuditEvent> de classe, consultez l’exemple fourni dans cette rubrique.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment dériver à partir de la <xref:System.Web.Management.WebSuccessAuditEvent> classe pour créer un événement d’audit personnalisée.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#1)]  
  
 L’exemple suivant est un extrait du fichier de configuration qui permet le contrôle pour utiliser l’événement d’état ASP.NET.  
  
```  
<healthMonitoring   
..enabled="true"  
..heartBeatInterval="0">   
  <providers>  
    <add name="EventLogProvider"   
    type="System.Web.Management.EventLogWebEventProvider,  
    System.Web,Version=2.0.3600.0,Culture=neutral,  
    PublicKeyToken=b03f5f7f11d50a3a"/>  
  </providers>  
  <eventMappings>  
    <add  name="SampleWebSuccessAuditEvent"   
      type="SamplesAspNet.SampleWebSuccessAuditEvent,  
      websuccessauditevent,Version=1.0.1663.31140,   
      Culture=neutral,   
      PublicKeyToken=0d1fa0f69d94de96,   
      processorArchitecture=MSIL"/>  
  </eventMappings>  
  <rules>  
    <add name="Custom Failure Audit Default"  
      eventName=" SampleWebFailureAuditEvent "  
      provider="EventLogProvider"  
      profile="Default"/>    
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Vue d’ensemble de la surveillance d’état ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebSuccessAuditEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Description de l'événement.</param>
        <param name="eventSource">Objet qui représente la source de l'événement.</param>
        <param name="eventCode">Code associé à l'événement. Lorsque vous implémentez un événement personnalisé, le code d'événement doit être supérieur à <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> avec les paramètres spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est utilisé en interne par le système de contrôle d’état ASP.NET. Vous ne l’utiliserez jamais pour instancier un <xref:System.Web.Management.WebSuccessAuditEvent> objet, mais vous pouvez appeler ce constructeur lorsque vous implémentez votre propre type d’événement qui hérite de cette classe.  
  
> [!NOTE]
>  Le <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> constructeur n’est pas destiné à être utilisé directement à partir de votre code. Elle est appelée par ASP.NET. Vous pouvez appeler la <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> constructeur lors de la dérivation à partir de la <xref:System.Web.Management.WebSuccessAuditEvent> classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler ce constructeur le `SampleWebSuccessAuditEvent` classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.Management.WebSuccessAuditEvent> classe.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Description de l'événement.</param>
        <param name="eventSource">Objet qui représente la source de l'événement.</param>
        <param name="eventCode">Code associé à l'événement. Lorsque vous implémentez un événement personnalisé, le code d'événement doit être supérieur à <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Valeur <see cref="T:System.Web.Management.WebEventCodes" /> qui spécifie l'identificateur détaillé de l'événement.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> avec les paramètres spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est utilisé en interne par le système de contrôle d’état ASP.NET. Vous ne l’utiliserez jamais pour instancier un <xref:System.Web.Management.WebSuccessAuditEvent> objet, mais vous pouvez appeler ce constructeur lorsque vous implémentez votre propre type d’événement qui hérite de cette classe.  
  
> [!NOTE]
>  Le <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> constructeur n’est pas destiné à être utilisé directement à partir de votre code. Elle est appelée par ASP.NET. Vous pouvez appeler la <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> constructeur lors de la dérivation à partir de la <xref:System.Web.Management.WebSuccessAuditEvent> classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler ce constructeur le `SampleWebSuccessAuditEvent` classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.Management.WebSuccessAuditEvent> classe.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webSuccessAuditEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Incrémente le compteur de performance Événements de succès d'audit déclenchés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le compteur de performance événements de succès d’Audit déclenchés effectue le suivi du nombre d’événements d’audit réussis déclenchés depuis le démarrage de l’application. Cette méthode appelle également le parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> (méthode), qui incrémente le compteur d’événements déclenchés. Ce compteur suit le nombre total d’événements déclenchés.  
  
 Pour afficher ces compteurs de performance dans le Moniteur système (PerfMon), dans le **ajouter des compteurs** fenêtre Sélectionnez **ASP.NET** à partir de la **objet de Performance** liste déroulante, sélectionnez le compteur de performances que vous souhaitez afficher, puis cliquez sur le **ajouter** bouton. Pour plus d’informations, consultez [analyse des performances ASP.NET Application](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>