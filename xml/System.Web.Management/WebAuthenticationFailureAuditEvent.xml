<Type Name="WebAuthenticationFailureAuditEvent" FullName="System.Web.Management.WebAuthenticationFailureAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47fe2113a2fa5245352e987802d4526da6cb5401" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39748196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebAuthenticationFailureAuditEvent : System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebAuthenticationFailureAuditEvent extends System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebAuthenticationFailureAuditEvent&#xA;Inherits WebFailureAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebAuthenticationFailureAuditEvent : System::Web::Management::WebFailureAuditEvent" />
  <TypeSignature Language="F#" Value="type WebAuthenticationFailureAuditEvent = class&#xA;    inherit WebFailureAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebFailureAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des informations sur les échecs d'authentification ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La liste suivante décrit les fonctionnalités pour lesquelles <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> événements sont déclenchés par défaut par ASP.NET.  
  
> [!NOTE]
>  Par défaut, QU'ASP.NET est configuré pour consigner les conditions d’échec d’audit des conditions de réussite uniquement, comme la journalisation peuvent gravement compromettre les ressources système. Vous pouvez toujours configurer le système pour enregistrer les conditions de réussite.  
  
-   Authentification par formulaire. Alors que les audits des succès incluent le nom d’utilisateur qui a été authentifié ; les audits des échecs n’incluent pas le nom d’utilisateur, dans la mesure où ils sont généralement le résultat à partir d’un bon d’échec de déchiffrement ou validation. Les deux contiennent l’adresse IP du client. Le code d’audit d’événement associé est <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>.  
  
-   Appartenance. Les audits des succès et Échec contiennent le nom d’utilisateur qui a été tentée. Aucune forme d’audit contient le mot de passe qui a été tentée, car cela risquerait de persistance d’un mot de passe valide dans le journal. Le code d’audit d’événement associé est <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>.  
  
 Quand un <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> est déclenché, par défaut, il met à jour le compteur de performance événements de succès d’Audit déclenchés. Pour afficher ce compteur de performance dans le Moniteur système (PerfMon), dans le **ajouter des compteurs** fenêtre Sélectionnez `ASP.NET` dans le **performances** objet menu déroulant, sélectionnez le ** Événements d’échec d’authentification déclenchés** compteur de performance, puis cliquez sur le **ajouter** bouton. Pour plus d’informations, consultez [à l’aide du Moniteur système (PerfMon) avec les Applications ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) sur MSDN.  
  
> [!NOTE]
>  Dans la plupart des cas, vous serez en mesure d’utiliser les types de contrôle d’état ASP.NET tel qu’implémenté, et vous surveillerez le système de contrôle d’intégrité en spécifiant des valeurs dans le `healthMonitoring` section de configuration. Vous pouvez également dériver les types de contrôle d’intégrité pour créer vos propres événements personnalisés et les fournisseurs. Pour obtenir un exemple de la dérivation de la <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> de classe, consultez l’exemple fourni dans cette rubrique.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser la classe <xref:System.Web.Management.WebAuthenticationFailureAuditEvent>.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#1)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationFailureAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationFailureAuditEvent : string * obj * int * string -&gt; System.Web.Management.WebAuthenticationFailureAuditEvent" Usage="new System.Web.Management.WebAuthenticationFailureAuditEvent (message, eventSource, eventCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Description de l'événement.</param>
        <param name="eventSource">Objet qui représente la source de l'événement.</param>
        <param name="eventCode">Valeur <see cref="T:System.Web.Management.WebEventCodes" /> associée à l'événement.</param>
        <param name="nameToAuthenticate">Nom de l'utilisateur à authentifier.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" /> avec les paramètres d'événement spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> constructeur n’est pas destiné à être utilisé directement à partir de votre code. Elle est appelée par ASP.NET. Vous pouvez appeler la <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> constructeur lors de la dérivation à partir de la <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment personnaliser ce constructeur.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#2)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationFailureAuditEvent : string * obj * int * int * string -&gt; System.Web.Management.WebAuthenticationFailureAuditEvent" Usage="new System.Web.Management.WebAuthenticationFailureAuditEvent (message, eventSource, eventCode, eventDetailCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Description de l'événement.</param>
        <param name="eventSource">Objet qui représente la source de l'événement.</param>
        <param name="eventCode">Code associé à l'événement. Lorsque vous implémentez un événement personnalisé, le code d'événement doit être supérieur à <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Valeur <see cref="T:System.Web.Management.WebEventCodes" /> qui spécifie l'identificateur détaillé de l'événement.</param>
        <param name="nameToAuthenticate">Nom de l'utilisateur à authentifier.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" /> avec les paramètres d'événement spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> constructeur n’est pas destiné à être utilisé directement à partir de votre code. Elle est appelée par ASP.NET. Vous pouvez appeler la <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.%23ctor%2A> constructeur lors de la dérivation à partir de la <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment personnaliser ce constructeur.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameToAuthenticate">
      <MemberSignature Language="C#" Value="public string NameToAuthenticate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameToAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameToAuthenticate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameToAuthenticate { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameToAuthenticate : string" Usage="System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de l'utilisateur à authentifier.</summary>
        <value>Nom de l'utilisateur à authentifier.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seuls les audits des succès doivent inclure le nom de l’utilisateur authentifié. Les audits des échecs ne doivent pas inclure le nom d’utilisateur, dans la mesure où ils sont généralement le résultat d’échec de déchiffrement ou de validation.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser <xref:System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate%2A> propriété.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/CS/WebAuthenticationFailureAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationFailureAuditEvent/VB/WebAuthenticationFailureAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
  </Members>
</Type>