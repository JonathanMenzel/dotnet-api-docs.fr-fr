<Type Name="EventLogWebEventProvider" FullName="System.Web.Management.EventLogWebEventProvider">
  <TypeSignature Language="C#" Value="public sealed class EventLogWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventLogWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.EventLogWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogWebEventProvider sealed : System::Web::Management::WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fc726-101">Implémente un fournisseur d'événements qui enregistre les événements de contrôle d'état ASP.NET dans le journal des événements de l'application Windows.</span><span class="sxs-lookup"><span data-stu-id="fc726-101">Implements an event provider that logs ASP.NET health-monitoring events into the Windows Application Event Log.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc726-102">Contrôle d’état ASP.NET permet de production et les opérations personnel gérer les applications Web déployées.</span><span class="sxs-lookup"><span data-stu-id="fc726-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="fc726-103">Le <xref:System.Web.Management> espace de noms contient les types d’événements d’état responsables de l’empaquetage des données d’état de santé et les types de fournisseur responsables du traitement de ces données.</span><span class="sxs-lookup"><span data-stu-id="fc726-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="fc726-104">Il contient également des types pris en charge qui facilitent la gestion des événements d’état.</span><span class="sxs-lookup"><span data-stu-id="fc726-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="fc726-105">Le <xref:System.Web.Management.EventLogWebEventProvider>, l’audit des échecs et l’erreur d’analyse du fonctionnement des événements sont configurés (activés) par défaut.</span><span class="sxs-lookup"><span data-stu-id="fc726-105">The <xref:System.Web.Management.EventLogWebEventProvider>, the failure audit, and the error health-monitoring events are configured (enabled) by default.</span></span> <span data-ttu-id="fc726-106">Cela signifie que l’audit des échecs et l’erreur d’analyse du fonctionnement des événements sont consignés dans le journal des événements Windows par défaut.</span><span class="sxs-lookup"><span data-stu-id="fc726-106">This means that the failure audit and the error health-monitoring events are logged in the Windows Application Event Log by default.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc726-107">Dans la plupart des cas, vous serez en mesure d’utiliser les types de contrôle d’état ASP.NET implémenté et contrôle le système de contrôle d’intégrité en spécifiant des valeurs dans la `healthMonitoring` section de configuration.</span><span class="sxs-lookup"><span data-stu-id="fc726-107">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="fc726-108">Vous pouvez également dériver des types d’analyse du fonctionnement pour créer vos propres fournisseurs et événements personnalisés.</span><span class="sxs-lookup"><span data-stu-id="fc726-108">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="fc726-109">Pour obtenir un exemple de création d’un fournisseur personnalisé, consultez [Comment : implémenter l’exemple analyse des fournisseur personnalisé de contrôle d’intégrité](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span><span class="sxs-lookup"><span data-stu-id="fc726-109">For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc726-110">L’extrait de fichier de configuration suivant montre comment spécifier un fournisseur de type <xref:System.Web.Management.EventLogWebEventProvider> pour gérer les événements d’audit de réussite.</span><span class="sxs-lookup"><span data-stu-id="fc726-110">The following configuration file excerpt shows how to specify a provider of type <xref:System.Web.Management.EventLogWebEventProvider> to handle success audit events.</span></span> <span data-ttu-id="fc726-111">Le <xref:System.Web.Management.EventLogWebEventProvider> et les types d’événements d’état d’échec d’audit à surveiller sont configurés par défaut.</span><span class="sxs-lookup"><span data-stu-id="fc726-111">The <xref:System.Web.Management.EventLogWebEventProvider> and the failure audit health-event types to monitor are configured by default.</span></span> <span data-ttu-id="fc726-112">Pour surveiller la réussite des audits, vous devez les configurer, comme indiqué dans l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="fc726-112">To monitor the success audits, you need to configure them, as shown in the example code.</span></span>  
  
```  
<healthMonitoring   
  enabled="true" heartbeatInterval="10">  
  
  <rule>  
    <add name="Success Audits Default"  
      eventName="Success Audits"  
      provider="EventLogProvider"  
      profile="Default"  
      minInterval="00:01:00" />  
  </rule>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc726-113">Déplace les événements de la mémoire tampon du fournisseur vers le journal des événements.</span><span class="sxs-lookup"><span data-stu-id="fc726-113">Moves events from the provider's buffer into the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc726-114">Lorsque cette méthode est appelée, tous les événements dans la mémoire tampon du fournisseur sont écrits immédiatement pour le journal des événements Windows, quelle que soit la durée écoulée depuis la dernière écriture ou le nombre d’événements contenus dans la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="fc726-114">When this method is called, all the events in the provider's buffer are immediately written to the Windows Application Event Log, regardless of how much time has elapsed since last write or how many events are in the buffer.</span></span> <span data-ttu-id="fc726-115">L’heure de la dernière écriture est réinitialisée à l’heure de l’action de vidage.</span><span class="sxs-lookup"><span data-stu-id="fc726-115">The time of the last write is reset to the time of the flushing action.</span></span> <span data-ttu-id="fc726-116">Si le mécanisme de mise en mémoire tampon n’est pas activé, l’appel de cette méthode n’a pas d’effet.</span><span class="sxs-lookup"><span data-stu-id="fc726-116">If the buffering mechanism is not enabled, calling this method does not have any effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fc726-117">Nom utilisé dans le fichier de configuration pour identifier ce fournisseur.</span><span class="sxs-lookup"><span data-stu-id="fc726-117">The name used in the configuration file to identify this provider.</span></span></param>
        <param name="config"><span data-ttu-id="fc726-118"><see cref="T:System.Collections.Specialized.NameValueCollection" /> qui spécifie les attributs assignés à ce fournisseur dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="fc726-118">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that specifies the attributes assigned for this provider in the configuration file.</span></span></param>
        <summary><span data-ttu-id="fc726-119">Définit les valeurs initiales de cet objet.</span><span class="sxs-lookup"><span data-stu-id="fc726-119">Sets the initial values for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc726-120">Cette méthode est appelée pour initialiser le <xref:System.Web.Management.EventLogWebEventProvider> avec les paramètres de configuration et le nom spécifiés dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="fc726-120">This method is called to initialize the <xref:System.Web.Management.EventLogWebEventProvider> with the configuration settings and name as specified in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised"><span data-ttu-id="fc726-121">L'objet <see cref="T:System.Web.Management.WebBaseEvent" /> à traiter.</span><span class="sxs-lookup"><span data-stu-id="fc726-121">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span></span></param>
        <summary><span data-ttu-id="fc726-122">Traite l'événement passé au fournisseur.</span><span class="sxs-lookup"><span data-stu-id="fc726-122">Processes the event passed to the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc726-123">Il s’agit de la méthode que le contrôle d’état ASP.NET appelle pour démarrer le traitement de l’événement.</span><span class="sxs-lookup"><span data-stu-id="fc726-123">This is the method that ASP.NET health monitoring calls to start the processing of the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc726-124">Exécute les tâches associées à l'arrêt du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="fc726-124">Performs tasks associated with shutting down the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc726-125">ASP.NET appelle le <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> méthode lorsque le domaine d’application qui héberge l’application Web se termine.</span><span class="sxs-lookup"><span data-stu-id="fc726-125">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates.</span></span> <span data-ttu-id="fc726-126">La méthode est appelée pour effectuer des tâches qui permettent à l’application de se terminer correctement.</span><span class="sxs-lookup"><span data-stu-id="fc726-126">The method is called to perform tasks that will allow the application to end gracefully.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>