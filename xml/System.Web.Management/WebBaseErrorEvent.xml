<Type Name="WebBaseErrorEvent" FullName="System.Web.Management.WebBaseErrorEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="452030ec970afc806bdff61f1c782d68f3311c6f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539233" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebBaseErrorEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebBaseErrorEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebBaseErrorEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebBaseErrorEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBaseErrorEvent : System::Web::Management::WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Sert de classe de base pour tous les événements d'erreur de contrôle d'état.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Contrôle d’état ASP.NET permet de production et les opérations personnel gérer les applications Web déployées. Le <xref:System.Web.Management> espace de noms contient les types d’événements d’état responsables de l’empaquetage des données d’état de santé et les types de fournisseur responsables du traitement de ces données. Il contient également des types pris en charge qui facilitent la gestion des événements d’état.  
  
 Le <xref:System.Web.Management.WebBaseErrorEvent> est la classe de base pour les événements de contrôle d’intégrité qui représentent des conditions d’erreur. ASP.NET utilise <xref:System.Web.Management.WebBaseErrorEvent> et ses types dérivés pour indiquer les conditions d’erreur pendant la durée de vie d’une application Web.  
  
> [!NOTE]
>  Dans la plupart des cas, vous serez en mesure d’utiliser les types de contrôle d’état ASP.NET implémenté et contrôle le système de contrôle d’intégrité en spécifiant des valeurs dans la `healthMonitoring` section de configuration. Vous pouvez également dériver des types d’analyse du fonctionnement pour créer vos propres fournisseurs et événements personnalisés. Pour obtenir un exemple de dérivation à partir de la <xref:System.Web.Management.WebBaseErrorEvent> de classe, consultez l’exemple fourni dans cette rubrique.  
  
   
  
## Examples  
 L’exemple de code suivant comporte deux parties. La première est un extrait d’un fichier de configuration qui permet d’utiliser un événement dérivé de contrôle d’état ASP.NET la <xref:System.Web.Management.WebBaseErrorEvent> classe. Le second montre comment dériver à partir de la <xref:System.Web.Management.WebBaseErrorEvent> classe pour créer l’événement personnalisé.  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
  <providers>  
    <!-- Define the custom provider that   
         processes custom Web request events. -->  
    <add name="SampleWebEventProvider"   
      type="SamplesAspNet.SampleEventProvider,  
      webeventprovider,Version=1.0.1573.18094,   
      Culture=neutral, PublicKeyToken=b5a57a9a9d487cf4,   
      processorArchitecture=MSIL"/>  
  </providers>  
  
  <eventMappings>  
  
    <!--  Define the event source that issues custom events.   -->  
    <add  name="SampleWebBaseErrorEvent"      
      type="SamplesAspNet.SampleWebBaseErrorEvent,  
      webbaseerrorevent,Version=1.0.1573.21549, Culture=neutral,     
      PublicKeyToken=2a0b23915ac7352b, processorArchitecture=MSIL"/>  
  </eventMappings>  
  
  <rules>  
    <!-- Associate custom event with related   
      custom provider -->  
    <add   
       name="Custom Web Base Errors"  
       eventName="SampleWebBaseErrorEvent"   
       provider="SampleWebEventProvider"   
       profile="Custom"/>    
  </rules>  
  
</healthMonitoring>  
```  
  
 Le code suivant montre comment dériver à partir de la <xref:System.Web.Management.WebBaseErrorEvent> classe pour créer un événement personnalisé.  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#1)]
 [!code-vb[System.Web.Management.WebErrorEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebManagementEvent" />
    <altmember cref="T:System.Web.Management.WebErrorEvent" />
    <altmember cref="T:System.Web.Management.WebRequestEvent" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebBaseErrorEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebBaseErrorEvent (string message, object eventSource, int eventCode, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebBaseErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Description de l'événement.</param>
        <param name="eventSource">Objet qui représente la source de l'événement.</param>
        <param name="eventCode">Code associé à l'événement. Lorsque vous implémentez un événement personnalisé, le code d'événement doit être supérieur à <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="e">
          <see cref="T:System.Exception" /> associée à l'erreur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebBaseErrorEvent" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est utilisé en interne par le système de contrôle d’état ASP.NET. Vous pouvez appeler ce constructeur lorsque vous implémentez votre propre type d’événement qui hérite de cette classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler ce constructeur à partir d’un constructeur pour le `SampleWebBaseErrorEvent` (classe), une classe qui dérive de la <xref:System.Web.Management.WebBaseErrorEvent> classe.  
  
 [!code-csharp[System.Web.Management.WebBaseErrorEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/CS/webbaseerrorevent.cs#2)]
 [!code-vb[System.Web.Management.WebBaseErrorEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/VB/webbaseerrorevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebBaseErrorEvent (string message, object eventSource, int eventCode, int eventDetailCode, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebBaseErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Description de l'événement.</param>
        <param name="eventSource">Objet qui représente la source de l'événement.</param>
        <param name="eventCode">Code associé à l'événement. Lorsque vous implémentez un événement personnalisé, le code d'événement doit être supérieur à <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Identificateur détaillé pour l'événement.</param>
        <param name="e">
          <see cref="T:System.Exception" /> associée à l'erreur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Management.WebBaseErrorEvent" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est utilisé en interne par le système de contrôle d’état ASP.NET. Vous pouvez appeler ce constructeur lorsque vous implémentez votre propre type d’événement qui hérite de cette classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler ce constructeur à partir d’un constructeur pour le `SampleWebBaseErrorEvent` (classe), une classe qui dérive de la <xref:System.Web.Management.WebBaseErrorEvent> classe.  
  
 [!code-csharp[System.Web.Management.WebBaseErrorEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/CS/webbaseerrorevent.cs#3)]
 [!code-vb[System.Web.Management.WebBaseErrorEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/VB/webbaseerrorevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName="ErrorException">
      <MemberSignature Language="C#" Value="public Exception ErrorException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ErrorException" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebBaseErrorEvent.ErrorException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ErrorException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'<see cref="T:System.Exception" /> associée à l'erreur.</summary>
        <value>
          <see cref="T:System.Exception" /> associée à l'erreur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous implémentez une personnalisée <xref:System.Web.Management.WebBaseErrorEvent>, vous devez vous assurer que votre événement d’erreur personnalisé gère cette exception.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Incrémente les compteurs de performance d'erreur d'événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode incrémente les compteurs de performances suivants :  
  
-   Événements d’erreur infrastructure déclenchés. Il s’agit d’un compteur global qui assure le suivi des événements d’erreur déclenchés.  
  
-   Événements d’erreur déclenchés. Il s’agit d’un compteur spécifique à l’application qui effectue le suivi du nombre d’événements d’erreur déclenchés depuis le démarrage de l’application.  
  
 Cette méthode appelle également le parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>, qui incrémente le compteur d’événements déclenchés. Ce compteur suit le nombre total d’événements déclenchés.  
  
 Pour consulter ces compteurs de performance dans le Moniteur système (PerfMon), dans le **ajouter des compteurs** sélectionnez **ASP.NET** dans les **objet de Performance** la liste déroulante, sélectionnez le compteur de performance que vous souhaitez afficher, puis cliquez sur le **ajouter** bouton. Pour plus d’informations, consultez [à l’aide du Moniteur système (PerfMon) avec les Applications ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) dans la documentation IIS sur MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>