<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ReferenceConverter.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5af0ef023f4702691bf5afd243cb87ca93d6c4b3d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af0ef023f4702691bf5afd243cb87ca93d6c4b3d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.ReferenceConverter">
          <source>Provides a type converter to convert object references to and from other representations.</source>
          <target state="translated">Fournit un convertisseur de type pour convertir des références d'objet vers et à partir d'autres représentations.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ReferenceConverter">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ReferenceConverter&gt;</ph> is typically used within the context of sited components or a design environment.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.ReferenceConverter&gt;</ph> est généralement utilisé dans le contexte de composants sur site ou un environnement de conception.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ReferenceConverter">
          <source>Without a component site or a usable <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph>, this converter is of little use.</source>
          <target state="translated">Sans site de composant ou un utilisable <ph id="ph1">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph>, ce convertisseur est peu.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ReferenceConverter">
          <source>This converter converts a reference of an object that implements the <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface and displays its properties in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window.</source>
          <target state="translated">Ce convertisseur convertit une référence d’un objet qui implémente le <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> de l’interface et affiche ses propriétés dans le <bpt id="p1">**</bpt>propriétés<ept id="p1">**</ept> fenêtre.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ReferenceConverter">
          <source>For more information about type converters, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les convertisseurs de type, consultez la <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> classe de base et <bpt id="p1">[</bpt>Comment : implémenter un convertisseur de Type<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ReferenceConverter">
          <source>You should never create an instance of the <ph id="ph1">&lt;xref:System.ComponentModel.ReferenceConverter&gt;</ph> class.</source>
          <target state="translated">Vous ne devez jamais créer une instance de la <ph id="ph1">&lt;xref:System.ComponentModel.ReferenceConverter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ReferenceConverter">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.</source>
          <target state="translated">Au lieu de cela, appelez la méthode <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> de la classe <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ReferenceConverter">
          <source>For more information, see the examples in the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class.</source>
          <target state="translated">Pour plus d’informations, consultez les exemples dans la <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> classe de base.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ReferenceConverter">
          <source>This class provides the <ph id="ph1">&lt;xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A&gt;</ph> method to check whether a particular value can be added to the standard values collection.</source>
          <target state="translated">Cette classe fournit le <ph id="ph1">&lt;xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A&gt;</ph> collection de valeurs de méthode permettant de vérifier si une valeur particulière peut être ajoutée à la norme.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ReferenceConverter">
          <source>If you do not want to add the value to the collection, override this method.</source>
          <target state="translated">Si vous ne souhaitez pas ajouter la valeur à la collection, substituez cette méthode.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ReferenceConverter">
          <source>Override the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)" /&gt;</ph> method when you do not want to add a value to the standard values collection.</source>
          <target state="translated">Remplacer la <ph id="ph1">&lt;see cref="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)" /&gt;</ph> méthode lorsque vous ne souhaitez pas ajouter une valeur à la norme de collection de valeurs.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type to associate with this reference converter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> qui représente le type à associer à ce convertisseur de référence.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ReferenceConverter" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.ReferenceConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> qui fournit un contexte de format.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type you wish to convert from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> qui représente le type à partir duquel vous voulez effectuer la conversion.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Gets a value indicating whether this converter can convert an object in the given source type to a reference object using the specified context.</source>
          <target state="translated">Obtient une valeur indiquant si ce convertisseur peut convertir un objet du type source donné en objet de référence à l'aide du contexte spécifié.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si cet objet peut effectuer la conversion ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">Le paramètre <ph id="ph1">`context`</ph> peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Vérifiez toujours, car la valeur peut être <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">En outre, les propriétés de l'objet de contexte peuvent retourner <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> qui fournit un contexte de format.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that specifies the culture used to represent the font.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> spécifiant la culture utilisée pour représenter la police.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à convertir.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Converts the given object to the reference type.</source>
          <target state="translated">Convertit l'objet donné en type référence.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui représente <ph id="ph2">&lt;paramref name="value" /&gt;</ph> converti.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">Le paramètre <ph id="ph1">`context`</ph> peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Vérifiez toujours, car la valeur peut être <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">En outre, les propriétés de l'objet de contexte peuvent retourner <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">La conversion ne peut pas être effectuée.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> qui fournit un contexte de format.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that specifies the culture used to represent the font.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> spécifiant la culture utilisée pour représenter la police.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à convertir.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The type to convert the object to.</source>
          <target state="translated">Type dans lequel convertir l'objet.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Converts the given value object to the reference type using the specified context and arguments.</source>
          <target state="translated">Convertit l'objet de valeur en type référence en utilisant le contexte et les arguments spécifiés.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The converted object.</source>
          <target state="translated">Objet converti.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This method most commonly converts types to and from string objects.</source>
          <target state="translated">Cette méthode convertit couramment types vers et à partir des objets de type chaîne.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">Le paramètre <ph id="ph1">`context`</ph> peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Vérifiez toujours, car la valeur peut être <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">En outre, les propriétés de l'objet de contexte peuvent retourner <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">La conversion ne peut pas être effectuée.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> qui fournit un contexte de format.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a collection of standard values for the reference data type.</source>
          <target state="translated">Reçoit une collection de valeurs standard pour le type de données référence.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> that holds a standard set of valid values, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the data type does not support a standard set of values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> contenant un jeu standard de valeurs valides ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si le type de données ne prend pas en charge un jeu standard de valeurs.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">Le paramètre <ph id="ph1">`context`</ph> peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Vérifiez toujours, car la valeur peut être <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">En outre, les propriétés de l'objet de contexte peuvent retourner <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> qui fournit un contexte de format.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a value indicating whether the list of standard values returned from <ph id="ph1">&lt;see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> is an exclusive list.</source>
          <target state="translated">Obtient une valeur indiquant si la liste de valeurs standard retournée par <ph id="ph1">&lt;see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> est une liste exclusive.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> because the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> returned from <ph id="ph3">&lt;see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> is an exhaustive list of possible values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> parce que le <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> retourné depuis <ph id="ph3">&lt;see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> est une liste exhaustive de valeurs possibles.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>This method never returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode ne retourne jamais <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">Le paramètre <ph id="ph1">`context`</ph> peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Vérifiez toujours, car la valeur peut être <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">En outre, les propriétés de l'objet de contexte peuvent retourner <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> qui fournit un contexte de format.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a value indicating whether this object supports a standard set of values that can be picked from a list.</source>
          <target state="translated">Obtient une valeur indiquant si cet objet prend en charge une série de valeurs standard qui peuvent être sélectionnées dans une liste.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> because <ph id="ph2">&lt;see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> can be called to find a common set of values the object supports.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> car <ph id="ph2">&lt;see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> peut être appelé pour rechercher un ensemble de valeurs communes prises en charge par l'objet.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This method never returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode ne retourne jamais <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">Le paramètre <ph id="ph1">`context`</ph> peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Vérifiez toujours, car la valeur peut être <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">En outre, les propriétés de l'objet de contexte peuvent retourner <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides an additional context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> pouvant fournir un contexte supplémentaire.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>The value to check.</source>
          <target state="translated">Valeur à contrôler.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Returns a value indicating whether a particular value can be added to the standard values collection.</source>
          <target state="translated">Retourne une valeur indiquant si une valeur particulière peut être ajoutée à la collection des valeurs standard.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value is allowed and can be added to the standard values collection; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the value cannot be added to the standard values collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la valeur est autorisée et peut être ajoutée à la collection de valeurs standard ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si la valeur ne peut pas être ajoutée à la collection de valeurs standard.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>This method is called for each value that matches the type associated with this <ph id="ph1">&lt;xref:System.ComponentModel.ReferenceConverter&gt;</ph> and for each component found that is of the associated type.</source>
          <target state="translated">Cette méthode est appelée pour chaque valeur qui correspond au type associé à ce <ph id="ph1">&lt;xref:System.ComponentModel.ReferenceConverter&gt;</ph> et, pour chaque composant trouvé qui est du type associé.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>By default, this method returns <ph id="ph1">`true`</ph>, that is, it allows adding the value into the standard values collection.</source>
          <target state="translated">Par défaut, cette méthode retourne <ph id="ph1">`true`</ph>, autrement dit, il permet d’ajouter la valeur dans la collection de valeurs standard.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <source>Override this method when you do not want to add a value to the standard values collection.</source>
          <target state="translated">Substituez cette méthode lorsque vous ne souhaitez pas ajouter une valeur à la collection de valeurs standard.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>