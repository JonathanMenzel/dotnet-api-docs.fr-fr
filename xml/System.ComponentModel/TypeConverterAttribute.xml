<Type Name="TypeConverterAttribute" FullName="System.ComponentModel.TypeConverterAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8853ca9ac09b47a7584a23a002bfcf98fbf3e4b2" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37689839" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeConverterAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeConverterAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverterAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeConverterAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverterAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TypeConverterAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a9511-101">Spécifie le type à utiliser comme convertisseur de l'objet auquel cet attribut est lié.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9511-101">Specifies what type to use as a converter for the object this attribute is bound to.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9511-102">La classe que vous utilisez pour la conversion doit hériter <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="a9511-102">The class you use for conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="a9511-103">Utilisez le <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A> propriété pour obtenir le nom de la classe qui fournit la conversion de données pour l’objet de cet attribut est liée.</span><span class="sxs-lookup"><span data-stu-id="a9511-103">Use the <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A> property to get the name of the class that provides the data conversion for the object this attribute is bound to.</span></span>  
  
 <span data-ttu-id="a9511-104">Pour plus d’informations sur les attributs, consultez [Attributs](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="a9511-104">For more information about attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span> <span data-ttu-id="a9511-105">Pour plus d’informations sur les convertisseurs de type, consultez la <xref:System.ComponentModel.TypeConverter> classe de base et [Comment : implémenter un convertisseur de Type](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span><span class="sxs-lookup"><span data-stu-id="a9511-105">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
 <span data-ttu-id="a9511-106">Afin d’établir un convertisseur de type sur une classe personnalisée qui fournit le comportement de conversion de type pour XAML, vous appliquez le <xref:System.ComponentModel.TypeConverterAttribute> à votre type d’attribut.</span><span class="sxs-lookup"><span data-stu-id="a9511-106">In order to establish a type converter on a custom class that provides type conversion behavior for XAML, you apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to your type.</span></span> <span data-ttu-id="a9511-107">L’argument de l’attribut fait référence à votre implémentation de convertisseur de type.</span><span class="sxs-lookup"><span data-stu-id="a9511-107">The argument of the attribute references your type converter implementation.</span></span> <span data-ttu-id="a9511-108">Votre convertisseur de type doit être en mesure d’accepter les valeurs à partir d’une chaîne qui est utilisée pour les attributs ou le texte d’initialisation dans le balisage XAML et convertir cette chaîne dans le type de destination prévue.</span><span class="sxs-lookup"><span data-stu-id="a9511-108">Your type converter should be able to accept values from a string that is used for attributes or initialization text in XAML markup, and convert that string into your intended destination type.</span></span> <span data-ttu-id="a9511-109">Pour plus d’informations, consultez [TypeConverters et XAML](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="a9511-109">For more information, see [TypeConverters and XAML](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md).</span></span>  
  
 <span data-ttu-id="a9511-110">Plutôt que d’appliquer à toutes les valeurs d’un type, un comportement de convertisseur de type pour XAML peut également être établi sur une propriété spécifique.</span><span class="sxs-lookup"><span data-stu-id="a9511-110">Rather than applying to all values of a type, a type converter behavior for XAML can also be established on a specific property.</span></span> <span data-ttu-id="a9511-111">Dans ce cas, vous appliquez <xref:System.ComponentModel.TypeConverterAttribute> à la définition de propriété (la définition externe, et non pas la spécifique `get` et `set` définitions).</span><span class="sxs-lookup"><span data-stu-id="a9511-111">In this case, you apply <xref:System.ComponentModel.TypeConverterAttribute> to the property definition (the outer definition, not the specific `get` and `set` definitions).</span></span>  
  
 <span data-ttu-id="a9511-112">Un comportement de convertisseur de type pour l’utilisation XAML d’un membre pouvant être attaché personnalisé peut être affecté en appliquant <xref:System.ComponentModel.TypeConverterAttribute> à la `get` accesseur de méthode qui prend en charge l’utilisation XAML.</span><span class="sxs-lookup"><span data-stu-id="a9511-112">A type converter behavior for XAML usage of a custom attachable member can be assigned by applying <xref:System.ComponentModel.TypeConverterAttribute> to the `get` method accessor that supports the XAML usage.</span></span> <span data-ttu-id="a9511-113">Pour plus d’informations, consultez [Vue d’ensemble des propriétés jointes](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a9511-113">For more information, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="a9511-114">Pour les cas de sérialisation XAML complexes qui nécessitent l’état supplémentaire à partir de l’exécution de l’objet, envisagez de définir à un sérialiseur de valeur en plus d’un convertisseur de type et un attribut les deux classes de prise en charge sur vos types personnalisés ou les membres personnalisés.</span><span class="sxs-lookup"><span data-stu-id="a9511-114">For complex XAML serialization cases that require additional state from the object runtime, consider defining a value serializer in addition to a type converter, and attribute both support classes on your custom types or custom members.</span></span> <span data-ttu-id="a9511-115">Pour plus d'informations, consultez <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="a9511-115">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9511-116">L’exemple suivant déclare `MyClass` pour utiliser le convertisseur de type appelé `MyClassConverter`.</span><span class="sxs-lookup"><span data-stu-id="a9511-116">The following example declares `MyClass` to use the type converter called `MyClassConverter`.</span></span> <span data-ttu-id="a9511-117">Cet exemple suppose que `MyClassConverter` a été implémentée ailleurs.</span><span class="sxs-lookup"><span data-stu-id="a9511-117">This example assumes that `MyClassConverter` has been implemented elsewhere.</span></span> <span data-ttu-id="a9511-118">La classe qui implémente le convertisseur (`MyClassConverter`) doit hériter de la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="a9511-118">The class implementing the converter (`MyClassConverter`) must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverterAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverterAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverterAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a9511-119">L’exemple suivant crée une instance de `MyClass`.</span><span class="sxs-lookup"><span data-stu-id="a9511-119">The next example creates an instance of `MyClass`.</span></span> <span data-ttu-id="a9511-120">Ensuite, il obtient les attributs de la classe et imprime le nom du convertisseur de type utilisé par `MyClass`.</span><span class="sxs-lookup"><span data-stu-id="a9511-120">Then it gets the attributes for the class, and prints the name of the type converter used by `MyClass`.</span></span>  
  
 [!code-cpp[Classic TypeConverterAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverterAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverterAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverterAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9511-121">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-121">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9511-122">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.TypeConverterAttribute" /> avec le convertisseur de type par défaut, qui est une chaîne vide ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-122">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class with the default type converter, which is an empty string ("").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9511-123">La classe qui fournit la conversion de données doit hériter de <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="a9511-123">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeConverterAttribute : string -&gt; System.ComponentModel.TypeConverterAttribute" Usage="new System.ComponentModel.TypeConverterAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="a9511-124">Nom qualifié complet de la classe à utiliser pour la conversion de données de l'objet auquel cet attribut est lié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-124">The fully qualified name of the class to use for data conversion for the object this attribute is bound to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9511-125">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.TypeConverterAttribute" /> en utilisant le nom de type spécifié comme étant le convertisseur de données pour l'objet auquel cet attribut est lié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-125">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class, using the specified type name as the data converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9511-126">La classe qui fournit la conversion de données doit hériter de <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="a9511-126">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverterAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverterAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeConverterAttribute : Type -&gt; System.ComponentModel.TypeConverterAttribute" Usage="new System.ComponentModel.TypeConverterAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a9511-127">
            <see cref="T:System.Type" /> représentant le type de la classe de convertisseur à utiliser pour la conversion de données de l'objet auquel cet attribut est lié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-127">A <see cref="T:System.Type" /> that represents the type of the converter class to use for data conversion for the object this attribute is bound to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9511-128">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.TypeConverterAttribute" /> en utilisant le type spécifié comme convertisseur de données pour l'objet auquel cet attribut est lié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-128">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverterAttribute" /> class, using the specified type as the data converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9511-129">La classe qui fournit la conversion de données doit hériter de <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="a9511-129">The class that provides the data conversion must inherit from <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConverterTypeName">
      <MemberSignature Language="C#" Value="public string ConverterTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConverterTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConverterTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConverterTypeName : string" Usage="System.ComponentModel.TypeConverterAttribute.ConverterTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9511-130">Obtient le nom de type qualifié complet de <see cref="T:System.Type" /> à utiliser comme convertisseur pour l'objet auquel cet attribut est lié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-130">Gets the fully qualified type name of the <see cref="T:System.Type" /> to use as a converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9511-131">Nom de type qualifié complet de <see cref="T:System.Type" /> à utiliser comme convertisseur pour l'objet auquel cet attribut est lié, ou une chaîne vide ("") s'il n'en existe aucun.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-131">The fully qualified type name of the <see cref="T:System.Type" /> to use as a converter for the object this attribute is bound to, or an empty string ("") if none exists.</span>
          </span>
          <span data-ttu-id="a9511-132">La valeur par défaut est une chaîne vide ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-132">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.TypeConverterAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.TypeConverterAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.TypeConverterAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As TypeConverterAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::TypeConverterAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.ComponentModel.TypeConverterAttribute" Usage="System.ComponentModel.TypeConverterAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverterAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9511-133">Spécifie le type à utiliser comme convertisseur de l'objet auquel cet attribut est lié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-133">Specifies the type to use as a converter for the object this attribute is bound to.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="typeConverterAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a9511-134">Objet dont l'égalité des valeurs doit être vérifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-134">The object to test the value equality of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9511-135">Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.TypeConverterAttribute" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-135">Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9511-136">
            <see langword="true" /> si la valeur de l'objet donné est égale à celle du <see cref="T:System.ComponentModel.TypeConverterAttribute" /> en cours ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-136">
              <see langword="true" /> if the value of the given object is equal to that of the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverterAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="typeConverterAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9511-137">Retourne le code de hachage de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-137">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9511-138">Code de hachage du <see cref="T:System.ComponentModel.TypeConverterAttribute" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9511-138">A hash code for the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>