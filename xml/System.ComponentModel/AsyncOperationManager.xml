<Type Name="AsyncOperationManager" FullName="System.ComponentModel.AsyncOperationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d17b2158a60a0a80311a685be96daa3803c21fdd" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51881816" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AsyncOperationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AsyncOperationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncOperationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type AsyncOperationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="df9b2-101">Fournit la gestion de l'accès concurrentiel pour les classes qui prennent en charge des appels de méthode asynchrone.</span>
      <span class="sxs-lookup">
        <span data-stu-id="df9b2-101">Provides concurrency management for classes that support asynchronous method calls.</span>
      </span>
      <span data-ttu-id="df9b2-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="df9b2-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df9b2-103">Si votre classe doit fournir un comportement asynchrone en fonction de la [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), vous rencontrerez plusieurs problèmes de gestion d’accès concurrentiel.</span><span class="sxs-lookup"><span data-stu-id="df9b2-103">If your class needs to provide asynchronous behavior according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you will encounter a number of concurrency management issues.</span></span> <span data-ttu-id="df9b2-104">Parmi ces aspects figure la nécessité de garantir que les gestionnaires d’événements sont appelés sur un thread ou le contexte approprié pour le modèle d’application (par exemple, les applications Windows Forms, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications, les applications de console et ainsi de suite).</span><span class="sxs-lookup"><span data-stu-id="df9b2-104">Among these is the requirement to ensure that event handlers are called on a thread or context that is appropriate for the application model (for example, Windows Forms applications, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications, console applications, and so on).</span></span> <span data-ttu-id="df9b2-105">Le <xref:System.ComponentModel.AsyncOperationManager> offre un moyen pratique pour créer une classe qui s’exécute correctement sur tous les modèles d’application pris en charge par le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="df9b2-105">The <xref:System.ComponentModel.AsyncOperationManager> provides a convenient way to create a class that runs properly under all application models supported by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="df9b2-106">Le <xref:System.ComponentModel.AsyncOperationManager> classe a une méthode, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, qui retourne un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> qui peut être utilisé pour suivre la durée d’une tâche asynchrone particulière.</span><span class="sxs-lookup"><span data-stu-id="df9b2-106">The <xref:System.ComponentModel.AsyncOperationManager> class has one method, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, which returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that can be used to track the duration of a particular asynchronous task.</span></span> <span data-ttu-id="df9b2-107">Le <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> pour une tâche peut être utilisé pour alerter des clients lorsqu’une tâche se termine.</span><span class="sxs-lookup"><span data-stu-id="df9b2-107">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for a task can be used to alert clients when a task completes.</span></span> <span data-ttu-id="df9b2-108">Il peut également être utilisé pour publier des mises à jour de progression et des résultats incrémentiels sans terminer l’opération.</span><span class="sxs-lookup"><span data-stu-id="df9b2-108">It can also be used to post progress updates and incremental results without terminating the operation.</span></span>  
  
 <span data-ttu-id="df9b2-109">Pour plus d’informations sur l’implémentation de classes asynchrones, consultez [implémenter le modèle asynchrone basé sur événement](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="df9b2-109">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df9b2-110">L’exemple de code suivant montre comment utiliser le <xref:System.ComponentModel.AsyncOperationManager> classe pour créer une classe qui prend en charge des opérations asynchrones pour tout modèle d’application.</span><span class="sxs-lookup"><span data-stu-id="df9b2-110">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager> class to create a class that supports asynchronous operations for any application model.</span></span> <span data-ttu-id="df9b2-111">Il montre comment implémenter une classe qui teste un nombre pour déterminer s’il est premier.</span><span class="sxs-lookup"><span data-stu-id="df9b2-111">It shows how to implement a class that tests a number to determine whether it is prime.</span></span> <span data-ttu-id="df9b2-112">Ce calcul peut prendre du temps, donc il est effectué sur un thread distinct.</span><span class="sxs-lookup"><span data-stu-id="df9b2-112">This calculation can be time consuming, so it is done on a separate thread.</span></span> <span data-ttu-id="df9b2-113">Rapports de progression, les résultats incrémentiels et les notifications de saisie semi-automatique sont gérées par le <xref:System.ComponentModel.AsyncOperation> (classe), ce qui garantit que les gestionnaires d’événements du client sont appelés sur le thread ou contexte adéquat.</span><span class="sxs-lookup"><span data-stu-id="df9b2-113">Progress reports, incremental results, and completion notifications are handled by the <xref:System.ComponentModel.AsyncOperation> class, which ensures that the client's event handlers are called on the proper thread or context.</span></span>  
  
 <span data-ttu-id="df9b2-114">Pour obtenir la liste complète de code, consultez [Comment : implémenter un composant qui prend en charge le modèle asynchrone basé sur événement](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="df9b2-114">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="df9b2-115">Pour obtenir la liste complète de code d’un formulaire client, consultez [Comment : implémenter un Client du modèle asynchrone basé sur événement](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="df9b2-115">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa">
      <span data-ttu-id="df9b2-116">Implémentation du modèle asynchrone basé sur des événements</span>
      <span class="sxs-lookup">
        <span data-stu-id="df9b2-116">Implementing the Event-based Asynchronous Pattern</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
      <span data-ttu-id="df9b2-117">Meilleures pratiques pour le threading managé</span>
      <span class="sxs-lookup">
        <span data-stu-id="df9b2-117">Managed Threading Best Practices</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="CreateOperation">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AsyncOperation CreateOperation (object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AsyncOperation CreateOperation(object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOperation (userSuppliedState As Object) As AsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AsyncOperation ^ CreateOperation(System::Object ^ userSuppliedState);" />
      <MemberSignature Language="F#" Value="static member CreateOperation : obj -&gt; System.ComponentModel.AsyncOperation" Usage="System.ComponentModel.AsyncOperationManager.CreateOperation userSuppliedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userSuppliedState">
          <span data-ttu-id="df9b2-118">Objet utilisé pour associer une portion d'état client, telle qu'un identificateur de tâche, à une opération asynchrone particulière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df9b2-118">An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="df9b2-119">Retourne <see cref="T:System.ComponentModel.AsyncOperation" /> permettant de suivre la durée d'une opération asynchrone particulière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df9b2-119">Returns an <see cref="T:System.ComponentModel.AsyncOperation" /> for tracking the duration of a particular asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="df9b2-120">
            <see cref="T:System.ComponentModel.AsyncOperation" /> que vous pouvez utiliser pour suivre la durée d'un appel de méthode asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df9b2-120">An <see cref="T:System.ComponentModel.AsyncOperation" /> that you can use to track the duration of an asynchronous method invocation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df9b2-121">Le <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> méthode retourne un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> que vous pouvez utiliser pour suivre la durée d’une opération asynchrone particulière et pour alerter le modèle d’application lorsque l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="df9b2-121">The <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that you can use to track the duration of a particular asynchronous operation and to alert the application model when the operation completes.</span></span> <span data-ttu-id="df9b2-122">Vous pouvez également l’utiliser pour publier des mises à jour de progression et des résultats incrémentiels sans terminer l’opération.</span><span class="sxs-lookup"><span data-stu-id="df9b2-122">You can also use it to post progress updates and incremental results without terminating the operation.</span></span> <span data-ttu-id="df9b2-123">Le <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> marshale correctement ces appels vers le contexte pour le modèle d’application ou le thread approprié.</span><span class="sxs-lookup"><span data-stu-id="df9b2-123">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> will correctly marshal these calls to the appropriate thread or context for the application model.</span></span>  
  
 <span data-ttu-id="df9b2-124">Si vous implémentez une classe qui prend en charge le modèle asynchrone basé sur des événements, votre classe doit appeler <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> chaque fois que votre *Nom_méthode* `Async` méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="df9b2-124">If you implement a class that supports the Event-based Asynchronous Pattern, your class should call <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> each time your *MethodName*`Async` method is called.</span></span> <span data-ttu-id="df9b2-125">L’application cliente qui effectue des appels à la méthode peut utiliser le `userSuppliedState` paramètre pour identifier de façon unique chaque appel, afin de distinguer les événements déclenchés lors de l’exécution de l’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="df9b2-125">The client application that makes calls to the method can use the `userSuppliedState` parameter to uniquely identify each invocation, so as to distinguish events raised during the execution of the asynchronous operation.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="df9b2-126">Le code client doit fournir une valeur unique pour le `userSuppliedState` paramètre.</span><span class="sxs-lookup"><span data-stu-id="df9b2-126">Client code must provide a unique value for the `userSuppliedState` parameter.</span></span> <span data-ttu-id="df9b2-127">ID de tâche non uniques peuvent entraîner votre implémentation à signaler la progression et les autres événements incorrectement.</span><span class="sxs-lookup"><span data-stu-id="df9b2-127">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="df9b2-128">Votre code doit vérifier un ID de tâche non unique et lever une <xref:System.ArgumentException?displayProperty=nameWithType> si celle-ci est détectée.</span><span class="sxs-lookup"><span data-stu-id="df9b2-128">Your code should check for a non-unique task ID and throw an <xref:System.ArgumentException?displayProperty=nameWithType> if one is detected.</span></span>  
  
 <span data-ttu-id="df9b2-129">Votre code doit suivre chaque <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> retourné par <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> et utiliser l’objet dans l’opération asynchrone sous-jacente correspondante pour publier des mises à jour et terminer l’opération.</span><span class="sxs-lookup"><span data-stu-id="df9b2-129">Your code should track every <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> returned by <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> and use the object in the corresponding underlying asynchronous operation to post updates and terminate the operation.</span></span> <span data-ttu-id="df9b2-130">Ce suivi peut être aussi simple que le passage de la <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> en tant que paramètre entre des délégués.</span><span class="sxs-lookup"><span data-stu-id="df9b2-130">This tracking can be as simple as passing the <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> as a parameter among delegates.</span></span> <span data-ttu-id="df9b2-131">Dans les conceptions plus sophistiquées, votre classe peut gérer une collection de <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objets, en ajoutant des objets lorsque les tâches sont démarrées et en les supprimant lorsque les tâches sont terminées ou annulées.</span><span class="sxs-lookup"><span data-stu-id="df9b2-131">In more sophisticated designs, your class can maintain a collection of <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objects, adding objects when tasks are started and removing them when tasks are completed or canceled.</span></span> <span data-ttu-id="df9b2-132">Cette approche vous permet de vérifier pour unique `userSuppliedState` paramètre valeurs, et est la méthode que vous devez utiliser lorsque vous travaillez avec des classes qui prennent en charge plusieurs appels simultanés.</span><span class="sxs-lookup"><span data-stu-id="df9b2-132">This approach allows you to check for unique `userSuppliedState` parameter values, and is the method you should use when working with classes that support multiple concurrent invocations.</span></span>  
  
 <span data-ttu-id="df9b2-133">Pour plus d’informations sur l’implémentation de classes asynchrones, consultez [implémenter le modèle asynchrone basé sur événement](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="df9b2-133">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df9b2-134">L’exemple de code suivant montre comment utiliser le <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> méthode pour créer un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> pour suivre la durée d’opérations asynchrones.</span><span class="sxs-lookup"><span data-stu-id="df9b2-134">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for tracking the duration of asynchronous operations.</span></span> <span data-ttu-id="df9b2-135">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.ComponentModel.AsyncOperationManager> classe.</span><span class="sxs-lookup"><span data-stu-id="df9b2-135">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
        <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa">
          <span data-ttu-id="df9b2-136">Implémentation du modèle asynchrone basé sur des événements</span>
          <span class="sxs-lookup">
            <span data-stu-id="df9b2-136">Implementing the Event-based Asynchronous Pattern</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
          <span data-ttu-id="df9b2-137">Meilleures pratiques pour le threading managé</span>
          <span class="sxs-lookup">
            <span data-stu-id="df9b2-137">Managed Threading Best Practices</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext with get, set" Usage="System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="df9b2-138">Obtient ou définit le contexte de synchronisation pour l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df9b2-138">Gets or sets the synchronization context for the asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="df9b2-139">Contexte de synchronisation pour l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df9b2-139">The synchronization context for the asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df9b2-140">L’implémentation par défaut est l’implémentation libre de threads.</span><span class="sxs-lookup"><span data-stu-id="df9b2-140">The default implementation is the free-threaded implementation.</span></span>  
  
 <span data-ttu-id="df9b2-141">Un thread doit affecter la <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> propriété `null` pour libérer la fabrique libre de threads lorsqu’il est terminé, sinon sa fabrique ne sera jamais supprimée.</span><span class="sxs-lookup"><span data-stu-id="df9b2-141">A thread should set the <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> property to `null` to release the free-threaded factory when it is done, or else its factory will never be disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="df9b2-142">Pour définir le contexte de synchronisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df9b2-142">for setting the synchronization context.</span>
          </span>
          <span data-ttu-id="df9b2-143">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df9b2-143">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="df9b2-144">État associé :</span>
          <span class="sxs-lookup">
            <span data-stu-id="df9b2-144">Associated state:</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>