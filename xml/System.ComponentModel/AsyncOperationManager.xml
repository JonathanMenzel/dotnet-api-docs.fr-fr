<Type Name="AsyncOperationManager" FullName="System.ComponentModel.AsyncOperationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="606bfa8ffd9f758de42817a0e4e7eaf9e11c8260" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AsyncOperationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AsyncOperationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncOperationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperationManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="427e9-101">Fournit la gestion de l'accès concurrentiel pour les classes qui prennent en charge des appels de méthode asynchrone.</span>
      <span class="sxs-lookup">
        <span data-stu-id="427e9-101">Provides concurrency management for classes that support asynchronous method calls.</span>
      </span>
      <span data-ttu-id="427e9-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="427e9-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="427e9-103">Si votre classe doit fournir un comportement asynchrone en fonction de la [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), vous rencontrerez un nombre de problèmes de gestion d’accès concurrentiel.</span><span class="sxs-lookup"><span data-stu-id="427e9-103">If your class needs to provide asynchronous behavior according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you will encounter a number of concurrency management issues.</span></span> <span data-ttu-id="427e9-104">Parmi celles-ci est la nécessité de garantir que les gestionnaires d’événements sont appelés sur un thread ou le contexte approprié pour le modèle d’application (par exemple, les applications Windows Forms, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications, les applications console, etc.).</span><span class="sxs-lookup"><span data-stu-id="427e9-104">Among these is the requirement to ensure that event handlers are called on a thread or context that is appropriate for the application model (for example, Windows Forms applications, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications, console applications, and so on).</span></span> <span data-ttu-id="427e9-105">Le <xref:System.ComponentModel.AsyncOperationManager> fournit un moyen pratique de créer une classe qui s’exécute correctement sur tous les modèles d’application pris en charge par le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="427e9-105">The <xref:System.ComponentModel.AsyncOperationManager> provides a convenient way to create a class that runs properly under all application models supported by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="427e9-106">Le <xref:System.ComponentModel.AsyncOperationManager> classe possède une méthode, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, qui retourne un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> qui peut être utilisé pour suivre la durée d’une tâche asynchrone particulière.</span><span class="sxs-lookup"><span data-stu-id="427e9-106">The <xref:System.ComponentModel.AsyncOperationManager> class has one method, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, which returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that can be used to track the duration of a particular asynchronous task.</span></span> <span data-ttu-id="427e9-107">Le <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> pour une tâche peut être utilisé pour alerter des clients lorsqu’une tâche se termine.</span><span class="sxs-lookup"><span data-stu-id="427e9-107">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for a task can be used to alert clients when a task completes.</span></span> <span data-ttu-id="427e9-108">Il peut également être utilisé pour publier des mises à jour de progression et des résultats incrémentiels sans terminer l’opération.</span><span class="sxs-lookup"><span data-stu-id="427e9-108">It can also be used to post progress updates and incremental results without terminating the operation.</span></span>  
  
 <span data-ttu-id="427e9-109">Pour plus d’informations sur l’implémentation de classes asynchrones, consultez [implémentation du modèle asynchrone basé sur événement](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="427e9-109">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="427e9-110">L’exemple de code suivant montre comment utiliser la <xref:System.ComponentModel.AsyncOperationManager> classe pour créer une classe qui prend en charge des opérations asynchrones pour tout modèle d’application.</span><span class="sxs-lookup"><span data-stu-id="427e9-110">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager> class to create a class that supports asynchronous operations for any application model.</span></span> <span data-ttu-id="427e9-111">Il montre comment implémenter une classe qui teste un nombre pour déterminer s’il est le premier.</span><span class="sxs-lookup"><span data-stu-id="427e9-111">It shows how to implement a class that tests a number to determine whether it is prime.</span></span> <span data-ttu-id="427e9-112">Ce calcul peut prendre beaucoup de temps, par conséquent, elle est effectuée sur un thread distinct.</span><span class="sxs-lookup"><span data-stu-id="427e9-112">This calculation can be time consuming, so it is done on a separate thread.</span></span> <span data-ttu-id="427e9-113">Rapports de progression, les résultats incrémentiels et les notifications de fin sont gérées par le <xref:System.ComponentModel.AsyncOperation> (classe), ce qui garantit que les gestionnaires d’événements du client sont appelés sur le thread ou contexte adéquat.</span><span class="sxs-lookup"><span data-stu-id="427e9-113">Progress reports, incremental results, and completion notifications are handled by the <xref:System.ComponentModel.AsyncOperation> class, which ensures that the client's event handlers are called on the proper thread or context.</span></span>  
  
 <span data-ttu-id="427e9-114">Pour une liste de code complet, consultez [Comment : implémenter un composant qui prend en charge le modèle asynchrone basé sur événement](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="427e9-114">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](http://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="427e9-115">Pour une liste de code complet d’un formulaire client, consultez [Comment : implémenter un Client du modèle asynchrone basé sur événement](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="427e9-115">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
  <Members>
    <Member MemberName="CreateOperation">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AsyncOperation CreateOperation (object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AsyncOperation CreateOperation(object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOperation (userSuppliedState As Object) As AsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AsyncOperation ^ CreateOperation(System::Object ^ userSuppliedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userSuppliedState">
          <span data-ttu-id="427e9-116">Objet utilisé pour associer une portion d'état client, telle qu'un identificateur de tâche, à une opération asynchrone particulière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="427e9-116">An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="427e9-117">Retourne <see cref="T:System.ComponentModel.AsyncOperation" /> permettant de suivre la durée d'une opération asynchrone particulière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="427e9-117">Returns an <see cref="T:System.ComponentModel.AsyncOperation" /> for tracking the duration of a particular asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="427e9-118">
            <see cref="T:System.ComponentModel.AsyncOperation" /> que vous pouvez utiliser pour suivre la durée d'un appel de méthode asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="427e9-118">An <see cref="T:System.ComponentModel.AsyncOperation" /> that you can use to track the duration of an asynchronous method invocation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="427e9-119">Le <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> méthode retourne un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> que vous pouvez utiliser pour suivre la durée d’une opération asynchrone particulière et pour alerter le modèle d’application lorsque l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="427e9-119">The <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that you can use to track the duration of a particular asynchronous operation and to alert the application model when the operation completes.</span></span> <span data-ttu-id="427e9-120">Vous pouvez également l’utiliser pour publier des mises à jour de progression et des résultats incrémentiels sans terminer l’opération.</span><span class="sxs-lookup"><span data-stu-id="427e9-120">You can also use it to post progress updates and incremental results without terminating the operation.</span></span> <span data-ttu-id="427e9-121">Le <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> marshale correctement ces appels vers le thread approprié ou le contexte pour le modèle d’application.</span><span class="sxs-lookup"><span data-stu-id="427e9-121">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> will correctly marshal these calls to the appropriate thread or context for the application model.</span></span>  
  
 <span data-ttu-id="427e9-122">Si vous implémentez une classe qui prend en charge le modèle asynchrone basé sur des événements, votre classe doit appeler <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> chaque fois que votre *MethodName* `Async` méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="427e9-122">If you implement a class that supports the Event-based Asynchronous Pattern, your class should call <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> each time your *MethodName*`Async` method is called.</span></span> <span data-ttu-id="427e9-123">L’application cliente qui effectue des appels à la méthode peut utiliser le `userSuppliedState` paramètre pour identifier de façon unique chaque appel, afin de distinguer les événements déclenchés lors de l’exécution de l’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="427e9-123">The client application that makes calls to the method can use the `userSuppliedState` parameter to uniquely identify each invocation, so as to distinguish events raised during the execution of the asynchronous operation.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="427e9-124">Le code client doit fournir une valeur unique pour le `userSuppliedState` paramètre.</span><span class="sxs-lookup"><span data-stu-id="427e9-124">Client code must provide a unique value for the `userSuppliedState` parameter.</span></span> <span data-ttu-id="427e9-125">ID de tâche non uniques peuvent entraîner votre implémentation à signaler la progression et autres événements incorrectement.</span><span class="sxs-lookup"><span data-stu-id="427e9-125">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="427e9-126">Votre code doit vérifier un ID de tâche non unique et lever une <xref:System.ArgumentException?displayProperty=nameWithType> si celle-ci est détectée.</span><span class="sxs-lookup"><span data-stu-id="427e9-126">Your code should check for a non-unique task ID and throw an <xref:System.ArgumentException?displayProperty=nameWithType> if one is detected.</span></span>  
  
 <span data-ttu-id="427e9-127">Votre code doit suivre chaque <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> retourné par <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> et utiliser l’objet dans l’opération asynchrone sous-jacente correspondante pour publier des mises à jour et de terminer l’opération.</span><span class="sxs-lookup"><span data-stu-id="427e9-127">Your code should track every <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> returned by <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> and use the object in the corresponding underlying asynchronous operation to post updates and terminate the operation.</span></span> <span data-ttu-id="427e9-128">Ce suivi peut être aussi simple que le passage de le <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> en tant que paramètre entre des délégués.</span><span class="sxs-lookup"><span data-stu-id="427e9-128">This tracking can be as simple as passing the <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> as a parameter among delegates.</span></span> <span data-ttu-id="427e9-129">Dans les conceptions plus sophistiquées, votre classe peut gérer une collection de <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objets, en ajoutant des objets lorsque des tâches sont démarrées et en les supprimant lorsque des tâches sont terminées ou annulées.</span><span class="sxs-lookup"><span data-stu-id="427e9-129">In more sophisticated designs, your class can maintain a collection of <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objects, adding objects when tasks are started and removing them when tasks are completed or canceled.</span></span> <span data-ttu-id="427e9-130">Cette approche vous permet de vérifier pour unique `userSuppliedState` paramètre et la méthode à utiliser lors de l’utilisation des classes qui prennent en charge plusieurs appels simultanés.</span><span class="sxs-lookup"><span data-stu-id="427e9-130">This approach allows you to check for unique `userSuppliedState` parameter values, and is the method you should use when working with classes that support multiple concurrent invocations.</span></span>  
  
 <span data-ttu-id="427e9-131">Pour plus d’informations sur l’implémentation de classes asynchrones, consultez [implémentation du modèle asynchrone basé sur événement](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="427e9-131">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="427e9-132">L’exemple de code suivant montre comment utiliser le <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> méthode pour créer un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> pour le suivi de la durée des opérations asynchrones.</span><span class="sxs-lookup"><span data-stu-id="427e9-132">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for tracking the duration of asynchronous operations.</span></span> <span data-ttu-id="427e9-133">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.ComponentModel.AsyncOperationManager> classe.</span><span class="sxs-lookup"><span data-stu-id="427e9-133">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="427e9-134">Obtient ou définit le contexte de synchronisation pour l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="427e9-134">Gets or sets the synchronization context for the asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="427e9-135">Contexte de synchronisation pour l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="427e9-135">The synchronization context for the asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="427e9-136">L’implémentation par défaut est l’implémentation libre de threads.</span><span class="sxs-lookup"><span data-stu-id="427e9-136">The default implementation is the free-threaded implementation.</span></span>  
  
 <span data-ttu-id="427e9-137">Un thread doit affecter la <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> propriété `null` pour libérer la fabrique libre de threads lorsqu’il est fait, sinon sa fabrique ne sera jamais supprimée.</span><span class="sxs-lookup"><span data-stu-id="427e9-137">A thread should set the <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> property to `null` to release the free-threaded factory when it is done, or else its factory will never be disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="427e9-138">Pour définir le contexte de synchronisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="427e9-138">for setting the synchronization context.</span>
          </span>
          <span data-ttu-id="427e9-139">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="427e9-139">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="427e9-140">État associé :</span>
          <span class="sxs-lookup">
            <span data-stu-id="427e9-140">Associated state:</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>