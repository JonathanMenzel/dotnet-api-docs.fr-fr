<Type Name="ICancelAddNew" FullName="System.ComponentModel.ICancelAddNew">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a90ef799e4d00c36c06e1d73fd90e9c03baeab9" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37692954" /></Metadata><TypeSignature Language="C#" Value="public interface ICancelAddNew" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICancelAddNew" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ICancelAddNew" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICancelAddNew" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICancelAddNew" />
  <TypeSignature Language="F#" Value="type ICancelAddNew = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Ajoute la fonction transactionnelle lors de l'ajout d'un nouvel élément à une collection.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.ComponentModel.ICancelAddNew> interface permet à une collection ajouter un nouvel élément d’une manière extensible. Le nouvel élément peut ensuite être validé ou restauré. Le <xref:System.ComponentModel.IBindingList.AddNew%2A> méthode de la collection est utilisée pour ajouter provisoirement l’élément qui est traité par la suite via les opérations suivantes :  
  
-   Le <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> méthode sera validée explicitement l’ajout en attente.  
  
-   Une autre opération collection, tel qu’un insertion, suppression ou déplacement validera implicitement l’ajout en attente.  
  
-   Le <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> méthode restaurera l’ajout en attente si elle n’a pas déjà été validée.  
  
> [!NOTE]
>  Dans certains scénarios, par exemple de liaison de données complexe Windows Forms, la collection peut recevoir <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> ou <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> appelle d’autres éléments que l’élément qui vient d’être ajouté. (Chaque élément est généralement une ligne dans une vue de données). Ignorer ces appels ; Annuler ou valider le nouvel élément uniquement lorsque l’index de cet élément est spécifié.  
  
 Il existe deux modèles qui autorisent l’addition transactionnelle d’un élément à une collection liée aux données :  
  
-   L’ancien modèle repose directement sur une collection qui implémente le <xref:System.ComponentModel.IBindingList> interface et est lié aux données directement à l’aide de la <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> classe. Le <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>, <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, et <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> méthodes de la <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> classe sont responsables de la prise en charge transactionnelle pour l’ajout de nouveaux éléments. Toutefois, cette fonctionnalité repose sur les éléments prenant en charge le comportement transactionnel via le <xref:System.ComponentModel.IEditableObject> interface. Si les éléments ne prennent pas en charge cette interface, l’élément est toujours ajouté à la liste, quel que soit les appels suivants à <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>.  
  
-   Le modèle plus récent prend en charge un scénario de liaison de données plus fiable via générique <xref:System.ComponentModel.BindingList%601> classe qui implémente le <xref:System.ComponentModel.IBindingList> et <xref:System.ComponentModel.ICancelAddNew> interfaces. Dans ce cas, la prise en charge transactionnelle est géré par le <xref:System.ComponentModel.BindingList%601> collection directement.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : int -&gt; unit" Usage="iCancelAddNew.CancelNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Index de l'élément ajouté précédemment à la collection.</param>
        <summary>Élimine un nouvel élément en attente de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> méthode restaure un ajout en attente (<xref:System.ComponentModel.IBindingList.AddNew%2A>) d’un élément précédemment ajouté à la collection à la position `itemIndex`. Le paramètre d’index est nécessaire, car plusieurs nouveaux éléments peuvent être simultanément en attente.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="EndNew">
      <MemberSignature Language="C#" Value="public void EndNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member EndNew : int -&gt; unit" Usage="iCancelAddNew.EndNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Index de l'élément ajouté précédemment à la collection.</param>
        <summary>Valide un nouvel élément en attente dans la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> valide une addition en attente (<xref:System.ComponentModel.IBindingList.AddNew%2A>) d’un élément précédemment ajouté à la collection à la position `itemIndex`. Le paramètre d’index est nécessaire, car plusieurs nouveaux éléments peuvent être simultanément en attente.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      </Docs>
    </Member>
  </Members>
</Type>