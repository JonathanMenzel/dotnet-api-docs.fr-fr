<Type Name="INestedContainer" FullName="System.ComponentModel.INestedContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="02b1e72fdefaebbeab1dbc0c25c94f11e880f939" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37693529" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INestedContainer : IDisposable, System.ComponentModel.IContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INestedContainer implements class System.ComponentModel.IContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.INestedContainer" />
  <TypeSignature Language="VB.NET" Value="Public Interface INestedContainer&#xA;Implements IContainer, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class INestedContainer : IDisposable, System::ComponentModel::IContainer" />
  <TypeSignature Language="F#" Value="type INestedContainer = interface&#xA;    interface IContainer&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fournit les fonctionnalités pour les conteneurs imbriqués qui contiennent logiquement zéro ou plusieurs autres composants et ont un composant parent comme propriétaire.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.ComponentModel.INestedContainer> interface ajoute le concept d’un composant propriétaire pour le <xref:System.ComponentModel.IContainer> interface. Un conteneur imbriqué est un objet qui logiquement, mais pas nécessairement visuel, contient zéro ou plusieurs composants enfants et est détenu par un composant parent. Pour visual contenant-contenu, le composant propriétaire est souvent un autre conteneur.  
  
 Conteneurs imbriqués permettent aux sections d’un contrôle d’être créées, sans nécessiter une variable membre sérialisée explicite ou un sérialiseur personnalisé pour chaque sous-contrôle. Au lieu de cela, le Concepteur de formulaires maintient un conteneur maître de composants. Chaque site de composant peut avoir un conteneur imbriqué qui fournit un emplacement pour des composants supplémentaires. Lorsqu’un composant est placé dans un conteneur imbriqué, le nom qu’il reçoit est une combinaison de son prénom et nom du composant de son propriétaire. En outre, les composants ajoutés à un conteneur imbriqué ont un accès complet aux services du conteneur parent, et le conteneur imbriqué fournit le même comportement du parent en ce qui concerne l’ajout de nouveaux composants. Le conteneur imbriqué crée le concepteur pour chaque composant qu’il contient, ce qui permet la prise en charge au moment du design. Étant donné que les sérialiseurs de code standard n’analysent pas les conteneurs imbriqués, ces composants ne sont sérialisées que si un chemin d’accès pour eux peut être obtenu en parcourant les composants dans le conteneur principal.  
  
 Conteneurs imbriqués peuvent être recherchés en interrogeant le site d’un composant pour les services de type <xref:System.ComponentModel.INestedContainer>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.NestedContainer" />
    <altmember cref="T:System.ComponentModel.ContainerFilterService" />
    <altmember cref="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
  </Docs>
  <Members>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.INestedContainer.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Owner { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.ComponentModel.IComponent" Usage="System.ComponentModel.INestedContainer.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le composant propriétaire pour le conteneur imbriqué.</summary>
        <value>
          <see cref="T:System.ComponentModel.IComponent" /> auquel appartient le conteneur imbriqué.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le composant propriétaire est la caractéristique qui différencie les conteneurs imbriqués des conteneurs ordinaires.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.IContainer" />
        <altmember cref="P:System.ComponentModel.NestedContainer.Owner" />
      </Docs>
    </Member>
  </Members>
</Type>