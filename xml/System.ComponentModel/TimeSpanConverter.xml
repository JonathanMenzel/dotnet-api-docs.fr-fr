<Type Name="TimeSpanConverter" FullName="System.ComponentModel.TimeSpanConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da280108ba252c22bd1e8c1377d74c08be8c03ce" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TimeSpanConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TimeSpanConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TimeSpanConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TimeSpanConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeSpanConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="95f2a-101">Fournit un convertisseur de type pour convertir des objets <see cref="T:System.TimeSpan" /> vers et à partir d'autres représentations.</span>
      <span class="sxs-lookup">
        <span data-stu-id="95f2a-101">Provides a type converter to convert <see cref="T:System.TimeSpan" /> objects to and from other representations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95f2a-102">Ce convertisseur peut uniquement convertir un <xref:System.TimeSpan> objet vers et à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="95f2a-102">This converter can only convert a <xref:System.TimeSpan> object to and from a string.</span></span>  
  
 <span data-ttu-id="95f2a-103">Pour plus d’informations sur les convertisseurs de type, consultez la <xref:System.ComponentModel.TypeConverter> classe de base et [Comment : implémenter un convertisseur de Type](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span><span class="sxs-lookup"><span data-stu-id="95f2a-103">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95f2a-104">Vous ne devez jamais créer une instance d’un <xref:System.ComponentModel.TimeSpanConverter>.</span><span class="sxs-lookup"><span data-stu-id="95f2a-104">You should never create an instance of a <xref:System.ComponentModel.TimeSpanConverter>.</span></span> <span data-ttu-id="95f2a-105">Au lieu de cela, appelez la méthode <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> de la classe <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="95f2a-105">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="95f2a-106">Pour plus d’informations, consultez les exemples dans la <xref:System.ComponentModel.TypeConverter> classe de base.</span><span class="sxs-lookup"><span data-stu-id="95f2a-106">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95f2a-107">L’exemple de code suivant convertit une variable de type <xref:System.TimeSpan> en une chaîne et vice versa.</span><span class="sxs-lookup"><span data-stu-id="95f2a-107">The following code example converts a variable of type <xref:System.TimeSpan> to a string, and vice versa.</span></span> <span data-ttu-id="95f2a-108">Les deux variables sont représentées dans <xref:System.TimeSpan.Ticks%2A> format.</span><span class="sxs-lookup"><span data-stu-id="95f2a-108">Both variables are represented in <xref:System.TimeSpan.Ticks%2A> format.</span></span>  
  
 [!code-cpp[Converters#21](~/samples/snippets/cpp/VS_Snippets_Winforms/Converters/CPP/converters.cpp#21)]
 [!code-csharp[Converters#21](~/samples/snippets/csharp/VS_Snippets_Winforms/Converters/CS/converters.cs#21)]
 [!code-vb[Converters#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Converters/VB/converters.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpanConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TimeSpanConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpanConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95f2a-109">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.TimeSpanConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-109">Initializes a new instance of the <see cref="T:System.ComponentModel.TimeSpanConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TimeSpanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="95f2a-110">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-110">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="95f2a-111">
            <see cref="T:System.Type" /> qui représente le type à partir duquel vous voulez effectuer la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-111">A <see cref="T:System.Type" /> that represents the type you wish to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95f2a-112">Obtient une valeur indiquant si ce convertisseur peut convertir un objet du type source donné en un objet <see cref="T:System.TimeSpan" /> à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-112">Gets a value indicating whether this converter can convert an object in the given source type to a <see cref="T:System.TimeSpan" /> using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95f2a-113">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-113">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95f2a-114">Ce convertisseur peut uniquement convertir un <xref:System.TimeSpan> objet vers et à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="95f2a-114">This converter can only convert a <xref:System.TimeSpan> object to and from a string.</span></span>  
  
 <span data-ttu-id="95f2a-115">Le paramètre `context` peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="95f2a-115">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="95f2a-116">Vérifiez toujours, car la valeur peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="95f2a-116">This can be `null`, so always check.</span></span> <span data-ttu-id="95f2a-117">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="95f2a-117">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TimeSpanConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="95f2a-118">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-118">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="95f2a-119">
            <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez effectuer la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-119">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95f2a-120">Obtient une valeur indiquant si ce convertisseur peut convertir un objet en objet du type de destination donné en utilisant le contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-120">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95f2a-121">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-121">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95f2a-122">Le paramètre `context` peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="95f2a-122">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="95f2a-123">Vérifiez toujours, car la valeur peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="95f2a-123">This can be `null`, so always check.</span></span> <span data-ttu-id="95f2a-124">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="95f2a-124">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95f2a-125">
            <paramref name="destinationType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-125">
              <paramref name="destinationType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="95f2a-126">
            <paramref name="value" /> n'est pas une valeur valide pour le type cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-126">
              <paramref name="value" /> is not a valid value for the target type.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95f2a-127">Substituez cette méthode pour fournir vos propres exigences de conversion.</span>
            <span class="sxs-lookup">
              <span data-stu-id="95f2a-127">Override this method to provide your own conversion requirements.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="95f2a-128">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-128">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="95f2a-129">
            <see cref="T:System.Globalization.CultureInfo" /> facultatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-129">An optional <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="95f2a-130">Si la culture n'est pas spécifiée, la culture en cours est utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-130">If not supplied, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="95f2a-131">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-131">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95f2a-132">Convertit l'objet donné en <see cref="T:System.TimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-132">Converts the given object to a <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95f2a-133">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-133">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95f2a-134">Ce convertisseur peut uniquement convertir un <xref:System.TimeSpan> objet vers et à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="95f2a-134">This converter can only convert a <xref:System.TimeSpan> object to and from a string.</span></span>  
  
 <span data-ttu-id="95f2a-135">Le paramètre `context` peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="95f2a-135">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="95f2a-136">Vérifiez toujours, car la valeur peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="95f2a-136">This can be `null`, so always check.</span></span> <span data-ttu-id="95f2a-137">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="95f2a-137">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95f2a-138">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-138">The conversion cannot be performed.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="95f2a-139">
            <paramref name="value" /> n'est pas une valeur valide pour le type cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-139">
              <paramref name="value" /> is not a valid value for the target type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="95f2a-140">Contexte de formateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-140">A formatter context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="95f2a-141">Culture dans laquelle <c>value</c> doit être converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-141">The culture into which <c>value</c> will be converted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="95f2a-142">Objet à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-142">The object to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="95f2a-143">Type dans lequel convertir l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-143">The type to convert the object to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95f2a-144">Convertit l'objet donné en un autre type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-144">Converts the given object to another type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95f2a-145">Objet converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95f2a-145">The converted object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95f2a-146">Cette méthode convertit couramment types vers et à partir des objets de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="95f2a-146">This method most commonly converts types to and from string objects.</span></span>  
  
 <span data-ttu-id="95f2a-147">L'implémentation par défaut appelle la méthode <xref:System.Object.ToString%2A> sur l'objet si ce dernier est valide et si la destination est de type string.</span><span class="sxs-lookup"><span data-stu-id="95f2a-147">The default implementation will make a call to <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="95f2a-148">Si cette méthode ne peut pas convertir le type de destination, elle lève une <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="95f2a-148">If this method cannot convert to the destination type, it will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="95f2a-149">Le paramètre `context` peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="95f2a-149">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="95f2a-150">Vérifiez toujours, car la valeur peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="95f2a-150">This can be `null`, so always check.</span></span> <span data-ttu-id="95f2a-151">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="95f2a-151">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>