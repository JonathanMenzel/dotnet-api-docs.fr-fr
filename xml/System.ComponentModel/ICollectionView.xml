<Type Name="ICollectionView" FullName="System.ComponentModel.ICollectionView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0e43a892c6806acd3cd2ef1fee988457269ec0cc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36703261" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICollectionView : System.Collections.IEnumerable, System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICollectionView implements class System.Collections.IEnumerable, class System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ICollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICollectionView&#xA;Implements IEnumerable, INotifyCollectionChanged" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICollectionView : System::Collections::IEnumerable, System::Collections::Specialized::INotifyCollectionChanged" />
  <TypeSignature Language="F#" Value="type ICollectionView = interface&#xA;    interface IEnumerable&#xA;    interface INotifyCollectionChanged" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Permet aux collections de bénéficier des fonctionnalités de gestion, de tri personnalisé, de filtrage et de regroupement de l’enregistrement actif.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’interface est implémentée par le <xref:System.Windows.Data.CollectionView> (classe), qui est la classe de base pour <xref:System.Windows.Data.BindingListCollectionView>, <xref:System.Windows.Data.ListCollectionView>, et <xref:System.Windows.Controls.ItemCollection>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.CollectionView" />
  </Docs>
  <Members>
    <Member MemberName="CanFilter">
      <MemberSignature Language="C#" Value="public bool CanFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFilter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.CanFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFilter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFilter : bool" Usage="System.ComponentModel.ICollectionView.CanFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si cette vue prend en charge le filtrage par l’intermédiaire de la propriété <see cref="P:System.ComponentModel.ICollectionView.Filter" />.</summary>
        <value>
          <see langword="true" /> si cette vue prend en charge le filtrage ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.CanFilter" />
      </Docs>
    </Member>
    <Member MemberName="CanGroup">
      <MemberSignature Language="C#" Value="public bool CanGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGroup" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.CanGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGroup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGroup { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGroup : bool" Usage="System.ComponentModel.ICollectionView.CanGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si cette vue prend en charge le regroupement par l’intermédiaire de la propriété <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />.</summary>
        <value>
          <see langword="true" /> si cette vue prend en charge le regroupement ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.ComponentModel.ICollectionView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si cette vue prend en charge le tri par l’intermédiaire de la propriété <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />.</summary>
        <value>
          <see langword="true" /> si cette vue prend en charge le tri ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICollectionView.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool" Usage="iCollectionView.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Objet à vérifier.</param>
        <summary>Retourne une valeur qui indique si un élément donné appartient à cette vue de collection.</summary>
        <returns>
          <see langword="true" /> si l’élément appartient à cette vue de collection ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne fait pas d’hypothèses concernant indique si l’élément appartient à la collection sous-jacente.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.ComponentModel.ICollectionView.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les informations culturelles pour les opérations de la vue dont la culture peut être différente, telles que le tri.</summary>
        <value>Culture à utiliser pendant le tri.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.Culture" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.ICollectionView.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanged : EventHandler " Usage="member this.CurrentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lors de l’implémentation de cette interface, déclenche cet événement après la modification de l’élément actif.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes qui implémentent cette interface doivent déclencher la <xref:System.ComponentModel.ICollectionView.CurrentChanging> événement et vérifiez la <xref:System.ComponentModel.CurrentChangingEventArgs.Cancel%2A> valeur de la propriété avant de modifier la devise et le déclenchement de <xref:System.ComponentModel.ICollectionView.CurrentChanged> événement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.ICollectionView.CurrentItem" />
        <altmember cref="E:System.Windows.Data.CollectionView.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanging">
      <MemberSignature Language="C#" Value="event System.ComponentModel.CurrentChangingEventHandler CurrentChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CurrentChangingEventHandler CurrentChanging" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.ICollectionView.CurrentChanging" />
      <MemberSignature Language="VB.NET" Value="Event CurrentChanging As CurrentChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CurrentChangingEventHandler ^ CurrentChanging;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanging : System.ComponentModel.CurrentChangingEventHandler " Usage="member this.CurrentChanging : System.ComponentModel.CurrentChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CurrentChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quand vous implémentez cette interface, déclenchez cet événement avant de modifier l’élément actuel. Le gestionnaire d’événements peut annuler cet événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes qui implémentent cette interface doivent déclencher la <xref:System.ComponentModel.ICollectionView.CurrentChanging> événement et vérifiez la <xref:System.ComponentModel.CurrentChangingEventArgs.Cancel%2A> valeur de la propriété avant de modifier la devise et le déclenchement de <xref:System.ComponentModel.ICollectionView.CurrentChanged> événement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.ICollectionView.CurrentItem" />
        <altmember cref="E:System.Windows.Data.CollectionView.CurrentChanging" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItem">
      <MemberSignature Language="C#" Value="public object CurrentItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.CurrentItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentItem : obj" Usage="System.ComponentModel.ICollectionView.CurrentItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'élément actif de la vue.</summary>
        <value>Élément actif de la vue, ou <see langword="null" /> s’il n’y a pas d’élément actif.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.CurrentItem" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPosition">
      <MemberSignature Language="C#" Value="public int CurrentPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.CurrentPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPosition : int" Usage="System.ComponentModel.ICollectionView.CurrentPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la position ordinale de <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue.</summary>
        <value>Position ordinale de <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.CurrentPosition" />
      </Docs>
    </Member>
    <Member MemberName="DeferRefresh">
      <MemberSignature Language="C#" Value="public IDisposable DeferRefresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable DeferRefresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICollectionView.DeferRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Function DeferRefresh () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ DeferRefresh();" />
      <MemberSignature Language="F#" Value="abstract member DeferRefresh : unit -&gt; IDisposable" Usage="iCollectionView.DeferRefresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entre dans un cycle différé que vous pouvez utiliser pour fusionner des modifications de la vue et retarder l’actualisation automatique.</summary>
        <returns>Objet <see cref="T:System.IDisposable" /> que vous pouvez utiliser pour supprimer l’objet appelant.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.DeferRefresh" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public Predicate&lt;object&gt; Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;object&gt; Filter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Predicate(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Predicate&lt;System::Object ^&gt; ^ Filter { Predicate&lt;System::Object ^&gt; ^ get(); void set(Predicate&lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : Predicate&lt;obj&gt; with get, set" Usage="System.ComponentModel.ICollectionView.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un rappel utilisé pour déterminer si un élément peut être inclus dans la vue.</summary>
        <value>Méthode utilisée pour déterminer si un élément peut être inclus dans la vue.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.Filter" />
      </Docs>
    </Member>
    <Member MemberName="GroupDescriptions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt; GroupDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.ComponentModel.GroupDescription&gt; GroupDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.GroupDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupDescriptions As ObservableCollection(Of GroupDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ GroupDescriptions { System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupDescriptions : System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;" Usage="System.ComponentModel.ICollectionView.GroupDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection d'objets <see cref="T:System.ComponentModel.GroupDescription" /> qui décrivent comment les éléments de la collection sont regroupés dans la vue.</summary>
        <value>Collection d'objets <see cref="T:System.ComponentModel.GroupDescription" /> qui décrivent comment les éléments de la collection sont regroupés dans la vue.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.GroupDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;object&gt; Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyObservableCollection`1&lt;object&gt; Groups" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As ReadOnlyObservableCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ Groups { System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;obj&gt;" Usage="System.ComponentModel.ICollectionView.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les groupes de niveau supérieur.</summary>
        <value>Collection en lecture seule des groupes de niveau supérieur ou <see langword="null" /> s'il n'y a pas de groupes.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.Groups" />
      </Docs>
    </Member>
    <Member MemberName="IsCurrentAfterLast">
      <MemberSignature Language="C#" Value="public bool IsCurrentAfterLast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentAfterLast" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentAfterLast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentAfterLast { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentAfterLast : bool" Usage="System.ComponentModel.ICollectionView.IsCurrentAfterLast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà de la fin de la collection.</summary>
        <value>Retourne <see langword="true" /> si l'<see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà de la fin de la collection ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.IsCurrentAfterLast" />
      </Docs>
    </Member>
    <Member MemberName="IsCurrentBeforeFirst">
      <MemberSignature Language="C#" Value="public bool IsCurrentBeforeFirst { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentBeforeFirst" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentBeforeFirst As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentBeforeFirst { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentBeforeFirst : bool" Usage="System.ComponentModel.ICollectionView.IsCurrentBeforeFirst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si l'<see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà du début de la collection.</summary>
        <value>Retourne <see langword="true" /> si l'<see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue est au-delà du début de la collection ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.ComponentModel.ICollectionView.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne une valeur qui indique si la vue résultante est vide.</summary>
        <value>
          <see langword="true" /> si la vue résultante est vide ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentTo">
      <MemberSignature Language="C#" Value="public bool MoveCurrentTo (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveCurrentTo(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveCurrentTo (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveCurrentTo(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member MoveCurrentTo : obj -&gt; bool" Usage="iCollectionView.MoveCurrentTo item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Élément à définir comme <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
        <summary>Définit l'élément spécifié comme devant être le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue.</summary>
        <returns>
          <see langword="true" /> si le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> résultant est dans la vue ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToFirst">
      <MemberSignature Language="C#" Value="public bool MoveCurrentToFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveCurrentToFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveCurrentToFirst () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveCurrentToFirst();" />
      <MemberSignature Language="F#" Value="abstract member MoveCurrentToFirst : unit -&gt; bool" Usage="iCollectionView.MoveCurrentToFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Définit le premier élément de la vue comme <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
        <returns>
          <see langword="true" /> si <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> résultant est un élément présent dans la vue ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.MoveCurrentToFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToLast">
      <MemberSignature Language="C#" Value="public bool MoveCurrentToLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveCurrentToLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICollectionView.MoveCurrentToLast" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveCurrentToLast () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveCurrentToLast();" />
      <MemberSignature Language="F#" Value="abstract member MoveCurrentToLast : unit -&gt; bool" Usage="iCollectionView.MoveCurrentToLast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Définit le dernier élément de la vue comme <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
        <returns>
          <see langword="true" /> si <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> résultant est un élément présent dans la vue ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.MoveCurrentToLast" />
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToNext">
      <MemberSignature Language="C#" Value="public bool MoveCurrentToNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveCurrentToNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICollectionView.MoveCurrentToNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveCurrentToNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveCurrentToNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveCurrentToNext : unit -&gt; bool" Usage="iCollectionView.MoveCurrentToNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Définit l'élément après <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue comme <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
        <returns>
          <see langword="true" /> si <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> résultant est un élément présent dans la vue ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.MoveCurrentToNext" />
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToPosition">
      <MemberSignature Language="C#" Value="public bool MoveCurrentToPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveCurrentToPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveCurrentToPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveCurrentToPosition(int position);" />
      <MemberSignature Language="F#" Value="abstract member MoveCurrentToPosition : int -&gt; bool" Usage="iCollectionView.MoveCurrentToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">Index auquel définir <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
        <summary>Définit l'élément situé à l'index spécifié comme devant être le <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vue.</summary>
        <returns>
          <see langword="true" /> si <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> résultant est un élément présent dans la vue ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToPrevious">
      <MemberSignature Language="C#" Value="public bool MoveCurrentToPrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveCurrentToPrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveCurrentToPrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveCurrentToPrevious();" />
      <MemberSignature Language="F#" Value="abstract member MoveCurrentToPrevious : unit -&gt; bool" Usage="iCollectionView.MoveCurrentToPrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Définit l'élément avant <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dans la vue comme <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
        <returns>
          <see langword="true" /> si <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> résultant est un élément présent dans la vue ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICollectionView.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="abstract member Refresh : unit -&gt; unit" Usage="iCollectionView.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recrée la vue.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public System.ComponentModel.SortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.SortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortDescriptions As SortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::SortDescriptionCollection ^ SortDescriptions { System::ComponentModel::SortDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescriptions : System.ComponentModel.SortDescriptionCollection" Usage="System.ComponentModel.ICollectionView.SortDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.SortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection d'objets <see cref="T:System.ComponentModel.SortDescription" /> qui décrivent comment les éléments de la collection sont triés dans la vue.</summary>
        <value>Collection d'objets <see cref="T:System.ComponentModel.SortDescription" /> qui décrivent comment les éléments de la collection sont triés dans la vue.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.CollectionView.SortDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="SourceCollection">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable SourceCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable SourceCollection" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ICollectionView.SourceCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceCollection As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerable ^ SourceCollection { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceCollection : System.Collections.IEnumerable" Usage="System.ComponentModel.ICollectionView.SourceCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne la collection sous-jacente.</summary>
        <value>Objet <see cref="T:System.Collections.IEnumerable" /> qui est la collection sous-jacente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>