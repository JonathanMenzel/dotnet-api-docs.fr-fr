<Type Name="IEditableCollectionView" FullName="System.ComponentModel.IEditableCollectionView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d11887074c54a7af85492421fa8f02341774506" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37692879" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEditableCollectionView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableCollectionView" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableCollectionView" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableCollectionView" />
  <TypeSignature Language="F#" Value="type IEditableCollectionView = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a0835-101">Définit les méthodes et propriétés qu'un <see cref="T:System.Windows.Data.CollectionView" /> implémente pour procurer des fonctionnalités d'édition à une collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0835-101">Defines methods and properties that a <see cref="T:System.Windows.Data.CollectionView" /> implements to provide editing capabilities to a collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0835-102">Lorsqu’une vue de collection implémente le <xref:System.ComponentModel.IEditableCollectionView> interface, vous pouvez modifier directement la collection sous-jacente, si elle autorise les modifications à apporter, en utilisant les méthodes et propriétés qui <xref:System.ComponentModel.IEditableCollectionView> expose, quel que soit le type de la collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-102">When a collection view implements the <xref:System.ComponentModel.IEditableCollectionView> interface, you can directly change the underlying collection, if it allows changes to be made, by using the methods and properties that <xref:System.ComponentModel.IEditableCollectionView> exposes, regardless of the collection's type.</span></span>  
  
 <span data-ttu-id="a0835-103">Les types <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, et <xref:System.Windows.Data.ListCollectionView> sont les types fournis avec [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] qui hérite de <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="a0835-103">The types <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, and <xref:System.Windows.Data.ListCollectionView> are the types that ship with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] that inherit from <xref:System.Windows.Data.CollectionView>.</span></span>  <span data-ttu-id="a0835-104">Ces types implémentent également le <xref:System.ComponentModel.IEditableCollectionView>, de sorte que vous pouvez modifier une collection qui utilise un de ces types.</span><span class="sxs-lookup"><span data-stu-id="a0835-104">These types also implement the <xref:System.ComponentModel.IEditableCollectionView>, so you can edit a collection that uses one of those types.</span></span>  <span data-ttu-id="a0835-105"><xref:System.Windows.Controls.ItemCollection>, en particulier, est souvent utilisé, car le <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> propriété est un <xref:System.Windows.Controls.ItemCollection>.</span><span class="sxs-lookup"><span data-stu-id="a0835-105"><xref:System.Windows.Controls.ItemCollection>, in particular, is often used because the <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> property is an <xref:System.Windows.Controls.ItemCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0835-106">L’exemple suivant montre comment ajouter un élément à une collection à l’aide de méthodes qui sont définies par <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="a0835-106">The following example shows how to add an item to a collection by using methods that are defined by <xref:System.ComponentModel.IEditableCollectionView>.</span></span>  <span data-ttu-id="a0835-107">Cette application affiche une liste d’éléments à vendre et donne à l’utilisateur la possibilité d’ajout, modification ou suppression d’un élément.</span><span class="sxs-lookup"><span data-stu-id="a0835-107">This application displays a list of items for sale and gives the user the option of adding, editing, or removing an item.</span></span>  <span data-ttu-id="a0835-108">Lorsque l’utilisateur ajoute ou modifie un élément, un formulaire invite l’utilisateur à entrer un nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="a0835-108">When the user adds or edits an item, a form prompts the user to enter a new item.</span></span>  <span data-ttu-id="a0835-109">Si l’utilisateur envoie le formulaire, l’élément est validé à la collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-109">If the user submits the form, the item is committed to the collection.</span></span>  <span data-ttu-id="a0835-110">Si l’utilisateur annule le formulaire, l’élément est ignoré.</span><span class="sxs-lookup"><span data-stu-id="a0835-110">If the user cancels the form, the item is discarded.</span></span> <span data-ttu-id="a0835-111">Pour l’exemple complet, consultez [modification d’une Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a0835-111">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj" Usage="iEditableCollectionView.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0835-112">Ajoute un nouvel élément à la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-112">Adds a new item to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0835-113">Nouvel élément ajouté à la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-113">The new item that is added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0835-114">Appel <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> commence une transaction d’ajout.</span><span class="sxs-lookup"><span data-stu-id="a0835-114">Calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> begins an add transaction.</span></span>  <span data-ttu-id="a0835-115">Vous devez appeler <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> ou <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> à la fin de la transaction d’ajout.</span><span class="sxs-lookup"><span data-stu-id="a0835-115">You should call <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to end the add transaction.</span></span> <span data-ttu-id="a0835-116">Un nouvel élément apparaît toujours dans la vue de collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-116">A new item always appears in the collection view.</span></span> <span data-ttu-id="a0835-117">Tout filtrage, le tri, ou le regroupement qui est appliqué à la vue est appliquée au nouvel élément lors <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="a0835-117">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0835-118">L’exemple suivant crée un <xref:System.Windows.Window> qui invite l’utilisateur à ajouter un nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="a0835-118">The following example creates a <xref:System.Windows.Window> that prompts the user to add a new item.</span></span>  <span data-ttu-id="a0835-119">Ensuite, il appelle <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> pour créer un nouvel objet et affecte le <xref:System.Windows.FrameworkElement.DataContext%2A> de la <xref:System.Windows.Window> à cet objet.</span><span class="sxs-lookup"><span data-stu-id="a0835-119">Then it calls <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> to create a new object and sets the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Window> to that object.</span></span> <span data-ttu-id="a0835-120">Pour l’exemple complet, consultez [modification d’une Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a0835-120">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNew : bool" Usage="System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0835-121">Obtient une valeur qui indique si un nouvel élément peut être ajouté à la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-121">Gets a value that indicates whether a new item can be added to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0835-122">
            <see langword="true" /> si un nouvel élément peut être ajouté à la collection ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-122">
              <see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0835-123">Un <xref:System.ComponentModel.IEditableCollectionView> peut ajouter un nouvel élément si les conditions suivantes sont remplies :</span><span class="sxs-lookup"><span data-stu-id="a0835-123">An <xref:System.ComponentModel.IEditableCollectionView> can add a new item if the following are true:</span></span>  
  
-   <span data-ttu-id="a0835-124">Un élément peut être ajouté à la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="a0835-124">An item can be added to the underlying collection.</span></span>  <span data-ttu-id="a0835-125">Par exemple, si la collection est en lecture seule, <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> est `false`.</span><span class="sxs-lookup"><span data-stu-id="a0835-125">For example, if the collection is read-only, <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`.</span></span>  
  
-   <span data-ttu-id="a0835-126">Le <xref:System.ComponentModel.IEditableCollectionView> peut créer un objet du type qui se trouve dans la collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-126">The <xref:System.ComponentModel.IEditableCollectionView> can create an object of the type that is in the collection.</span></span>  <span data-ttu-id="a0835-127">Par exemple, si la collection est de type <xref:System.Collections.ObjectModel.ObservableCollection%601>, le <xref:System.ComponentModel.IEditableCollectionView> doit être en mesure de créer un objet de type `T`.</span><span class="sxs-lookup"><span data-stu-id="a0835-127">For example, if the collection is of type <xref:System.Collections.ObjectModel.ObservableCollection%601>, the <xref:System.ComponentModel.IEditableCollectionView> must be able to create an object of type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0835-128">L’exemple suivant vérifie si un élément peut être ajouté à la collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-128">The following example checks whether an item can be added to the collection.</span></span>  <span data-ttu-id="a0835-129">Si <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> est `false`, l’exemple indique qu’un élément ne peut pas être ajouté à l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a0835-129">If <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`, the example tells the user that an item cannot be added.</span></span>  <span data-ttu-id="a0835-130">Sinon, il affiche un formulaire qui invite l’utilisateur à ajouter un nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="a0835-130">Otherwise, it shows a form that prompts the user to add a new item.</span></span> <span data-ttu-id="a0835-131">Pour l’exemple complet, consultez [modification d’une Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="a0835-131">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCancelEdit : bool" Usage="System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0835-132">Obtient une valeur qui indique si la vue de collection peut ignorer les modifications en attente et restaurer les valeurs d'origine d'un objet modifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-132">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0835-133">
            <see langword="true" /> si la vue de collection peut ignorer les modifications en attente et restaurer les valeurs d’origine d’un objet modifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-133">
              <see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0835-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> est `true` si la vue prend en charge la notion de « modifications en attente » sur l’élément en cours de modification.</span><span class="sxs-lookup"><span data-stu-id="a0835-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true` if the view supports the notion of "pending changes" on the currently edited item.</span></span>   <span data-ttu-id="a0835-135">Par exemple, une vue de collection peut retourner `true` si l’élément modifié implémente <xref:System.ComponentModel.IEditableObject>, ou si la vue a des informations sur l’état de l’élément qu’il peut utiliser pour restaurer par sauvegarde les modifications.</span><span class="sxs-lookup"><span data-stu-id="a0835-135">For example, a collection view might return `true` if the edited item implements <xref:System.ComponentModel.IEditableObject>, or if the view has information about the item's state that it can use to roll back changes.</span></span> <span data-ttu-id="a0835-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> est `false` si la vue ne peut pas annuler les modifications sur un objet.</span><span class="sxs-lookup"><span data-stu-id="a0835-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `false` if the view cannot revert changes on an object.</span></span>  <span data-ttu-id="a0835-137">Dans ce cas, appelez <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> pour que la vue quitte l’état de modification et fournir la logique permettant de restaurer les modifications sur l’objet qui a été modifié.</span><span class="sxs-lookup"><span data-stu-id="a0835-137">In that case, call <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0835-138">L’exemple suivant obtient <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> pour vérifier si les valeurs d’origine de l’élément modifié peuvent être restaurées avant d’appeler <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="a0835-138">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="a0835-139">Si les valeurs ne peuvent pas être restaurées, vous devez fournir une logique supplémentaire pour ce faire.</span><span class="sxs-lookup"><span data-stu-id="a0835-139">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="a0835-140">Si possible, les valeurs sont restaurées lorsque l’exemple appelle <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="a0835-140">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>   <span data-ttu-id="a0835-141">Pour l’exemple complet, consultez [modification d’une Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a0835-141">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelEdit : unit -&gt; unit" Usage="iEditableCollectionView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0835-142">Met fin à la transaction de modification et, si possible, restaure la valeur d’origine de l’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-142">Ends the edit transaction and, if possible, restores the original value to the item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0835-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> définit <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> à `null` et provoque la vue de collection quitter l’état de modification.</span><span class="sxs-lookup"><span data-stu-id="a0835-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> sets <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state.</span></span>  <span data-ttu-id="a0835-144">Si <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> est `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> restaure également les valeurs d’origine de l’objet modifié.</span><span class="sxs-lookup"><span data-stu-id="a0835-144">If <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> also restores the original values of the edited object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0835-145">L’exemple suivant obtient <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> pour vérifier si les valeurs d’origine de l’élément modifié peuvent être restaurées avant d’appeler <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="a0835-145">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="a0835-146">Si les valeurs ne peuvent pas être restaurées, vous devez fournir une logique supplémentaire pour ce faire.</span><span class="sxs-lookup"><span data-stu-id="a0835-146">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="a0835-147">Si possible, les valeurs sont restaurées lorsque l’exemple appelle <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="a0835-147">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span> <span data-ttu-id="a0835-148">Pour l’exemple complet, consultez [modification d’une Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a0835-148">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew();" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : unit -&gt; unit" Usage="iEditableCollectionView.CancelNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0835-149">Met fin à la transaction d'ajout et ignore le nouvel élément en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-149">Ends the add transaction and discards the pending new item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0835-150">L’exemple suivant affiche un formulaire qui invite l’utilisateur à ajouter un nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="a0835-150">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="a0835-151">Si l’utilisateur envoie le formulaire, l’exemple appelle <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> pour ajouter l’élément à la collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-151">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="a0835-152">Si l’utilisateur annule le formulaire, l’exemple appelle <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> pour ignorer l’élément.</span><span class="sxs-lookup"><span data-stu-id="a0835-152">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="a0835-153">Pour l’exemple complet, consultez [modification d’une Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a0835-153">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRemove : bool" Usage="System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0835-154">Obtient une valeur qui indique si un élément peut être supprimé de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-154">Gets a value that indicates whether an item can be removed from the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0835-155">
            <see langword="true" /> si un élément peut être supprimé de la collection ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-155">
              <see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0835-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> est `false` si la collection sous-jacente est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="a0835-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> is `false` if the underlying collection is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0835-157">L’exemple suivant appelle <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> pour vérifier si un élément peut être supprimé de la collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-157">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="a0835-158">Si un élément peut être supprimé, l’exemple invite l’utilisateur à confirmer l’action et les appels <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> si l’utilisateur clique sur **Oui**.</span><span class="sxs-lookup"><span data-stu-id="a0835-158">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="a0835-159">Pour l’exemple complet, consultez [modification d’une Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a0835-159">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitEdit();" />
      <MemberSignature Language="F#" Value="abstract member CommitEdit : unit -&gt; unit" Usage="iEditableCollectionView.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0835-160">Met fin à la transaction de modification et enregistre les modifications en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-160">Ends the edit transaction and saves the pending changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0835-161">L’exemple suivant crée un formulaire qui invite l’utilisateur à modifier un élément existant.</span><span class="sxs-lookup"><span data-stu-id="a0835-161">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="a0835-162">Si l’utilisateur envoie le formulaire, l’exemple appelle <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> pour enregistrer les modifications à la collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-162">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> to save the changes to the collection.</span></span>  <span data-ttu-id="a0835-163">Si l’utilisateur annule le formulaire, l’exemple appelle <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> pour ignorer les modifications.</span><span class="sxs-lookup"><span data-stu-id="a0835-163">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to discard the changes.</span></span> <span data-ttu-id="a0835-164">Pour l’exemple complet, consultez [modification d’une Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a0835-164">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitNew();" />
      <MemberSignature Language="F#" Value="abstract member CommitNew : unit -&gt; unit" Usage="iEditableCollectionView.CommitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0835-165">Met fin à la transaction d'ajout et enregistre le nouvel élément en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-165">Ends the add transaction and saves the pending new item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0835-166">Tout filtrage, le tri, ou le regroupement qui est appliqué à la <xref:System.Windows.Data.CollectionView> est appliqué au nouvel élément lors <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="a0835-166">Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.CollectionView> is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0835-167">L’exemple suivant affiche un formulaire qui invite l’utilisateur à ajouter un nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="a0835-167">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="a0835-168">Si l’utilisateur envoie le formulaire, l’exemple appelle <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> pour ajouter l’élément à la collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-168">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="a0835-169">Si l’utilisateur annule le formulaire, l’exemple appelle <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> pour ignorer l’élément.</span><span class="sxs-lookup"><span data-stu-id="a0835-169">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="a0835-170">Pour l’exemple complet, consultez [modification d’une Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a0835-170">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentAddItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0835-171">Obtient l'élément ajouté pendant la transaction d'ajout en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-171">Gets the item that is being added during the current add transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0835-172">Élément qui est ajouté si <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> a la valeur <see langword="true" /> ; sinon, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-172">The item that is being added if <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentEditItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0835-173">Obtient l'élément de la collection qui est modifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-173">Gets the item in the collection that is being edited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0835-174">Élément de la collection qui est modifié si <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> est <see langword="true" /> ; sinon, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-174">The item in the collection that is being edited if <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EditItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member EditItem : obj -&gt; unit" Usage="iEditableCollectionView.EditItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a0835-175">Élément à modifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-175">The item to edit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0835-176">Commence une transaction de modification de l’élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-176">Begins an edit transaction of the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0835-177">L’exemple suivant crée un formulaire qui invite l’utilisateur à modifier un élément existant.</span><span class="sxs-lookup"><span data-stu-id="a0835-177">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="a0835-178">Si l’utilisateur envoie le formulaire, les modifications sont validées dans la collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-178">If the user submits the form, the changes are committed to the collection.</span></span>  <span data-ttu-id="a0835-179">Si l’utilisateur annule le formulaire, les modifications sont ignorées.</span><span class="sxs-lookup"><span data-stu-id="a0835-179">If the user cancels the form, the changes are discarded.</span></span> <span data-ttu-id="a0835-180">Pour l’exemple complet, consultez [modification d’une Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="a0835-180">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingNew : bool" Usage="System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0835-181">Obtient une valeur qui indique si une transaction d’ajout est en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-181">Gets a value that indicates whether an add transaction is in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0835-182">
            <see langword="true" /> si une transaction d'ajout est en cours ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-182">
              <see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0835-183">Vous commencez une transaction d’ajout en appelant <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> et terminer la transaction d’ajout en appelant <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> ou <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span><span class="sxs-lookup"><span data-stu-id="a0835-183">You begin an add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> and end the add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditingItem : bool" Usage="System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0835-184">Obtient une valeur qui indique si une transaction de modification est en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-184">Gets a value that indicates whether an edit transaction is in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0835-185">
            <see langword="true" /> si une transaction de modification est en cours ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-185">
              <see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0835-186">Vous commencez une transaction de modification en appelant <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> et terminer la transaction en appelant <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> ou <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="a0835-186">You begin an edit transaction by calling <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> and end the transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberSignature Language="F#" Value="member this.NewItemPlaceholderPosition : System.ComponentModel.NewItemPlaceholderPosition with get, set" Usage="System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0835-187">Obtient ou définit la position du nouvel espace réservé d’élément dans la vue de collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-187">Gets or sets the position of the new item placeholder in the collection view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0835-188">L’une des valeurs d’énumération qui spécifie la position du nouvel espace réservé d’élément dans la vue de collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-188">One of the enumeration values that specifies the position of the new item placeholder in the collection view.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iEditableCollectionView.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a0835-189">Élément à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-189">The item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0835-190">Supprime l’élément spécifié de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-190">Removes the specified item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0835-191">Si `item` n’est pas dans la collection, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> ne fait rien.</span><span class="sxs-lookup"><span data-stu-id="a0835-191">If `item` is not in the collection, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0835-192">L’exemple suivant appelle <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> pour vérifier si un élément peut être supprimé de la collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-192">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="a0835-193">Si un élément peut être supprimé, l’exemple invite l’utilisateur à confirmer l’action et les appels <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> si l’utilisateur clique sur **Oui**.</span><span class="sxs-lookup"><span data-stu-id="a0835-193">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="a0835-194">Pour l’exemple complet, consultez [modification d’une Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="a0835-194">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iEditableCollectionView.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a0835-195">Position de l'élément à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-195">The position of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0835-196">Supprime de la collection l’élément situé à la position spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-196">Removes the item at the specified position from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0835-197">`index` est relatif à la vue de collection, pas à la collection.</span><span class="sxs-lookup"><span data-stu-id="a0835-197">`index` is relative to the collection view, not the collection.</span></span>  <span data-ttu-id="a0835-198">Par exemple, si la collection comprend 10 éléments et la vue a un <xref:System.ComponentModel.ICollectionView.Filter%2A> afin que 7 éléments apparaissent, les valeurs valides de `index` vont de 0 à 6.</span><span class="sxs-lookup"><span data-stu-id="a0835-198">For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of `index` are 0 through 6.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a0835-199">
            <paramref name="index" /> est inférieur à 0 ou supérieur au nombre d'éléments dans la vue de collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0835-199">
              <paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>