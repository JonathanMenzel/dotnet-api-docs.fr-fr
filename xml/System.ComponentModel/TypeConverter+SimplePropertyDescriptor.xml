<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeConverter+SimplePropertyDescriptor.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56db146d54b9a2053de6242f6dec5ae08026016f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6db146d54b9a2053de6242f6dec5ae08026016f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor">
          <source>Represents an <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> class that provides properties for objects that do not have properties.</source>
          <target state="translated">Représente une classe <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> qui fournit des propriétés pour les objets qui n'en ont pas.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor">
          <source>For an example on this class, see the example in <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple de cette classe, consultez l’exemple dans <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph>, you must override the <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> methods.</source>
          <target state="translated">Lorsque vous héritez de <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph>, vous devez substituer la <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> et <ph id="ph3">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component to which this property descriptor binds.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> représentant le type du composant auquel ce descripteur de propriété est lié.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)">
          <source>The name of the property.</source>
          <target state="translated">Nom de la propriété.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the data type for this property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> représentant le type de données de cette propriété.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component to which this property descriptor binds.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> représentant le type du composant auquel ce descripteur de propriété est lié.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])">
          <source>The name of the property.</source>
          <target state="translated">Nom de la propriété.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the data type for this property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> représentant le type de données de cette propriété.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array with the attributes to associate with the property.</source>
          <target state="translated">Tableau <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> contenant les attributs à associer à la propriété.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
          <source>The component to test for reset capability.</source>
          <target state="translated">Composant dont la fonction de réinitialisation doit être testée.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
          <source>Returns whether resetting the component changes the value of the component.</source>
          <target state="translated">Retourne une valeur indiquant si la réinitialisation du composant modifie sa valeur.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if resetting the component changes the value of the component; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la réinitialisation du composant modifie sa valeur ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
          <source>This method looks for a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>.</source>
          <target state="translated">Cette méthode recherche un <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
          <source>If it finds one, it compares the value of the attribute with the current value of the property.</source>
          <target state="translated">S’il en trouve, il compare la valeur de l’attribut avec la valeur actuelle de la propriété.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
          <source>It returns <ph id="ph1">`true`</ph> when the default value does not match the current value of the property.</source>
          <target state="translated">Elle retourne <ph id="ph1">`true`</ph> lorsque la valeur par défaut ne correspond pas à la valeur actuelle de la propriété.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>, it looks for a <ph id="ph2">`ShouldSerializeMyProperty`</ph> method.</source>
          <target state="translated">Si cette méthode ne peut pas trouver un <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>, il recherche un <ph id="ph2">`ShouldSerializeMyProperty`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
          <source>If it finds a <ph id="ph1">`ShouldSerializeMyProperty`</ph> method, it returns what <ph id="ph2">`ShouldSerializeMyProperty`</ph> returns.</source>
          <target state="translated">S’il trouve un <ph id="ph1">`ShouldSerializeMyProperty`</ph> méthode, il retourne ce que <ph id="ph2">`ShouldSerializeMyProperty`</ph> retourne.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">`ShouldSerializeMyProperty`</ph> method, it looks for a <ph id="ph2">`ResetMyProperty`</ph> method.</source>
          <target state="translated">Si cette méthode ne peut pas trouver un <ph id="ph1">`ShouldSerializeMyProperty`</ph> méthode, il recherche un <ph id="ph2">`ResetMyProperty`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
          <source>If it finds a <ph id="ph1">`ResetMyProperty`</ph> method, it returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">S’il trouve un <ph id="ph1">`ResetMyProperty`</ph> (méthode), elle retourne <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>, a <ph id="ph2">`ShouldSerializeMyProperty`</ph> method, or a <ph id="ph3">`ResetMyProperty`</ph> method, then it returns <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si cette méthode ne peut pas trouver un <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>, un <ph id="ph2">`ShouldSerializeMyProperty`</ph> (méthode), ou un <ph id="ph3">`ResetMyProperty`</ph> (méthode), elle retourne <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType">
          <source>Gets the type of component to which this property description binds.</source>
          <target state="translated">Obtient le type de composant auquel cette description de propriété est liée.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component to which this property binds.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> représentant le type du composant auquel cette propriété est liée.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly">
          <source>Gets a value indicating whether this property is read-only.</source>
          <target state="translated">Obtient une valeur indiquant si cette propriété est en lecture seule.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is read-only; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the property is read/write.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété est en lecture seule ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si la propriété est en lecture/écriture.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType">
          <source>Gets the type of the property.</source>
          <target state="translated">Obtient le type de la propriété.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of the property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> représentant le type de la propriété.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)">
          <source>The component with the property value to be reset.</source>
          <target state="translated">Composant dont la valeur de la propriété doit être rétablie.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)">
          <source>Resets the value for this property of the component.</source>
          <target state="translated">Réinitialise la valeur pour cette propriété du composant.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)">
          <source>This method looks for a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>.</source>
          <target state="translated">Cette méthode recherche un <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)">
          <source>If it finds one, it sets the value of the property to the value specified in the attribute.</source>
          <target state="translated">S’il en trouve, il définit la valeur de la propriété à la valeur spécifiée dans l’attribut.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>, it looks for a <ph id="ph2">`ResetMyProperty`</ph> method.</source>
          <target state="translated">Si cette méthode ne peut pas trouver un <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>, il recherche un <ph id="ph2">`ResetMyProperty`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)">
          <source>If it finds a <ph id="ph1">`ResetMyProperty`</ph> method, it invokes it.</source>
          <target state="translated">S’il trouve un <ph id="ph1">`ResetMyProperty`</ph> (méthode), elle l’appelle.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> or a <ph id="ph2">`ResetMyProperty`</ph> method, then it does not perform an operation.</source>
          <target state="translated">Si cette méthode ne peut pas trouver un <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> ou un <ph id="ph2">`ResetMyProperty`</ph> (méthode), puis il effectue une opération.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The component with the property that is to be examined for persistence.</source>
          <target state="translated">Composant possédant la propriété dont la persistance doit être examinée.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>Returns whether the value of this property can persist.</source>
          <target state="translated">Retourne une valeur indiquant si la valeur de cette propriété peut être persistante.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the property can persist; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la valeur de la propriété peut être persistante ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>As implemented in this class, this method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Tel qu’implémenté dans cette classe, cette méthode retourne <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>When overridden in a derived class, this method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current value of the property is different from its default value.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la valeur actuelle de la propriété est différente de sa valeur par défaut.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>It looks for a default value by first looking for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">Elle recherche une valeur par défaut en recherchant d’abord un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If the method finds this attribute, it compares the value of the attribute with the current value of the property.</source>
          <target state="translated">Si la méthode trouve cet attribut, il compare la valeur de l’attribut avec la valeur actuelle de la propriété.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a <bpt id="p1">&lt;c&gt;</bpt>ShouldSerializeMyProperty<ept id="p1">&lt;/c&gt;</ept> method.</source>
          <target state="translated">Si cette méthode ne peut pas trouver un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, il recherche une <bpt id="p1">&lt;c&gt;</bpt>ShouldSerializeMyProperty<ept id="p1">&lt;/c&gt;</ept> (méthode).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If this method finds a <bpt id="p1">&lt;c&gt;</bpt>ShouldSerializeMyProperty<ept id="p1">&lt;/c&gt;</ept> method, it invokes it.</source>
          <target state="translated">Si cette méthode trouve un <bpt id="p1">&lt;c&gt;</bpt>ShouldSerializeMyProperty<ept id="p1">&lt;/c&gt;</ept> (méthode), elle l’appelle.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> or a <bpt id="p1">&lt;c&gt;</bpt>ShouldSerializeMyProperty<ept id="p1">&lt;/c&gt;</ept> method, it cannot create optimizations and it returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Si cette méthode ne peut pas trouver un <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> ou un <bpt id="p1">&lt;c&gt;</bpt>ShouldSerializeMyProperty<ept id="p1">&lt;/c&gt;</ept> (méthode), elle ne peut pas créer d’optimisation et retourne <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>