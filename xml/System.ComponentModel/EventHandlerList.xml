<Type Name="EventHandlerList" FullName="System.ComponentModel.EventHandlerList">
  <TypeSignature Language="C#" Value="public sealed class EventHandlerList : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventHandlerList extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.EventHandlerList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventHandlerList&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventHandlerList sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0f4a2-101">Fournit une simple liste de délégués.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-101">Provides a simple list of delegates.</span></span> <span data-ttu-id="0f4a2-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f4a2-103">Cette classe utilise un algorithme de recherche linéaire pour rechercher des entrées dans la liste de délégués.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-103">This class uses a linear search algorithm to find entries in the list of delegates.</span></span> <span data-ttu-id="0f4a2-104">Un algorithme de recherche linéaire est inefficace lorsque vous travaillez avec un grand nombre d’entrées.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-104">A linear search algorithm is inefficient when working with a large number of entries.</span></span> <span data-ttu-id="0f4a2-105">Par conséquent, lorsque vous avez une grande liste, rechercher des entrées est lente.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-105">Therefore, when you have a large list, finding entries is slow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f4a2-106">Pour obtenir un exemple d’utilisation une <xref:System.ComponentModel.EventHandlerList>, consultez [Comment : gérer plusieurs événements à l’aide de propriétés de l’événement](~/docs/standard/events/how-to-handle-multiple-events-using-event-properties.md).</span><span class="sxs-lookup"><span data-stu-id="0f4a2-106">For an example of using an <xref:System.ComponentModel.EventHandlerList>, see [How to: Handle Multiple Events Using Event Properties](~/docs/standard/events/how-to-handle-multiple-events-using-event-properties.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHandlerList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventHandlerList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f4a2-107">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EventHandlerList" />.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-107">Initializes a new instance of the <see cref="T:System.ComponentModel.EventHandlerList" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (object key, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(object key, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHandler (key As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Object ^ key, Delegate ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0f4a2-108">Objet propriétaire de l'événement.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-108">The object that owns the event.</span></span></param>
        <param name="value"><span data-ttu-id="0f4a2-109">Délégué à ajouter à la liste.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-109">The delegate to add to the list.</span></span></param>
        <summary><span data-ttu-id="0f4a2-110">Ajoute un délégué à la liste.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-110">Adds a delegate to the list.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandlers">
      <MemberSignature Language="C#" Value="public void AddHandlers (System.ComponentModel.EventHandlerList listToAddFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandlers(class System.ComponentModel.EventHandlerList listToAddFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHandlers (listToAddFrom As EventHandlerList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandlers(System::ComponentModel::EventHandlerList ^ listToAddFrom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listToAddFrom" Type="System.ComponentModel.EventHandlerList" />
      </Parameters>
      <Docs>
        <param name="listToAddFrom"><span data-ttu-id="0f4a2-111">Liste à ajouter.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-111">The list to add.</span></span></param>
        <summary><span data-ttu-id="0f4a2-112">Ajoute une liste de délégués à la liste actuelle.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-112">Adds a list of delegates to the current list.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f4a2-113">Supprime la liste de délégués.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-113">Disposes the delegate list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f4a2-114">Appelez la méthode <xref:System.ComponentModel.EventHandlerList.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.ComponentModel.EventHandlerList>.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-114">Call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> when you are finished using the <xref:System.ComponentModel.EventHandlerList>.</span></span> <span data-ttu-id="0f4a2-115">La méthode <xref:System.ComponentModel.EventHandlerList.Dispose%2A> rend le <xref:System.ComponentModel.EventHandlerList> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-115">The <xref:System.ComponentModel.EventHandlerList.Dispose%2A> method leaves the <xref:System.ComponentModel.EventHandlerList> in an unusable state.</span></span> <span data-ttu-id="0f4a2-116">Après avoir appelé <xref:System.ComponentModel.EventHandlerList.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.ComponentModel.EventHandlerList> afin que la mémoire occupée puisse être récupérée par le garbage collection.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-116">After calling <xref:System.ComponentModel.EventHandlerList.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.EventHandlerList> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f4a2-117">Appelez toujours <xref:System.ComponentModel.EventHandlerList.Dispose%2A> avant de libérer votre dernière référence à <xref:System.ComponentModel.EventHandlerList>.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-117">Always call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.EventHandlerList>.</span></span> <span data-ttu-id="0f4a2-118">Dans le cas contraire, les ressources du <xref:System.ComponentModel.EventHandlerList> est à l’aide n’est pas libérée tant que le garbage collection du <xref:System.ComponentModel.EventHandlerList> destructeur de l’objet.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-118">Otherwise, the resources the <xref:System.ComponentModel.EventHandlerList> is using will not be freed until garbage collection calls the <xref:System.ComponentModel.EventHandlerList> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Delegate this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventHandlerList.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As Object) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Delegate ^ default[System::Object ^] { Delegate ^ get(System::Object ^ key); void set(System::Object ^ key, Delegate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0f4a2-119">Objet à rechercher dans la liste.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-119">An object to find in the list.</span></span></param>
        <summary><span data-ttu-id="0f4a2-120">Obtient ou définit le délégué de l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-120">Gets or sets the delegate for the specified object.</span></span></summary>
        <value><span data-ttu-id="0f4a2-121">Délégué de la clé spécifiée, ou <see langword="null" /> s'il n'existe aucun délégué.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-121">The delegate for the specified key, or <see langword="null" /> if a delegate does not exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f4a2-122">Lorsque la clé est introuvable dans la liste et vous fournissez un délégué pour définir la valeur de la clé, puis la clé est ajoutée en haut de la liste et assignée au délégué en tant que sa valeur.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-122">When the key is not found in the list and you provide a delegate to set the value of the key, then the key is added to the top of the list and assigned to the delegate as its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventHandlerList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (object key, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHandler(object key, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHandler (key As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHandler(System::Object ^ key, Delegate ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0f4a2-123">Objet propriétaire de l'événement.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-123">The object that owns the event.</span></span></param>
        <param name="value"><span data-ttu-id="0f4a2-124">Délégué à supprimer de la liste.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-124">The delegate to remove from the list.</span></span></param>
        <summary><span data-ttu-id="0f4a2-125">Supprime un délégué de la liste.</span><span class="sxs-lookup"><span data-stu-id="0f4a2-125">Removes a delegate from the list.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>