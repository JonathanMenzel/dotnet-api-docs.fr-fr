<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29784c7bb8db50596e86f55caea973624c84e3d4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380653" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0c714-101">Propose un procédé unifié pour convertir les types de valeurs en d'autres types, ainsi que pour accéder aux valeurs et sous-propriétés standard.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c714-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-102">Le type de convertisseur le plus courant est celui qui convertit vers et depuis une représentation sous forme de texte.</span><span class="sxs-lookup"><span data-stu-id="0c714-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="0c714-103">Le convertisseur de type pour une classe est lié à la classe avec un <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0c714-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="0c714-104">Sauf si cet attribut est remplacé, toutes les classes qui héritent de cette classe utilisent le même convertisseur de type comme classe de base.</span><span class="sxs-lookup"><span data-stu-id="0c714-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c714-105">Pour le système de type général, n’accédez pas un convertisseur de type directement.</span><span class="sxs-lookup"><span data-stu-id="0c714-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="0c714-106">Au lieu de cela, accédez au convertisseur approprié à l’aide de <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0c714-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="0c714-107">Pour plus d’informations, consultez les exemples de code fournis.</span><span class="sxs-lookup"><span data-stu-id="0c714-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="0c714-108">**Remarque** pour XAML, un processeur XAML recherche le <xref:System.ComponentModel.TypeConverterAttribute> directement, au lieu de passer par <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0c714-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="0c714-109">Pour les cas où vous voulez un <xref:System.ComponentModel.TypeDescriptor> de l’instance à partir du code ou où vous créez une instance partagée dans WPF ressources, il est possible de construire directement sans référencer <xref:System.ComponentModel.TypeDescriptor> ou un autre système de réflexion et le type prend en charge.</span><span class="sxs-lookup"><span data-stu-id="0c714-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="0c714-110">Les classes dérivées de <xref:System.ComponentModel.TypeConverter> sont souvent référencés dans le cadre de la façon dont un processeur XAML convertit une valeur de texte d’attribut ou d’initialisation à partir du balisage (qui est fondamentalement une chaîne) et génère un objet pour une représentation de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="0c714-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="0c714-111">Les auteurs de type personnalisé qui projettent pour prendre en charge un comportement de conversion de type pour XAML généralement implémente un <xref:System.ComponentModel.TypeConverter> classe qui prend en charge leur propre unique `ConvertFrom` comportement à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="0c714-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="0c714-112">Ce comportement permet la conversion de type de la chaîne fournie comme une valeur d’attribut XAML et fournit un processeur XAML avec la prise en charge nécessaire pour créer un objet à partir de la chaîne, afin que l’objet peut être générée dans un graphique d’objet analysé.</span><span class="sxs-lookup"><span data-stu-id="0c714-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="0c714-113">Types personnalisés ou les membres de types personnalisés sont indiqués en appliquant <xref:System.ComponentModel.TypeConverterAttribute> aux définitions, avec l’attribut de référence personnalisé <xref:System.ComponentModel.TypeConverter> implémentation.</span><span class="sxs-lookup"><span data-stu-id="0c714-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="0c714-114">Pour plus d’informations, consultez [des convertisseurs de Type pour XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="0c714-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c714-115">L’exemple de code suivant montre comment créer une instance d’un convertisseur de type et la lier à une classe.</span><span class="sxs-lookup"><span data-stu-id="0c714-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="0c714-116">La classe qui implémente le convertisseur, `MyClassConverter`, doit hériter de la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="0c714-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0c714-117">Lorsque vous avez une propriété qui a une énumération, vérifiez si une valeur d’énumération est valide avant de définir la propriété.</span><span class="sxs-lookup"><span data-stu-id="0c714-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="0c714-118">L’exemple de code suivant nécessite qu’une énumération appelée `MyPropertyEnum` a été déclaré.</span><span class="sxs-lookup"><span data-stu-id="0c714-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="0c714-119">Une autre utilisation de convertisseur de type commun est pour convertir un objet en une chaîne.</span><span class="sxs-lookup"><span data-stu-id="0c714-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="0c714-120">L’exemple de code suivant imprime le nom de la <xref:System.Drawing.Color> stocké dans la variable `c`.</span><span class="sxs-lookup"><span data-stu-id="0c714-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="0c714-121">Vous pouvez également utiliser un convertisseur de type pour convertir une valeur à partir de son nom, comme indiqué dans l’exemple de code suivant.</span><span class="sxs-lookup"><span data-stu-id="0c714-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="0c714-122">Dans l’exemple de code suivant, vous pouvez utiliser un convertisseur de type pour imprimer l’ensemble de valeurs standards qui prend en charge de l’objet.</span><span class="sxs-lookup"><span data-stu-id="0c714-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="0c714-123">Hériter de <see cref="T:System.ComponentModel.TypeConverter" /> pour implémenter vos propres exigences de conversion.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0c714-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span>
        </span>
        <span data-ttu-id="0c714-124">Lorsque vous héritez de cette classe, vous pouvez substituer les méthodes suivantes :</span>
        <span class="sxs-lookup">
          <span data-stu-id="0c714-124">When you inherit from this class, you can override the following methods:</span>
        </span>  
  
-   <span data-ttu-id="0c714-125">Pour prendre en charge la conversion de type personnalisé, vous devez remplacer le <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, et <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> méthodes.</span><span class="sxs-lookup"><span data-stu-id="0c714-125">To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span></span>  
  
-   <span data-ttu-id="0c714-126">Pour convertir des types qui doivent recréer l’objet pour modifier sa valeur, substituez le <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> et <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> méthodes.</span><span class="sxs-lookup"><span data-stu-id="0c714-126">To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span></span>  
  
-   <span data-ttu-id="0c714-127">Pour convertir des types qui prennent en charge les propriétés, substituez le <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> et <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> méthodes.</span><span class="sxs-lookup"><span data-stu-id="0c714-127">To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span></span><span data-ttu-id="0c714-128">Si la classe que vous convertissez n’a pas de propriétés et vous devez implémenter des propriétés, vous pouvez utiliser la <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> classe comme base pour l’implémentation des descripteurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="0c714-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span><span data-ttu-id="0c714-129">Lorsque vous héritez de <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, vous devez substituer la <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> et <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> méthodes.</span><span class="sxs-lookup"><span data-stu-id="0c714-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
-   <span data-ttu-id="0c714-130">Pour convertir des types qui prennent en charge les valeurs standard, substituez le <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> et <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> méthodes.</span><span class="sxs-lookup"><span data-stu-id="0c714-130">To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span></span><block subset="none" type="note"><para><span data-ttu-id="0c714-131">Votre type dérivé peut être marqué en tant que <see langword="internal" /> ou <see langword="private" />, mais une instance de votre type peut être créée avec la <see cref="T:System.ComponentModel.TypeDescriptor" /> classe.</span><span class="sxs-lookup"><span data-stu-id="0c714-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span><span data-ttu-id="0c714-132">Ne pas écrire de code non sécurisé en supposant que l’appelant est approuvé.</span><span class="sxs-lookup"><span data-stu-id="0c714-132">Do not write insecure code by assuming the caller is trusted.</span></span><span data-ttu-id="0c714-133">Au lieu de cela, supposons que les appelants peuvent créer des instances de votre type en confiance partielle.</span><span class="sxs-lookup"><span data-stu-id="0c714-133">Assume instead that callers might create instances of your type in partial trust.</span></span></para></block><span data-ttu-id="0c714-134">Pour plus d’informations sur les convertisseurs de type pour général (non XAML), consultez [Comment : implémenter un convertisseur de Type](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) ou [Conversion de Type généralisée](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span><span class="sxs-lookup"><span data-stu-id="0c714-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) or [Generalized Type Conversion](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c714-135">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-135">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-136">Retourne une valeur indiquant si ce convertisseur peut convertir un objet d'un type en objet du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-136">Returns whether this converter can convert an object of one type to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="0c714-137">
            <see cref="T:System.Type" /> qui représente le type à partir duquel opérer la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-137">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-138">Retourne une valeur indiquant si ce convertisseur peut convertir un objet du type donné en objet du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-138">Returns whether this converter can convert an object of the given type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-139">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-139">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-140">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="0c714-140">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="0c714-141">Elle ne retourne jamais `true`.</span><span class="sxs-lookup"><span data-stu-id="0c714-141">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-142">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-142">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="0c714-143">
            <see cref="T:System.Type" /> qui représente le type à partir duquel opérer la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-143">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-144">Retourne une valeur indiquant si ce convertisseur peut convertir un objet du type donné en objet du type de ce convertisseur à l’aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-144">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-145">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-145">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-146">Tel qu’implémenté dans cette classe, cette méthode retourne `false`, sauf si `sourceType` est un <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0c714-146">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-147">Substituez cette méthode pour fournir vos propres exigences de conversion.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-147">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="0c714-148">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-148">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="0c714-149">Ce paramètre peut être <see langword="null" />, toujours vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-149">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="0c714-150">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-150">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-151">Retourne une valeur indiquant si ce convertisseur peut convertir l'objet en objet du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-151">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType">
          <span data-ttu-id="0c714-152">
            <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-152">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-153">Retourne une valeur indiquant si ce convertisseur peut convertir l'objet en objet du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-153">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-154">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-154">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-155">Si `destinationType` est une chaîne, l’implémentation par défaut de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="0c714-155">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-156">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-156">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="0c714-157">
            <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-157">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-158">Retourne une valeur indiquant si ce convertisseur peut convertir l’objet en objet du type spécifié, à l’aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-158">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-159">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-159">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-160">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-160">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="0c714-161">Ce paramètre peut être `null`, toujours vérifier.</span><span class="sxs-lookup"><span data-stu-id="0c714-161">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="0c714-162">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-162">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="0c714-163">Si `destinationType` est une chaîne, l’implémentation par défaut de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="0c714-163">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-164">Substituez cette méthode pour fournir vos propres exigences de conversion.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-164">Override this method to provide your own conversion requirements.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-165">Convertit la valeur donnée en valeur du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-165">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0c714-166">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-166">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-167">Convertit la valeur donnée en valeur du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-167">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-168">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-168">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-169">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-169">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-170">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-170">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="0c714-171">
            <see cref="T:System.Globalization.CultureInfo" /> à utiliser comme culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-171">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0c714-172">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-172">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-173">Convertit l’objet donné dans le type de ce convertisseur en utilisant les informations de contexte et de culture spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-173">Converts the given object to the type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-174">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-174">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-175">Les auteurs de type personnalisé qui projettent pour prendre en charge un comportement de conversion de type pour XAML généralement implémente un <xref:System.ComponentModel.TypeConverter> classe qui prend en charge <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportement à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="0c714-175">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="0c714-176">Ce comportement permet la conversion de type de la chaîne fournie comme une valeur d’attribut XAML et fournit un processeur XAML avec la prise en charge nécessaire pour créer un objet à partir de la chaîne, afin que l’objet peut être générée dans un graphique d’objet analysé.</span><span class="sxs-lookup"><span data-stu-id="0c714-176">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="0c714-177">Types personnalisés ou les membres de types personnalisés sont indiqués en appliquant <xref:System.ComponentModel.TypeConverterAttribute> aux définitions, avec l’attribut de référence personnalisé <xref:System.ComponentModel.TypeConverter> implémentation.</span><span class="sxs-lookup"><span data-stu-id="0c714-177">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="0c714-178">Pour XAML, vous ne fournissez généralement pas les implémentations de création de branche basées sur `culture`.</span><span class="sxs-lookup"><span data-stu-id="0c714-178">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="0c714-179">Il s’agit, car le XAML est précompilé dans un contexte d’environnement de développement, et les informations spécifiques à la culture pour le runtime XAML n’est pas pertinente pour la conversion de type XAML.</span><span class="sxs-lookup"><span data-stu-id="0c714-179">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="0c714-180">Pour plus d’informations, consultez [des convertisseurs de Type pour XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="0c714-180">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-181">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-181">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-182">Substituez cette méthode pour fournir vos propres exigences de conversion.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-182">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="0c714-183">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-183">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="0c714-184">Ce paramètre peut être <see langword="null" />, toujours vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-184">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="0c714-185">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-185">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="0c714-186">Pour les modèles d’implémentation de convertisseurs de type qui sont utilisés pour prendre en charge des types XAML et personnalisés, consultez [des convertisseurs de Type pour XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-186">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-187">Convertit la valeur en valeur du type de ce convertisseur, à l'aide de la culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-187">Converts the value to a type of this converter, using the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="0c714-188">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-188">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-189">Convertit la chaîne donnée en représentation sous forme de chaîne du type de ce convertisseur, à l'aide de la culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-189">Converts the given string to the type of this converter, using the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-190">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-190">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-191">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-191">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-192">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-192">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-193">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-193">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="0c714-194">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-194">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-195">Convertit la chaîne donnée au type de ce convertisseur, à l'aide des informations de culture indifférente et du contexte spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-195">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-196">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-196">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-197">Une exception est levée si la chaîne ne peut pas être convertie en l’objet approprié.</span><span class="sxs-lookup"><span data-stu-id="0c714-197">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="0c714-198">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-198">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="0c714-199">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-199">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="0c714-200">Ce paramètre peut être `null`, toujours vérifier.</span><span class="sxs-lookup"><span data-stu-id="0c714-200">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="0c714-201">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-201">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-202">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-202">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-203">Convertit le texte spécifié en objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-203">Converts the specified text to an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="0c714-204">Représentation textuelle de l'objet à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-204">The text representation of the object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-205">Convertit le texte spécifié en objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-205">Converts the specified text to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-206">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-206">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-207">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-207">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c714-208">Pour obtenir un exemple de cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="0c714-208">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-209">Impossible de convertir la chaîne vers l'objet approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-209">The string cannot be converted into the appropriate object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-210">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-210">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="0c714-211">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-211">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-212">Convertit le texte donné en objet, à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-212">Converts the given text to an object, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-213">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-213">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-214">Une exception est levée si la chaîne ne peut pas être convertie en l’objet approprié.</span><span class="sxs-lookup"><span data-stu-id="0c714-214">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="0c714-215">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-215">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="0c714-216">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-216">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="0c714-217">Ce paramètre peut être `null`, toujours vérifier.</span><span class="sxs-lookup"><span data-stu-id="0c714-217">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="0c714-218">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-218">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-219">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-219">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-220">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-220">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="0c714-221">
            <see cref="T:System.Globalization.CultureInfo" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-221">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="0c714-222">Si la valeur <see langword="null" /> est passée, la culture est supposée être la culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-222">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="0c714-223">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-223">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-224">Convertit le texte donné en objet, à l'aide du contexte et des informations de culture spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-224">Converts the given text to an object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-225">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-225">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-226">Une exception est levée si la chaîne ne peut pas être convertie en l’objet approprié.</span><span class="sxs-lookup"><span data-stu-id="0c714-226">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="0c714-227">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-227">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="0c714-228">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-228">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="0c714-229">Ce paramètre peut être `null`, toujours vérifier.</span><span class="sxs-lookup"><span data-stu-id="0c714-229">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="0c714-230">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-230">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-231">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-231">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-232">Convertit l'objet de valeur donné en objet du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-232">Converts the given value object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0c714-233">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-233">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="0c714-234">
            <see cref="T:System.Type" /> vers lequel le paramètre <c>value</c> doit être converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-234">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-235">Convertit l'objet de valeur donné en objet du type spécifié, à l'aide des arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-235">Converts the given value object to the specified type, using the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-236">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-236">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-237">Le type à convertir vers et depuis le plus courant est un objet chaîne.</span><span class="sxs-lookup"><span data-stu-id="0c714-237">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="0c714-238">Cette implémentation appelle <xref:System.Object.ToString%2A> sur l’objet, si l’objet est valide et si le type de destination est une chaîne.</span><span class="sxs-lookup"><span data-stu-id="0c714-238">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c714-239">Le paramètre <paramref name="destinationType" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-239">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-240">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-240">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-241">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-241">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="0c714-242">
            <see cref="T:System.Globalization.CultureInfo" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-242">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="0c714-243">Si la valeur <see langword="null" /> est passée, la culture est supposée être la culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-243">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0c714-244">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-244">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="0c714-245">
            <see cref="T:System.Type" /> vers lequel le paramètre <c>value</c> doit être converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-245">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-246">Convertit l’objet de valeur donné en type spécifié, en utilisant les informations de contexte et de culture spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-246">Converts the given value object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-247">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-247">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-248">Les conversions de type les plus courantes consistent à effectuer une conversion vers un objet chaîne et à partir de celui-ci.</span><span class="sxs-lookup"><span data-stu-id="0c714-248">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="0c714-249">Cette implémentation appelle <xref:System.Object.ToString%2A> sur l’objet si l’objet est valide et si le type de destination est une chaîne.</span><span class="sxs-lookup"><span data-stu-id="0c714-249">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="0c714-250">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-250">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="0c714-251">Ce paramètre peut être `null`, toujours vérifier.</span><span class="sxs-lookup"><span data-stu-id="0c714-251">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="0c714-252">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-252">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="0c714-253">Les auteurs de type personnalisé qui projettent pour prendre en charge un comportement de conversion de type pour XAML généralement implémente un <xref:System.ComponentModel.TypeConverter> classe qui prend en charge <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportement à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="0c714-253">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="0c714-254">Ces convertisseurs de type peuvent également implémenter <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> pour prendre en charge la sérialisation en XAML.</span><span class="sxs-lookup"><span data-stu-id="0c714-254">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="0c714-255">Certains scénarios de sérialisation XAML ne peut pas être traités correctement avec <xref:System.ComponentModel.TypeConverter> uniquement.</span><span class="sxs-lookup"><span data-stu-id="0c714-255">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="0c714-256">Dans ces cas, il peut être nécessaire de définir également une <xref:System.Windows.Markup.ValueSerializer> qui gère les cas de sérialisation qui seraient sinon gérés par <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c714-256">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="0c714-257">Pour plus d'informations, consultez <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="0c714-257">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c714-258">Le paramètre <paramref name="destinationType" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-258">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-259">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-259">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-260">Substituez cette méthode pour fournir vos propres exigences de conversion.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-260">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="0c714-261">Pour les modèles d’implémentation de convertisseurs de type qui sont utilisés pour prendre en charge des types XAML et personnalisés, consultez [des convertisseurs de Type pour XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-261">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-262">Convertit la valeur spécifiée en représentation sous forme de chaîne de culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-262">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0c714-263">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-263">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-264">Convertit la valeur spécifiée en représentation sous forme de chaîne de culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-264">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-265">
            <see cref="T:System.String" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-265">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-266">Le `context` paramètre peut être utilisé pour extraire des informations supplémentaires sur l’environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-266">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="0c714-267">Vérifiez toujours, car la valeur peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-267">This can be `null`, so always check.</span></span> <span data-ttu-id="0c714-268">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-268">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="0c714-269">Selon l’implémentation du module de formatage de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="0c714-269">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-270">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-270">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-271">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-271">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0c714-272">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-272">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-273">Convertit la valeur spécifiée en représentation sous forme de chaîne de culture dite indifférente, à l'aide du contexte déterminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-273">Converts the specified value to a culture-invariant string representation, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-274">
            <see cref="T:System.String" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-274">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-275">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-275">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="0c714-276">Ce paramètre peut être `null`, toujours vérifier.</span><span class="sxs-lookup"><span data-stu-id="0c714-276">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="0c714-277">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-277">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="0c714-278">Selon l’implémentation du module de formatage de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="0c714-278">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-279">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-279">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-280">Convertit la valeur spécifiée en représentation sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-280">Converts the specified value to a string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0c714-281">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-281">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-282">Convertit la valeur spécifiée en représentation sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-282">Converts the specified value to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-283">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-283">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-284">Selon l’implémentation du module de formatage de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="0c714-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c714-285">Pour obtenir un exemple de cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="0c714-285">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-286">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-286">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-287">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-287">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0c714-288">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-288">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-289">Convertit la valeur donnée en représentation sous forme de chaîne, à l'aide du contexte déterminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-289">Converts the given value to a string representation, using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-290">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-290">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-291">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-291">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="0c714-292">Ce paramètre peut être `null`, toujours vérifier.</span><span class="sxs-lookup"><span data-stu-id="0c714-292">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="0c714-293">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-293">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="0c714-294">Selon l’implémentation du module de formatage de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="0c714-294">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-295">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-295">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-296">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-296">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="0c714-297">
            <see cref="T:System.Globalization.CultureInfo" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-297">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="0c714-298">Si la valeur <see langword="null" /> est passée, la culture est supposée être la culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-298">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0c714-299">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-299">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-300">Convertit la valeur donnée en représentation sous forme de chaîne, à l'aide du contexte et des informations de culture spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-300">Converts the given value to a string representation, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-301">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-301">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-302">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-302">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="0c714-303">Ce paramètre peut être `null`, toujours vérifier.</span><span class="sxs-lookup"><span data-stu-id="0c714-303">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="0c714-304">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-304">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="0c714-305">Selon l’implémentation du module de formatage de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="0c714-305">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-306">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-306">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-307">Recrée un <see cref="T:System.Object" /> en fonction d'un jeu de valeurs de propriétés de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-307">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues">
          <span data-ttu-id="0c714-308">
            <see cref="T:System.Collections.IDictionary" /> représentant un dictionnaire de nouvelles valeurs de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-308">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-309">Recrée un <see cref="T:System.Object" /> en fonction d'un jeu de valeurs de propriétés de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-309">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-310">
            <see cref="T:System.Object" /> représentant le <see cref="T:System.Collections.IDictionary" /> donné, ou <see langword="null" /> si l’objet ne peut pas être créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-310">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="0c714-311">Cette méthode retourne toujours la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-311">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-312">Utilisez cette méthode pour les objets qui sont immuables, mais pour lequel vous souhaitez fournir des propriétés modifiables.</span><span class="sxs-lookup"><span data-stu-id="0c714-312">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="0c714-313">Le dictionnaire fourni par le `propertyValues` paramètre possède une série de paires nom/valeur, une pour chaque propriété retournée par <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c714-313">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-314">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-314">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="0c714-315">
            <see cref="T:System.Collections.IDictionary" /> de nouvelles valeurs de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-315">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-316">Crée une instance du type auquel ce <see cref="T:System.ComponentModel.TypeConverter" /> est associé, en utilisant le contexte spécifié, en fonction d’un ensemble de valeurs de propriétés de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-316">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-317">
            <see cref="T:System.Object" /> représentant le <see cref="T:System.Collections.IDictionary" /> donné, ou <see langword="null" /> si l’objet ne peut pas être créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-317">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="0c714-318">Cette méthode retourne toujours la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-318">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-319">Utilisez cette méthode pour les objets qui sont immuables, mais pour lequel vous souhaitez fournir des propriétés modifiables.</span><span class="sxs-lookup"><span data-stu-id="0c714-319">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-320">Substituez cette méthode si le type que vous souhaitez convertir doit recréer l’objet pour modifier sa valeur.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-320">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="0c714-321">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-321">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="0c714-322">Ce paramètre peut être <see langword="null" />, toujours vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-322">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="0c714-323">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-323">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="0c714-324">Le dictionnaire fourni par le <paramref name="propertyValues" /> paramètre possède une série de paires nom/valeur, une pour chaque propriété retournée par <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-324">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0c714-325">
            <see cref="T:System.Object" /> à convertir, ou <see langword="null" /> si l'objet n'est pas disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-325">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-326">Retourne une exception à lever quand une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-326">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-327">
            <see cref="T:System.Exception" /> représentant l'exception à lever lorsqu'une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-327">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-328">Automatiquement levée par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-328">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0c714-329">
            <see cref="T:System.Object" /> à convertir, ou <see langword="null" /> si l'objet n'est pas disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-329">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="0c714-330">
            <see cref="T:System.Type" /> représentant le type vers lequel la conversion tentait de s'effectuer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-330">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-331">Retourne une exception à lever quand une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-331">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-332">
            <see cref="T:System.Exception" /> représentant l'exception à lever lorsqu'une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-332">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c714-333">Automatiquement levée par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-333">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-334">Retourne une valeur indiquant si la modification d'une valeur de cet objet nécessite un appel à la méthode <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour créer une nouvelle valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-334">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c714-335">Retourne une valeur indiquant si la modification d'une valeur de cet objet nécessite un appel à la méthode <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour créer une nouvelle valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-335">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-336">
            <see langword="true" /> si la modification d'une propriété de cet objet requiert l'appel de <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour la création d'une nouvelle valeur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-336">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-337">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-337">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-338">Retourne une valeur indiquant si la modification d'une valeur de cet objet nécessite l'appel à <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour la création d'une nouvelle valeur, à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-338">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-339">
            <see langword="true" /> si la modification d'une propriété de cet objet requiert l'appel de <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour la création d'une nouvelle valeur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-339">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-340">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="0c714-340">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-341">Substituez cette méthode si le type que vous souhaitez convertir doit recréer l’objet pour modifier sa valeur.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-341">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="0c714-342">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-342">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="0c714-343">Ce paramètre peut être <see langword="null" />, toujours vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-343">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="0c714-344">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-344">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-345">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-345">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0c714-346">
            <see cref="T:System.Object" /> qui spécifie le type de tableau pour lequel obtenir des propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-346">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-347">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-347">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-348">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés exposées pour ce type de données, ou <see langword="null" /> en l'absence de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-348">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-349">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-349">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="0c714-350">Par défaut, un type ne retourne pas de propriétés.</span><span class="sxs-lookup"><span data-stu-id="0c714-350">By default, a type does not return properties.</span></span> <span data-ttu-id="0c714-351">Une implémentation simple de cette méthode peut appeler <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> pour le type de données correct.</span><span class="sxs-lookup"><span data-stu-id="0c714-351">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-352">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-352">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0c714-353">
            <see cref="T:System.Object" /> qui spécifie le type de tableau pour lequel obtenir des propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-353">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-354">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur, à l'aide du contexte déterminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-354">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-355">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés exposées pour ce type de données, ou <see langword="null" /> en l'absence de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-355">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-356">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-356">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="0c714-357">Ce paramètre peut être `null`, toujours vérifier.</span><span class="sxs-lookup"><span data-stu-id="0c714-357">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="0c714-358">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-358">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="0c714-359">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-359">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="0c714-360">Par défaut, un type ne retourne pas de propriétés.</span><span class="sxs-lookup"><span data-stu-id="0c714-360">By default, a type does not return properties.</span></span> <span data-ttu-id="0c714-361">Une implémentation simple de cette méthode peut appeler <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> pour le type de données correct.</span><span class="sxs-lookup"><span data-stu-id="0c714-361">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-362">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-362">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0c714-363">
            <see cref="T:System.Object" /> qui spécifie le type de tableau pour lequel obtenir des propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-363">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="0c714-364">Tableau de type <see cref="T:System.Attribute" /> utilisé comme filtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-364">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-365">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur, à l’aide du contexte et des attributs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-365">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-366">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés exposées pour ce type de données, ou <see langword="null" /> en l'absence de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-366">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-367">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-367">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-368">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les propriétés.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-368">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="0c714-369">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-369">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="0c714-370">Ce paramètre peut être <see langword="null" />, toujours vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-370">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="0c714-371">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-371">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="0c714-372">Le tableau d’attributs est utilisé pour filtrer le tableau.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-372">The attributes array is used to filter the array.</span>
            </span>
            <span data-ttu-id="0c714-373">Les attributs peuvent avoir une combinaison de <see cref="T:System.Type" /> et <see cref="T:System.Attribute" /> objets.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-373">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span>
            </span>
            <span data-ttu-id="0c714-374">Le filtrage est défini par les règles suivantes :</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-374">Filtering is defined by the following rules:</span>
            </span>  
  
-   <span data-ttu-id="0c714-375">A <see cref="T:System.Type" /> est traité comme un caractère générique ; elle correspond à une propriété qui a le <see cref="T:System.Type" /> dans son ensemble d’attributs.</span><span class="sxs-lookup"><span data-stu-id="0c714-375">A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="0c714-376">Si une propriété n’a pas un <see cref="T:System.Attribute" /> de la même classe, la propriété n’est pas incluse dans le tableau retourné.</span><span class="sxs-lookup"><span data-stu-id="0c714-376">If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0c714-377">Si l’attribut est une instance de <see cref="T:System.Attribute" />, la propriété doit être une correspondance exacte ou il n’est pas inclus dans le tableau retourné.</span><span class="sxs-lookup"><span data-stu-id="0c714-377">If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="0c714-378">Si un <see cref="T:System.Attribute" /> instance est spécifiée et il s’agit de la propriété par défaut, il est inclus dans le tableau retourné, même s’il n’existe aucune instance de la <see cref="T:System.Attribute" /> dans la propriété.</span><span class="sxs-lookup"><span data-stu-id="0c714-378">If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-379">Retourne une valeur indiquant si l'objet prend en charge les propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-379">Returns whether this object supports properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c714-380">Retourne une valeur indiquant si l'objet prend en charge les propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-380">Returns whether this object supports properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-381">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> doit être appelé pour rechercher les propriétés de cet objet ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-381">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-382">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="0c714-382">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-383">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-383">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-384">Retourne une valeur qui indique si cet objet prend en charge les propriétés en utilisant le contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-384">Returns whether this object supports properties, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-385">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> doit être appelé pour rechercher les propriétés de cet objet ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-385">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-386">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="0c714-386">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-387">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les propriétés.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-387">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="0c714-388">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-388">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="0c714-389">Ce paramètre peut être <see langword="null" />, toujours vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-389">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="0c714-390">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-390">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-391">Retourne une collection de valeurs standard pour le type de données pour lequel ce convertisseur de type est conçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-391">Returns a collection of standard values for the data type this type converter is designed for.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c714-392">Retourne une collection de valeurs standard à partir du contexte par défaut du type de données pour lequel ce convertisseur de type est conçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-392">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-393">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> contenant un jeu standard de valeurs valides, ou <see langword="null" /> si le type de données ne prend pas en charge un jeu de valeurs standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-393">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-394">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-394">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-395">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-395">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span>
          </span>
          <span data-ttu-id="0c714-396">Ce paramètre ou les propriétés de ce paramètre peuvent être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-396">This parameter or properties of this parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-397">Retourne une collection de valeurs standard pour le type de données compatible avec ce convertisseur de type quand un contexte de format est fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-397">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-398">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> contenant un jeu standard de valeurs valides ou <see langword="null" /> si le type de données ne prend pas en charge un jeu standard de valeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-398">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-399">Tel qu’implémenté dans <xref:System.ComponentModel.TypeConverter>, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-399">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c714-400">Pour obtenir un exemple de cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="0c714-400">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-401">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-401">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-402">Retourne une valeur indiquant si la collection de valeurs standard retournée par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-402">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c714-403">Retourne une valeur indiquant si la collection de valeurs standard retournée par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-403">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-404">
            <see langword="true" /> si le <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> retourné par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exhaustive des valeurs possibles ; <see langword="false" /> si d'autres valeurs sont possibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-404">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-405">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="0c714-405">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="0c714-406">Si la liste est exclusive, comme dans un type de données énumération, aucune autre valeur n'est valide.</span><span class="sxs-lookup"><span data-stu-id="0c714-406">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="0c714-407">Si la liste n'est pas exclusive, d'autres valeurs valides peuvent exister, en plus de la liste de valeurs standard fournie par la méthode <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c714-407">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="0c714-408">Si les valeurs sont exclusives, la liste retournée par <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> ne doit pas permettre la modification de ces valeurs.</span><span class="sxs-lookup"><span data-stu-id="0c714-408">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-409">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-409">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-410">Retourne une valeur indiquant si la collection de valeurs standard retournée par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exclusive des valeurs possibles, à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-410">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-411">
            <see langword="true" /> si le <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> retourné par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exhaustive des valeurs possibles ; <see langword="false" /> si d'autres valeurs sont possibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-411">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-412">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="0c714-412">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="0c714-413">Si la liste est exclusive, comme dans un type de données énumération, aucune autre valeur n'est valide.</span><span class="sxs-lookup"><span data-stu-id="0c714-413">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="0c714-414">Si la liste n'est pas exclusive, d'autres valeurs valides peuvent exister, en plus de la liste de valeurs standard fournie par la méthode <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c714-414">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="0c714-415">Si les valeurs sont exclusives, la liste retournée par <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> ne doit pas permettre la modification de ces valeurs.</span><span class="sxs-lookup"><span data-stu-id="0c714-415">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-416">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-416">Override this method if the type you want to convert supports standard values.</span>
            </span>
            <span data-ttu-id="0c714-417">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-417">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="0c714-418">Ce paramètre peut être <see langword="null" />, toujours vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-418">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="0c714-419">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-419">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-420">Retourne une valeur indiquant si cet objet prend en charge un jeu standard de valeurs qui peuvent être sélectionnées dans une liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-420">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c714-421">Retourne une valeur indiquant si cet objet prend en charge un jeu standard de valeurs qui peuvent être sélectionnées dans une liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-421">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-422">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> doit être appelée pour rechercher un jeu commun de valeurs prises en charge par l'objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-422">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-423">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-423">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-424">Retourne une valeur indiquant si cet objet prend en charge un jeu de valeurs standard pouvant être sélectionnées dans une liste, à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-424">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-425">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> doit être appelée pour rechercher un jeu commun de valeurs prises en charge par l'objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-425">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-426">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="0c714-426">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="0c714-427">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-427">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="0c714-428">Ce paramètre peut être `null`, toujours vérifier.</span><span class="sxs-lookup"><span data-stu-id="0c714-428">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="0c714-429">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-429">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-430">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-430">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c714-431">Retourne une valeur indiquant si l'objet de valeur donné est valide pour ce type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-431">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0c714-432">Objet dont la validité doit être testée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-432">The object to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-433">Retourne une valeur indiquant si l'objet de valeur donné est valide pour ce type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-433">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-434">
            <see langword="true" /> si la valeur spécifiée est valide pour cet objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-434">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-435">À compter de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], le <xref:System.ComponentModel.TypeConverter.IsValid%2A> méthode intercepte les exceptions à partir de la <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> et <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="0c714-435">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="0c714-436">Si le type de valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> pour retourner `false`, ou si la valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> pour lever une exception, le <xref:System.ComponentModel.TypeConverter.IsValid%2A> méthode renvoie `false`.</span><span class="sxs-lookup"><span data-stu-id="0c714-436">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="0c714-437">Pour activer le comportement hérité, insérez les lignes suivantes dans le fichier de configuration de l’application, par exemple, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="0c714-437">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-438">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard pouvant être validée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-438">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="0c714-439">Le <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> méthode est utilisée pour valider une valeur dans le type plutôt que pour déterminer si <paramref name="value" /> peut être converti vers le type donné.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-439">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="0c714-440">Par exemple, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> peut être utilisé pour déterminer si une valeur donnée est valide pour un type d’énumération.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-440">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="0c714-441">Pour obtenir un exemple, consultez <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-441">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
            <span data-ttu-id="0c714-442">Vous pouvez écrire votre propre <c>WillConvertSucceed</c> méthode en encapsulant la <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> et <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> méthodes dans les blocs d’exception.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-442">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="0c714-443">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-443">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0c714-444">
            <see cref="T:System.Object" /> dont la validité doit être testée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-444">The <see cref="T:System.Object" /> to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-445">Indique par retour si l’objet de valeur donné est valide pour ce type et pour le contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-445">Returns whether the given value object is valid for this type and for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-446">
            <see langword="true" /> si la valeur spécifiée est valide pour cet objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-446">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-447">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="0c714-447">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="0c714-448">Ce paramètre peut être `null`, toujours vérifier.</span><span class="sxs-lookup"><span data-stu-id="0c714-448">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="0c714-449">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="0c714-449">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="0c714-450">À compter de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], le <xref:System.ComponentModel.TypeConverter.IsValid%2A> méthode intercepte les exceptions à partir de la <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> et <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="0c714-450">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="0c714-451">Si le type de valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> pour retourner `false`, ou si la valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> pour lever une exception, le <xref:System.ComponentModel.TypeConverter.IsValid%2A> méthode renvoie `false`.</span><span class="sxs-lookup"><span data-stu-id="0c714-451">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="0c714-452">Pour activer le comportement hérité, insérez les lignes suivantes dans le fichier de configuration de l’application, par exemple, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="0c714-452">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0c714-453">Pour obtenir un exemple de cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="0c714-453">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c714-454">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard pouvant être validée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-454">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="0c714-455">Le <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> méthode est utilisée pour valider une valeur dans le type plutôt que pour déterminer si <paramref name="value" /> peut être converti vers le type donné.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-455">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="0c714-456">Par exemple, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> peut être utilisé pour déterminer si une valeur donnée est valide pour un type d’énumération.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-456">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="0c714-457">Pour obtenir un exemple, consultez <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c714-457">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props">
          <span data-ttu-id="0c714-458">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-458">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="0c714-459">Tableau de noms triés dans l'ordre dans lequel les propriétés doivent apparaître dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-459">An array of names in the order you want the properties to appear in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c714-460">Trie une collection de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-460">Sorts a collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c714-461">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui contient les propriétés triées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c714-461">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c714-462">Toutes les propriétés qui ne sont pas déjà dans le tableau de noms dans la collection sont ajoutées par ordre alphabétique à la fin.</span><span class="sxs-lookup"><span data-stu-id="0c714-462">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="0c714-463">Si le `names` paramètre est un tableau vide ou `null`, toutes les propriétés de la collection sont triées par ordre alphabétique.</span><span class="sxs-lookup"><span data-stu-id="0c714-463">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>