<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="809b51f24bfbdc7fbecb465b25929a15b9e606e2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39817341" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="58134-101">Propose un procédé unifié pour convertir les types de valeurs en d'autres types, ainsi que pour accéder aux valeurs et sous-propriétés standard.</span>
      <span class="sxs-lookup">
        <span data-stu-id="58134-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-102">Le type de convertisseur le plus courant est celui qui convertit vers et à partir d’une représentation sous forme de texte.</span><span class="sxs-lookup"><span data-stu-id="58134-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="58134-103">Le convertisseur de type pour une classe est lié à la classe avec un <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="58134-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="58134-104">Sauf si cet attribut est substitué, toutes les classes qui héritent de cette classe utilisent le même convertisseur de type comme classe de base.</span><span class="sxs-lookup"><span data-stu-id="58134-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58134-105">Pour le système de type général, n’accédez pas un convertisseur de type directement.</span><span class="sxs-lookup"><span data-stu-id="58134-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="58134-106">Au lieu de cela, accédez au convertisseur approprié à l’aide de <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="58134-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="58134-107">Pour plus d’informations, consultez les exemples de code fournis.</span><span class="sxs-lookup"><span data-stu-id="58134-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="58134-108">**Remarque** à des fins de XAML, un processeur XAML recherche le <xref:System.ComponentModel.TypeConverterAttribute> directement, sans passer par <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="58134-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="58134-109">Pour les cas où vous voulez un <xref:System.ComponentModel.TypeDescriptor> d’instance à partir du code, ou dans lequel vous créez une instance partagée dans WPF ressources, il est acceptable de la construire directement sans référencer <xref:System.ComponentModel.TypeDescriptor> ou un autre système de réflexion et le type prend en charge.</span><span class="sxs-lookup"><span data-stu-id="58134-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="58134-110">Les classes dérivées de <xref:System.ComponentModel.TypeConverter> sont souvent référencés dans le cadre de la façon dont un processeur XAML convertit une valeur de texte d’attribut ou de l’initialisation à partir du balisage (qui est fondamentalement une chaîne) et génère un objet pour une représentation de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="58134-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="58134-111">Les auteurs de type personnalisé qui projettent pour prendre en charge un comportement de conversion de type pour XAML généralement implémente un <xref:System.ComponentModel.TypeConverter> classe qui prend en charge leur propre unique `ConvertFrom` comportement à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="58134-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="58134-112">Ce comportement permet la conversion de type de la chaîne fournie comme une valeur d’attribut XAML et fournit un processeur XAML avec la prise en charge nécessaire pour créer un objet à partir de la chaîne, afin que l’objet peut être produit dans un graphique d’objet analysé.</span><span class="sxs-lookup"><span data-stu-id="58134-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="58134-113">Types personnalisés ou les membres de types personnalisés sont indiqués en appliquant <xref:System.ComponentModel.TypeConverterAttribute> aux définitions, avec l’attribut référençant personnalisé <xref:System.ComponentModel.TypeConverter> implémentation.</span><span class="sxs-lookup"><span data-stu-id="58134-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="58134-114">Pour plus d’informations, consultez [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="58134-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58134-115">L’exemple de code suivant montre comment créer une instance d’un convertisseur de type et la lier à une classe.</span><span class="sxs-lookup"><span data-stu-id="58134-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="58134-116">La classe qui implémente le convertisseur, `MyClassConverter`, doit hériter de la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="58134-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="58134-117">Lorsque vous avez une propriété qui possède une énumération, vérifiez si une valeur d’énumération est valide avant de définir la propriété.</span><span class="sxs-lookup"><span data-stu-id="58134-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="58134-118">L’exemple de code suivant nécessite qu’une énumération appelée `MyPropertyEnum` a été déclaré.</span><span class="sxs-lookup"><span data-stu-id="58134-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="58134-119">Une autre utilisation de convertisseur de type courante consiste à convertir un objet en une chaîne.</span><span class="sxs-lookup"><span data-stu-id="58134-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="58134-120">L’exemple de code suivant imprime le nom de la <xref:System.Drawing.Color> stocké dans la variable `c`.</span><span class="sxs-lookup"><span data-stu-id="58134-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="58134-121">Vous pouvez également utiliser un convertisseur de type pour convertir une valeur à partir de son nom, comme indiqué dans l’exemple de code suivant.</span><span class="sxs-lookup"><span data-stu-id="58134-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="58134-122">Dans l’exemple de code suivant, vous pouvez utiliser un convertisseur de type pour imprimer l’ensemble de valeurs standards qui prend en charge de l’objet.</span><span class="sxs-lookup"><span data-stu-id="58134-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="58134-123">
        <para>Hériter <see cref="T:System.ComponentModel.TypeConverter" /> pour implémenter vos propres exigences de conversion. Lorsque vous héritez de cette classe, vous pouvez substituer les méthodes suivantes : - pour prendre en charge la conversion de type personnalisé, substituez le <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, et <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> méthodes.  -Pour convertir des types qui doivent recréer l’objet pour modifier sa valeur, substituez le <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> et <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> méthodes.  -Pour convertir des types qui prennent en charge des propriétés, remplacez la <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> et <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> méthodes. Si la classe que vous convertissez n’a pas de propriétés et vous devez implémenter des propriétés, vous pouvez utiliser la <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> classe comme base pour implémenter les descripteurs de propriété. Lorsque vous héritez de <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, vous devez substituer la <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> et <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> méthodes.  -Pour convertir des types qui prennent en charge les valeurs standard, substituez le <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> et <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> méthodes.  <block subset="none" type="note"><para> Votre type dérivé peut être marqué en tant que <see langword="internal" /> ou <see langword="private" />, mais une instance de votre type peut être créée avec la <see cref="T:System.ComponentModel.TypeDescriptor" /> classe. Ne pas écrire de code non sécurisé en supposant que l’appelant est approuvé. Supposez plutôt que les appelants peuvent créer des instances de votre type en confiance partielle.  </para></block>  Pour plus d’informations sur les convertisseurs de type usage général (non XAML), consultez [Comment : implémenter un convertisseur de Type](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) ou [Conversion de Type généralisée](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="58134-123">
          <para>Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements. When you inherit from this class, you can override the following methods:  -   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.  -   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.  -   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods. If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors. When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.  -   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.  <block subset="none" type="note"><para> Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class. Do not write insecure code by assuming the caller is trusted. Assume instead that callers might create instances of your type in partial trust.  </para></block>  For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) or [Generalized Type Conversion](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58134-124">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-124">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-125">Retourne une valeur indiquant si ce convertisseur peut convertir un objet d'un type en objet du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-125">Returns whether this converter can convert an object of one type to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertFrom : Type -&gt; bool" Usage="typeConverter.CanConvertFrom sourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="58134-126">
            <see cref="T:System.Type" /> qui représente le type à partir duquel opérer la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-126">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-127">Retourne une valeur indiquant si ce convertisseur peut convertir un objet du type donné en objet du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-127">Returns whether this converter can convert an object of the given type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-128">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-128">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-129">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="58134-129">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="58134-130">Elle ne retourne jamais `true`.</span><span class="sxs-lookup"><span data-stu-id="58134-130">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-131">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-131">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="58134-132">
            <see cref="T:System.Type" /> qui représente le type à partir duquel opérer la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-132">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-133">Retourne une valeur indiquant si ce convertisseur peut convertir un objet du type donné en objet du type de ce convertisseur à l’aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-133">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-134">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-134">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-135">Tel qu’implémenté dans cette classe, cette méthode retourne `false`, sauf si `sourceType` est un <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="58134-135">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-136">
            <para>Substituez cette méthode pour fournir vos propres exigences de conversion.  Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />, donc toujours le vérifier. En outre, les propriétés de l’objet de contexte peuvent retourner <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-136">
              <para>Override this method to provide your own conversion requirements.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-137">Retourne une valeur indiquant si ce convertisseur peut convertir l'objet en objet du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-137">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertTo : Type -&gt; bool" Usage="typeConverter.CanConvertTo destinationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType">
          <span data-ttu-id="58134-138">
            <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-138">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-139">Retourne une valeur indiquant si ce convertisseur peut convertir l'objet en objet du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-139">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-140">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-140">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-141">Si `destinationType` est une chaîne, l’implémentation par défaut de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="58134-141">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-142">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-142">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="58134-143">
            <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-143">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-144">Retourne une valeur indiquant si ce convertisseur peut convertir l’objet en objet du type spécifié, à l’aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-144">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-145">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-145">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-146">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-146">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="58134-147">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="58134-147">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="58134-148">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-148">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="58134-149">Si `destinationType` est une chaîne, l’implémentation par défaut de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="58134-149">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-150">
            <para>Substituez cette méthode pour fournir vos propres exigences de conversion.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-150">
              <para>Override this method to provide your own conversion requirements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-151">Convertit la valeur donnée en valeur du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-151">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertFrom : obj -&gt; obj" Usage="typeConverter.ConvertFrom value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="58134-152">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-152">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-153">Convertit la valeur donnée en valeur du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-153">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-154">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-154">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-155">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-155">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-156">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-156">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="58134-157">
            <see cref="T:System.Globalization.CultureInfo" /> à utiliser comme culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-157">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="58134-158">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-158">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-159">Convertit l’objet donné dans le type de ce convertisseur en utilisant les informations de contexte et de culture spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-159">Converts the given object to the type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-160">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-160">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-161">Les auteurs de type personnalisé qui projettent pour prendre en charge un comportement de conversion de type pour XAML généralement implémente un <xref:System.ComponentModel.TypeConverter> classe qui prend en charge <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportement à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="58134-161">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="58134-162">Ce comportement permet la conversion de type de la chaîne fournie comme une valeur d’attribut XAML et fournit un processeur XAML avec la prise en charge nécessaire pour créer un objet à partir de la chaîne, afin que l’objet peut être produit dans un graphique d’objet analysé.</span><span class="sxs-lookup"><span data-stu-id="58134-162">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="58134-163">Types personnalisés ou les membres de types personnalisés sont indiqués en appliquant <xref:System.ComponentModel.TypeConverterAttribute> aux définitions, avec l’attribut référençant personnalisé <xref:System.ComponentModel.TypeConverter> implémentation.</span><span class="sxs-lookup"><span data-stu-id="58134-163">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="58134-164">À des fins de XAML, vous ne fournissez pas généralement branches implémentations basées sur `culture`.</span><span class="sxs-lookup"><span data-stu-id="58134-164">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="58134-165">Il s’agit, car XAML est précompilé dans un contexte d’environnement de développement et les informations spécifiques à la culture pour le runtime XAML n’est pas pertinente pour la conversion de type XAML.</span><span class="sxs-lookup"><span data-stu-id="58134-165">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="58134-166">Pour plus d’informations, consultez [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="58134-166">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-167">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-167">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-168">
            <para>Substituez cette méthode pour fournir vos propres exigences de conversion.  Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />, donc toujours le vérifier. En outre, les propriétés de l’objet de contexte peuvent retourner <see langword="null" />.  Pour les modèles d’implémentation pour les convertisseurs de type qui sont utilisés pour prendre en charge de XAML et les types personnalisés, consultez [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-168">
              <para>Override this method to provide your own conversion requirements.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.  For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-169">Convertit la valeur en valeur du type de ce convertisseur, à l'aide de la culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-169">Converts the value to a type of this converter, using the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="58134-170">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-170">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-171">Convertit la chaîne donnée en représentation sous forme de chaîne du type de ce convertisseur, à l'aide de la culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-171">Converts the given string to the type of this converter, using the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-172">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-172">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-173">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-173">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-174">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-174">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-175">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-175">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="58134-176">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-176">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-177">Convertit la chaîne donnée au type de ce convertisseur, à l'aide des informations de culture indifférente et du contexte spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-177">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-178">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-178">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-179">Une exception est levée si la chaîne ne peut pas être convertie vers l’objet approprié.</span><span class="sxs-lookup"><span data-stu-id="58134-179">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="58134-180">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-180">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="58134-181">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-181">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="58134-182">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="58134-182">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="58134-183">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-183">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-184">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-184">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-185">Convertit le texte spécifié en objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-185">Converts the specified text to an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : string -&gt; obj" Usage="typeConverter.ConvertFromString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="58134-186">Représentation textuelle de l'objet à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-186">The text representation of the object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-187">Convertit le texte spécifié en objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-187">Converts the specified text to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-188">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-188">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-189">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-189">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58134-190">Pour obtenir un exemple de cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="58134-190">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-191">Impossible de convertir la chaîne vers l'objet approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-191">The string cannot be converted into the appropriate object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-192">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-192">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="58134-193">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-193">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-194">Convertit le texte donné en objet, à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-194">Converts the given text to an object, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-195">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-195">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-196">Une exception est levée si la chaîne ne peut pas être convertie vers l’objet approprié.</span><span class="sxs-lookup"><span data-stu-id="58134-196">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="58134-197">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-197">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="58134-198">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-198">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="58134-199">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="58134-199">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="58134-200">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-200">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-201">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-201">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, culture, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-202">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-202">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="58134-203">
            <see cref="T:System.Globalization.CultureInfo" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-203">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="58134-204">Si la valeur <see langword="null" /> est passée, la culture est supposée être la culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-204">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="58134-205">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-205">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-206">Convertit le texte donné en objet, à l'aide du contexte et des informations de culture spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-206">Converts the given text to an object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-207">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-207">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-208">Une exception est levée si la chaîne ne peut pas être convertie vers l’objet approprié.</span><span class="sxs-lookup"><span data-stu-id="58134-208">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="58134-209">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-209">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="58134-210">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-210">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="58134-211">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="58134-211">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="58134-212">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-212">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-213">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-213">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-214">Convertit l'objet de valeur donné en objet du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-214">Converts the given value object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.ConvertTo : obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="58134-215">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-215">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="58134-216">
            <see cref="T:System.Type" /> vers lequel le paramètre <c>value</c> doit être converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-216">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-217">Convertit l'objet de valeur donné en objet du type spécifié, à l'aide des arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-217">Converts the given value object to the specified type, using the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-218">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-218">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-219">Le type à convertir vers et depuis le plus courant est un objet de chaîne.</span><span class="sxs-lookup"><span data-stu-id="58134-219">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="58134-220">Cette implémentation appelle <xref:System.Object.ToString%2A> sur l’objet, si l’objet est valide et si le type de destination est une chaîne.</span><span class="sxs-lookup"><span data-stu-id="58134-220">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58134-221">Le paramètre <paramref name="destinationType" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-221">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-222">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-222">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-223">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-223">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="58134-224">
            <see cref="T:System.Globalization.CultureInfo" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-224">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="58134-225">Si la valeur <see langword="null" /> est passée, la culture est supposée être la culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-225">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="58134-226">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-226">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="58134-227">
            <see cref="T:System.Type" /> vers lequel le paramètre <c>value</c> doit être converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-227">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-228">Convertit l’objet de valeur donné en type spécifié, en utilisant les informations de contexte et de culture spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-228">Converts the given value object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-229">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-229">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-230">Les conversions de type les plus courantes consistent à effectuer une conversion vers un objet chaîne et à partir de celui-ci.</span><span class="sxs-lookup"><span data-stu-id="58134-230">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="58134-231">Cette implémentation appelle <xref:System.Object.ToString%2A> sur l’objet si l’objet est valide et si le type de destination est une chaîne.</span><span class="sxs-lookup"><span data-stu-id="58134-231">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="58134-232">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-232">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="58134-233">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="58134-233">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="58134-234">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-234">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="58134-235">Les auteurs de type personnalisé qui projettent pour prendre en charge un comportement de conversion de type pour XAML généralement implémente un <xref:System.ComponentModel.TypeConverter> classe qui prend en charge <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportement à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="58134-235">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="58134-236">Ces convertisseurs de type peuvent également implémenter <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> pour prendre en charge la sérialisation XAML.</span><span class="sxs-lookup"><span data-stu-id="58134-236">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="58134-237">Certains scénarios de sérialisation XAML ne peut pas être effectués correctement avec <xref:System.ComponentModel.TypeConverter> autonome.</span><span class="sxs-lookup"><span data-stu-id="58134-237">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="58134-238">Dans ce cas, il peut être nécessaire de définir également une <xref:System.Windows.Markup.ValueSerializer> qui gère les cas de sérialisation qui seraient sinon gérés par <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="58134-238">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="58134-239">Pour plus d'informations, consultez <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="58134-239">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58134-240">Le paramètre <paramref name="destinationType" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-240">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-241">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-241">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-242">
            <para>Substituez cette méthode pour fournir vos propres exigences de conversion.  Pour les modèles d’implémentation pour les convertisseurs de type qui sont utilisés pour prendre en charge de XAML et les types personnalisés, consultez [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-242">
              <para>Override this method to provide your own conversion requirements.  For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-243">Convertit la valeur spécifiée en représentation sous forme de chaîne de culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-243">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : obj -&gt; string" Usage="typeConverter.ConvertToInvariantString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="58134-244">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-244">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-245">Convertit la valeur spécifiée en représentation sous forme de chaîne de culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-245">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-246">
            <see cref="T:System.String" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-246">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-247">Le `context` paramètre peut être utilisé pour extraire des informations supplémentaires sur l’environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-247">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="58134-248">Vérifiez toujours, car la valeur peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-248">This can be `null`, so always check.</span></span> <span data-ttu-id="58134-249">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-249">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="58134-250">Selon l’implémentation du formateur de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="58134-250">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-251">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-251">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToInvariantString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-252">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-252">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="58134-253">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-253">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-254">Convertit la valeur spécifiée en représentation sous forme de chaîne de culture dite indifférente, à l'aide du contexte déterminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-254">Converts the specified value to a culture-invariant string representation, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-255">
            <see cref="T:System.String" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-255">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-256">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-256">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="58134-257">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="58134-257">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="58134-258">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-258">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="58134-259">Selon l’implémentation du formateur de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="58134-259">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-260">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-260">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-261">Convertit la valeur spécifiée en représentation sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-261">Converts the specified value to a string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : obj -&gt; string" Usage="typeConverter.ConvertToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="58134-262">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-262">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-263">Convertit la valeur spécifiée en représentation sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-263">Converts the specified value to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-264">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-264">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-265">Selon l’implémentation du formateur de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="58134-265">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58134-266">Pour obtenir un exemple sur cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="58134-266">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-267">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-267">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-268">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-268">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="58134-269">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-269">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-270">Convertit la valeur donnée en représentation sous forme de chaîne, à l'aide du contexte déterminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-270">Converts the given value to a string representation, using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-271">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-271">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-272">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-272">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="58134-273">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="58134-273">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="58134-274">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-274">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="58134-275">Selon l’implémentation du formateur de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="58134-275">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-276">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-276">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; string" Usage="typeConverter.ConvertToString (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-277">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-277">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="58134-278">
            <see cref="T:System.Globalization.CultureInfo" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-278">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="58134-279">Si la valeur <see langword="null" /> est passée, la culture est supposée être la culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-279">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="58134-280">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-280">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-281">Convertit la valeur donnée en représentation sous forme de chaîne, à l'aide du contexte et des informations de culture spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-281">Converts the given value to a string representation, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-282">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-282">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-283">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-283">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="58134-284">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="58134-284">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="58134-285">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-285">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="58134-286">Selon l’implémentation du formateur de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="58134-286">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-287">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-287">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-288">Recrée un <see cref="T:System.Object" /> en fonction d'un jeu de valeurs de propriétés de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-288">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance propertyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues">
          <span data-ttu-id="58134-289">
            <see cref="T:System.Collections.IDictionary" /> représentant un dictionnaire de nouvelles valeurs de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-289">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-290">Recrée un <see cref="T:System.Object" /> en fonction d'un jeu de valeurs de propriétés de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-290">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-291">
            <see cref="T:System.Object" /> représentant le <see cref="T:System.Collections.IDictionary" /> donné, ou <see langword="null" /> si l’objet ne peut pas être créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-291">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="58134-292">Cette méthode retourne toujours la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-292">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-293">Utilisez cette méthode pour les objets qui sont immuables, mais pour lequel vous souhaitez fournir des propriétés modifiables.</span><span class="sxs-lookup"><span data-stu-id="58134-293">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="58134-294">Le dictionnaire fourni par le `propertyValues` paramètre a une série de paires nom/valeur, une pour chaque propriété retournée par <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="58134-294">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj&#xA;override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-295">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-295">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="58134-296">
            <see cref="T:System.Collections.IDictionary" /> de nouvelles valeurs de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-296">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-297">Crée une instance du type auquel ce <see cref="T:System.ComponentModel.TypeConverter" /> est associé, en utilisant le contexte spécifié, en fonction d’un ensemble de valeurs de propriétés de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-297">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-298">
            <see cref="T:System.Object" /> représentant le <see cref="T:System.Collections.IDictionary" /> donné, ou <see langword="null" /> si l’objet ne peut pas être créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-298">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="58134-299">Cette méthode retourne toujours la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-299">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-300">Utilisez cette méthode pour les objets qui sont immuables, mais pour lequel vous souhaitez fournir des propriétés modifiables.</span><span class="sxs-lookup"><span data-stu-id="58134-300">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-301">
            <para>Substituez cette méthode si le type à convertir doit recréer l’objet pour modifier sa valeur.  Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />, donc toujours le vérifier. En outre, les propriétés de l’objet de contexte peuvent retourner <see langword="null" />.  Le dictionnaire fourni par le <paramref name="propertyValues" /> paramètre a une série de paires nom/valeur, une pour chaque propriété retournée par <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-301">
              <para>Override this method if the type you want to convert must re-create the object to change its value.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.  The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="typeConverter.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="58134-302">
            <see cref="T:System.Object" /> à convertir, ou <see langword="null" /> si l'objet n'est pas disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-302">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-303">Retourne une exception à lever quand une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-303">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-304">
            <see cref="T:System.Exception" /> représentant l'exception à lever lorsqu'une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-304">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-305">Automatiquement levée par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-305">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="typeConverter.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="58134-306">
            <see cref="T:System.Object" /> à convertir, ou <see langword="null" /> si l'objet n'est pas disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-306">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="58134-307">
            <see cref="T:System.Type" /> représentant le type vers lequel la conversion tentait de s'effectuer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-307">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-308">Retourne une exception à lever quand une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-308">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-309">
            <see cref="T:System.Exception" /> représentant l'exception à lever lorsqu'une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-309">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58134-310">Automatiquement levée par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-310">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-311">Retourne une valeur indiquant si la modification d'une valeur de cet objet nécessite un appel à la méthode <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour créer une nouvelle valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-311">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberSignature Language="F#" Value="member this.GetCreateInstanceSupported : unit -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58134-312">Retourne une valeur indiquant si la modification d'une valeur de cet objet nécessite un appel à la méthode <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour créer une nouvelle valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-312">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-313">
            <see langword="true" /> si la modification d'une propriété de cet objet requiert l'appel de <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour la création d'une nouvelle valeur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-313">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-314">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-314">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-315">Retourne une valeur indiquant si la modification d'une valeur de cet objet nécessite l'appel à <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour la création d'une nouvelle valeur, à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-315">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-316">
            <see langword="true" /> si la modification d'une propriété de cet objet requiert l'appel de <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour la création d'une nouvelle valeur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-316">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-317">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="58134-317">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-318">
            <para>Substituez cette méthode si le type à convertir doit recréer l’objet pour modifier sa valeur.  Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />, donc toujours le vérifier. En outre, les propriétés de l’objet de contexte peuvent retourner <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-318">
              <para>Override this method if the type you want to convert must re-create the object to change its value.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-319">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-319">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="58134-320">
            <see cref="T:System.Object" /> qui spécifie le type de tableau pour lequel obtenir des propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-320">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-321">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-321">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-322">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés exposées pour ce type de données, ou <see langword="null" /> en l'absence de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-322">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-323">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-323">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="58134-324">Par défaut, un type ne retourne pas de propriétés.</span><span class="sxs-lookup"><span data-stu-id="58134-324">By default, a type does not return properties.</span></span> <span data-ttu-id="58134-325">Une implémentation simple de cette méthode peut appeler <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> pour le type de données correct.</span><span class="sxs-lookup"><span data-stu-id="58134-325">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-326">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-326">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="58134-327">
            <see cref="T:System.Object" /> qui spécifie le type de tableau pour lequel obtenir des propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-327">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-328">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur, à l'aide du contexte déterminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-328">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-329">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés exposées pour ce type de données, ou <see langword="null" /> en l'absence de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-329">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-330">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-330">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="58134-331">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="58134-331">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="58134-332">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-332">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="58134-333">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-333">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="58134-334">Par défaut, un type ne retourne pas de propriétés.</span><span class="sxs-lookup"><span data-stu-id="58134-334">By default, a type does not return properties.</span></span> <span data-ttu-id="58134-335">Une implémentation simple de cette méthode peut appeler <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> pour le type de données correct.</span><span class="sxs-lookup"><span data-stu-id="58134-335">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-336">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-336">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="58134-337">
            <see cref="T:System.Object" /> qui spécifie le type de tableau pour lequel obtenir des propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-337">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="58134-338">Tableau de type <see cref="T:System.Attribute" /> utilisé comme filtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-338">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-339">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur, à l’aide du contexte et des attributs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-339">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-340">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés exposées pour ce type de données, ou <see langword="null" /> en l'absence de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-340">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-341">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-341">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-342">
            <para>Substituez cette méthode si le type que vous souhaitez convertir prend en charge les propriétés.  Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />, donc toujours le vérifier. En outre, les propriétés de l’objet de contexte peuvent retourner <see langword="null" />.  Le tableau d’attributs est utilisé pour filtrer le tableau. Les attributs peuvent comporter un mélange de <see cref="T:System.Type" /> et <see cref="T:System.Attribute" /> objets. Filtrage est défini par les règles suivantes : - un <see cref="T:System.Type" /> est traité comme un caractère générique ; il correspond à une propriété qui a le <see cref="T:System.Type" /> dans son ensemble d’attributs.  -Si une propriété n’a pas un <see cref="T:System.Attribute" /> de la même classe, la propriété n’est pas incluse dans le tableau retourné.  -Si l’attribut est une instance de <see cref="T:System.Attribute" />, la propriété doit être une correspondance exacte ou il n’est pas inclus dans le tableau retourné.  -If un <see cref="T:System.Attribute" /> instance est spécifiée et il est la propriété par défaut, il est inclus dans le tableau retourné, même s’il n’existe aucune instance de la <see cref="T:System.Attribute" /> dans la propriété.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-342">
              <para>Override this method if the type you want to convert supports properties.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.  The attributes array is used to filter the array. The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects. Filtering is defined by the following rules:  -   A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.  -   If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.  -   If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.  -   If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-343">Retourne une valeur indiquant si l'objet prend en charge les propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-343">Returns whether this object supports properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetPropertiesSupported : unit -&gt; bool" Usage="typeConverter.GetPropertiesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58134-344">Retourne une valeur indiquant si l'objet prend en charge les propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-344">Returns whether this object supports properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-345">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> doit être appelé pour rechercher les propriétés de cet objet ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-345">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-346">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="58134-346">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-347">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-347">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-348">Retourne une valeur qui indique si cet objet prend en charge les propriétés en utilisant le contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-348">Returns whether this object supports properties, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-349">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> doit être appelé pour rechercher les propriétés de cet objet ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-349">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-350">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="58134-350">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-351">
            <para>Substituez cette méthode si le type que vous souhaitez convertir prend en charge les propriétés.  Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />, donc toujours le vérifier. En outre, les propriétés de l’objet de contexte peuvent retourner <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-351">
              <para>Override this method if the type you want to convert supports properties.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-352">Retourne une collection de valeurs standard pour le type de données pour lequel ce convertisseur de type est conçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-352">Returns a collection of standard values for the data type this type converter is designed for.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValues : unit -&gt; System.Collections.ICollection" Usage="typeConverter.GetStandardValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58134-353">Retourne une collection de valeurs standard à partir du contexte par défaut du type de données pour lequel ce convertisseur de type est conçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-353">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-354">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> contenant un jeu standard de valeurs valides, ou <see langword="null" /> si le type de données ne prend pas en charge un jeu de valeurs standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-354">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-355">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-355">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-356">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-356">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span>
          </span>
          <span data-ttu-id="58134-357">Ce paramètre ou les propriétés de ce paramètre peuvent être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-357">This parameter or properties of this parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-358">Retourne une collection de valeurs standard pour le type de données compatible avec ce convertisseur de type quand un contexte de format est fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-358">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-359">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> contenant un jeu standard de valeurs valides ou <see langword="null" /> si le type de données ne prend pas en charge un jeu standard de valeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-359">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-360">Tel qu’implémenté dans <xref:System.ComponentModel.TypeConverter>, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-360">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58134-361">Pour obtenir un exemple sur cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="58134-361">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-362">
            <para>Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-362">
              <para>Override this method if the type you want to convert supports standard values.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-363">Retourne une valeur indiquant si la collection de valeurs standard retournée par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-363">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesExclusive : unit -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58134-364">Retourne une valeur indiquant si la collection de valeurs standard retournée par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-364">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-365">
            <see langword="true" /> si le <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> retourné par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exhaustive des valeurs possibles ; <see langword="false" /> si d'autres valeurs sont possibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-365">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-366">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="58134-366">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="58134-367">Si la liste est exclusive, comme dans un type de données énumération, aucune autre valeur n'est valide.</span><span class="sxs-lookup"><span data-stu-id="58134-367">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="58134-368">Si la liste n'est pas exclusive, d'autres valeurs valides peuvent exister, en plus de la liste de valeurs standard fournie par la méthode <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="58134-368">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="58134-369">Si les valeurs sont exclusives, la liste retournée par <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> ne doit pas permettre la modification de ces valeurs.</span><span class="sxs-lookup"><span data-stu-id="58134-369">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-370">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-370">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-371">Retourne une valeur indiquant si la collection de valeurs standard retournée par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exclusive des valeurs possibles, à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-371">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-372">
            <see langword="true" /> si le <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> retourné par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exhaustive des valeurs possibles ; <see langword="false" /> si d'autres valeurs sont possibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-372">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-373">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="58134-373">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="58134-374">Si la liste est exclusive, comme dans un type de données énumération, aucune autre valeur n'est valide.</span><span class="sxs-lookup"><span data-stu-id="58134-374">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="58134-375">Si la liste n'est pas exclusive, d'autres valeurs valides peuvent exister, en plus de la liste de valeurs standard fournie par la méthode <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="58134-375">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="58134-376">Si les valeurs sont exclusives, la liste retournée par <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> ne doit pas permettre la modification de ces valeurs.</span><span class="sxs-lookup"><span data-stu-id="58134-376">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-377">
            <para>Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard.  Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />, donc toujours le vérifier. En outre, les propriétés de l’objet de contexte peuvent retourner <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-377">
              <para>Override this method if the type you want to convert supports standard values.  Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <see langword="null" />, so always check it. Also, properties on the context object can return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-378">Retourne une valeur indiquant si cet objet prend en charge un jeu standard de valeurs qui peuvent être sélectionnées dans une liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-378">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesSupported : unit -&gt; bool" Usage="typeConverter.GetStandardValuesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58134-379">Retourne une valeur indiquant si cet objet prend en charge un jeu standard de valeurs qui peuvent être sélectionnées dans une liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-379">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-380">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> doit être appelée pour rechercher un jeu commun de valeurs prises en charge par l'objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-380">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-381">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-381">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-382">Retourne une valeur indiquant si cet objet prend en charge un jeu de valeurs standard pouvant être sélectionnées dans une liste, à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-382">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-383">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> doit être appelée pour rechercher un jeu commun de valeurs prises en charge par l'objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-383">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-384">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="58134-384">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="58134-385">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-385">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="58134-386">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="58134-386">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="58134-387">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-387">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-388">
            <para>Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-388">
              <para>Override this method if the type you want to convert supports standard values.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58134-389">Retourne une valeur indiquant si l'objet de valeur donné est valide pour ce type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-389">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsValid : obj -&gt; bool" Usage="typeConverter.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="58134-390">Objet dont la validité doit être testée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-390">The object to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-391">Retourne une valeur indiquant si l'objet de valeur donné est valide pour ce type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-391">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-392">
            <see langword="true" /> si la valeur spécifiée est valide pour cet objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-392">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-393">À compter de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], le <xref:System.ComponentModel.TypeConverter.IsValid%2A> méthode intercepte les exceptions à partir de la <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> et <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="58134-393">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="58134-394">Si le type de valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> pour retourner `false`, ou si la valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> pour lever une exception, le <xref:System.ComponentModel.TypeConverter.IsValid%2A> retourne de la méthode `false`.</span><span class="sxs-lookup"><span data-stu-id="58134-394">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="58134-395">Pour activer le comportement hérité, insérez les lignes suivantes dans le fichier de configuration de l’application, par exemple, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="58134-395">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-396">
            <para>Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard qui peuvent être validés.  Le <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> méthode est utilisée pour valider une valeur dans le type plutôt que pour déterminer si <paramref name="value" /> peut être converti vers le type donné. Par exemple, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> peut être utilisé pour déterminer si une valeur donnée est valide pour un type d’énumération. Pour obtenir un exemple, consultez <see cref="T:System.ComponentModel.EnumConverter" />.  Vous pouvez écrire votre propre <c>WillConvertSucceed</c> méthode en encapsulant le <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> et <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> méthodes dans les blocs d’exception.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-396">
              <para>Override this method if the type you want to convert supports standard values that can be validated.  The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type. For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type. For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.  You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool&#xA;override this.IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool" Usage="typeConverter.IsValid (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="58134-397">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-397">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="58134-398">
            <see cref="T:System.Object" /> dont la validité doit être testée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-398">The <see cref="T:System.Object" /> to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-399">Indique par retour si l’objet de valeur donné est valide pour ce type et pour le contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-399">Returns whether the given value object is valid for this type and for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-400">
            <see langword="true" /> si la valeur spécifiée est valide pour cet objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-400">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-401">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="58134-401">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="58134-402">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="58134-402">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="58134-403">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="58134-403">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="58134-404">À compter de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], le <xref:System.ComponentModel.TypeConverter.IsValid%2A> méthode intercepte les exceptions à partir de la <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> et <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="58134-404">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="58134-405">Si le type de valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> pour retourner `false`, ou si la valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> pour lever une exception, le <xref:System.ComponentModel.TypeConverter.IsValid%2A> retourne de la méthode `false`.</span><span class="sxs-lookup"><span data-stu-id="58134-405">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="58134-406">Pour activer le comportement hérité, insérez les lignes suivantes dans le fichier de configuration de l’application, par exemple, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="58134-406">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="58134-407">Pour obtenir un exemple de cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="58134-407">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58134-408">
            <para>Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard qui peuvent être validés.  Le <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> méthode est utilisée pour valider une valeur dans le type plutôt que pour déterminer si <paramref name="value" /> peut être converti vers le type donné. Par exemple, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> peut être utilisé pour déterminer si une valeur donnée est valide pour un type d’énumération. Pour obtenir un exemple, consultez <see cref="T:System.ComponentModel.EnumConverter" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-408">
              <para>Override this method if the type you want to convert supports standard values that can be validated.  The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type. For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type. For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.SortProperties : System.ComponentModel.PropertyDescriptorCollection * string[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.SortProperties (props, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props">
          <span data-ttu-id="58134-409">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-409">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="58134-410">Tableau de noms triés dans l'ordre dans lequel les propriétés doivent apparaître dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-410">An array of names in the order you want the properties to appear in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58134-411">Trie une collection de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-411">Sorts a collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58134-412">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui contient les propriétés triées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58134-412">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58134-413">Toutes les propriétés qui ne sont pas déjà dans le tableau de noms dans la collection sont ajoutées par ordre alphabétique à la fin.</span><span class="sxs-lookup"><span data-stu-id="58134-413">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="58134-414">Si le `names` paramètre est un tableau vide ou `null`, toutes les propriétés dans la collection sont triées par ordre alphabétique.</span><span class="sxs-lookup"><span data-stu-id="58134-414">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>