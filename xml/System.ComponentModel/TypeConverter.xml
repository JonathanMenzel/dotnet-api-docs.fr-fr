<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23fa8a81e0239bcb3921e94c8dfedd4d5e641b65" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52604230" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5909d-101">Propose un procédé unifié pour convertir les types de valeurs en d'autres types, ainsi que pour accéder aux valeurs et sous-propriétés standard.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5909d-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-102">Le type de convertisseur le plus courant est celui qui convertit vers et à partir d’une représentation sous forme de texte.</span><span class="sxs-lookup"><span data-stu-id="5909d-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="5909d-103">Le convertisseur de type pour une classe est lié à la classe avec un <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="5909d-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="5909d-104">Sauf si cet attribut est substitué, toutes les classes qui héritent de cette classe utilisent le même convertisseur de type comme classe de base.</span><span class="sxs-lookup"><span data-stu-id="5909d-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5909d-105">Pour le système de type général, n’accédez pas un convertisseur de type directement.</span><span class="sxs-lookup"><span data-stu-id="5909d-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="5909d-106">Au lieu de cela, accédez au convertisseur approprié à l’aide de <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="5909d-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="5909d-107">Pour plus d’informations, consultez les exemples de code fournis.</span><span class="sxs-lookup"><span data-stu-id="5909d-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="5909d-108">**Remarque** à des fins de XAML, un processeur XAML recherche le <xref:System.ComponentModel.TypeConverterAttribute> directement, sans passer par <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="5909d-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="5909d-109">Pour les cas où vous voulez un <xref:System.ComponentModel.TypeDescriptor> d’instance à partir du code, ou dans lequel vous créez une instance partagée dans WPF ressources, il est acceptable de la construire directement sans référencer <xref:System.ComponentModel.TypeDescriptor> ou un autre système de réflexion et le type prend en charge.</span><span class="sxs-lookup"><span data-stu-id="5909d-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="5909d-110">Les classes dérivées de <xref:System.ComponentModel.TypeConverter> sont souvent référencés dans le cadre de la façon dont un processeur XAML convertit une valeur de texte d’attribut ou de l’initialisation à partir du balisage (qui est fondamentalement une chaîne) et génère un objet pour une représentation de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="5909d-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="5909d-111">Les auteurs de type personnalisé qui projettent pour prendre en charge un comportement de conversion de type pour XAML généralement implémente un <xref:System.ComponentModel.TypeConverter> classe qui prend en charge leur propre unique `ConvertFrom` comportement à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="5909d-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="5909d-112">Ce comportement permet la conversion de type de la chaîne fournie comme une valeur d’attribut XAML et fournit un processeur XAML avec la prise en charge nécessaire pour créer un objet à partir de la chaîne, afin que l’objet peut être produit dans un graphique d’objet analysé.</span><span class="sxs-lookup"><span data-stu-id="5909d-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="5909d-113">Types personnalisés ou les membres de types personnalisés sont indiqués en appliquant <xref:System.ComponentModel.TypeConverterAttribute> aux définitions, avec l’attribut référençant personnalisé <xref:System.ComponentModel.TypeConverter> implémentation.</span><span class="sxs-lookup"><span data-stu-id="5909d-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="5909d-114">Pour plus d’informations, consultez [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5909d-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5909d-115">L’exemple de code suivant montre comment créer une instance d’un convertisseur de type et la lier à une classe.</span><span class="sxs-lookup"><span data-stu-id="5909d-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="5909d-116">La classe qui implémente le convertisseur, `MyClassConverter`, doit hériter de la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="5909d-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="5909d-117">Lorsque vous avez une propriété qui possède une énumération, vérifiez si une valeur d’énumération est valide avant de définir la propriété.</span><span class="sxs-lookup"><span data-stu-id="5909d-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="5909d-118">L’exemple de code suivant nécessite qu’une énumération appelée `MyPropertyEnum` a été déclaré.</span><span class="sxs-lookup"><span data-stu-id="5909d-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="5909d-119">Une autre utilisation de convertisseur de type courante consiste à convertir un objet en une chaîne.</span><span class="sxs-lookup"><span data-stu-id="5909d-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="5909d-120">L’exemple de code suivant imprime le nom de la <xref:System.Drawing.Color> stocké dans la variable `c`.</span><span class="sxs-lookup"><span data-stu-id="5909d-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="5909d-121">Vous pouvez également utiliser un convertisseur de type pour convertir une valeur à partir de son nom, comme indiqué dans l’exemple de code suivant.</span><span class="sxs-lookup"><span data-stu-id="5909d-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="5909d-122">Dans l’exemple de code suivant, vous pouvez utiliser un convertisseur de type pour imprimer l’ensemble de valeurs standards qui prend en charge de l’objet.</span><span class="sxs-lookup"><span data-stu-id="5909d-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="5909d-123">Hériter <see cref="T:System.ComponentModel.TypeConverter" /> pour implémenter vos propres exigences de conversion.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5909d-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span>
        </span>
        <span data-ttu-id="5909d-124">Lorsque vous héritez de cette classe, vous pouvez substituer les méthodes suivantes :</span>
        <span class="sxs-lookup">
          <span data-stu-id="5909d-124">When you inherit from this class, you can override the following methods:</span>
        </span>
        <span data-ttu-id="5909d-125">-Pour prendre en charge la conversion de type personnalisé, substituez le <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, et <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> méthodes.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5909d-125">-   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span>
        </span>
        <span data-ttu-id="5909d-126">-Pour convertir des types qui doivent recréer l’objet pour modifier sa valeur, substituez le <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> et <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> méthodes.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5909d-126">-   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span>
        </span>
        <span data-ttu-id="5909d-127">-Pour convertir des types qui prennent en charge des propriétés, remplacez la <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> et <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> méthodes.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5909d-127">-   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span>
        </span>
        <span data-ttu-id="5909d-128">Si la classe que vous convertissez n’a pas de propriétés et vous devez implémenter des propriétés, vous pouvez utiliser la <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> classe comme base pour implémenter les descripteurs de propriété.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5909d-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span>
        </span>
        <span data-ttu-id="5909d-129">Lorsque vous héritez de <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, vous devez substituer la <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> et <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> méthodes.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5909d-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span>
        </span>
        <span data-ttu-id="5909d-130">-Pour convertir des types qui prennent en charge les valeurs standard, substituez le <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> et <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> méthodes.</span>
        <span class="sxs-lookup">
          <span data-stu-id="5909d-130">-   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span>
        </span>
        <block subset="none" type="note">
          <para>
            <span data-ttu-id="5909d-131">Votre type dérivé peut être marqué en tant que <see langword="internal" /> ou <see langword="private" />, mais une instance de votre type peut être créée avec la <see cref="T:System.ComponentModel.TypeDescriptor" /> classe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span>
            </span>
            <span data-ttu-id="5909d-132">Ne pas écrire de code non sécurisé en supposant que l’appelant est approuvé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-132">Do not write insecure code by assuming the caller is trusted.</span>
            </span>
            <span data-ttu-id="5909d-133">Supposez plutôt que les appelants peuvent créer des instances de votre type en confiance partielle.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-133">Assume instead that callers might create instances of your type in partial trust.</span>
            </span>
          </para>
        </block>
        <span data-ttu-id="5909d-134">Pour plus d’informations sur les convertisseurs de type usage général (non XAML), consultez [Comment : implémenter un convertisseur de Type](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) ou [Conversion de Type généralisée](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span>
        <span class="sxs-lookup">
          <span data-stu-id="5909d-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) or [Generalized Type Conversion](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
      <span data-ttu-id="5909d-135">Vue d'ensemble des convertisseurs de types pour XAML</span>
      <span class="sxs-lookup">
        <span data-stu-id="5909d-135">Type Converters for XAML Overview</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">
      <span data-ttu-id="5909d-136">Attributs CLR XAML pour les bibliothèques et Types personnalisés</span>
      <span class="sxs-lookup">
        <span data-stu-id="5909d-136">XAML-Related CLR Attributes For Custom Types and Libraries</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">
      <span data-ttu-id="5909d-137">Définition de types personnalisés pour une utilisation avec les services XAML .NET Framework</span>
      <span class="sxs-lookup">
        <span data-stu-id="5909d-137">Defining Custom Types for Use with .NET Framework XAML Services</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">
      <span data-ttu-id="5909d-138">Documentation conceptuelle des Services XAML du NET</span>
      <span class="sxs-lookup">
        <span data-stu-id="5909d-138">NET XAML Services Conceptual Documentation</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5909d-139">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-139">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-140">Retourne une valeur indiquant si ce convertisseur peut convertir un objet d'un type en objet du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-140">Returns whether this converter can convert an object of one type to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertFrom : Type -&gt; bool" Usage="typeConverter.CanConvertFrom sourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="5909d-141">
            <see cref="T:System.Type" /> qui représente le type à partir duquel opérer la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-141">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-142">Retourne une valeur indiquant si ce convertisseur peut convertir un objet du type donné en objet du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-142">Returns whether this converter can convert an object of the given type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-143">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-143">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-144">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="5909d-144">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="5909d-145">Elle ne retourne jamais `true`.</span><span class="sxs-lookup"><span data-stu-id="5909d-145">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-146">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-146">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="5909d-147">
            <see cref="T:System.Type" /> qui représente le type à partir duquel opérer la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-147">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-148">Retourne une valeur indiquant si ce convertisseur peut convertir un objet du type donné en objet du type de ce convertisseur à l’aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-148">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-149">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-149">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-150">Tel qu’implémenté dans cette classe, cette méthode retourne `false`, sauf si `sourceType` est un <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="5909d-150">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-151">Substituez cette méthode pour fournir vos propres exigences de conversion.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-151">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="5909d-152">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-152">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="5909d-153">Ce paramètre peut être <see langword="null" />, donc toujours le vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-153">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="5909d-154">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-154">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-155">Retourne une valeur indiquant si ce convertisseur peut convertir l'objet en objet du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-155">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertTo : Type -&gt; bool" Usage="typeConverter.CanConvertTo destinationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType">
          <span data-ttu-id="5909d-156">
            <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-156">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-157">Retourne une valeur indiquant si ce convertisseur peut convertir l'objet en objet du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-157">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-158">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-158">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-159">Si `destinationType` est une chaîne, l’implémentation par défaut de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="5909d-159">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-160">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-160">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="5909d-161">
            <see cref="T:System.Type" /> qui représente le type vers lequel vous souhaitez convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-161">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-162">Retourne une valeur indiquant si ce convertisseur peut convertir l’objet en objet du type spécifié, à l’aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-162">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-163">
            <see langword="true" /> si ce convertisseur peut effectuer la conversion ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-163">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-164">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-164">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5909d-165">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="5909d-165">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5909d-166">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-166">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5909d-167">Si `destinationType` est une chaîne, l’implémentation par défaut de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="5909d-167">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-168">Substituez cette méthode pour fournir vos propres exigences de conversion.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-168">Override this method to provide your own conversion requirements.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-169">Convertit la valeur donnée en valeur du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-169">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertFrom : obj -&gt; obj" Usage="typeConverter.ConvertFrom value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5909d-170">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-170">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-171">Convertit la valeur donnée en valeur du type de ce convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-171">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-172">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-172">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-173">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-173">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-174">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-174">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="5909d-175">
            <see cref="T:System.Globalization.CultureInfo" /> à utiliser comme culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-175">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5909d-176">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-176">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-177">Convertit l’objet donné dans le type de ce convertisseur en utilisant les informations de contexte et de culture spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-177">Converts the given object to the type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-178">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-178">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-179">Les auteurs de type personnalisé qui projettent pour prendre en charge un comportement de conversion de type pour XAML généralement implémente un <xref:System.ComponentModel.TypeConverter> classe qui prend en charge <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportement à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="5909d-179">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="5909d-180">Ce comportement permet la conversion de type de la chaîne fournie comme une valeur d’attribut XAML et fournit un processeur XAML avec la prise en charge nécessaire pour créer un objet à partir de la chaîne, afin que l’objet peut être produit dans un graphique d’objet analysé.</span><span class="sxs-lookup"><span data-stu-id="5909d-180">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="5909d-181">Types personnalisés ou les membres de types personnalisés sont indiqués en appliquant <xref:System.ComponentModel.TypeConverterAttribute> aux définitions, avec l’attribut référençant personnalisé <xref:System.ComponentModel.TypeConverter> implémentation.</span><span class="sxs-lookup"><span data-stu-id="5909d-181">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="5909d-182">À des fins de XAML, vous ne fournissez pas généralement branches implémentations basées sur `culture`.</span><span class="sxs-lookup"><span data-stu-id="5909d-182">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="5909d-183">Il s’agit, car XAML est précompilé dans un contexte d’environnement de développement et les informations spécifiques à la culture pour le runtime XAML n’est pas pertinente pour la conversion de type XAML.</span><span class="sxs-lookup"><span data-stu-id="5909d-183">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="5909d-184">Pour plus d’informations, consultez [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5909d-184">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-185">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-185">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-186">Substituez cette méthode pour fournir vos propres exigences de conversion.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-186">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="5909d-187">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-187">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="5909d-188">Ce paramètre peut être <see langword="null" />, donc toujours le vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-188">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="5909d-189">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-189">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="5909d-190">Pour les modèles d’implémentation pour les convertisseurs de type qui sont utilisés pour prendre en charge de XAML et les types personnalisés, consultez [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-190">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
          <span data-ttu-id="5909d-191">Vue d'ensemble des convertisseurs de types pour XAML</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-191">Type Converters for XAML Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-192">Convertit la valeur en valeur du type de ce convertisseur, à l'aide de la culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-192">Converts the value to a type of this converter, using the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="5909d-193">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-193">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-194">Convertit la chaîne donnée en représentation sous forme de chaîne du type de ce convertisseur, à l'aide de la culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-194">Converts the given string to the type of this converter, using the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-195">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-195">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-196">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-196">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-197">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-197">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-198">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-198">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="5909d-199">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-199">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-200">Convertit la chaîne donnée au type de ce convertisseur, à l'aide des informations de culture indifférente et du contexte spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-200">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-201">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-201">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-202">Une exception est levée si la chaîne ne peut pas être convertie vers l’objet approprié.</span><span class="sxs-lookup"><span data-stu-id="5909d-202">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="5909d-203">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-203">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="5909d-204">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-204">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5909d-205">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="5909d-205">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5909d-206">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-206">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-207">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-207">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-208">Convertit le texte spécifié en objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-208">Converts the specified text to an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : string -&gt; obj" Usage="typeConverter.ConvertFromString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="5909d-209">Représentation textuelle de l'objet à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-209">The text representation of the object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-210">Convertit le texte spécifié en objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-210">Converts the specified text to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-211">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-211">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-212">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-212">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5909d-213">Pour obtenir un exemple de cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="5909d-213">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-214">Impossible de convertir la chaîne vers l'objet approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-214">The string cannot be converted into the appropriate object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-215">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-215">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="5909d-216">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-216">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-217">Convertit le texte donné en objet, à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-217">Converts the given text to an object, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-218">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-218">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-219">Une exception est levée si la chaîne ne peut pas être convertie vers l’objet approprié.</span><span class="sxs-lookup"><span data-stu-id="5909d-219">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="5909d-220">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-220">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="5909d-221">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-221">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5909d-222">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="5909d-222">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5909d-223">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-223">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-224">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-224">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, culture, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-225">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-225">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="5909d-226">
            <see cref="T:System.Globalization.CultureInfo" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-226">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="5909d-227">Si la valeur <see langword="null" /> est passée, la culture est supposée être la culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-227">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="5909d-228">
            <see cref="T:System.String" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-228">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-229">Convertit le texte donné en objet, à l'aide du contexte et des informations de culture spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-229">Converts the given text to an object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-230">
            <see cref="T:System.Object" /> représentant le texte converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-230">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-231">Une exception est levée si la chaîne ne peut pas être convertie vers l’objet approprié.</span><span class="sxs-lookup"><span data-stu-id="5909d-231">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="5909d-232">L'implémentation par défaut retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-232">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="5909d-233">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-233">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5909d-234">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="5909d-234">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5909d-235">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-235">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-236">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-236">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-237">Convertit l'objet de valeur donné en objet du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-237">Converts the given value object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.ConvertTo : obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5909d-238">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-238">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="5909d-239">
            <see cref="T:System.Type" /> auquel le paramètre <paramref name="value" /> doit être converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-239">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-240">Convertit l'objet de valeur donné en objet du type spécifié, à l'aide des arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-240">Converts the given value object to the specified type, using the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-241">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-241">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-242">Le type à convertir vers et depuis le plus courant est un objet de chaîne.</span><span class="sxs-lookup"><span data-stu-id="5909d-242">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="5909d-243">Cette implémentation appelle <xref:System.Object.ToString%2A> sur l’objet, si l’objet est valide et si le type de destination est une chaîne.</span><span class="sxs-lookup"><span data-stu-id="5909d-243">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5909d-244">Le paramètre <paramref name="destinationType" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-244">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-245">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-245">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-246">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-246">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="5909d-247">
            <see cref="T:System.Globalization.CultureInfo" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-247">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="5909d-248">Si la valeur <see langword="null" /> est passée, la culture est supposée être la culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-248">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5909d-249">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-249">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="5909d-250">
            <see cref="T:System.Type" /> auquel le paramètre <paramref name="value" /> doit être converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-250">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-251">Convertit l’objet de valeur donné en type spécifié, en utilisant les informations de contexte et de culture spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-251">Converts the given value object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-252">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-252">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-253">Les conversions de type les plus courantes consistent à effectuer une conversion vers un objet chaîne et à partir de celui-ci.</span><span class="sxs-lookup"><span data-stu-id="5909d-253">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="5909d-254">Cette implémentation appelle <xref:System.Object.ToString%2A> sur l’objet si l’objet est valide et si le type de destination est une chaîne.</span><span class="sxs-lookup"><span data-stu-id="5909d-254">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="5909d-255">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-255">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5909d-256">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="5909d-256">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5909d-257">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-257">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5909d-258">Les auteurs de type personnalisé qui projettent pour prendre en charge un comportement de conversion de type pour XAML généralement implémente un <xref:System.ComponentModel.TypeConverter> classe qui prend en charge <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportement à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="5909d-258">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="5909d-259">Ces convertisseurs de type peuvent également implémenter <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> pour prendre en charge la sérialisation XAML.</span><span class="sxs-lookup"><span data-stu-id="5909d-259">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="5909d-260">Certains scénarios de sérialisation XAML ne peut pas être effectués correctement avec <xref:System.ComponentModel.TypeConverter> autonome.</span><span class="sxs-lookup"><span data-stu-id="5909d-260">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="5909d-261">Dans ce cas, il peut être nécessaire de définir également une <xref:System.Windows.Markup.ValueSerializer> qui gère les cas de sérialisation qui seraient sinon gérés par <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="5909d-261">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="5909d-262">Pour plus d'informations, consultez <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="5909d-262">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5909d-263">Le paramètre <paramref name="destinationType" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-263">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-264">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-264">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-265">Substituez cette méthode pour fournir vos propres exigences de conversion.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-265">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="5909d-266">Pour les modèles d’implémentation pour les convertisseurs de type qui sont utilisés pour prendre en charge de XAML et les types personnalisés, consultez [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-266">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
          <span data-ttu-id="5909d-267">Vue d'ensemble des convertisseurs de types pour XAML</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-267">Type Converters for XAML Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-268">Convertit la valeur spécifiée en représentation sous forme de chaîne de culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-268">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : obj -&gt; string" Usage="typeConverter.ConvertToInvariantString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5909d-269">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-269">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-270">Convertit la valeur spécifiée en représentation sous forme de chaîne de culture dite indifférente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-270">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-271">
            <see cref="T:System.String" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-271">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-272">Le `context` paramètre peut être utilisé pour extraire des informations supplémentaires sur l’environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-272">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="5909d-273">Vérifiez toujours, car la valeur peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-273">This can be `null`, so always check.</span></span> <span data-ttu-id="5909d-274">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-274">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5909d-275">Selon l’implémentation du formateur de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="5909d-275">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-276">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-276">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToInvariantString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-277">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-277">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5909d-278">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-278">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-279">Convertit la valeur spécifiée en représentation sous forme de chaîne de culture dite indifférente, à l'aide du contexte déterminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-279">Converts the specified value to a culture-invariant string representation, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-280">
            <see cref="T:System.String" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-280">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-281">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-281">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5909d-282">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="5909d-282">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5909d-283">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-283">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5909d-284">Selon l’implémentation du formateur de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="5909d-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-285">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-285">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-286">Convertit la valeur spécifiée en représentation sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-286">Converts the specified value to a string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : obj -&gt; string" Usage="typeConverter.ConvertToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5909d-287">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-287">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-288">Convertit la valeur spécifiée en représentation sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-288">Converts the specified value to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-289">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-289">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-290">Selon l’implémentation du formateur de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="5909d-290">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5909d-291">Pour obtenir un exemple sur cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="5909d-291">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-292">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-292">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-293">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-293">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5909d-294">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-294">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-295">Convertit la valeur donnée en représentation sous forme de chaîne, à l'aide du contexte déterminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-295">Converts the given value to a string representation, using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-296">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-296">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-297">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-297">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5909d-298">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="5909d-298">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5909d-299">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-299">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5909d-300">Selon l’implémentation du formateur de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="5909d-300">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-301">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-301">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; string" Usage="typeConverter.ConvertToString (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-302">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-302">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="5909d-303">
            <see cref="T:System.Globalization.CultureInfo" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-303">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="5909d-304">Si la valeur <see langword="null" /> est passée, la culture est supposée être la culture actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-304">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5909d-305">
            <see cref="T:System.Object" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-305">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-306">Convertit la valeur donnée en représentation sous forme de chaîne, à l'aide du contexte et des informations de culture spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-306">Converts the given value to a string representation, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-307">
            <see cref="T:System.Object" /> qui représente la valeur convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-307">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-308">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-308">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5909d-309">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="5909d-309">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5909d-310">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-310">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5909d-311">Selon l’implémentation du formateur de valeur, il peut être possible de passer la chaîne retournée dans le formateur de valeur pour recréer une instance de l’objet.</span><span class="sxs-lookup"><span data-stu-id="5909d-311">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-312">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-312">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-313">Recrée un <see cref="T:System.Object" /> en fonction d'un jeu de valeurs de propriétés de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-313">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance propertyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues">
          <span data-ttu-id="5909d-314">
            <see cref="T:System.Collections.IDictionary" /> représentant un dictionnaire de nouvelles valeurs de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-314">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-315">Recrée un <see cref="T:System.Object" /> en fonction d'un jeu de valeurs de propriétés de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-315">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-316">
            <see cref="T:System.Object" /> représentant le <see cref="T:System.Collections.IDictionary" /> donné, ou <see langword="null" /> si l’objet ne peut pas être créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-316">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="5909d-317">Cette méthode retourne toujours la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-317">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-318">Utilisez cette méthode pour les objets qui sont immuables, mais pour lequel vous souhaitez fournir des propriétés modifiables.</span><span class="sxs-lookup"><span data-stu-id="5909d-318">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="5909d-319">Le dictionnaire fourni par le `propertyValues` paramètre a une série de paires nom/valeur, une pour chaque propriété retournée par <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="5909d-319">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj&#xA;override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-320">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-320">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="5909d-321">
            <see cref="T:System.Collections.IDictionary" /> de nouvelles valeurs de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-321">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-322">Crée une instance du type auquel ce <see cref="T:System.ComponentModel.TypeConverter" /> est associé, en utilisant le contexte spécifié, en fonction d’un ensemble de valeurs de propriétés de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-322">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-323">
            <see cref="T:System.Object" /> représentant le <see cref="T:System.Collections.IDictionary" /> donné, ou <see langword="null" /> si l’objet ne peut pas être créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-323">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="5909d-324">Cette méthode retourne toujours la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-324">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-325">Utilisez cette méthode pour les objets qui sont immuables, mais pour lequel vous souhaitez fournir des propriétés modifiables.</span><span class="sxs-lookup"><span data-stu-id="5909d-325">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-326">Substituez cette méthode si le type à convertir doit recréer l’objet pour modifier sa valeur.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-326">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="5909d-327">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-327">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="5909d-328">Ce paramètre peut être <see langword="null" />, donc toujours le vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-328">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="5909d-329">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-329">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="5909d-330">Le dictionnaire fourni par le <paramref name="propertyValues" /> paramètre a une série de paires nom/valeur, une pour chaque propriété retournée par <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-330">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="typeConverter.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5909d-331">
            <see cref="T:System.Object" /> à convertir, ou <see langword="null" /> si l'objet n'est pas disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-331">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-332">Retourne une exception à lever quand une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-332">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-333">
            <see cref="T:System.Exception" /> représentant l'exception à lever lorsqu'une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-333">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-334">Automatiquement levée par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-334">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="typeConverter.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5909d-335">
            <see cref="T:System.Object" /> à convertir, ou <see langword="null" /> si l'objet n'est pas disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-335">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="5909d-336">
            <see cref="T:System.Type" /> représentant le type vers lequel la conversion tentait de s'effectuer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-336">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-337">Retourne une exception à lever quand une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-337">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-338">
            <see cref="T:System.Exception" /> représentant l'exception à lever lorsqu'une conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-338">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5909d-339">Automatiquement levée par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-339">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-340">Retourne une valeur indiquant si la modification d'une valeur de cet objet nécessite un appel à la méthode <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour créer une nouvelle valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-340">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberSignature Language="F#" Value="member this.GetCreateInstanceSupported : unit -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5909d-341">Retourne une valeur indiquant si la modification d'une valeur de cet objet nécessite un appel à la méthode <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour créer une nouvelle valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-341">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-342">
            <see langword="true" /> si la modification d’une propriété de cet objet nécessite un appel à <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour créer une valeur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-342">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-343">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-343">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-344">Retourne une valeur indiquant si la modification d’une valeur de cet objet nécessite un appel à <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour créer une valeur, en utilisant le contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-344">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-345">
            <see langword="true" /> si la modification d’une propriété de cet objet nécessite un appel à <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> pour créer une valeur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-345">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-346">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="5909d-346">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-347">Substituez cette méthode si le type à convertir doit recréer l’objet pour modifier sa valeur.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-347">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="5909d-348">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-348">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="5909d-349">Ce paramètre peut être <see langword="null" />, donc toujours le vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-349">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="5909d-350">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-350">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-351">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-351">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5909d-352">
            <see cref="T:System.Object" /> qui spécifie le type de tableau pour lequel obtenir des propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-352">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-353">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-353">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-354">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés exposées pour ce type de données, ou <see langword="null" /> en l’absence de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-354">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-355">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-355">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="5909d-356">Par défaut, un type ne retourne pas de propriétés.</span><span class="sxs-lookup"><span data-stu-id="5909d-356">By default, a type does not return properties.</span></span> <span data-ttu-id="5909d-357">Une implémentation simple de cette méthode peut appeler <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> pour le type de données correct.</span><span class="sxs-lookup"><span data-stu-id="5909d-357">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-358">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-358">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5909d-359">
            <see cref="T:System.Object" /> qui spécifie le type de tableau pour lequel obtenir des propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-359">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-360">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur, à l'aide du contexte déterminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-360">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-361">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés exposées pour ce type de données, ou <see langword="null" /> en l’absence de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-361">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-362">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-362">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5909d-363">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="5909d-363">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5909d-364">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-364">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5909d-365">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-365">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="5909d-366">Par défaut, un type ne retourne pas de propriétés.</span><span class="sxs-lookup"><span data-stu-id="5909d-366">By default, a type does not return properties.</span></span> <span data-ttu-id="5909d-367">Une implémentation simple de cette méthode peut appeler <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> pour le type de données correct.</span><span class="sxs-lookup"><span data-stu-id="5909d-367">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-368">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-368">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5909d-369">
            <see cref="T:System.Object" /> qui spécifie le type de tableau pour lequel obtenir des propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-369">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="5909d-370">Tableau de type <see cref="T:System.Attribute" /> utilisé comme filtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-370">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-371">Retourne une collection de propriétés pour le type de tableau spécifié par le paramètre de valeur, à l’aide du contexte et des attributs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-371">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-372">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés exposées pour ce type de données, ou <see langword="null" /> en l’absence de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-372">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-373">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-373">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-374">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les propriétés.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-374">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="5909d-375">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-375">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="5909d-376">Ce paramètre peut être <see langword="null" />, donc toujours le vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-376">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="5909d-377">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-377">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="5909d-378">Le tableau d’attributs est utilisé pour filtrer le tableau.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-378">The attributes array is used to filter the array.</span>
            </span>
            <span data-ttu-id="5909d-379">Les attributs peuvent comporter un mélange de <see cref="T:System.Type" /> et <see cref="T:System.Attribute" /> objets.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-379">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span>
            </span>
            <span data-ttu-id="5909d-380">De filtrage est défini par les règles suivantes :</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-380">Filtering is defined by the following rules:</span>
            </span>
            <span data-ttu-id="5909d-381">-A <see cref="T:System.Type" /> est traité comme un caractère générique ; il correspond à une propriété qui possède le <see cref="T:System.Type" /> dans son ensemble d’attributs.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-381">-   A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span>
            </span>
            <span data-ttu-id="5909d-382">-Si une propriété n’a pas un <see cref="T:System.Attribute" /> de la même classe, la propriété n’est pas incluse dans le tableau retourné.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-382">-   If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span>
            </span>
            <span data-ttu-id="5909d-383">-Si l’attribut est une instance de <see cref="T:System.Attribute" />, la propriété doit être une correspondance exacte ou il n’est pas inclus dans le tableau retourné.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-383">-   If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span>
            </span>
            <span data-ttu-id="5909d-384">-If un <see cref="T:System.Attribute" /> instance est spécifiée et il est la propriété par défaut, il est inclus dans le tableau retourné, même s’il n’existe aucune instance de la <see cref="T:System.Attribute" /> dans la propriété.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-384">-   If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-385">Retourne une valeur indiquant si l'objet prend en charge les propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-385">Returns whether this object supports properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetPropertiesSupported : unit -&gt; bool" Usage="typeConverter.GetPropertiesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5909d-386">Retourne une valeur indiquant si l'objet prend en charge les propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-386">Returns whether this object supports properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-387">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> doit être appelé pour rechercher les propriétés de cet objet ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-387">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-388">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="5909d-388">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-389">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-389">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-390">Retourne une valeur qui indique si cet objet prend en charge les propriétés en utilisant le contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-390">Returns whether this object supports properties, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-391">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> doit être appelé pour rechercher les propriétés de cet objet ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-391">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-392">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="5909d-392">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-393">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les propriétés.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-393">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="5909d-394">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-394">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="5909d-395">Ce paramètre peut être <see langword="null" />, donc toujours le vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-395">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="5909d-396">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-396">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-397">Retourne une collection de valeurs standard pour le type de données pour lequel ce convertisseur de type est conçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-397">Returns a collection of standard values for the data type this type converter is designed for.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValues : unit -&gt; System.Collections.ICollection" Usage="typeConverter.GetStandardValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5909d-398">Retourne une collection de valeurs standard à partir du contexte par défaut du type de données pour lequel ce convertisseur de type est conçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-398">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-399">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> contenant un jeu standard de valeurs valides, ou <see langword="null" /> si le type de données ne prend pas en charge un jeu de valeurs standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-399">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-400">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-400">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-401">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format qui peut être utilisé pour extraire des informations supplémentaires sur l’environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-401">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span>
          </span>
          <span data-ttu-id="5909d-402">Ce paramètre ou les propriétés de ce paramètre peuvent être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-402">This parameter or properties of this parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-403">Retourne une collection de valeurs standard pour le type de données compatible avec ce convertisseur de type quand un contexte de format est fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-403">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-404">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> qui contient un jeu de valeurs valides standard ou <see langword="null" /> si le type de données ne prend pas en charge un jeu de valeurs standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-404">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-405">Tel qu’implémenté dans <xref:System.ComponentModel.TypeConverter>, cette méthode retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-405">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5909d-406">Pour obtenir un exemple sur cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="5909d-406">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-407">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-407">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-408">Retourne une valeur indiquant si la collection de valeurs standard retournée par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-408">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesExclusive : unit -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5909d-409">Retourne une valeur indiquant si la collection de valeurs standard retournée par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-409">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-410">
            <see langword="true" /> si le <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> retourné par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exhaustive des valeurs possibles ; <see langword="false" /> si d'autres valeurs sont possibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-410">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-411">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="5909d-411">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="5909d-412">Si la liste est exclusive, comme dans un type de données énumération, aucune autre valeur n'est valide.</span><span class="sxs-lookup"><span data-stu-id="5909d-412">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="5909d-413">Si la liste n'est pas exclusive, d'autres valeurs valides peuvent exister, en plus de la liste de valeurs standard fournie par la méthode <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="5909d-413">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="5909d-414">Si les valeurs sont exclusives, la liste retournée par <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> ne doit pas permettre la modification de ces valeurs.</span><span class="sxs-lookup"><span data-stu-id="5909d-414">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-415">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-415">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-416">Retourne une valeur indiquant si la collection de valeurs standard retournée par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exclusive des valeurs possibles, à l’aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-416">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-417">
            <see langword="true" /> si le <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> retourné par <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> est une liste exhaustive des valeurs possibles ; <see langword="false" /> si d'autres valeurs sont possibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-417">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-418">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="5909d-418">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="5909d-419">Si la liste est exclusive, comme dans un type de données énumération, aucune autre valeur n'est valide.</span><span class="sxs-lookup"><span data-stu-id="5909d-419">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="5909d-420">Si la liste n'est pas exclusive, d'autres valeurs valides peuvent exister, en plus de la liste de valeurs standard fournie par la méthode <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="5909d-420">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="5909d-421">Si les valeurs sont exclusives, la liste retournée par <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> ne doit pas permettre la modification de ces valeurs.</span><span class="sxs-lookup"><span data-stu-id="5909d-421">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-422">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-422">Override this method if the type you want to convert supports standard values.</span>
            </span>
            <span data-ttu-id="5909d-423">Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-423">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="5909d-424">Ce paramètre peut être <see langword="null" />, donc toujours le vérifier.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-424">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="5909d-425">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-425">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-426">Retourne une valeur indiquant si cet objet prend en charge un jeu standard de valeurs qui peuvent être sélectionnées dans une liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-426">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesSupported : unit -&gt; bool" Usage="typeConverter.GetStandardValuesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5909d-427">Retourne une valeur indiquant si cet objet prend en charge un jeu standard de valeurs qui peuvent être sélectionnées dans une liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-427">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-428">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> doit être appelé pour rechercher un jeu commun de valeurs prises en charge par l'objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-428">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-429">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-429">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-430">Retourne une valeur indiquant si cet objet prend en charge un jeu de valeurs standard pouvant être sélectionnées dans une liste, à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-430">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-431">
            <see langword="true" /> si <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> doit être appelé pour rechercher un jeu commun de valeurs prises en charge par l'objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-431">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-432">Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="5909d-432">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="5909d-433">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-433">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5909d-434">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="5909d-434">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5909d-435">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-435">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-436">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-436">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5909d-437">Retourne une valeur indiquant si l'objet de valeur donné est valide pour ce type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-437">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsValid : obj -&gt; bool" Usage="typeConverter.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5909d-438">Objet dont la validité doit être testée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-438">The object to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-439">Retourne une valeur indiquant si l'objet de valeur donné est valide pour ce type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-439">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-440">
            <see langword="true" /> si la valeur spécifiée est valide pour cet objet ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-440">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-441">À compter de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], le <xref:System.ComponentModel.TypeConverter.IsValid%2A> méthode intercepte les exceptions à partir de la <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> et <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="5909d-441">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="5909d-442">Si le type de valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> pour retourner `false`, ou si la valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> pour lever une exception, le <xref:System.ComponentModel.TypeConverter.IsValid%2A> retourne de la méthode `false`.</span><span class="sxs-lookup"><span data-stu-id="5909d-442">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="5909d-443">Pour activer le comportement hérité, insérez les lignes suivantes dans le fichier de configuration de l’application, par exemple, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="5909d-443">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-444">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard qui peuvent être validés.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-444">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="5909d-445">Le <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> méthode est utilisée pour valider une valeur dans le type plutôt que pour déterminer si <paramref name="value" /> peut être converti vers le type donné.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-445">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="5909d-446">Par exemple, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> peut être utilisé pour déterminer si une valeur donnée est valide pour un type d’énumération.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-446">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="5909d-447">Pour obtenir un exemple, consultez <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-447">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
            <span data-ttu-id="5909d-448">Vous pouvez écrire votre propre <c>WillConvertSucceed</c> méthode en encapsulant le <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> et <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> méthodes dans les blocs d’exception.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-448">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool&#xA;override this.IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool" Usage="typeConverter.IsValid (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="5909d-449">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-449">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5909d-450">
            <see cref="T:System.Object" /> dont la validité doit être testée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-450">The <see cref="T:System.Object" /> to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-451">Indique par retour si l’objet de valeur donné est valide pour ce type et pour le contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-451">Returns whether the given value object is valid for this type and for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-452">
            <see langword="true" /> si la valeur spécifiée est valide pour cet objet ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-452">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-453">Utilisez le paramètre `context` pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="5909d-453">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="5909d-454">Ce paramètre peut être `null`, donc toujours le vérifier.</span><span class="sxs-lookup"><span data-stu-id="5909d-454">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="5909d-455">En outre, les propriétés de l'objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="5909d-455">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="5909d-456">À compter de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], le <xref:System.ComponentModel.TypeConverter.IsValid%2A> méthode intercepte les exceptions à partir de la <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> et <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="5909d-456">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="5909d-457">Si le type de valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> pour retourner `false`, ou si la valeur d’entrée fait <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> pour lever une exception, le <xref:System.ComponentModel.TypeConverter.IsValid%2A> retourne de la méthode `false`.</span><span class="sxs-lookup"><span data-stu-id="5909d-457">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="5909d-458">Pour activer le comportement hérité, insérez les lignes suivantes dans le fichier de configuration de l’application, par exemple, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="5909d-458">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="5909d-459">Pour obtenir un exemple de cette fonction, consultez la <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="5909d-459">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5909d-460">Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard qui peuvent être validés.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-460">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="5909d-461">Le <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> méthode est utilisée pour valider une valeur dans le type plutôt que pour déterminer si <paramref name="value" /> peut être converti vers le type donné.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-461">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="5909d-462">Par exemple, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> peut être utilisé pour déterminer si une valeur donnée est valide pour un type d’énumération.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-462">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="5909d-463">Pour obtenir un exemple, consultez <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5909d-463">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.SortProperties : System.ComponentModel.PropertyDescriptorCollection * string[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.SortProperties (props, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props">
          <span data-ttu-id="5909d-464">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> possédant les propriétés à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-464">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="5909d-465">Tableau de noms triés dans l'ordre dans lequel les propriétés doivent apparaître dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-465">An array of names in the order you want the properties to appear in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5909d-466">Trie une collection de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-466">Sorts a collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5909d-467">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui contient les propriétés triées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5909d-467">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5909d-468">Toutes les propriétés qui ne sont pas déjà dans le tableau de noms dans la collection sont ajoutées par ordre alphabétique à la fin.</span><span class="sxs-lookup"><span data-stu-id="5909d-468">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="5909d-469">Si le `names` paramètre est un tableau vide ou `null`, toutes les propriétés dans la collection sont triées par ordre alphabétique.</span><span class="sxs-lookup"><span data-stu-id="5909d-469">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>