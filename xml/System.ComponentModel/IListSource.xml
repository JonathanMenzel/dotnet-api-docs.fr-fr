<Type Name="IListSource" FullName="System.ComponentModel.IListSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="854d2280630e0531066f1e077cc99d8d435b9d8a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30375913" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListSource" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IListSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataSourceListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataSourceConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit des fonctionnalités à un objet pour retourner une liste pouvant être liée à une source de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous utilisez généralement cette interface pour retourner une liste qui peut être liée à une source de données à partir d’un objet qui n’implémente pas <xref:System.Collections.IList> lui-même.  
  
 Liaison de données peut se produire au moment de l’exécution ou dans un concepteur, mais il existe des règles pour chacun. Au moment de l’exécution, vous pouvez lier aux données dans les éléments suivants :  
  
-   <xref:System.Array>  
  
-   Responsable de l’implémentation de <xref:System.Collections.IList>, à condition que l’implémenteur a fortement typé <xref:System.Collections.IList.Item%2A> propriété (autrement dit, le <xref:System.Type> n’est pas <xref:System.Object>). Pour cela, rendez l’implémentation par défaut de <xref:System.Collections.IList.Item%2A> privé. Si vous souhaitez créer un <xref:System.Collections.IList> qui suit les règles d’une collection fortement typée, vous devez dériver de <xref:System.Collections.CollectionBase>.  
  
-   Responsable de l’implémentation de <xref:System.ComponentModel.ITypedList>.  
  
 Dans un concepteur, vous pouvez initialiser la liaison aux <xref:System.ComponentModel.Component> objets en suivant les mêmes règles.  
  
> [!NOTE]
>  Les implémenteurs de <xref:System.ComponentModel.IListSource> peut retourner un <xref:System.Collections.IList> qui contient une collection de <xref:System.Collections.IList> objets.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment implémenter la <xref:System.ComponentModel.IListSource> interface. Un composant nommé `EmployeeListSource` expose un <xref:System.Collections.IList> pour la liaison de données en implémentant le <xref:System.ComponentModel.IListSource.GetList%2A> (méthode). Pour une liste de code complet, consultez [Comment : implémenter l’IListSource Interface](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  
  
 [!code-csharp[System.ComponentModel.IListSource#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#1)]
 [!code-vb[System.ComponentModel.IListSource#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IListSource" />
    <altmember cref="T:System.ComponentModel.ITypedList" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.Collections.CollectionBase" />
  </Docs>
  <Members>
    <Member MemberName="ContainsListCollection">
      <MemberSignature Language="C#" Value="public bool ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainsListCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContainsListCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la collection est une collection d'objets <see cref="T:System.Collections.IList" />.</summary>
        <value>
          <see langword="true" /> si la collection est une collection d'objets <see cref="T:System.Collections.IList" /> ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 À l’aide de cette propriété dans <xref:System.Data.DataSet> retourne `true` , car le <xref:System.Data.DataSet> classe contient une collection de collections. À l’aide de cette propriété dans <xref:System.Data.DataTable> retourne `false` , car le <xref:System.Data.DataTable> classe contient une collection d’objets.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment implémenter la <xref:System.ComponentModel.IListSource> interface. Un composant nommé `EmployeeListSource` indique qu’il ne contient pas un <xref:System.Collections.IList> pour la liaison de données en retournant `false` à partir de la <xref:System.ComponentModel.IListSource.ContainsListCollection%2A> (méthode). Pour une liste de code complet, consultez [Comment : implémenter l’IListSource Interface](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  
  
 [!code-csharp[System.ComponentModel.IListSource#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#3)]
 [!code-vb[System.ComponentModel.IListSource#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public System.Collections.IList GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IListSource.GetList" />
      <MemberSignature Language="VB.NET" Value="Public Function GetList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IList ^ GetList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne <see cref="T:System.Collections.IList" /> pouvant être lié à une source de données à partir d'un objet qui, lui-même, n'implémente pas <see cref="T:System.Collections.IList" />.</summary>
        <returns>
          <see cref="T:System.Collections.IList" /> pouvant être lié à une source de données à partir de l'objet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment implémenter la <xref:System.ComponentModel.IListSource> interface. Un composant nommé `EmployeeListSource` expose un <xref:System.Collections.IList> pour la liaison de données en implémentant le <xref:System.ComponentModel.IListSource.GetList%2A> (méthode). Pour une liste de code complet, consultez [Comment : implémenter l’IListSource Interface](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  
  
 [!code-csharp[System.ComponentModel.IListSource#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#4)]
 [!code-vb[System.ComponentModel.IListSource#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
  </Members>
</Type>