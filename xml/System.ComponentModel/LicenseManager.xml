<Type Name="LicenseManager" FullName="System.ComponentModel.LicenseManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ae2c5d1eaa1ae2e586d39da8e3bae4e808fb77e" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51918580" /></Metadata><TypeSignature Language="C#" Value="public sealed class LicenseManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LicenseManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LicenseManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicenseManager sealed" />
  <TypeSignature Language="F#" Value="type LicenseManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5cba7-101">Fournit des propriétés et des méthodes permettant d’ajouter une licence à un composant et de gérer un <see cref="T:System.ComponentModel.LicenseProvider" />.</span><span class="sxs-lookup"><span data-stu-id="5cba7-101">Provides properties and methods to add a license to a component and to manage a <see cref="T:System.ComponentModel.LicenseProvider" />.</span></span> <span data-ttu-id="5cba7-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="5cba7-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cba7-103">Le <xref:System.ComponentModel.LicenseManager> classe fournit les éléments suivants `static` propriétés : <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> et <xref:System.ComponentModel.LicenseManager.UsageMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cba7-103">The <xref:System.ComponentModel.LicenseManager> class provides the following `static` properties: <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> and <xref:System.ComponentModel.LicenseManager.UsageMode%2A>.</span></span> <span data-ttu-id="5cba7-104">La classe fournit également les éléments suivants `static` méthodes : <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A>, <xref:System.ComponentModel.LicenseManager.IsValid%2A>, et <xref:System.ComponentModel.LicenseManager.Validate%2A>.</span><span class="sxs-lookup"><span data-stu-id="5cba7-104">The class also provides the following `static` methods: <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A>, <xref:System.ComponentModel.LicenseManager.IsValid%2A>, and <xref:System.ComponentModel.LicenseManager.Validate%2A>.</span></span>  
  
 <span data-ttu-id="5cba7-105">Lorsque vous créez un composant que vous souhaitez obtenir une licence, vous devez procédez comme suit :</span><span class="sxs-lookup"><span data-stu-id="5cba7-105">When you create a component that you want to license, you must do the following:</span></span>  
  
1.  <span data-ttu-id="5cba7-106">Spécifiez le <xref:System.ComponentModel.LicenseProvider> en marquant le composant avec un <xref:System.ComponentModel.LicenseProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="5cba7-106">Specify the <xref:System.ComponentModel.LicenseProvider> by marking the component with a <xref:System.ComponentModel.LicenseProviderAttribute>.</span></span>  
  
2.  <span data-ttu-id="5cba7-107">Appelez <xref:System.ComponentModel.LicenseManager.Validate%2A> ou <xref:System.ComponentModel.LicenseManager.IsValid%2A> dans le constructeur du composant.</span><span class="sxs-lookup"><span data-stu-id="5cba7-107">Call <xref:System.ComponentModel.LicenseManager.Validate%2A> or <xref:System.ComponentModel.LicenseManager.IsValid%2A> in the constructor of the component.</span></span> <span data-ttu-id="5cba7-108"><xref:System.ComponentModel.LicenseManager.Validate%2A> lève une <xref:System.ComponentModel.LicenseException> quand il tente de créer une instance sans licence valide.</span><span class="sxs-lookup"><span data-stu-id="5cba7-108"><xref:System.ComponentModel.LicenseManager.Validate%2A> throws a <xref:System.ComponentModel.LicenseException> when it tries to create an instance without a valid license.</span></span> <span data-ttu-id="5cba7-109"><xref:System.ComponentModel.LicenseManager.IsValid%2A> ne lève pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="5cba7-109"><xref:System.ComponentModel.LicenseManager.IsValid%2A> does not throw an exception.</span></span>  
  
3.  <span data-ttu-id="5cba7-110">Appelez <xref:System.ComponentModel.License.Dispose%2A> pour toute licence accordée lorsque le composant est supprimé ou finalisé.</span><span class="sxs-lookup"><span data-stu-id="5cba7-110">Call <xref:System.ComponentModel.License.Dispose%2A> on any license that is granted when the component is disposed or finalized.</span></span>  
  
 <span data-ttu-id="5cba7-111">Pour plus d’informations sur les licences, consultez [Comment : composants de la licence et des contrôles](https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span><span class="sxs-lookup"><span data-stu-id="5cba7-111">For more information on licensing, see [How to: License Components and Controls](https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5cba7-112">L’exemple de code suivant crée un contrôle sous licence à l’aide de la <xref:System.ComponentModel.LicenseManager.Validate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5cba7-112">The following code example creates a licensed control using the <xref:System.ComponentModel.LicenseManager.Validate%2A> method.</span></span> <span data-ttu-id="5cba7-113">Il utilise un <xref:System.ComponentModel.LicenseProvider> qui est implémentée par le <xref:System.ComponentModel.LicFileLicenseProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="5cba7-113">It uses a <xref:System.ComponentModel.LicenseProvider> that is implemented by the <xref:System.ComponentModel.LicFileLicenseProvider> class.</span></span>  
  
 [!code-cpp[Classic LicenseManager Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LicenseManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LicenseManager Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LicenseManager Example/CS/source.cs#1)]
 [!code-vb[Classic LicenseManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LicenseManager Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseContext" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateWithContext">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5cba7-114">Crée une instance d'un type d'objet avec un contexte de licence.</span><span class="sxs-lookup"><span data-stu-id="5cba7-114">Creates an instance of an object type with a license context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateWithContext">
      <MemberSignature Language="C#" Value="public static object CreateWithContext (Type type, System.ComponentModel.LicenseContext creationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateWithContext(class System.Type type, class System.ComponentModel.LicenseContext creationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateWithContext(Type ^ type, System::ComponentModel::LicenseContext ^ creationContext);" />
      <MemberSignature Language="F#" Value="static member CreateWithContext : Type * System.ComponentModel.LicenseContext -&gt; obj" Usage="System.ComponentModel.LicenseManager.CreateWithContext (type, creationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="creationContext" Type="System.ComponentModel.LicenseContext" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5cba7-115"><see cref="T:System.Type" /> représentant le type à créer.</span><span class="sxs-lookup"><span data-stu-id="5cba7-115">A <see cref="T:System.Type" /> that represents the type to create.</span></span></param>
        <param name="creationContext"><span data-ttu-id="5cba7-116"><see cref="T:System.ComponentModel.LicenseContext" /> spécifiant le moment où vous pouvez utiliser l'instance sous licence.</span><span class="sxs-lookup"><span data-stu-id="5cba7-116">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies when you can use the licensed instance.</span></span></param>
        <summary><span data-ttu-id="5cba7-117">Crée une instance du type spécifié, en tenant compte d'un contexte dans lequel vous pouvez utiliser l'instance sous licence.</span><span class="sxs-lookup"><span data-stu-id="5cba7-117">Creates an instance of the specified type, given a context in which you can use the licensed instance.</span></span></summary>
        <returns><span data-ttu-id="5cba7-118">Instance du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="5cba7-118">An instance of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cba7-119">Le <xref:System.ComponentModel.LicenseContext> vous spécifiez comme le `creationContext` paramètre est utilisé comme le <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> pendant la durée de vie de ce <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="5cba7-119">The <xref:System.ComponentModel.LicenseContext> you specify as the `creationContext` parameter is used as the <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> for the life of this <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="5cba7-120">Le <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> méthode bloque tous les autres threads le <xref:System.AppDomain> de modifier le <xref:System.ComponentModel.LicenseManager.CurrentContext%2A>, ce qui permet <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> se comporte comme une opération atomique.</span><span class="sxs-lookup"><span data-stu-id="5cba7-120">The <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> method blocks all other threads in the <xref:System.AppDomain> from modifying the <xref:System.ComponentModel.LicenseManager.CurrentContext%2A>, allowing <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> to behave as an atomic operation.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="5cba7-121">Pour accéder aux membres de classe privée et les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="5cba7-121">for access to private class members and metadata.</span></span> <span data-ttu-id="5cba7-122">Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5cba7-122">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="CreateWithContext">
      <MemberSignature Language="C#" Value="public static object CreateWithContext (Type type, System.ComponentModel.LicenseContext creationContext, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateWithContext(class System.Type type, class System.ComponentModel.LicenseContext creationContext, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateWithContext(Type ^ type, System::ComponentModel::LicenseContext ^ creationContext, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateWithContext : Type * System.ComponentModel.LicenseContext * obj[] -&gt; obj" Usage="System.ComponentModel.LicenseManager.CreateWithContext (type, creationContext, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="creationContext" Type="System.ComponentModel.LicenseContext" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5cba7-123"><see cref="T:System.Type" /> représentant le type à créer.</span><span class="sxs-lookup"><span data-stu-id="5cba7-123">A <see cref="T:System.Type" /> that represents the type to create.</span></span></param>
        <param name="creationContext"><span data-ttu-id="5cba7-124"><see cref="T:System.ComponentModel.LicenseContext" /> spécifiant le moment où vous pouvez utiliser l'instance sous licence.</span><span class="sxs-lookup"><span data-stu-id="5cba7-124">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies when you can use the licensed instance.</span></span></param>
        <param name="args"><span data-ttu-id="5cba7-125">Tableau de type <see cref="T:System.Object" /> représentant les arguments pour le type.</span><span class="sxs-lookup"><span data-stu-id="5cba7-125">An array of type <see cref="T:System.Object" /> that represents the arguments for the type.</span></span></param>
        <summary><span data-ttu-id="5cba7-126">Crée une instance du type spécifié avec les arguments donnés, en tenant compte d'un contexte dans lequel vous pouvez utiliser l'instance sous licence.</span><span class="sxs-lookup"><span data-stu-id="5cba7-126">Creates an instance of the specified type with the specified arguments, given a context in which you can use the licensed instance.</span></span></summary>
        <returns><span data-ttu-id="5cba7-127">Instance du type spécifié avec le tableau d'arguments donné.</span><span class="sxs-lookup"><span data-stu-id="5cba7-127">An instance of the specified type with the given array of arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cba7-128">Le <xref:System.ComponentModel.LicenseContext> vous spécifiez comme le `creationContext` paramètre est utilisé comme le <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> pendant la durée de vie de ce <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="5cba7-128">The <xref:System.ComponentModel.LicenseContext> you specify as the `creationContext` parameter is used as the <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> for the life of this <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="5cba7-129">Cette méthode bloque tous les autres threads le <xref:System.AppDomain> de modifier le <xref:System.ComponentModel.LicenseManager.CurrentContext%2A>, en autorisant <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> se comporte comme une opération atomique.</span><span class="sxs-lookup"><span data-stu-id="5cba7-129">This method blocks all other threads in the <xref:System.AppDomain> from modifying the <xref:System.ComponentModel.LicenseManager.CurrentContext%2A>, allowing <xref:System.ComponentModel.LicenseManager.CreateWithContext%2A> to behave as an atomic operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="CurrentContext">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.LicenseContext CurrentContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.LicenseContext CurrentContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseManager.CurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentContext As LicenseContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::LicenseContext ^ CurrentContext { System::ComponentModel::LicenseContext ^ get(); void set(System::ComponentModel::LicenseContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentContext : System.ComponentModel.LicenseContext with get, set" Usage="System.ComponentModel.LicenseManager.CurrentContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.LicenseContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cba7-130">Obtient ou définit le <see cref="T:System.ComponentModel.LicenseContext" /> en cours qui spécifie le moment où l'objet sous licence peut être utilisé.</span><span class="sxs-lookup"><span data-stu-id="5cba7-130">Gets or sets the current <see cref="T:System.ComponentModel.LicenseContext" />, which specifies when you can use the licensed object.</span></span></summary>
        <value><span data-ttu-id="5cba7-131"><see cref="T:System.ComponentModel.LicenseContext" /> spécifiant le moment où vous pouvez utiliser l'objet sous licence.</span><span class="sxs-lookup"><span data-stu-id="5cba7-131">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies when you can use the licensed object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cba7-132">Lorsque l’utilisateur demande valide <xref:System.ComponentModel.License>, l’utilisateur doit donner le contexte dans lequel le <xref:System.ComponentModel.License> n’est valide pour le <xref:System.ComponentModel.LicenseProvider.GetLicense%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5cba7-132">When the user requests a valid <xref:System.ComponentModel.License>, the user must give the context in which the <xref:System.ComponentModel.License> is valid to the <xref:System.ComponentModel.LicenseProvider.GetLicense%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5cba7-133">Le <xref:System.ComponentModel.LicenseContext> retourné par cette propriété doit être passée à tous les <xref:System.ComponentModel.LicenseProvider> classes.</span><span class="sxs-lookup"><span data-stu-id="5cba7-133">The <xref:System.ComponentModel.LicenseContext> returned by this property should be passed to all <xref:System.ComponentModel.LicenseProvider> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5cba7-134">La propriété <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" /> est actuellement verrouillée et ne peut pas être modifiée.</span><span class="sxs-lookup"><span data-stu-id="5cba7-134">The <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" /> property is currently locked and cannot be changed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="IsLicensed">
      <MemberSignature Language="C#" Value="public static bool IsLicensed (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLicensed(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.IsLicensed(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLicensed(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsLicensed : Type -&gt; bool" Usage="System.ComponentModel.LicenseManager.IsLicensed type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5cba7-135"><see cref="T:System.Type" /> pour lequel rechercher une licence valide.</span><span class="sxs-lookup"><span data-stu-id="5cba7-135">The <see cref="T:System.Type" /> to find a valid license for.</span></span></param>
        <summary><span data-ttu-id="5cba7-136">Retourne une valeur indiquant si le type donné possède une licence valide.</span><span class="sxs-lookup"><span data-stu-id="5cba7-136">Returns whether the given type has a valid license.</span></span></summary>
        <returns><span data-ttu-id="5cba7-137"><see langword="true" /> si le type donné est sous licence ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cba7-137"><see langword="true" /> if the given type is licensed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5cba7-138">Détermine si une licence valide peut être accordée.</span><span class="sxs-lookup"><span data-stu-id="5cba7-138">Determines whether a valid license can be granted.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.IsValid(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsValid : Type -&gt; bool" Usage="System.ComponentModel.LicenseManager.IsValid type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5cba7-139"><see cref="T:System.Type" /> représentant le type d'objet qui demande <see cref="T:System.ComponentModel.License" />.</span><span class="sxs-lookup"><span data-stu-id="5cba7-139">A <see cref="T:System.Type" /> that represents the type of object that requests the <see cref="T:System.ComponentModel.License" />.</span></span></param>
        <summary><span data-ttu-id="5cba7-140">Détermine si une licence valide peut être accordée pour le type spécifié.</span><span class="sxs-lookup"><span data-stu-id="5cba7-140">Determines whether a valid license can be granted for the specified type.</span></span></summary>
        <returns><span data-ttu-id="5cba7-141"><see langword="true" /> si une licence valide peut être accordée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cba7-141"><see langword="true" /> if a valid license can be granted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cba7-142">Le <xref:System.ComponentModel.LicenseManager.IsValid%2A> retourne de la méthode `true` lorsque le type n'est pas sous licence, ou est concédé sous licence et la licence est valide.</span><span class="sxs-lookup"><span data-stu-id="5cba7-142">The <xref:System.ComponentModel.LicenseManager.IsValid%2A> method returns `true` when the type is either not licensed, or is licensed and the license is valid.</span></span>  
  
 <span data-ttu-id="5cba7-143">Cette méthode ne lève pas une <xref:System.ComponentModel.LicenseException> quand il ne peut pas accorder valide <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="5cba7-143">This method does not throw a <xref:System.ComponentModel.LicenseException> when it cannot grant a valid <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="5cba7-144">Le <xref:System.ComponentModel.LicenseManager.Validate%2A> méthode lève des exceptions.</span><span class="sxs-lookup"><span data-stu-id="5cba7-144">The <xref:System.ComponentModel.LicenseManager.Validate%2A> method throws exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (Type type, object instance, out System.ComponentModel.License license);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(class System.Type type, object instance, [out] class System.ComponentModel.License&amp; license) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.IsValid(System.Type,System.Object,System.ComponentModel.License@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(Type ^ type, System::Object ^ instance, [Runtime::InteropServices::Out] System::ComponentModel::License ^ % license);" />
      <MemberSignature Language="F#" Value="static member IsValid : Type * obj *  -&gt; bool" Usage="System.ComponentModel.LicenseManager.IsValid (type, instance, license)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="license" Type="System.ComponentModel.License" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5cba7-145"><see cref="T:System.Type" /> représentant le type d'objet qui demande la licence.</span><span class="sxs-lookup"><span data-stu-id="5cba7-145">A <see cref="T:System.Type" /> that represents the type of object that requests the license.</span></span></param>
        <param name="instance"><span data-ttu-id="5cba7-146">Objet du type spécifié ou type dérivé du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="5cba7-146">An object of the specified type or a type derived from the specified type.</span></span></param>
        <param name="license"><span data-ttu-id="5cba7-147"><see cref="T:System.ComponentModel.License" /> qui est une licence valide ou <see langword="null" /> si une licence valide ne peut pas être accordée.</span><span class="sxs-lookup"><span data-stu-id="5cba7-147">A <see cref="T:System.ComponentModel.License" /> that is a valid license, or <see langword="null" /> if a valid license cannot be granted.</span></span></param>
        <summary><span data-ttu-id="5cba7-148">Détermine si une licence valide peut être accordée pour l'instance spécifiée du type.</span><span class="sxs-lookup"><span data-stu-id="5cba7-148">Determines whether a valid license can be granted for the specified instance of the type.</span></span> <span data-ttu-id="5cba7-149">Cette méthode crée un <see cref="T:System.ComponentModel.License" /> valide.</span><span class="sxs-lookup"><span data-stu-id="5cba7-149">This method creates a valid <see cref="T:System.ComponentModel.License" />.</span></span></summary>
        <returns><span data-ttu-id="5cba7-150"><see langword="true" /> si un <see cref="T:System.ComponentModel.License" /> valide peut être accordé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5cba7-150"><see langword="true" /> if a valid <see cref="T:System.ComponentModel.License" /> can be granted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cba7-151">Le <xref:System.ComponentModel.LicenseManager.IsValid%2A> retourne de la méthode `true` lorsque le `type` paramètre n’est pas sous licence, ou quand il est concédé sous licence et la `license` paramètre n’est valide.</span><span class="sxs-lookup"><span data-stu-id="5cba7-151">The <xref:System.ComponentModel.LicenseManager.IsValid%2A> method returns `true` when the `type` parameter is not licensed, or when it is licensed and the `license` parameter is valid.</span></span>  
  
 <span data-ttu-id="5cba7-152">Cette méthode ne lève pas une <xref:System.ComponentModel.LicenseException> quand il ne peut pas accorder valide <xref:System.ComponentModel.License>.</span><span class="sxs-lookup"><span data-stu-id="5cba7-152">This method does not throw a <xref:System.ComponentModel.LicenseException> when it cannot grant a valid <xref:System.ComponentModel.License>.</span></span> <span data-ttu-id="5cba7-153">Le <xref:System.ComponentModel.LicenseManager.Validate%2A> méthode lève des exceptions.</span><span class="sxs-lookup"><span data-stu-id="5cba7-153">The <xref:System.ComponentModel.LicenseManager.Validate%2A> method throws exceptions.</span></span>  
  
 <span data-ttu-id="5cba7-154">Si le `license` paramètre n’est pas `null` après cet appel, l’objet qui demande un <xref:System.ComponentModel.License> doit détruire la licence en appelant le <xref:System.ComponentModel.License.Dispose%2A> méthode lorsque l’objet est supprimé ou finalisé.</span><span class="sxs-lookup"><span data-stu-id="5cba7-154">If the `license` parameter is not `null` after this call, the object asking for a <xref:System.ComponentModel.License> must dispose of the license by calling the <xref:System.ComponentModel.License.Dispose%2A> method when the object is disposed of or finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="LockContext">
      <MemberSignature Language="C#" Value="public static void LockContext (object contextUser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LockContext(object contextUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.LockContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LockContext (contextUser As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LockContext(System::Object ^ contextUser);" />
      <MemberSignature Language="F#" Value="static member LockContext : obj -&gt; unit" Usage="System.ComponentModel.LicenseManager.LockContext contextUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextUser" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contextUser"><span data-ttu-id="5cba7-155">Objet dont vous souhaitez verrouiller le contexte en cours.</span><span class="sxs-lookup"><span data-stu-id="5cba7-155">The object whose current context you want to lock.</span></span></param>
        <summary><span data-ttu-id="5cba7-156">Empêche toute modification du <see cref="T:System.ComponentModel.LicenseContext" /> en cours de l'objet donné.</span><span class="sxs-lookup"><span data-stu-id="5cba7-156">Prevents changes being made to the current <see cref="T:System.ComponentModel.LicenseContext" /> of the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cba7-157">Utilisez le <xref:System.ComponentModel.LicenseContext> pour obtenir le <xref:System.ComponentModel.License> d’un objet.</span><span class="sxs-lookup"><span data-stu-id="5cba7-157">Use the <xref:System.ComponentModel.LicenseContext> to get the <xref:System.ComponentModel.License> of an object.</span></span> <span data-ttu-id="5cba7-158">Cette méthode verrouille le <xref:System.ComponentModel.LicenseContext>, empêchant la <xref:System.ComponentModel.License> d’être récupérés.</span><span class="sxs-lookup"><span data-stu-id="5cba7-158">This method locks the <xref:System.ComponentModel.LicenseContext>, preventing the <xref:System.ComponentModel.License> from being retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5cba7-159">Le contexte est déjà verrouillé.</span><span class="sxs-lookup"><span data-stu-id="5cba7-159">The context is already locked.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockContext">
      <MemberSignature Language="C#" Value="public static void UnlockContext (object contextUser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnlockContext(object contextUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.UnlockContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UnlockContext (contextUser As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UnlockContext(System::Object ^ contextUser);" />
      <MemberSignature Language="F#" Value="static member UnlockContext : obj -&gt; unit" Usage="System.ComponentModel.LicenseManager.UnlockContext contextUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextUser" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contextUser"><span data-ttu-id="5cba7-160">Objet dont vous souhaitez déverrouiller le contexte en cours.</span><span class="sxs-lookup"><span data-stu-id="5cba7-160">The object whose current context you want to unlock.</span></span></param>
        <summary><span data-ttu-id="5cba7-161">Autorise l'apport de modifications au <see cref="T:System.ComponentModel.LicenseContext" /> en cours de l'objet donné.</span><span class="sxs-lookup"><span data-stu-id="5cba7-161">Allows changes to be made to the current <see cref="T:System.ComponentModel.LicenseContext" /> of the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cba7-162">Utilisez le <xref:System.ComponentModel.LicenseContext> pour obtenir le <xref:System.ComponentModel.License> d’un objet.</span><span class="sxs-lookup"><span data-stu-id="5cba7-162">Use the <xref:System.ComponentModel.LicenseContext> to get the <xref:System.ComponentModel.License> of an object.</span></span> <span data-ttu-id="5cba7-163">Cette méthode déverrouille le <xref:System.ComponentModel.LicenseContext>, ce qui permet le <xref:System.ComponentModel.License> à récupérer.</span><span class="sxs-lookup"><span data-stu-id="5cba7-163">This method unlocks the <xref:System.ComponentModel.LicenseContext>, allowing the <xref:System.ComponentModel.License> to be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5cba7-164"><paramref name="contextUser" /> représente un utilisateur différent de celui spécifié dans un appel précédent à <see cref="M:System.ComponentModel.LicenseManager.LockContext(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="5cba7-164"><paramref name="contextUser" /> represents a different user than the one specified in a previous call to <see cref="M:System.ComponentModel.LicenseManager.LockContext(System.Object)" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UsageMode">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.LicenseUsageMode UsageMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ComponentModel.LicenseUsageMode UsageMode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseManager.UsageMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UsageMode As LicenseUsageMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::LicenseUsageMode UsageMode { System::ComponentModel::LicenseUsageMode get(); };" />
      <MemberSignature Language="F#" Value="member this.UsageMode : System.ComponentModel.LicenseUsageMode" Usage="System.ComponentModel.LicenseManager.UsageMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.LicenseUsageMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cba7-165">Obtient le <see cref="T:System.ComponentModel.LicenseUsageMode" /> spécifiant le moment où vous pouvez utiliser l'objet sous licence pour <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" />.</span><span class="sxs-lookup"><span data-stu-id="5cba7-165">Gets the <see cref="T:System.ComponentModel.LicenseUsageMode" /> which specifies when you can use the licensed object for the <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" />.</span></span></summary>
        <value><span data-ttu-id="5cba7-166">Une des valeurs <see cref="T:System.ComponentModel.LicenseUsageMode" />, comme spécifié dans la propriété <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" />.</span><span class="sxs-lookup"><span data-stu-id="5cba7-166">One of the <see cref="T:System.ComponentModel.LicenseUsageMode" /> values, as specified in the <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cba7-167">Si cette propriété ne peut pas trouver un <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> valeur, elle retourne <xref:System.ComponentModel.LicenseUsageMode.Runtime>.</span><span class="sxs-lookup"><span data-stu-id="5cba7-167">If this property cannot find a <xref:System.ComponentModel.LicenseManager.CurrentContext%2A> value, it returns <xref:System.ComponentModel.LicenseUsageMode.Runtime>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.LicenseManager.CurrentContext" />
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5cba7-168">Détermine si une licence peut être accordée.</span><span class="sxs-lookup"><span data-stu-id="5cba7-168">Determines whether a license can be granted.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public static void Validate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Validate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.Validate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Validate(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Validate : Type -&gt; unit" Usage="System.ComponentModel.LicenseManager.Validate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5cba7-169"><see cref="T:System.Type" /> représentant le type d'objet qui demande la licence.</span><span class="sxs-lookup"><span data-stu-id="5cba7-169">A <see cref="T:System.Type" /> that represents the type of object that requests the license.</span></span></param>
        <summary><span data-ttu-id="5cba7-170">Détermine si une licence valide peut être accordée pour le type spécifié.</span><span class="sxs-lookup"><span data-stu-id="5cba7-170">Determines whether a license can be granted for the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cba7-171">Cette méthode lève un <xref:System.ComponentModel.LicenseException> lorsque valide <xref:System.ComponentModel.License> ne peut pas être accordée.</span><span class="sxs-lookup"><span data-stu-id="5cba7-171">This method throws a <xref:System.ComponentModel.LicenseException> when a valid <xref:System.ComponentModel.License> cannot be granted.</span></span> <span data-ttu-id="5cba7-172">Le <xref:System.ComponentModel.LicenseManager.IsValid%2A> méthode ne lève pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="5cba7-172">The <xref:System.ComponentModel.LicenseManager.IsValid%2A> method does not throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.LicenseException"><span data-ttu-id="5cba7-173">Aucun <see cref="T:System.ComponentModel.License" /> ne peut être accordé.</span><span class="sxs-lookup"><span data-stu-id="5cba7-173">A <see cref="T:System.ComponentModel.License" /> cannot be granted.</span></span></exception>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.License Validate (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.License Validate(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseManager.Validate(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::License ^ Validate(Type ^ type, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Validate : Type * obj -&gt; System.ComponentModel.License" Usage="System.ComponentModel.LicenseManager.Validate (type, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.License</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5cba7-174"><see cref="T:System.Type" /> représentant le type d'objet qui demande la licence.</span><span class="sxs-lookup"><span data-stu-id="5cba7-174">A <see cref="T:System.Type" /> that represents the type of object that requests the license.</span></span></param>
        <param name="instance"><span data-ttu-id="5cba7-175"><see cref="T:System.Object" /> du type spécifié ou type dérivé du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="5cba7-175">An <see cref="T:System.Object" /> of the specified type or a type derived from the specified type.</span></span></param>
        <summary><span data-ttu-id="5cba7-176">Détermine si une licence peut être accordée pour l'instance du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="5cba7-176">Determines whether a license can be granted for the instance of the specified type.</span></span></summary>
        <returns><span data-ttu-id="5cba7-177"><see cref="T:System.ComponentModel.License" /> valide.</span><span class="sxs-lookup"><span data-stu-id="5cba7-177">A valid <see cref="T:System.ComponentModel.License" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cba7-178">Cette méthode lève un <xref:System.ComponentModel.LicenseException> lorsque valide <xref:System.ComponentModel.License> ne peut pas être accordée.</span><span class="sxs-lookup"><span data-stu-id="5cba7-178">This method throws a <xref:System.ComponentModel.LicenseException> when a valid <xref:System.ComponentModel.License> cannot be granted.</span></span> <span data-ttu-id="5cba7-179">Le <xref:System.ComponentModel.LicenseManager.IsValid%2A> méthode ne lève pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="5cba7-179">The <xref:System.ComponentModel.LicenseManager.IsValid%2A> method does not throw an exception.</span></span>  
  
 <span data-ttu-id="5cba7-180">Tous les objets qui demandent un <xref:System.ComponentModel.License> doit détruire la licence en appelant le <xref:System.ComponentModel.License.Dispose%2A> méthode lorsque l’objet est supprimé ou finalisé.</span><span class="sxs-lookup"><span data-stu-id="5cba7-180">All objects asking for a <xref:System.ComponentModel.License> must dispose of the license by calling the <xref:System.ComponentModel.License.Dispose%2A> method when the object is disposed of or finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.LicenseException"><span data-ttu-id="5cba7-181">Le type est sous licence, mais aucun <see cref="T:System.ComponentModel.License" /> ne peut être accordé.</span><span class="sxs-lookup"><span data-stu-id="5cba7-181">The type is licensed, but a <see cref="T:System.ComponentModel.License" /> cannot be granted.</span></span></exception>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>