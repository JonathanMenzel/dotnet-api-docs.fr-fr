<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeDescriptionProvider.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac578810a0d3161e71e0b4f17da0881ab026be14b8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78810a0d3161e71e0b4f17da0881ab026be14b8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Provides supplemental metadata to the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Fournit les métadonnées supplémentaires au <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> classe étend dynamiquement les informations de type associées à un type ou un objet en ajoutant, modifiant ou le masquage des caractéristiques telles que des attributs, des propriétés et des événements.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>There can be multiple type description provider classes that offer metadata to a single <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Il peut y avoir plusieurs classes de fournisseur de description type offrir des métadonnées à un seul <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>There are two ways to associate a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> with a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>:</source>
          <target state="translated">Il existe deux façons d’associer un <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> avec un <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>At design time, when the target class can be assigned the appropriate <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProviderAttribute&gt;</ph> tag.</source>
          <target state="translated">Au moment du design, lorsque la classe cible peut être attribuée approprié <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProviderAttribute&gt;</ph> balise.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>At run time, when one of the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> methods of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class can be called.</source>
          <target state="translated">Au moment de l’exécution, lorsque l’une de la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> méthodes de la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> classe peut être appelée.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>These overloaded methods require either the target object or its class type.</source>
          <target state="translated">Ces méthodes surchargées requièrent l’objet cible ou son type de classe.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> class relies on a parent object of the same type, supplied during construction.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> classe s’appuie sur un objet parent du même type, fourni pendant la construction.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>This allows classes that derive from <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> to selectively override methods.</source>
          <target state="translated">Cela permet aux classes qui dérivent de <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> à substituer les méthodes de manière sélective.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Instances of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> are only built upon demand, minimizing the impact of custom type information on performance.</source>
          <target state="translated">Instances de <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> sont construites uniquement à la demande, en réduisant l’impact des informations de type personnalisé sur les performances.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Your derived type might be marked as <ph id="ph1">&lt;see langword="internal" /&gt;</ph> or <ph id="ph2">&lt;see langword="private" /&gt;</ph>, but an instance of your type can be created with the <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> class.</source>
          <target state="translated">Votre type dérivé peut être marqué en tant que <ph id="ph1">&lt;see langword="internal" /&gt;</ph> ou <ph id="ph2">&lt;see langword="private" /&gt;</ph>, mais une instance de votre type peut être créée avec la <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Do not write insecure code by assuming the caller is trusted.</source>
          <target state="translated">Ne pas écrire de code non sécurisé en supposant que l’appelant est approuvé.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Assume instead that callers might create instances of your type in partial trust.</source>
          <target state="translated">Au lieu de cela, supposons que les appelants peuvent créer des instances de votre type en confiance partielle.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor">
          <source>This constructor is equivalent to calling the other <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29&gt;</ph> constructor with a parameter value that is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Ce constructeur est équivalent à l’appel de l’autre <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29&gt;</ph> constructeur avec une valeur de paramètre est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The parent type description provider.</source>
          <target state="translated">Fournisseur de description de type parent.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class using a parent type description provider.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> à l'aide d'un fournisseur de description de type parent.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>If the <ph id="ph1">`parent`</ph> parameter is <ph id="ph2">`null`</ph>, all <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods will return default values.</source>
          <target state="translated">Si le <ph id="ph1">`parent`</ph> paramètre est <ph id="ph2">`null`</ph>, tous les <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> méthodes retournent des valeurs par défaut.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Otherwise, all <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods will delegate to the methods of <ph id="ph2">`parent`</ph>.</source>
          <target state="translated">Dans le cas contraire, tous les <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> méthodes délèguent aux méthodes de <ph id="ph2">`parent`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The following table shows the default return values for <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods.</source>
          <target state="translated">Le tableau suivant montre les valeurs de retour par défaut <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Method</source>
          <target state="translated">Méthode</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Default return value</source>
          <target state="translated">Valeur de retour par défaut</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A newly created object through a call to the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method.</source>
          <target state="translated">Un objet nouvellement créé via un appel à la <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A default instance of a <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> class.</source>
          <target state="translated">Une instance par défaut d’un <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A default instance of a <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> class.</source>
          <target state="translated">Une instance par défaut d’un <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The <ph id="ph1">`objectType`</ph> first parameter.</source>
          <target state="translated">Le <ph id="ph1">`objectType`</ph> premier paramètre.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional service provider.</source>
          <target state="translated">Fournisseur de services facultatif.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The type of object to create.</source>
          <target state="translated">Type de l'objet à créer.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter is never <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ce paramètre n'est jamais <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of types that represent the parameter types to be passed to the object's constructor.</source>
          <target state="translated">Tableau facultatif des types qui représentent les types de paramètres à passer au constructeur de l'objet.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This array can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or of zero length.</source>
          <target state="translated">Ce tableau peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou de longueur nulle.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter values to pass to the object's constructor.</source>
          <target state="translated">Tableau facultatif de valeurs de paramètre à passer au constructeur de l’objet.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>Creates an object that can substitute for another data type.</source>
          <target state="translated">Crée un objet qui peut remplacer un autre type de données.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The substitute <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> de substitution.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> specified by the <ph id="ph2">`provider`</ph> parameter is passed in by the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> method of the <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> spécifié par le <ph id="ph2">`provider`</ph> paramètre est passé par le <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> méthode de la <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If <ph id="ph1">`provider`</ph> is not <ph id="ph2">`null`</ph>, the service provider can be used by the type description provider to obtain additional context about the creation call.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> n’est pas <ph id="ph2">`null`</ph>, le fournisseur de services peut être utilisé par le fournisseur de description de type pour obtenir le contexte supplémentaire relatif à l’appel de création.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> method is <ph id="ph2">`virtual`</ph> and, by default, returns the result of the <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> method if <ph id="ph4">`provider`</ph> is <ph id="ph5">`null`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> méthode est <ph id="ph2">`virtual`</ph> et, par défaut, retourne le résultat de la <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> méthode si <ph id="ph4">`provider`</ph> est <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, this method will invoke the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> method of the parent provider.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> est <ph id="ph2">`null`</ph>, cette méthode appelle la <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> méthode du fournisseur parent.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</source>
          <target state="translated">Si la classe dérivée n’est pas intéressé par en fournissant une instance de substitution, il doit simplement appeler l’implémentation de base.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The object for which to get the cache.</source>
          <target state="translated">Objet pour lequel obtenir le cache.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Gets a per-object cache, accessed as an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of key/value pairs.</source>
          <target state="translated">Obtient un cache par objet accessible en tant que <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> de paires clé/valeur.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> if the provided object supports caching; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> si l'objet fournit prend en charge la mise en cache ; sinon, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> may need to perform complex operations on collections of metadata.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> devra peut-être effectuer des opérations complexes sur les collections de métadonnées.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Because types are not unloaded for the life of a domain, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class will automatically cache the results of these operations based on type.</source>
          <target state="translated">Étant donné que les types ne sont pas déchargés durant la vie d’un domaine, le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> classe mettra automatiquement en cache les résultats de ces opérations basées sur le type.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>However, some operations use live object instances.</source>
          <target state="translated">Toutefois, certaines opérations utilisent des instances d’objet dynamique.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>These operations cannot be cached within the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class because caching them would prevent the object from being garbage collected.</source>
          <target state="translated">Ces opérations ne peuvent pas être mis en cache dans le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> classe, car leur mise en cache empêcherait l’objet par le garbage collecté.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Instead, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class allows for a per-object cache, accessed as an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> of key/value pairs, to exist on an object.</source>
          <target state="translated">Au lieu de cela, le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> permet de classe pour un cache par objet accédé en tant qu’un <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> de paires clé/valeur, existe sur un objet.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> method returns an instance of this cache.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> méthode retourne une instance de ce cache.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> method will return <ph id="ph2">`null`</ph> if there is no supported cache for an object.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> méthode retournera <ph id="ph2">`null`</ph> s’il n’existe aucun cache pris en charge pour un objet.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> used by <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> examines the object to see if it is a sited component that implements the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> interface.</source>
          <target state="translated">La valeur par défaut <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> utilisé par <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> examine l’objet pour voir si elle est un composant sur site qui implémente le <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>If the object is, it uses the dictionary service to store the object's cache.</source>
          <target state="translated">Si l’objet est, il utilise le service de dictionnaire pour stocker le cache de l’objet.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Otherwise, the object it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Dans le cas contraire, l’objet retourne <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Other type description providers may provide their own implementation here.</source>
          <target state="translated">Autres fournisseurs de description de type peuvent fournir leur propre implémentation ici.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>For example, dependency objects can just attach a property of type <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>.</source>
          <target state="translated">Par exemple, les objets de dépendance peuvent simplement joindre une propriété de type <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The object for which to get the extended type descriptor.</source>
          <target state="translated">Objet pour lequel obtenir le descripteur de type étendu.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>Gets an extended custom type descriptor for the given object.</source>
          <target state="translated">Obtient un descripteur de type personnalisé étendu pour l'objet donné.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide extended metadata for the object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> qui peut fournir des métadonnées étendues pour l'objet.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</source>
          <target state="translated">Un descripteur de type étendu est un descripteur de type personnalisé qui offre les propriétés d’autres objets ont ajoutés à cet objet, mais qui ne sont pas réellement définies sur l’objet.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>For example, in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> component model, objects that implement the <ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph> interface can attach properties to other objects that reside in the same logical container.</source>
          <target state="translated">Par exemple, dans le <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> modèle de composant, les objets qui implémentent la <ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph> interface peut joindre des propriétés à d’autres objets qui résident dans le même conteneur logique.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> methods do not return a type descriptor that provides these extra extended properties.</source>
          <target state="translated">Surchargées <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> méthodes ne retournent pas un descripteur de type qui fournit ces propriétés étendues supplémentaires.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> method returns the set of these extended properties.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> méthode retourne l’ensemble de ces propriétés étendues.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> will automatically merge the results of these two property collections.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> fusionne automatiquement les résultats de ces deux collections de propriétés.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>While the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> component model supports only extended properties, <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> can be used for extended attributes as well as events, if the type description provider supports it.</source>
          <target state="translated">Alors que le <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> modèle de composant prend en charge uniquement les propriétés étendues, <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> peut être utilisé pour les attributs étendus, ainsi que des événements, si le fournisseur de description de type qu’il prend en charge.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> is <ph id="ph2">`virtual`</ph> and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> est <ph id="ph2">`virtual`</ph> et, par défaut, retourne un descripteur de type personnalisé qui retourne des résultats vides si aucun fournisseur parent a été passé.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Si un fournisseur parent a été passé, cette méthode appelle le fournisseur de parent <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>The object to get extender providers for.</source>
          <target state="translated">Objet pour lequel obtenir des fournisseurs d'extendeurs.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>Gets the extender providers for the specified object.</source>
          <target state="translated">Obtient les fournisseurs d'extendeurs pour l'objet spécifié.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>An array of extender providers for <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</source>
          <target state="translated">Tableau de fournisseurs d'extendeurs pour <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>The specified component.</source>
          <target state="translated">Le composant spécifié.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>Gets the name of the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the component has no name.</source>
          <target state="translated">Obtient le nom du composant spécifié ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> si le composant ne possède pas de nom.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>The name of the specified component.</source>
          <target state="translated">Nom du composant spécifié.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Performs normal reflection against an object.</source>
          <target state="translated">Effectue la réflexion normale par rapport à un objet.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>An instance of the type (should not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>).</source>
          <target state="translated">Instance du type (ne doit pas être <ph id="ph1">&lt;see langword="null" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>Performs normal reflection against the given object.</source>
          <target state="translated">Effectue la réflexion normale par rapport à l'objet donné.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</source>
          <target state="translated">Type de réflexion pour ce <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> (méthode) est une version de niveau inférieur de la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">Si aucun descripteur de type personnalisé ne peut être localisé pour un objet, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> est appelée pour effectuer la réflexion normale par rapport à l’objet.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</source>
          <target state="translated">Utilisez cette surcharge de méthode si vous avez appelé un membre du descripteur de type qui utilise une instance au lieu d’un type.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The type of object for which to retrieve the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>.</source>
          <target state="translated">Type d'objet pour lequel récupérer <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>Performs normal reflection against a type.</source>
          <target state="translated">Effectue la réflexion normale par rapport à un type.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</source>
          <target state="translated">Type de réflexion pour ce <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> (méthode) est une version de niveau inférieur de la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">Si aucun descripteur de type personnalisé ne peut être localisé pour un objet, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> est appelée pour effectuer la réflexion normale par rapport à l’objet.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</source>
          <target state="translated">Utilisez cette surcharge de méthode si vous avez appelé un membre du descripteur de type qui utilise un type au lieu d’une instance.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The type of object for which to retrieve the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>.</source>
          <target state="translated">Type d'objet pour lequel récupérer <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">Instance du type.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>Performs normal reflection against the given object with the given type.</source>
          <target state="translated">Effectue la réflexion normale par rapport à l'objet donné à l'aide du type donné.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</source>
          <target state="translated">Type de réflexion pour ce <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> (méthode) est une version de niveau inférieur de la <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">Si aucun descripteur de type personnalisé ne peut être localisé pour un objet, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> est appelée pour effectuer la réflexion normale par rapport à l’objet.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>This method is prototyped as <ph id="ph1">&lt;see langword="virtual" /&gt;</ph>, and by default returns <ph id="ph2">&lt;paramref name="objectType" /&gt;</ph> if no parent provider was passed.</source>
          <target state="translated">Cette méthode est prototypée en tant que <ph id="ph1">&lt;see langword="virtual" /&gt;</ph>et par défaut retourne <ph id="ph2">&lt;paramref name="objectType" /&gt;</ph> si aucun fournisseur parent a été passé.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /&gt;</ph> method.</source>
          <target state="translated">Si un fournisseur parent a été passé, cette méthode appelle le fournisseur de parent <ph id="ph1">&lt;see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>The type to convert to its runtime equivalent.</source>
          <target state="translated">Type à convertir en son équivalent au moment de l'exécution.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>Converts a reflection type into a runtime type.</source>
          <target state="translated">Convertit un type de réflexion en un type au moment de l'exécution.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the runtime equivalent of <ph id="ph2">&lt;paramref name="reflectionType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> qui représente l'équivalent au moment de l'exécution de <ph id="ph2">&lt;paramref name="reflectionType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> method reverses the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method to convert a reflection type back into a runtime type.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> méthode inverse le <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> méthode pour convertir un type de réflexion de nouveau un type de runtime.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>Using the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> method is preferred over using the <ph id="ph2">&lt;xref:System.Type.UnderlyingSystemType%2A&gt;</ph> property, which was used in earlier versions to return the runtime type.</source>
          <target state="translated">À l’aide de la <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> méthode est préférable à l’aide de la <ph id="ph2">&lt;xref:System.Type.UnderlyingSystemType%2A&gt;</ph> propriété, qui a été utilisée dans les versions antérieures pour retourner le type de runtime.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="reflectionType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reflectionType" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Gets a custom type descriptor for the given type or object.</source>
          <target state="translated">Obtient un descripteur de type personnalisé pour le type ou l'objet donné.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">Instance du type.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no instance was passed to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> si aucune instance n'est passée au <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>Gets a custom type descriptor for the given object.</source>
          <target state="translated">Obtient un descripteur de type personnalisé pour l'objet donné.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> qui peut fournir les métadonnées pour le type.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>The type of object for which to retrieve the type descriptor.</source>
          <target state="translated">Type d'objet pour lequel récupérer le descripteur de type.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>Gets a custom type descriptor for the given type.</source>
          <target state="translated">Obtient un descripteur de type personnalisé pour le type donné.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> qui peut fournir les métadonnées pour le type.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>The type of object for which to retrieve the type descriptor.</source>
          <target state="translated">Type d'objet pour lequel récupérer le descripteur de type.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">Instance du type.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no instance was passed to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> si aucune instance n'est passée au <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>Gets a custom type descriptor for the given type and object.</source>
          <target state="translated">Obtient un descripteur de type personnalisé pour le type et l'objet donné.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> qui peut fournir les métadonnées pour le type.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>This method is prototyped as <ph id="ph1">`virtual`</ph> and, by default, returns an empty descriptor if no parent provider was passed.</source>
          <target state="translated">Cette méthode est prototypée comme <ph id="ph1">`virtual`</ph> et, par défaut, retourne un descripteur vide si aucun fournisseur parent a été passé.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Si un fournisseur parent a été passé, cette méthode appelle le fournisseur de parent <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /&gt;</ph> method should return a custom type descriptor for the object.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /&gt;</ph> méthode doit retourner un descripteur de type personnalisé pour l’objet.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>If the method does not provide type information for the object, it should return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si la méthode ne fournit pas les informations de type pour l’objet, elle doit retourner <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source>The type to test for compatibility.</source>
          <target state="translated">Type dont la compatibilité doit être testée.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source>Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</source>
          <target state="translated">Obtient une valeur qui indique si le type spécifié est compatible avec la description de type et sa chaîne de fournisseurs de descriptions de types.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is compatible with the type description and its chain of type description providers; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="type" /&gt;</ph> est compatible avec la description de type et sa chaîne de fournisseurs de descriptions de types, sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>