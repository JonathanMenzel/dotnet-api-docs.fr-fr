<Type Name="TypeDescriptionProvider" FullName="System.ComponentModel.TypeDescriptionProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="78810a0d3161e71e0b4f17da0881ab026be14b8d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TypeDescriptionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeDescriptionProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptionProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeDescriptionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptionProvider abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="17ac0-101">Fournit les métadonnées supplémentaires au <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="17ac0-101">Provides supplemental metadata to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ac0-102">La <xref:System.ComponentModel.TypeDescriptionProvider> classe étend dynamiquement les informations de type associées à un type ou un objet en ajoutant, modifiant ou le masquage des caractéristiques telles que des attributs, des propriétés et des événements.</span><span class="sxs-lookup"><span data-stu-id="17ac0-102">The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</span></span> <span data-ttu-id="17ac0-103">Il peut y avoir plusieurs classes de fournisseur de description type offrir des métadonnées à un seul <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="17ac0-103">There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="17ac0-104">Il existe deux façons d’associer un <xref:System.ComponentModel.TypeDescriptionProvider> avec un <xref:System.ComponentModel.TypeDescriptor>:</span><span class="sxs-lookup"><span data-stu-id="17ac0-104">There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:</span></span>  
  
-   <span data-ttu-id="17ac0-105">Au moment du design, lorsque la classe cible peut être attribuée approprié <xref:System.ComponentModel.TypeDescriptionProviderAttribute> balise.</span><span class="sxs-lookup"><span data-stu-id="17ac0-105">At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.</span></span>  
  
-   <span data-ttu-id="17ac0-106">Au moment de l’exécution, lorsque l’une de la <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> méthodes de la <xref:System.ComponentModel.TypeDescriptor> classe peut être appelée.</span><span class="sxs-lookup"><span data-stu-id="17ac0-106">At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called.</span></span> <span data-ttu-id="17ac0-107">Ces méthodes surchargées requièrent l’objet cible ou son type de classe.</span><span class="sxs-lookup"><span data-stu-id="17ac0-107">These overloaded methods require either the target object or its class type.</span></span>  
  
 <span data-ttu-id="17ac0-108">La <xref:System.ComponentModel.TypeDescriptionProvider> classe s’appuie sur un objet parent du même type, fourni pendant la construction.</span><span class="sxs-lookup"><span data-stu-id="17ac0-108">The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction.</span></span> <span data-ttu-id="17ac0-109">Cela permet aux classes qui dérivent de <xref:System.ComponentModel.CustomTypeDescriptor> à substituer les méthodes de manière sélective.</span><span class="sxs-lookup"><span data-stu-id="17ac0-109">This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.</span></span>  
  
 <span data-ttu-id="17ac0-110">Instances de <xref:System.ComponentModel.TypeDescriptionProvider> sont construites uniquement à la demande, en réduisant l’impact des informations de type personnalisé sur les performances.</span><span class="sxs-lookup"><span data-stu-id="17ac0-110">Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.</span></span>  
  
 <span data-ttu-id="17ac0-111">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="17ac0-111">This class cannot be inherited.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="17ac0-112">Votre type dérivé peut être marqué en tant que <see langword="internal" /> ou <see langword="private" />, mais une instance de votre type peut être créée avec la <see cref="T:System.ComponentModel.TypeDescriptor" /> classe.</span>
        <span class="sxs-lookup">
          <span data-stu-id="17ac0-112">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span>
        </span>
        <span data-ttu-id="17ac0-113">Ne pas écrire de code non sécurisé en supposant que l’appelant est approuvé.</span>
        <span class="sxs-lookup">
          <span data-stu-id="17ac0-113">Do not write insecure code by assuming the caller is trusted.</span>
        </span>
        <span data-ttu-id="17ac0-114">Au lieu de cela, supposons que les appelants peuvent créer des instances de votre type en confiance partielle.</span>
        <span class="sxs-lookup">
          <span data-stu-id="17ac0-114">Assume instead that callers might create instances of your type in partial trust.</span>
        </span>
      </para>
    </block>
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
    <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="17ac0-115">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-115">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17ac0-116">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-116">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ac0-117">Ce constructeur est équivalent à l’appel de l’autre <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructeur avec une valeur de paramètre est `null`.</span><span class="sxs-lookup"><span data-stu-id="17ac0-117">This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.TypeDescriptionProvider parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parent As TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider(System::ComponentModel::TypeDescriptionProvider ^ parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="17ac0-118">Fournisseur de description de type parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-118">The parent type description provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-119">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> à l'aide d'un fournisseur de description de type parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-119">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class using a parent type description provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ac0-120">Si le `parent` paramètre est `null`, tous les <xref:System.ComponentModel.TypeDescriptionProvider> méthodes retournent des valeurs par défaut.</span><span class="sxs-lookup"><span data-stu-id="17ac0-120">If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values.</span></span> <span data-ttu-id="17ac0-121">Dans le cas contraire, tous les <xref:System.ComponentModel.TypeDescriptionProvider> méthodes délèguent aux méthodes de `parent`.</span><span class="sxs-lookup"><span data-stu-id="17ac0-121">Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.</span></span>  
  
 <span data-ttu-id="17ac0-122">Le tableau suivant montre les valeurs de retour par défaut <xref:System.ComponentModel.TypeDescriptionProvider> méthodes.</span><span class="sxs-lookup"><span data-stu-id="17ac0-122">The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.</span></span>  
  
|<span data-ttu-id="17ac0-123">Méthode</span><span class="sxs-lookup"><span data-stu-id="17ac0-123">Method</span></span>|<span data-ttu-id="17ac0-124">Valeur de retour par défaut</span><span class="sxs-lookup"><span data-stu-id="17ac0-124">Default return value</span></span>|  
|------------|--------------------------|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  
|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|<span data-ttu-id="17ac0-125">Un objet nouvellement créé via un appel à la <xref:System.Activator.CreateInstance%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="17ac0-125">A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|<span data-ttu-id="17ac0-126">Une instance par défaut d’un <xref:System.ComponentModel.CustomTypeDescriptor> classe.</span><span class="sxs-lookup"><span data-stu-id="17ac0-126">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|<span data-ttu-id="17ac0-127">Une instance par défaut d’un <xref:System.ComponentModel.CustomTypeDescriptor> classe.</span><span class="sxs-lookup"><span data-stu-id="17ac0-127">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|<span data-ttu-id="17ac0-128">Le `objectType` premier paramètre.</span><span class="sxs-lookup"><span data-stu-id="17ac0-128">The `objectType` first parameter.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="17ac0-129">Fournisseur de services facultatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-129">An optional service provider.</span>
          </span>
        </param>
        <param name="objectType">
          <span data-ttu-id="17ac0-130">Type de l'objet à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-130">The type of object to create.</span>
          </span>
          <span data-ttu-id="17ac0-131">Ce paramètre n'est jamais <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-131">This parameter is never <see langword="null" />.</span>
          </span>
        </param>
        <param name="argTypes">
          <span data-ttu-id="17ac0-132">Tableau facultatif des types qui représentent les types de paramètres à passer au constructeur de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-132">An optional array of types that represent the parameter types to be passed to the object's constructor.</span>
          </span>
          <span data-ttu-id="17ac0-133">Ce tableau peut être <see langword="null" /> ou de longueur nulle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-133">This array can be <see langword="null" /> or of zero length.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="17ac0-134">Tableau facultatif de valeurs de paramètre à passer au constructeur de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-134">An optional array of parameter values to pass to the object's constructor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-135">Crée un objet qui peut remplacer un autre type de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-135">Creates an object that can substitute for another data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-136">
            <see cref="T:System.Object" /> de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-136">The substitute <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ac0-137">Le <xref:System.IServiceProvider> spécifié par le `provider` paramètre est passé par le <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> méthode de la <xref:System.ComponentModel.TypeDescriptor> classe.</span><span class="sxs-lookup"><span data-stu-id="17ac0-137">The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="17ac0-138">Si `provider` n’est pas `null`, le fournisseur de services peut être utilisé par le fournisseur de description de type pour obtenir le contexte supplémentaire relatif à l’appel de création.</span><span class="sxs-lookup"><span data-stu-id="17ac0-138">If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.</span></span>  
  
 <span data-ttu-id="17ac0-139">Le <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> méthode est `virtual` et, par défaut, retourne le résultat de la <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> méthode si `provider` est `null`.</span><span class="sxs-lookup"><span data-stu-id="17ac0-139">The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method if `provider` is `null`.</span></span> <span data-ttu-id="17ac0-140">Si `provider` est `null`, cette méthode appelle la <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> méthode du fournisseur parent.</span><span class="sxs-lookup"><span data-stu-id="17ac0-140">If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="17ac0-141">Si la classe dérivée n’est pas intéressé par en fournissant une instance de substitution, il doit simplement appeler l’implémentation de base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="17ac0-141">If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetCache">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetCache (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetCache(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCache (instance As Object) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionary ^ GetCache(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="17ac0-142">Objet pour lequel obtenir le cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-142">The object for which to get the cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-143">Obtient un cache par objet accessible en tant que <see cref="T:System.Collections.IDictionary" /> de paires clé/valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-143">Gets a per-object cache, accessed as an <see cref="T:System.Collections.IDictionary" /> of key/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-144">
            <see cref="T:System.Collections.IDictionary" /> si l'objet fournit prend en charge la mise en cache ; sinon, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-144">An <see cref="T:System.Collections.IDictionary" /> if the provided object supports caching; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ac0-145">A <xref:System.ComponentModel.TypeDescriptor> devra peut-être effectuer des opérations complexes sur les collections de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="17ac0-145">A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata.</span></span> <span data-ttu-id="17ac0-146">Étant donné que les types ne sont pas déchargés durant la vie d’un domaine, le <xref:System.ComponentModel.TypeDescriptor> classe mettra automatiquement en cache les résultats de ces opérations basées sur le type.</span><span class="sxs-lookup"><span data-stu-id="17ac0-146">Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type.</span></span> <span data-ttu-id="17ac0-147">Toutefois, certaines opérations utilisent des instances d’objet dynamique.</span><span class="sxs-lookup"><span data-stu-id="17ac0-147">However, some operations use live object instances.</span></span> <span data-ttu-id="17ac0-148">Ces opérations ne peuvent pas être mis en cache dans le <xref:System.ComponentModel.TypeDescriptor> classe, car leur mise en cache empêcherait l’objet par le garbage collecté.</span><span class="sxs-lookup"><span data-stu-id="17ac0-148">These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected.</span></span> <span data-ttu-id="17ac0-149">Au lieu de cela, le <xref:System.ComponentModel.TypeDescriptor> permet de classe pour un cache par objet accédé en tant qu’un <xref:System.Collections.IDictionary> de paires clé/valeur, existe sur un objet.</span><span class="sxs-lookup"><span data-stu-id="17ac0-149">Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object.</span></span> <span data-ttu-id="17ac0-150">Le <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> méthode retourne une instance de ce cache.</span><span class="sxs-lookup"><span data-stu-id="17ac0-150">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache.</span></span> <span data-ttu-id="17ac0-151">Le <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> méthode retournera `null` s’il n’existe aucun cache pris en charge pour un objet.</span><span class="sxs-lookup"><span data-stu-id="17ac0-151">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.</span></span>  
  
 <span data-ttu-id="17ac0-152">La valeur par défaut <xref:System.ComponentModel.TypeDescriptionProvider> utilisé par <xref:System.ComponentModel.TypeDescriptor> examine l’objet pour voir si elle est un composant sur site qui implémente le <xref:System.ComponentModel.Design.IDictionaryService> interface.</span><span class="sxs-lookup"><span data-stu-id="17ac0-152">The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface.</span></span> <span data-ttu-id="17ac0-153">Si l’objet est, il utilise le service de dictionnaire pour stocker le cache de l’objet.</span><span class="sxs-lookup"><span data-stu-id="17ac0-153">If the object is, it uses the dictionary service to store the object's cache.</span></span> <span data-ttu-id="17ac0-154">Dans le cas contraire, l’objet retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="17ac0-154">Otherwise, the object it returns `null`.</span></span> <span data-ttu-id="17ac0-155">Autres fournisseurs de description de type peuvent fournir leur propre implémentation ici.</span><span class="sxs-lookup"><span data-stu-id="17ac0-155">Other type description providers may provide their own implementation here.</span></span> <span data-ttu-id="17ac0-156">Par exemple, les objets de dépendance peuvent simplement joindre une propriété de type <xref:System.Collections.IDictionary>.</span><span class="sxs-lookup"><span data-stu-id="17ac0-156">For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.ComponentModel.Design.IDictionaryService" />
      </Docs>
    </Member>
    <Member MemberName="GetExtendedTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetExtendedTypeDescriptor(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="17ac0-157">Objet pour lequel obtenir le descripteur de type étendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-157">The object for which to get the extended type descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-158">Obtient un descripteur de type personnalisé étendu pour l'objet donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-158">Gets an extended custom type descriptor for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-159">
            <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> qui peut fournir des métadonnées étendues pour l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-159">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide extended metadata for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ac0-160">Un descripteur de type étendu est un descripteur de type personnalisé qui offre les propriétés d’autres objets ont ajoutés à cet objet, mais qui ne sont pas réellement définies sur l’objet.</span><span class="sxs-lookup"><span data-stu-id="17ac0-160">An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</span></span> <span data-ttu-id="17ac0-161">Par exemple, dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] modèle de composant, les objets qui implémentent la <xref:System.ComponentModel.IExtenderProvider> interface peut joindre des propriétés à d’autres objets qui résident dans le même conteneur logique.</span><span class="sxs-lookup"><span data-stu-id="17ac0-161">For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container.</span></span> <span data-ttu-id="17ac0-162">Surchargées <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> méthodes ne retournent pas un descripteur de type qui fournit ces propriétés étendues supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="17ac0-162">The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties.</span></span> <span data-ttu-id="17ac0-163">Le <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> méthode retourne l’ensemble de ces propriétés étendues.</span><span class="sxs-lookup"><span data-stu-id="17ac0-163">The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties.</span></span> <span data-ttu-id="17ac0-164">Le <xref:System.ComponentModel.TypeDescriptor> fusionne automatiquement les résultats de ces deux collections de propriétés.</span><span class="sxs-lookup"><span data-stu-id="17ac0-164">The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections.</span></span> <span data-ttu-id="17ac0-165">Alors que le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] modèle de composant prend en charge uniquement les propriétés étendues, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> peut être utilisé pour les attributs étendus, ainsi que des événements, si le fournisseur de description de type qu’il prend en charge.</span><span class="sxs-lookup"><span data-stu-id="17ac0-165">While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.</span></span>  
  
 <span data-ttu-id="17ac0-166"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> est `virtual` et, par défaut, retourne un descripteur de type personnalisé qui retourne des résultats vides si aucun fournisseur parent a été passé.</span><span class="sxs-lookup"><span data-stu-id="17ac0-166"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</span></span> <span data-ttu-id="17ac0-167">Si un fournisseur parent a été passé, cette méthode appelle le fournisseur de parent <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="17ac0-167">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetExtenderProviders">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IExtenderProvider[] GetExtenderProviders(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetExtenderProviders (instance As Object) As IExtenderProvider()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::ComponentModel::IExtenderProvider ^&gt; ^ GetExtenderProviders(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IExtenderProvider[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="17ac0-168">Objet pour lequel obtenir des fournisseurs d'extendeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-168">The object to get extender providers for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-169">Obtient les fournisseurs d'extendeurs pour l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-169">Gets the extender providers for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-170">Tableau de fournisseurs d'extendeurs pour <paramref name="instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-170">An array of extender providers for <paramref name="instance" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17ac0-171">
            <paramref name="instance" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-171">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="17ac0-172">Le composant spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-172">The specified component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-173">Obtient le nom du composant spécifié ou <see langword="null" /> si le composant ne possède pas de nom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-173">Gets the name of the specified component, or <see langword="null" /> if the component has no name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-174">Nom du composant spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-174">The name of the specified component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17ac0-175">
            <paramref name="component" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-175">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="17ac0-176">Effectue la réflexion normale par rapport à un objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-176">Performs normal reflection against an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="17ac0-177">Instance du type (ne doit pas être <see langword="null" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-177">An instance of the type (should not be <see langword="null" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-178">Effectue la réflexion normale par rapport à l'objet donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-178">Performs normal reflection against the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-179">Type de réflexion pour ce <paramref name="instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-179">The type of reflection for this <paramref name="instance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ac0-180">Le <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> (méthode) est une version de niveau inférieur de la <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="17ac0-180">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="17ac0-181">Si aucun descripteur de type personnalisé ne peut être localisé pour un objet, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> est appelée pour effectuer la réflexion normale par rapport à l’objet.</span><span class="sxs-lookup"><span data-stu-id="17ac0-181">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="17ac0-182">Utilisez cette surcharge de méthode si vous avez appelé un membre du descripteur de type qui utilise une instance au lieu d’un type.</span><span class="sxs-lookup"><span data-stu-id="17ac0-182">Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17ac0-183">
            <paramref name="instance" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-183">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (objectType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(Type ^ objectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="17ac0-184">Type d'objet pour lequel récupérer <see cref="T:System.Reflection.IReflect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-184">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-185">Effectue la réflexion normale par rapport à un type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-185">Performs normal reflection against a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-186">Type de réflexion pour ce <paramref name="objectType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-186">The type of reflection for this <paramref name="objectType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ac0-187">Le <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> (méthode) est une version de niveau inférieur de la <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="17ac0-187">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="17ac0-188">Si aucun descripteur de type personnalisé ne peut être localisé pour un objet, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> est appelée pour effectuer la réflexion normale par rapport à l’objet.</span><span class="sxs-lookup"><span data-stu-id="17ac0-188">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="17ac0-189">Utilisez cette surcharge de méthode si vous avez appelé un membre du descripteur de type qui utilise un type au lieu d’une instance.</span><span class="sxs-lookup"><span data-stu-id="17ac0-189">Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17ac0-190">
            <paramref name="objectType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-190">
              <paramref name="objectType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public virtual Type GetReflectionType (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReflectionType(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReflectionType (objectType As Type, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetReflectionType(Type ^ objectType, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="17ac0-191">Type d'objet pour lequel récupérer <see cref="T:System.Reflection.IReflect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-191">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="17ac0-192">Instance du type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-192">An instance of the type.</span>
          </span>
          <span data-ttu-id="17ac0-193">Peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-193">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-194">Effectue la réflexion normale par rapport à l'objet donné à l'aide du type donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-194">Performs normal reflection against the given object with the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-195">Type de réflexion pour ce <paramref name="objectType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-195">The type of reflection for this <paramref name="objectType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ac0-196">Le <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> (méthode) est une version de niveau inférieur de la <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="17ac0-196">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="17ac0-197">Si aucun descripteur de type personnalisé ne peut être localisé pour un objet, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> est appelée pour effectuer la réflexion normale par rapport à l’objet.</span><span class="sxs-lookup"><span data-stu-id="17ac0-197">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="17ac0-198">Cette méthode est prototypée en tant que <see langword="virtual" />et par défaut retourne <paramref name="objectType" /> si aucun fournisseur parent a été passé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="17ac0-198">This method is prototyped as <see langword="virtual" />, and by default returns <paramref name="objectType" /> if no parent provider was passed.</span>
            </span>
            <span data-ttu-id="17ac0-199">Si un fournisseur parent a été passé, cette méthode appelle le fournisseur de parent <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> (méthode).</span>
            <span class="sxs-lookup">
              <span data-stu-id="17ac0-199">If a parent provider was passed, this method will invoke the parent provider's <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public virtual Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType">
          <span data-ttu-id="17ac0-200">Type à convertir en son équivalent au moment de l'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-200">The type to convert to its runtime equivalent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-201">Convertit un type de réflexion en un type au moment de l'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-201">Converts a reflection type into a runtime type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-202">
            <see cref="T:System.Type" /> qui représente l'équivalent au moment de l'exécution de <paramref name="reflectionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-202">A <see cref="T:System.Type" /> that represents the runtime equivalent of <paramref name="reflectionType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ac0-203">Le <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> méthode inverse le <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> méthode pour convertir un type de réflexion de nouveau un type de runtime.</span><span class="sxs-lookup"><span data-stu-id="17ac0-203">The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type.</span></span> <span data-ttu-id="17ac0-204">À l’aide de la <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> méthode est préférable à l’aide de la <xref:System.Type.UnderlyingSystemType%2A> propriété, qui a été utilisée dans les versions antérieures pour retourner le type de runtime.</span><span class="sxs-lookup"><span data-stu-id="17ac0-204">Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17ac0-205">
            <paramref name="reflectionType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-205">
              <paramref name="reflectionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeDescriptor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="17ac0-206">Obtient un descripteur de type personnalisé pour le type ou l'objet donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-206">Gets a custom type descriptor for the given type or object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="17ac0-207">Instance du type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-207">An instance of the type.</span>
          </span>
          <span data-ttu-id="17ac0-208">Peut être <see langword="null" /> si aucune instance n'est passée au <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-208">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-209">Obtient un descripteur de type personnalisé pour l'objet donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-209">Gets a custom type descriptor for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-210">
            <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> qui peut fournir les métadonnées pour le type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-210">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17ac0-211">
            <paramref name="instance" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-211">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (objectType As Type) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="17ac0-212">Type d'objet pour lequel récupérer le descripteur de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-212">The type of object for which to retrieve the type descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-213">Obtient un descripteur de type personnalisé pour le type donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-213">Gets a custom type descriptor for the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-214">
            <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> qui peut fournir les métadonnées pour le type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-214">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeDescriptor (objectType As Type, instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="17ac0-215">Type d'objet pour lequel récupérer le descripteur de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-215">The type of object for which to retrieve the type descriptor.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="17ac0-216">Instance du type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-216">An instance of the type.</span>
          </span>
          <span data-ttu-id="17ac0-217">Peut être <see langword="null" /> si aucune instance n'est passée au <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-217">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-218">Obtient un descripteur de type personnalisé pour le type et l'objet donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-218">Gets a custom type descriptor for the given type and object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-219">
            <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> qui peut fournir les métadonnées pour le type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-219">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ac0-220">Cette méthode est prototypée comme `virtual` et, par défaut, retourne un descripteur vide si aucun fournisseur parent a été passé.</span><span class="sxs-lookup"><span data-stu-id="17ac0-220">This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed.</span></span> <span data-ttu-id="17ac0-221">Si un fournisseur parent a été passé, cette méthode appelle le fournisseur de parent <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="17ac0-221">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="17ac0-222">Le <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> méthode doit retourner un descripteur de type personnalisé pour l’objet.</span>
            <span class="sxs-lookup">
              <span data-stu-id="17ac0-222">The <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> method should return a custom type descriptor for the object.</span>
            </span>
            <span data-ttu-id="17ac0-223">Si la méthode ne fournit pas les informations de type pour l’objet, elle doit retourner <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="17ac0-223">If the method does not provide type information for the object, it should return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public virtual bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupportedType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="17ac0-224">Type dont la compatibilité doit être testée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-224">The type to test for compatibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17ac0-225">Obtient une valeur qui indique si le type spécifié est compatible avec la description de type et sa chaîne de fournisseurs de descriptions de types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-225">Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17ac0-226">
            <see langword="true" /> si <paramref name="type" /> est compatible avec la description de type et sa chaîne de fournisseurs de descriptions de types, sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-226">
              <see langword="true" /> if <paramref name="type" /> is compatible with the type description and its chain of type description providers; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="17ac0-227">
            <paramref name="type" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17ac0-227">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>