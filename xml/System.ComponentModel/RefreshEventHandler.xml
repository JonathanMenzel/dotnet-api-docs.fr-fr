<Type Name="RefreshEventHandler" FullName="System.ComponentModel.RefreshEventHandler">
  <TypeSignature Language="C#" Value="public delegate void RefreshEventHandler(RefreshEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RefreshEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.RefreshEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RefreshEventHandler(e As RefreshEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RefreshEventHandler(RefreshEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="e" Type="System.ComponentModel.RefreshEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="e"><span data-ttu-id="2c4cd-101"><see cref="T:System.ComponentModel.RefreshEventArgs" /> qui contient le composant ou le <see cref="T:System.Type" /> modifiés.</span><span class="sxs-lookup"><span data-stu-id="2c4cd-101">A <see cref="T:System.ComponentModel.RefreshEventArgs" /> that contains the component or <see cref="T:System.Type" /> that changed.</span></span></param>
    <summary><span data-ttu-id="2c4cd-102">Représente la méthode qui gère l'événement <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" /> déclenché lorsque <see cref="T:System.Type" /> ou un composant est modifié au moment du design.</span><span class="sxs-lookup"><span data-stu-id="2c4cd-102">Represents the method that handles the <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" /> event raised when a <see cref="T:System.Type" /> or component is changed during design time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c4cd-103">Lorsque vous créez un délégué <xref:System.ComponentModel.RefreshEventHandler>, vous identifiez la méthode qui gérera l'événement.</span><span class="sxs-lookup"><span data-stu-id="2c4cd-103">When you create a <xref:System.ComponentModel.RefreshEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="2c4cd-104">Pour associer l'événement au gestionnaire d'événements, ajoutez une instance du délégué à l'événement.</span><span class="sxs-lookup"><span data-stu-id="2c4cd-104">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="2c4cd-105">Le gestionnaire d'événements est appelé chaque fois qu'un événement se produit, sauf si vous supprimez le délégué.</span><span class="sxs-lookup"><span data-stu-id="2c4cd-105">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="2c4cd-106">Pour plus d’informations sur les délégués de gestionnaires d’événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2c4cd-106">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c4cd-107">L’exemple suivant montre comment utiliser un <xref:System.ComponentModel.RefreshEventHandler> délégué pour gérer les <xref:System.ComponentModel.TypeDescriptor.Refreshed> événement lorsqu’un type ou un composant est modifiée.</span><span class="sxs-lookup"><span data-stu-id="2c4cd-107">The following sample demonstrates how to use a <xref:System.ComponentModel.RefreshEventHandler> delegate to handle the <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when a type or component changes.</span></span> <span data-ttu-id="2c4cd-108">Dans le code, le `OnRefreshed` événements gère l’événement et affiche le composant en cours de modification.</span><span class="sxs-lookup"><span data-stu-id="2c4cd-108">In the code, the `OnRefreshed` event handles the event and displays the component being changed.</span></span>  
  
 <span data-ttu-id="2c4cd-109">Le code suppose qu’un `TextBox` contrôle est déjà dans le site sur le formulaire.</span><span class="sxs-lookup"><span data-stu-id="2c4cd-109">The code assumes that a `TextBox` control is already sited on the form.</span></span>  
  
 [!code-cpp[RefreshEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RefreshEventHandler/CPP/refreshevent.cpp#1)]
 [!code-csharp[RefreshEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RefreshEventHandler/CS/refreshevent.cs#1)]
 [!code-vb[RefreshEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RefreshEventHandler/VB/refreshevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.RefreshEventArgs" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
  </Docs>
</Type>