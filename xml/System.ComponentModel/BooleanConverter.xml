<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BooleanConverter.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56563a5884237452c49a7b6d17223520e15b9568f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6563a5884237452c49a7b6d17223520e15b9568f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.BooleanConverter">
          <source>Provides a type converter to convert <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> objects to and from various other representations.</source>
          <target state="translated">Fournit un convertisseur de type pour convertir les objets <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> vers et à partir d'autres représentations.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.BooleanConverter">
          <source>This converter can only convert a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> object to and from a string.</source>
          <target state="translated">Ce convertisseur peut uniquement convertir un <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> objet vers et à partir d’une chaîne.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.BooleanConverter">
          <source>For more information about type converters, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les convertisseurs de type, consultez la <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> classe de base et <bpt id="p1">[</bpt>Comment : implémenter un convertisseur de Type<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.BooleanConverter">
          <source>You should never create an instance of a <ph id="ph1">&lt;xref:System.ComponentModel.BooleanConverter&gt;</ph>.</source>
          <target state="translated">Vous ne devez jamais créer une instance d’un <ph id="ph1">&lt;xref:System.ComponentModel.BooleanConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.BooleanConverter">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.</source>
          <target state="translated">Au lieu de cela, appelez la méthode <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> de la classe <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.BooleanConverter">
          <source>For more information, see the examples in the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class.</source>
          <target state="translated">Pour plus d’informations, consultez les exemples dans la <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> classe de base.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.BooleanConverter">
          <source>The following code example converts a variable of type <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> to and from a string.</source>
          <target state="translated">L’exemple de code suivant convertit une variable de type <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> vers et à partir d’une chaîne.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.BooleanConverter" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.BooleanConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> qui fournit un contexte de format.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type you wish to convert from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> qui représente le type à partir duquel vous voulez effectuer la conversion.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Gets a value indicating whether this converter can convert an object in the given source type to a Boolean object using the specified context.</source>
          <target state="translated">Obtient une valeur indiquant si ce convertisseur peut convertir un objet du type source donné en objet booléen en utilisant le contexte spécifié.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si cet objet peut effectuer la conversion ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This converter can only convert a Boolean object to and from a string.</source>
          <target state="translated">Ce convertisseur peut convertir uniquement d’un objet Boolean vers et à partir d’une chaîne.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">Le paramètre <ph id="ph1">`context`</ph> peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Vérifiez toujours, car la valeur peut être <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">En outre, les propriétés de l'objet de contexte peuvent retourner <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> qui fournit un contexte de format.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that specifies the culture to which to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> qui spécifie la culture vers laquelle effectuer la conversion.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à convertir.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Converts the given value object to a Boolean object.</source>
          <target state="translated">Convertit l'objet de valeur donné en objet booléen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui représente <ph id="ph2">&lt;paramref name="value" /&gt;</ph> converti.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>This converter can only convert a Boolean object to and from a string.</source>
          <target state="translated">Ce convertisseur peut convertir uniquement d’un objet Boolean vers et à partir d’une chaîne.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">Le paramètre <ph id="ph1">`context`</ph> peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Vérifiez toujours, car la valeur peut être <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">En outre, les propriétés de l'objet de contexte peuvent retourner <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a valid value for the target type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> n'est pas une valeur valide pour le type cible.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">La conversion ne peut pas être effectuée.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> qui fournit un contexte de format.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a collection of standard values for the Boolean data type.</source>
          <target state="translated">Obtient une collection de valeurs standard pour le type de données booléen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> that holds a standard set of valid values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> qui contient un ensemble standard de valeurs valides.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>The Boolean data type has two standard values, <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Le type de données booléen possède deux valeurs standard, <ph id="ph1">`true`</ph> et <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> qui fournit un contexte de format.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a value indicating whether the list of standard values returned from the <ph id="ph1">&lt;see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> method is an exclusive list.</source>
          <target state="translated">Obtient une valeur indiquant si la liste de valeurs standard retournée par la méthode <ph id="ph1">&lt;see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> est une liste exclusive.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> because the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> returned from <ph id="ph3">&lt;see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> is an exhaustive list of possible values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> parce que le <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> retourné depuis <ph id="ph3">&lt;see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> est une liste exhaustive de valeurs possibles.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>This method never returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode ne retourne jamais <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>The Boolean data type has only two standard values, <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Le type de données booléen a seulement deux valeurs standard, <ph id="ph1">`true`</ph> et <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt;</ph> returned from this method has all possible values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt;</ph> retourné par cette méthode a toutes les valeurs possibles.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Therefore, this method always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Par conséquent, cette méthode retourne toujours <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> qui fournit un contexte de format.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a value indicating whether this object supports a standard set of values that can be picked from a list.</source>
          <target state="translated">Obtient une valeur indiquant si cet objet prend en charge une série de valeurs standard qui peuvent être sélectionnées dans une liste.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> because <ph id="ph2">&lt;see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> can be called to find a common set of values the object supports.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> car <ph id="ph2">&lt;see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> peut être appelé pour rechercher un ensemble de valeurs communes prises en charge par l'objet.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This method never returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode ne retourne jamais <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>The Boolean data type supports standard values, because a Boolean can only be <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Le type de données booléen prend en charge les valeurs standard, car un booléen peut être seulement <ph id="ph1">`true`</ph> ou <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Therefore, this method always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Par conséquent, cette méthode retourne toujours <ph id="ph1">`true`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>