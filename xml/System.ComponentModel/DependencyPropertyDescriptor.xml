<Type Name="DependencyPropertyDescriptor" FullName="System.ComponentModel.DependencyPropertyDescriptor">
  <TypeSignature Language="C#" Value="public sealed class DependencyPropertyDescriptor : System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DependencyPropertyDescriptor extends System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DependencyPropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependencyPropertyDescriptor&#xA;Inherits PropertyDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyDescriptor sealed : System::ComponentModel::PropertyDescriptor" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.PropertyDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a3c4c-101">Fournit une extension de <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui tient compte des caractéristiques de propriété supplémentaires d’une propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-101">Provides an extension of <see cref="T:System.ComponentModel.PropertyDescriptor" /> that accounts for the additional property characteristics of a dependency property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-102">Cette classe est principalement utilisée par les applications concepteur.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-102">This class is primarily used by designer applications.</span></span> <span data-ttu-id="a3c4c-103">Ces applications peuvent devoir de signaler les caractéristiques de propriété de dépendance via des fenêtres de propriétés ou autres outils utilisés pour modifier les valeurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-103">These applications may need to report the dependency property characteristics through property windows or other tools used for editing property values.</span></span>  
  
 <span data-ttu-id="a3c4c-104">Pour une propriété spécifique pour déterminer si elle a <xref:System.ComponentModel.DependencyPropertyDescriptor> disponible à utiliser comme un <xref:System.ComponentModel.PropertyDescriptor>, appelez <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType>, ou <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-104">In order to check a specific property to determine whether it has <xref:System.ComponentModel.DependencyPropertyDescriptor> available to serve as a <xref:System.ComponentModel.PropertyDescriptor>, call either <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType>, or <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a3c4c-105">Si une méthode retourne `null`, puis la propriété n’est pas une propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-105">If either method returns `null`, then the property is not a dependency property.</span></span> <span data-ttu-id="a3c4c-106">Si la méthode retourne un élément valide <xref:System.ComponentModel.DependencyPropertyDescriptor> , puis la propriété est une propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-106">If the method returns a valid <xref:System.ComponentModel.DependencyPropertyDescriptor> , then the property is a dependency property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public override void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a3c4c-107">Composant pour lequel ajouter le gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-107">The component to add the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="a3c4c-108">Délégué à ajouter en tant qu'écouteur.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-108">The delegate to add as a listener.</span></span></param>
        <summary><span data-ttu-id="a3c4c-109">Permet à d'autres objets d'être avertis en cas de modification de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-109">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-110">Obtient la collection des attributs de ce membre.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-110">Gets the collection of attributes for this member.</span></span></summary>
        <value><span data-ttu-id="a3c4c-111">Collection d'attributs <see cref="T:System.ComponentModel.AttributeCollection" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-111">The <see cref="T:System.ComponentModel.AttributeCollection" /> collection of attributes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public override bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a3c4c-112">Composant dont la fonction de réinitialisation doit être testée.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-112">The component to test for reset capability.</span></span></param>
        <summary><span data-ttu-id="a3c4c-113">Retourne une valeur indiquant si la réinitialisation d'un objet modifie sa valeur.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-113">Returns whether resetting an object changes its value.</span></span></summary>
        <returns>
          <span data-ttu-id="a3c4c-114"><see langword="true" /> si la réinitialisation du composant modifie sa valeur ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-114"><see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-115">Cette méthode s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-115">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public override string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Category" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Category { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-116">Obtient le nom de la catégorie à laquelle le membre appartient, comme spécifié dans <see cref="T:System.ComponentModel.CategoryAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-116">Gets the name of the category that the member belongs to, as specified in the <see cref="T:System.ComponentModel.CategoryAttribute" />.</span></span></summary>
        <value><span data-ttu-id="a3c4c-117">Nom de la catégorie à laquelle le membre appartient.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-117">The name of the category to which the member belongs.</span></span> <span data-ttu-id="a3c4c-118">S'il n'existe aucun <see cref="T:System.ComponentModel.CategoryAttribute" />, le nom de la catégorie est celui de la catégorie par défaut, <see langword="Misc" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-118">If there is no <see cref="T:System.ComponentModel.CategoryAttribute" />, the category name is set to the default category, <see langword="Misc" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-119">Cette propriété s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-119">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public override Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ComponentType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-120">Obtient le type du composant auquel cette propriété est liée.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-120">Gets the type of the component this property is bound to.</span></span></summary>
        <value><span data-ttu-id="a3c4c-121"><see cref="T:System.Type" /> représentant le type du composant auquel cette propriété est liée.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-121">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span></span> <span data-ttu-id="a3c4c-122">Lors de l'appel des méthodes <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> ou <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />, l'objet spécifié peut être une instance de ce type.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-122">When <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> are invoked, the object specified might be an instance of this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-123">Cette propriété s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-123">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-124">Obtient le convertisseur de type pour cette propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-124">Gets the type converter for this property.</span></span></summary>
        <value><span data-ttu-id="a3c4c-125"><see cref="T:System.ComponentModel.TypeConverter" /> utilisé pour convertir le <see cref="T:System.Type" /> de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-125">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-126">Cette propriété peut être `null` dans les cas où avec attributs <xref:System.ComponentModel.TypeConverter> n’est pas une classe publique.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-126">This property may be `null` in cases where the attributed <xref:System.ComponentModel.TypeConverter> is not a public class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-127">Retourne l’identificateur de la propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-127">Returns the dependency property identifier.</span></span></summary>
        <value><span data-ttu-id="a3c4c-128">Identificateur de la propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-128">The dependency property identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-129">Cette propriété peut être `null` si un <xref:System.ComponentModel.DependencyPropertyDescriptor> instance a été créée pour une propriété qui n’est pas une propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-129">This property may be `null` if a <xref:System.ComponentModel.DependencyPropertyDescriptor> instance was created for a property that is not a dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-130">Obtient la description du membre, telle qu'elle est spécifiée dans <see cref="T:System.ComponentModel.DescriptionAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-130">Gets the description of the member, as specified in the <see cref="T:System.ComponentModel.DescriptionAttribute" />.</span></span></summary>
        <value><span data-ttu-id="a3c4c-131">Description du membre.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-131">The description of the member.</span></span> <span data-ttu-id="a3c4c-132">S'il n'existe aucun <see cref="T:System.ComponentModel.DescriptionAttribute" />, la valeur de la propriété est la valeur par défaut, c'est-à-dire une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="a3c4c-132">If there is no <see cref="T:System.ComponentModel.DescriptionAttribute" />, the property value is set to the default, which is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-133">Cette propriété s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-133">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerCoerceValueCallback">
      <MemberSignature Language="C#" Value="public System.Windows.CoerceValueCallback DesignerCoerceValueCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.CoerceValueCallback DesignerCoerceValueCallback" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property DesignerCoerceValueCallback As CoerceValueCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::CoerceValueCallback ^ DesignerCoerceValueCallback { System::Windows::CoerceValueCallback ^ get(); void set(System::Windows::CoerceValueCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.CoerceValueCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-134">Obtient ou définit un rappel utilisé par les concepteurs pour modifier la valeur effective d'une propriété de dépendance avant que la valeur de propriété de dépendance ne soit stockée dans le moteur de propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-134">Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</span></span></summary>
        <value><span data-ttu-id="a3c4c-135">Rappel utilisé par les concepteurs pour modifier la valeur effective d'une propriété de dépendance avant que la valeur de propriété de dépendance ne soit stockée dans le moteur de propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-135">A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeOnly">
      <MemberSignature Language="C#" Value="public override bool DesignTimeOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DesignTimeOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-136">Obtient une valeur indiquant si ce membre ne doit être défini qu'au moment du design, comme spécifié dans <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-136">Gets whether this member should be set only at design time, as specified in the <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</span></span></summary>
        <value>
          <span data-ttu-id="a3c4c-137"><see langword="true" /> si ce membre ne doit être défini qu'au moment du design ; <see langword="false" /> si le membre peut être défini pendant l'exécution.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-137"><see langword="true" /> if this member should be set only at design time; <see langword="false" /> if the member can be set during run time.</span></span> <span data-ttu-id="a3c4c-138">S'il n'existe aucun <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, la valeur de retour est la valeur par défaut, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-138">If there is no <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, the return value is the default, which is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-139">Cette propriété s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-139">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public override string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-140">Obtient le nom qui peut être affiché dans une fenêtre, telle qu'une fenêtre Propriétés.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-140">Gets the name that can be displayed in a window, such as a Properties window.</span></span></summary>
        <value><span data-ttu-id="a3c4c-141">Nom de la propriété à afficher.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-141">The name to display for the property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-142">Cette propriété s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-142">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DependencyProperty.Name" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a3c4c-143"><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> à comparer à l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-143">The <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="a3c4c-144">Compare si deux instances <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> sont égales.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-144">Compares two <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> instances for equality.</span></span></summary>
        <returns>
          <span data-ttu-id="a3c4c-145"><see langword="true" /> si les valeurs sont équivalentes ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-145"><see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromName">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3c4c-146">Retourne un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour un nom de propriété fourni.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-146">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromName(string name, class System.Type ownerType, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromName (name As String, ownerType As Type, targetType As Type) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromName(System::String ^ name, Type ^ ownerType, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a3c4c-147">Nom inscrit d’une propriété de dépendance ou d’une propriété jointe.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-147">The registered name of a dependency property or an attached property.</span></span></param>
        <param name="ownerType"><span data-ttu-id="a3c4c-148"><see cref="T:System.Type" /> de l'objet possédant la définition de la propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-148">The <see cref="T:System.Type" /> of the object that owns the property definition.</span></span></param>
        <param name="targetType"><span data-ttu-id="a3c4c-149"><see cref="T:System.Type" /> de l'objet pour lequel vous souhaitez définir la propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-149">The <see cref="T:System.Type" /> of the object you want to set the property for.</span></span></param>
        <summary><span data-ttu-id="a3c4c-150">Retourne un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour un nom de propriété fourni.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-150">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span></span></summary>
        <returns><span data-ttu-id="a3c4c-151">Objet <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> demandé.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-151">The requested <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-152">Le `name` peut faire référence à une propriété de dépendance ou une propriété jointe et est la `name` paramètre passé à la <xref:System.Windows.DependencyProperty.Register%2A> ou <xref:System.Windows.DependencyProperty.RegisterAttached%2A> appel qui a défini la propriété en question.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-152">The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question.</span></span> <span data-ttu-id="a3c4c-153">`ownerType` est le type d’objet qui possède la propriété, à nouveau en tant que passé à <xref:System.Windows.DependencyProperty.Register%2A> ou <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-153">`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span></span> <span data-ttu-id="a3c4c-154">`targetType` est le type d’objet que vous souhaitez définir la propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-154">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="a3c4c-155">Propriétés de dépendance, `ownerType` et `targetType` sont du même type.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-155">For dependency properties, `ownerType` and `targetType` are the same type.</span></span> <span data-ttu-id="a3c4c-156">Pour les propriétés jointes généralement les différencient.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-156">For attached properties they usually differ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType, bool ignorePropertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromName(string name, class System.Type ownerType, class System.Type targetType, bool ignorePropertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromName (name As String, ownerType As Type, targetType As Type, ignorePropertyType As Boolean) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromName(System::String ^ name, Type ^ ownerType, Type ^ targetType, bool ignorePropertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="ignorePropertyType" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a3c4c-157">Nom inscrit d’une propriété de dépendance ou d’une propriété jointe.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-157">The registered name of a dependency property or an attached property.</span></span></param>
        <param name="ownerType"><span data-ttu-id="a3c4c-158"><see cref="T:System.Type" /> de l'objet possédant la définition de la propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-158">The <see cref="T:System.Type" /> of the object that owns the property definition.</span></span></param>
        <param name="targetType"><span data-ttu-id="a3c4c-159"><see cref="T:System.Type" /> de l'objet pour lequel vous souhaitez définir la propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-159">The <see cref="T:System.Type" /> of the object you want to set the property for.</span></span></param>
        <param name="ignorePropertyType"><span data-ttu-id="a3c4c-160">Indique qu’il faut ignorer le type de propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-160">Specifies to ignore the property type.</span></span></param>
        <summary><span data-ttu-id="a3c4c-161">Retourne un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour un nom de propriété fourni.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-161">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span></span></summary>
        <returns><span data-ttu-id="a3c4c-162">Objet <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> demandé.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-162">The requested <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-163">Le `name` peut faire référence à une propriété de dépendance ou une propriété jointe et est la `name` paramètre passé à la <xref:System.Windows.DependencyProperty.Register%2A> ou <xref:System.Windows.DependencyProperty.RegisterAttached%2A> appel qui a défini la propriété en question.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-163">The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question.</span></span> <span data-ttu-id="a3c4c-164">`ownerType` est le type d’objet qui possède la propriété, à nouveau en tant que passé à <xref:System.Windows.DependencyProperty.Register%2A> ou <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-164">`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span></span> <span data-ttu-id="a3c4c-165">`targetType` est le type d’objet que vous souhaitez définir la propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-165">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="a3c4c-166">Propriétés de dépendance, `ownerType` et `targetType` sont du même type.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-166">For dependency properties, `ownerType` and `targetType` are the same type.</span></span> <span data-ttu-id="a3c4c-167">Pour les propriétés jointes généralement les différencient.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-167">For attached properties they usually differ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromProperty">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3c4c-168">Retourne un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> basé soit sur un <see cref="T:System.ComponentModel.PropertyDescriptor" /> fourni soit sur un type fourni, selon la signature utilisée.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-168">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> based either on a provided <see cref="T:System.ComponentModel.PropertyDescriptor" /> or a provided type, depending on the signature used.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromProperty(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromProperty (property As PropertyDescriptor) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromProperty(System::ComponentModel::PropertyDescriptor ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="a3c4c-169"><see cref="T:System.ComponentModel.PropertyDescriptor" /> à vérifier.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-169">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to check.</span></span></param>
        <summary><span data-ttu-id="a3c4c-170">Retourne <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour le <see cref="T:System.ComponentModel.PropertyDescriptor" /> fourni.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-170">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="a3c4c-171">Si la propriété décrite par <paramref name="property" /> est une propriété de dépendance, retourne un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> valide.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-171">If the property described by <paramref name="property" /> is a dependency property, returns a valid <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span> <span data-ttu-id="a3c4c-172">Sinon, retourne <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-172">Otherwise, returns a <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-173">Cette méthode est la méthode principale utilisée par les applications concepteur pour obtenir un <xref:System.ComponentModel.DependencyPropertyDescriptor> sur la base de la vérification de toutes les propriétés pour un <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-173">This method is the primary method used by designer applications to obtain a <xref:System.ComponentModel.DependencyPropertyDescriptor> on basis of checking all properties for a <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.Windows.DependencyProperty dependencyProperty, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromProperty(class System.Windows.DependencyProperty dependencyProperty, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromProperty(System::Windows::DependencyProperty ^ dependencyProperty, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><span data-ttu-id="a3c4c-174">Identificateur d’une propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-174">The identifier for a dependency property.</span></span></param>
        <param name="targetType"><span data-ttu-id="a3c4c-175">Type de l’objet sur lequel la propriété est définie.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-175">The type of the object where the property is set.</span></span></param>
        <summary><span data-ttu-id="a3c4c-176">Retourne <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour un type de cible et une propriété de dépendance fournis.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-176">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided dependency property and target type.</span></span></summary>
        <returns><span data-ttu-id="a3c4c-177"><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> pour la propriété de dépendance fournie.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-177">A <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for the provided dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-178">Le `dependencyProperty` peut faire référence à une propriété de dépendance ou une propriété jointe.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-178">The `dependencyProperty` may refer to a dependency property or an attached property.</span></span> <span data-ttu-id="a3c4c-179">`targetType` est le type d’objet que vous souhaitez définir la propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-179">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="a3c4c-180">Propriétés de dépendance, ce type est équivalente à la <xref:System.Windows.DependencyProperty.OwnerType%2A> pour le `dependencyProperty`.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-180">For dependency properties, that type is equivalent to the <xref:System.Windows.DependencyProperty.OwnerType%2A> for the `dependencyProperty`.</span></span> <span data-ttu-id="a3c4c-181">Pour les propriétés jointes le `targetType` est généralement un autre <xref:System.Windows.DependencyObject> type.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-181">For attached properties the `targetType` is typically some other <xref:System.Windows.DependencyObject> type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="a3c4c-182">Composant dont les propriétés doivent être obtenues.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-182">A component to get the properties for.</span></span></param>
        <param name="filter"><span data-ttu-id="a3c4c-183">Tableau de type <see cref="T:System.Attribute" /> à utiliser comme filtre.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-183">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="a3c4c-184">Retourne <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-184">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span></span></summary>
        <returns><span data-ttu-id="a3c4c-185"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> avec les propriétés qui correspondent aux attributs spécifiés pour le composant indiqué.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-185">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-186">Cette méthode s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-186">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public override object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="a3c4c-187">Type de base de l'éditeur, utilisé pour différencier plusieurs éditeurs pris en charge par une propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-187">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span></span></param>
        <summary><span data-ttu-id="a3c4c-188">Obtient un éditeur du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-188">Gets an editor of the specified type.</span></span></summary>
        <returns><span data-ttu-id="a3c4c-189">Instance du type d'éditeur demandé, ou <see langword="null" /> si l'éditeur est introuvable.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-189">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-190">Cette méthode s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-190">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3c4c-191">Retourne le code de hachage pour ce <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-191">Returns the hash code for this <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="a3c4c-192">Code de hachage d'un entier signé 32 bits.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-192">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-193">Le code de hachage pour <xref:System.ComponentModel.DependencyPropertyDescriptor> est basée sur l’identificateur pour une propriété de dépendance et sur le type sur lequel elle est définie.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-193">The hash code for <xref:System.ComponentModel.DependencyPropertyDescriptor> is based both on the identifier for a dependency property and on the type on which it is set.</span></span> <span data-ttu-id="a3c4c-194">Cette implémentation garantit qu’un <xref:System.ComponentModel.DependencyPropertyDescriptor> ne retourne pas de manière incorrecte le même code de hachage pour les propriétés qui sont héritées par nombreuses classes dérivées possibles, ou pour les propriétés qui sont autrement ré-assignées via le système de propriétés.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-194">This implementation assures that a <xref:System.ComponentModel.DependencyPropertyDescriptor> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a3c4c-195">Instance du composant.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-195">The component instance.</span></span></param>
        <summary><span data-ttu-id="a3c4c-196">Retourne la valeur actuelle de la propriété d'un composant.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-196">Resturns the current value of the property on a component.</span></span></summary>
        <returns><span data-ttu-id="a3c4c-197">Valeur demandée.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-197">The requested value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-198">Cette méthode s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-198">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-199">Obtient une valeur qui indique si la propriété est inscrite comme propriété jointe et est utilisée via une utilisation attachée.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-199">Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.</span></span></summary>
        <value>
          <span data-ttu-id="a3c4c-200"><see langword="true" /> Si la propriété est une propriété jointe ; dans le cas contraire, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-200"><see langword="true" /> if the property is an attached property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowsable">
      <MemberSignature Language="C#" Value="public override bool IsBrowsable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowsable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsBrowsable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowsable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-201">Obtient une valeur indiquant la valeur de du <see cref="T:System.ComponentModel.BrowsableAttribute" /> de la propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-201">Gets a value that indicates the value of the <see cref="T:System.ComponentModel.BrowsableAttribute" /> on the property.</span></span></summary>
        <value>
          <span data-ttu-id="a3c4c-202"><see langword="true" /> si le <see cref="T:System.ComponentModel.BrowsableAttribute" /> a été spécifié dans la propriété ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-202"><see langword="true" /> if the <see cref="T:System.ComponentModel.BrowsableAttribute" /> was specified on the property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-203">Cette propriété s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-203">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public override bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-204">Obtient une valeur indiquant si cette propriété doit être localisée, comme spécifié dans <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-204">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span></span></summary>
        <value>
          <span data-ttu-id="a3c4c-205"><see langword="true" /> si le membre est marqué avec le constructeur <see cref="T:System.ComponentModel.LocalizableAttribute" /> de la valeur true ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-205"><see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> constructor of the value true; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-206">Cette propriété s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-206">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-207">Obtient une valeur indiquant si cette propriété est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-207">Gets a value indicating whether this property is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="a3c4c-208"><see langword="true" /> si la propriété est en lecture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-208"><see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-209">Cette propriété s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-209">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 <span data-ttu-id="a3c4c-210">Propriétés de dépendance sont enregistrées en lecture seule à l’aide d’appels de méthode particulier et par convention les [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] wrapper propriétés qui sont les propriétés affichées par réflexion et les descripteurs doivent également être en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-210">Dependency properties are registered as read-only using particular method calls, and by convention the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only.</span></span> <span data-ttu-id="a3c4c-211">Toutefois, puisqu’il s’agit d’une convention et n’est pas obligatoire pour compiler, vous pouvez souhaiter vérifier soigneusement la dépendance propriété identificateur en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-211">However, since this is a convention and not a requirement to compile, you might want to double check the dependency property identifier read-only state.</span></span> <span data-ttu-id="a3c4c-212">Pour ce faire, obtenir l’identificateur (<xref:System.Windows.DependencyProperty>) valeur <xref:System.ComponentModel.DependencyPropertyDescriptor> , puis vérifiez la valeur de <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-212">To do this, get the identifier (<xref:System.Windows.DependencyProperty>) value for this <xref:System.ComponentModel.DependencyPropertyDescriptor> and then check the value of <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</span></span> <span data-ttu-id="a3c4c-213">Notez que le <xref:System.Windows.DependencyProperty.ReadOnly%2A> est sur l’identificateur lui-même, pas les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-213">Note that the <xref:System.Windows.DependencyProperty.ReadOnly%2A> is on the identifier itself, not metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As PropertyMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyMetadata ^ Metadata { System::Windows::PropertyMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-214">Obtient les métadonnées associées à la propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-214">Gets the metadata associated with the dependency property.</span></span></summary>
        <value><span data-ttu-id="a3c4c-215">Métadonnées de propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-215">The dependency property metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-216">La valeur peut être `null` s’il n’existe pas de métadonnées ou si la propriété n’est pas une propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-216">The value can be `null` if there is  no metadata or if the property is not a dependency property.</span></span>  
  
 <span data-ttu-id="a3c4c-217">Métadonnées qui ont des concepts correspondants dans [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] attributs sont ré-exposés en tant qu’attributs dans le <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-217">Metadata that has matching concepts in [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] attributes is re-exposed as attributes in the <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public override Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-218">Obtient le <see cref="T:System.Type" /> représenté de la propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-218">Gets the represented <see cref="T:System.Type" /> of the dependency property.</span></span></summary>
        <value><span data-ttu-id="a3c4c-219">Le <see cref="T:System.Type" /> de la propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-219">The <see cref="T:System.Type" /> of the dependency property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-220">Cette propriété retourne la <xref:System.Type> enregistrée avec la propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-220">This property returns the <xref:System.Type> that the dependency property was registered with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public override void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a3c4c-221">Composant pour lequel ajouter le gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-221">The component to add the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="a3c4c-222">Délégué à ajouter en tant qu'écouteur.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-222">The delegate to add as a listener.</span></span></param>
        <summary><span data-ttu-id="a3c4c-223">Permet à d'autres objets d'être avertis en cas de modification de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-223">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-224">Cette méthode s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-224">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public override void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a3c4c-225">Composant dont la valeur par défaut de la propriété doit être rétablie.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-225">The component with the property value that is to be reset to the default value.</span></span></param>
        <summary><span data-ttu-id="a3c4c-226">Rétablit la valeur par défaut pour la valeur de cette propriété du composant.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-226">Resets the value for this property of the component to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-227">Cette méthode s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-227">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a3c4c-228">Composant dont la valeur de la propriété doit être définie.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-228">The component with the property value that is to be set.</span></span></param>
        <param name="value"><span data-ttu-id="a3c4c-229">Nouvelle valeur.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-229">The new value.</span></span></param>
        <summary><span data-ttu-id="a3c4c-230">Affecte une autre valeur au composant.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-230">Sets the value of the component to a different value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-231">Cette méthode s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-231">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public override bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a3c4c-232">Composant possédant la propriété dont la persistance doit être examinée.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-232">The component with the property to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="a3c4c-233">Indique si la valeur de cette propriété doit être rendue persistante par des processus de sérialisation.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-233">Indicates whether the value of this property needs to be persisted by serialization processes.</span></span></summary>
        <returns>
          <span data-ttu-id="a3c4c-234"><see langword="true" /> si la propriété doit être persistante ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-234"><see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public override bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3c4c-235">Indique si les notifications de modification des valeurs pour cette propriété peuvent provenir de l'extérieur du descripteur de propriété, comme par exemple du composant lui-même, ou si les notifications proviendront seulement d'appels directs à la méthode <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-235">Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span></span></summary>
        <value>
          <span data-ttu-id="a3c4c-236"><see langword="true" /> si les notifications pour cette propriété peuvent provenir de l'extérieur du descripteur de propriété, comme par exemple du composant lui-même.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-236"><see langword="true" /> if notifications for this property may originate from outside the property descriptor, such as from the component itself.</span></span> <span data-ttu-id="a3c4c-237"><see langword="false" /> si les notifications proviendront uniquement des appels directs à <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-237"><see langword="false" /> if notifications will only originate from direct calls made to <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3c4c-238">Par exemple, pour le `true` cas, le composant peut implémenter la <xref:System.ComponentModel.INotifyPropertyChanged> de l’interface, ou peut-être explicite `propertyName.Changed` événement pour cette propriété.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-238">For example, for the `true` case, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `propertyName.Changed` event for this property.</span></span>  
  
 <span data-ttu-id="a3c4c-239">Cette propriété s’appuie sur sous-jacent <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-239">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3c4c-240">Convertit la valeur de cette instance en sa représentation sous forme de chaîne équivalente.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-240">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="a3c4c-241">Retourne la valeur <see cref="P:System.ComponentModel.MemberDescriptor.Name" />.</span><span class="sxs-lookup"><span data-stu-id="a3c4c-241">Returns the <see cref="P:System.ComponentModel.MemberDescriptor.Name" /> value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>