<Type Name="ITypedList" FullName="System.ComponentModel.ITypedList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42d1ddf2eb98f1656f31023364155c7f76885ee7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37692138" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypedList" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypedList" />
  <TypeSignature Language="F#" Value="type ITypedList = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fournit des fonctionnalités permettant de découvrir le schéma d'une liste pouvant être liée, dans laquelle les propriétés disponibles pour la liaison diffèrent des propriétés publiques de l'objet vers lequel établir la liaison.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utiliser cette interface si, par exemple, vous utilisez un <xref:System.Data.DataView> objet qui représente un `customer` table, que vous souhaitez lier aux propriétés le `customer` de l’objet qui le <xref:System.Data.DataView> représente, pas les propriétés de la <xref:System.Data.DataView>.  
  
 Cette interface n’est pas nécessaire pour la prise en charge au moment du design d’une liste pouvant être liée.  
  
 Liaison de données peut se produire au moment de l’exécution ou dans un concepteur, mais il existe des règles pour les deux. Au moment de l’exécution, vous pouvez lier aux données dans les cas suivants :  
  
-   <xref:System.Array>  
  
-   Implémenteur de <xref:System.Collections.IList>, à condition que l’implémenteur a fortement typé <xref:System.Collections.IList.Item%2A> propriété (autrement dit, le <xref:System.Type> est tout sauf <xref:System.Object>). Vous pouvez y parvenir en rendant l’implémentation par défaut de <xref:System.Collections.IList.Item%2A> privé. Si vous souhaitez créer un <xref:System.Collections.IList> qui suit les règles d’une collection fortement typée, vous devez dériver de <xref:System.Collections.CollectionBase>.  
  
-   Implémenteur de <xref:System.ComponentModel.ITypedList>.  
  
 Dans un concepteur, vous pouvez initialiser la liaison aux <xref:System.ComponentModel.Component> objets en suivant les mêmes règles.  
  
 Pour plus d’informations sur la liaison à une source de données, consultez la <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment implémenter la <xref:System.ComponentModel.ITypedList> interface. Un type générique nommé `SortableBindingList` dérive le <xref:System.ComponentModel.BindingList%601> classe et implémente la <xref:System.ComponentModel.ITypedList> interface. Pour obtenir la liste complète de code, consultez [Comment : implémenter l’ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).  
  
 [!code-csharp[System.ComponentModel.ITypedList#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#1)]
 [!code-vb[System.ComponentModel.ITypedList#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iTypedList.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">Tableau d’objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> pouvant être liés à rechercher dans la collection. Il peut s’agir de <see langword="null" />.</param>
        <summary>Retourne l’objet <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés de chaque élément utilisé pour lier des données.</summary>
        <returns>
          <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés de chaque élément utilisé pour lier des données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le `listAccessors` paramètre n’est pas `null`, il contient généralement un descripteur de propriété qui identifie une liste de conteneurs à récupérer pour l’objet qui implémente <xref:System.ComponentModel.ITypedList>. Par exemple, un <xref:System.Data.DataSet> contenant deux tables, `myCustomers` et `myOrders`, avec une relation entre elles appelée `myCustOrders`. Si vous créez un <xref:System.Data.DataView> objet à afficher `myCustomers`, puis en appelant le <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> méthode avec `null` retourne les descripteurs de propriété pour les colonnes de `myCustomers`. Par conséquent, un des descripteurs de propriété retournés est un descripteur de propriété pour `myCustOrders`, de même que l’appel le <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> méthode avec un tableau d’accesseurs de liste contenant les descripteurs de propriété pour `myCustOrders` retournera les descripteurs de propriété pour `myOrders`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment implémenter la <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> (méthode). Pour obtenir la liste complète de code, consultez [Comment : implémenter l’ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).  
  
 [!code-csharp[System.ComponentModel.ITypedList#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#3)]
 [!code-vb[System.ComponentModel.ITypedList#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="iTypedList.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">Tableau d'objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> pour lequel le nom de la liste est retourné. Il peut s’agir de <see langword="null" />.</param>
        <summary>Retourne le nom de la liste.</summary>
        <returns>Nom de la liste.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée uniquement dans l’infrastructure au moment du design et par l’obsolète <xref:System.Windows.Forms.DataGrid> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment implémenter la <xref:System.ComponentModel.ITypedList.GetListName%2A> (méthode). Pour obtenir la liste complète de code, consultez [Comment : implémenter l’ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).  
  
 [!code-csharp[System.ComponentModel.ITypedList#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#4)]
 [!code-vb[System.ComponentModel.ITypedList#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
  </Members>
</Type>