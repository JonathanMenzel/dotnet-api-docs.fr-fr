<Type Name="ITypedList" FullName="System.ComponentModel.ITypedList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42d1ddf2eb98f1656f31023364155c7f76885ee7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37692138" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypedList" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypedList" />
  <TypeSignature Language="F#" Value="type ITypedList = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="99311-101">Fournit des fonctionnalités permettant de découvrir le schéma d'une liste pouvant être liée, dans laquelle les propriétés disponibles pour la liaison diffèrent des propriétés publiques de l'objet vers lequel établir la liaison.</span>
      <span class="sxs-lookup">
        <span data-stu-id="99311-101">Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99311-102">Utiliser cette interface si, par exemple, vous utilisez un <xref:System.Data.DataView> objet qui représente un `customer` table, que vous souhaitez lier aux propriétés le `customer` de l’objet qui le <xref:System.Data.DataView> représente, pas les propriétés de la <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="99311-102">Use this interface if, for instance, you are using a <xref:System.Data.DataView> object that represents a `customer` table, you want to bind to the properties on the `customer` object that the <xref:System.Data.DataView> represents, not the properties of the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="99311-103">Cette interface n’est pas nécessaire pour la prise en charge au moment du design d’une liste pouvant être liée.</span><span class="sxs-lookup"><span data-stu-id="99311-103">This interface is not required for design-time support of a bindable list.</span></span>  
  
 <span data-ttu-id="99311-104">Liaison de données peut se produire au moment de l’exécution ou dans un concepteur, mais il existe des règles pour les deux.</span><span class="sxs-lookup"><span data-stu-id="99311-104">Binding to data can occur either at run time or in a designer, but there are rules for both.</span></span> <span data-ttu-id="99311-105">Au moment de l’exécution, vous pouvez lier aux données dans les cas suivants :</span><span class="sxs-lookup"><span data-stu-id="99311-105">At run time, you can bind to data in any of the following:</span></span>  
  
-   <xref:System.Array>  
  
-   <span data-ttu-id="99311-106">Implémenteur de <xref:System.Collections.IList>, à condition que l’implémenteur a fortement typé <xref:System.Collections.IList.Item%2A> propriété (autrement dit, le <xref:System.Type> est tout sauf <xref:System.Object>).</span><span class="sxs-lookup"><span data-stu-id="99311-106">Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>).</span></span> <span data-ttu-id="99311-107">Vous pouvez y parvenir en rendant l’implémentation par défaut de <xref:System.Collections.IList.Item%2A> privé.</span><span class="sxs-lookup"><span data-stu-id="99311-107">You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private.</span></span> <span data-ttu-id="99311-108">Si vous souhaitez créer un <xref:System.Collections.IList> qui suit les règles d’une collection fortement typée, vous devez dériver de <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="99311-108">If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.</span></span>  
  
-   <span data-ttu-id="99311-109">Implémenteur de <xref:System.ComponentModel.ITypedList>.</span><span class="sxs-lookup"><span data-stu-id="99311-109">Implementer of <xref:System.ComponentModel.ITypedList>.</span></span>  
  
 <span data-ttu-id="99311-110">Dans un concepteur, vous pouvez initialiser la liaison aux <xref:System.ComponentModel.Component> objets en suivant les mêmes règles.</span><span class="sxs-lookup"><span data-stu-id="99311-110">In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.</span></span>  
  
 <span data-ttu-id="99311-111">Pour plus d’informations sur la liaison à une source de données, consultez la <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="99311-111">For more information on binding to a data source, see the <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99311-112">L’exemple de code suivant montre comment implémenter la <xref:System.ComponentModel.ITypedList> interface.</span><span class="sxs-lookup"><span data-stu-id="99311-112">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList> interface.</span></span> <span data-ttu-id="99311-113">Un type générique nommé `SortableBindingList` dérive le <xref:System.ComponentModel.BindingList%601> classe et implémente la <xref:System.ComponentModel.ITypedList> interface.</span><span class="sxs-lookup"><span data-stu-id="99311-113">A generic type named `SortableBindingList` derives from the <xref:System.ComponentModel.BindingList%601> class and implements the <xref:System.ComponentModel.ITypedList> interface.</span></span> <span data-ttu-id="99311-114">Pour obtenir la liste complète de code, consultez [Comment : implémenter l’ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="99311-114">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#1)]
 [!code-vb[System.ComponentModel.ITypedList#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iTypedList.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="99311-115">Tableau d’objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> pouvant être liés à rechercher dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99311-115">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the collection as bindable.</span>
          </span>
          <span data-ttu-id="99311-116">Il peut s’agir de <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99311-116">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99311-117">Retourne l’objet <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés de chaque élément utilisé pour lier des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99311-117">Returns the <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="99311-118">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés de chaque élément utilisé pour lier des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99311-118">The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99311-119">Si le `listAccessors` paramètre n’est pas `null`, il contient généralement un descripteur de propriété qui identifie une liste de conteneurs à récupérer pour l’objet qui implémente <xref:System.ComponentModel.ITypedList>.</span><span class="sxs-lookup"><span data-stu-id="99311-119">If the `listAccessors` parameter is not `null`, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <xref:System.ComponentModel.ITypedList>.</span></span> <span data-ttu-id="99311-120">Par exemple, un <xref:System.Data.DataSet> contenant deux tables, `myCustomers` et `myOrders`, avec une relation entre elles appelée `myCustOrders`.</span><span class="sxs-lookup"><span data-stu-id="99311-120">For example, a <xref:System.Data.DataSet> containing two tables, `myCustomers` and `myOrders`, with a relationship between them called `myCustOrders`.</span></span> <span data-ttu-id="99311-121">Si vous créez un <xref:System.Data.DataView> objet à afficher `myCustomers`, puis en appelant le <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> méthode avec `null` retourne les descripteurs de propriété pour les colonnes de `myCustomers`.</span><span class="sxs-lookup"><span data-stu-id="99311-121">If you create a <xref:System.Data.DataView> object to view `myCustomers`, then calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with `null` returns the property descriptors for the columns in `myCustomers`.</span></span> <span data-ttu-id="99311-122">Par conséquent, un des descripteurs de propriété retournés est un descripteur de propriété pour `myCustOrders`, de même que l’appel le <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> méthode avec un tableau d’accesseurs de liste contenant les descripteurs de propriété pour `myCustOrders` retournera les descripteurs de propriété pour `myOrders`.</span><span class="sxs-lookup"><span data-stu-id="99311-122">As a result, one of the returned property descriptors is a property descriptor for `myCustOrders`, just as calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with a list accessor array containing the property descriptors for `myCustOrders` will return the property descriptors for `myOrders`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99311-123">L’exemple de code suivant montre comment implémenter la <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="99311-123">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method.</span></span> <span data-ttu-id="99311-124">Pour obtenir la liste complète de code, consultez [Comment : implémenter l’ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="99311-124">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#3)]
 [!code-vb[System.ComponentModel.ITypedList#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="iTypedList.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="99311-125">Tableau d'objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> pour lequel le nom de la liste est retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99311-125">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects, for which the list name is returned.</span>
          </span>
          <span data-ttu-id="99311-126">Il peut s’agir de <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99311-126">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99311-127">Retourne le nom de la liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99311-127">Returns the name of the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="99311-128">Nom de la liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99311-128">The name of the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99311-129">Cette méthode est utilisée uniquement dans l’infrastructure au moment du design et par l’obsolète <xref:System.Windows.Forms.DataGrid> contrôle.</span><span class="sxs-lookup"><span data-stu-id="99311-129">This method is used only in the design-time framework and by the obsolete <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99311-130">L’exemple de code suivant montre comment implémenter la <xref:System.ComponentModel.ITypedList.GetListName%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="99311-130">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetListName%2A> method.</span></span> <span data-ttu-id="99311-131">Pour obtenir la liste complète de code, consultez [Comment : implémenter l’ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span><span class="sxs-lookup"><span data-stu-id="99311-131">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#4)]
 [!code-vb[System.ComponentModel.ITypedList#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
  </Members>
</Type>