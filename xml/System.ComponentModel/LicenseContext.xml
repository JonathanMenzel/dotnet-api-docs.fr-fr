<Type Name="LicenseContext" FullName="System.ComponentModel.LicenseContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c070cd74747b9bb6b3475f8090d88c38aadb4b5e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39842366" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LicenseContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LicenseContext extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseContext" />
  <TypeSignature Language="VB.NET" Value="Public Class LicenseContext&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicenseContext : IServiceProvider" />
  <TypeSignature Language="F#" Value="type LicenseContext = class&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f413e-101">Spécifie le moment où vous pouvez utiliser un objet sous licence et fournit un moyen d'obtenir des services supplémentaires nécessaires pour prendre en charge des licences s'exécutant dans son domaine.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f413e-101">Specifies when you can use a licensed object and provides a way of obtaining additional services needed to support licenses running within its domain.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f413e-102">Cette classe fournit la valeur par défaut <xref:System.ComponentModel.LicenseContext>.</span><span class="sxs-lookup"><span data-stu-id="f413e-102">This class provides the default <xref:System.ComponentModel.LicenseContext>.</span></span> <span data-ttu-id="f413e-103">Il implémente la prise en charge de l’exécution uniquement et que vous fait pas les clés de licence de support enregistré.</span><span class="sxs-lookup"><span data-stu-id="f413e-103">It implements only run-time support and does not support saved license keys.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="f413e-104">
        <para>Si vous souhaitez implémenter la prise en charge les licences au moment du design, vous devez hériter de cette classe et substituer les membres suivants : <see cref="P:System.ComponentModel.LicenseContext.UsageMode" />, <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />, <see cref="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />, et <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />. Si vous souhaitez implémenter enregistrée les clés de licence, remplacer le <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> et <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> méthodes.  Pour plus d’informations sur les licences, consultez [Comment : composants de la licence et des contrôles](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="f413e-104">
          <para>If you want to implement design-time license support, you must inherit from this class, and override the following members: <see cref="P:System.ComponentModel.LicenseContext.UsageMode" />, <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />, <see cref="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />, and <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />. If you want to implement saved license keys, override the <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> and <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> methods.  For more information about licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f413e-105">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.LicenseContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-105">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual string GetSavedLicenseKey (Type type, System.Reflection.Assembly resourceAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSavedLicenseKey(class System.Type type, class System.Reflection.Assembly resourceAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSavedLicenseKey(Type ^ type, System::Reflection::Assembly ^ resourceAssembly);" />
      <MemberSignature Language="F#" Value="abstract member GetSavedLicenseKey : Type * System.Reflection.Assembly -&gt; string&#xA;override this.GetSavedLicenseKey : Type * System.Reflection.Assembly -&gt; string" Usage="licenseContext.GetSavedLicenseKey (type, resourceAssembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f413e-106">
            <see cref="T:System.Type" /> représentant le type de composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-106">A <see cref="T:System.Type" /> that represents the type of component.</span>
          </span>
        </param>
        <param name="resourceAssembly">
          <span data-ttu-id="f413e-107">
            <see cref="T:System.Reflection.Assembly" /> avec la clé de licence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-107">An <see cref="T:System.Reflection.Assembly" /> with the license key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f413e-108">En cas de substitution dans une classe dérivée, retourne une clé de licence enregistrée pour le type spécifié, à partir de l'assembly de la ressource spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-108">When overridden in a derived class, returns a saved license key for the specified type, from the specified resource assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f413e-109">
            <see cref="P:System.ComponentModel.License.LicenseKey" /> du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-109">The <see cref="P:System.ComponentModel.License.LicenseKey" /> for the specified type.</span>
          </span>
          <span data-ttu-id="f413e-110">Cette méthode retourne <see langword="null" />, à moins que vous la substituiez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-110">This method returns <see langword="null" /> unless you override it.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f413e-111">
            <para>Substituez cette méthode et la <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> méthode pour implémenter une clé de licence enregistrée. Si le <paramref name="resourceAssembly" /> paramètre est <see langword="null" />, vous pouvez récupérer la ressource à partir de l’exécution du principal <see cref="T:System.Reflection.Assembly" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-111">
              <para>Override this method and the <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> method to implement a saved license key. If the <paramref name="resourceAssembly" /> parameter is <see langword="null" />, then you can retrieve the resource from the primary executing <see cref="T:System.Reflection.Assembly" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="licenseContext.GetService type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f413e-112">Type de service à récupérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-112">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f413e-113">Obtient le service demandé, s'il est disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-113">Gets the requested service, if it is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f413e-114">Instance du service ou <see langword="null" /> si le service est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-114">An instance of the service, or <see langword="null" /> if the service cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual void SetSavedLicenseKey (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSavedLicenseKey(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSavedLicenseKey(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member SetSavedLicenseKey : Type * string -&gt; unit&#xA;override this.SetSavedLicenseKey : Type * string -&gt; unit" Usage="licenseContext.SetSavedLicenseKey (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f413e-115">
            <see cref="T:System.Type" /> représentant le composant associé à la clé de licence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-115">A <see cref="T:System.Type" /> that represents the component associated with the license key.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="f413e-116">
            <see cref="P:System.ComponentModel.License.LicenseKey" /> à enregistrer pour le type de composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-116">The <see cref="P:System.ComponentModel.License.LicenseKey" /> to save for the type of component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f413e-117">En cas de substitution dans une classe dérivée, définit une clé de licence pour le type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-117">When overridden in a derived class, sets a license key for the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f413e-118">En règle générale, appelez cette méthode lorsque vous définissez <xref:System.ComponentModel.LicenseUsageMode> au moment du design.</span><span class="sxs-lookup"><span data-stu-id="f413e-118">Typically, call this method when you set <xref:System.ComponentModel.LicenseUsageMode> at design time.</span></span> <span data-ttu-id="f413e-119">Vous devez substituer la <xref:System.ComponentModel.LicenseContext.UsageMode%2A> pour implémenter la prise en charge les licences au moment du design.</span><span class="sxs-lookup"><span data-stu-id="f413e-119">You must override the <xref:System.ComponentModel.LicenseContext.UsageMode%2A> property to implement design-time license support.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f413e-120">
            <para>Cette méthode ne fournit pas de prise en charge pour une clé de licence enregistrée. Substituez cette méthode et la <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> méthode pour implémenter une clé.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-120">
              <para>This method does not provide support for a saved license key. Override this method and the <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> method to implement a key.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="UsageMode">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.LicenseUsageMode UsageMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.LicenseUsageMode UsageMode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseContext.UsageMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UsageMode As LicenseUsageMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::LicenseUsageMode UsageMode { System::ComponentModel::LicenseUsageMode get(); };" />
      <MemberSignature Language="F#" Value="member this.UsageMode : System.ComponentModel.LicenseUsageMode" Usage="System.ComponentModel.LicenseContext.UsageMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.LicenseUsageMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f413e-121">En cas de substitution dans une classe dérivée, obtient une valeur spécifiant le moment où vous pouvez utiliser une licence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-121">When overridden in a derived class, gets a value that specifies when you can use a license.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f413e-122">Une des valeurs <see cref="T:System.ComponentModel.LicenseUsageMode" /> spécifiant le moment où vous pouvez utiliser une licence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-122">One of the <see cref="T:System.ComponentModel.LicenseUsageMode" /> values that specifies when you can use a license.</span>
          </span>
          <span data-ttu-id="f413e-123">La valeur par défaut est <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-123">The default is <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f413e-124">
            <para>Pour implémenter la prise en charge au moment du design, substituez cette propriété dans une classe qui hérite.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f413e-124">
              <para>To implement design-time support, override this property in a class that inherits.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>