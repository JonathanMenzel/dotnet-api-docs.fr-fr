<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd55b51b3b83861863968e7a57f14568a3bd4730" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37694790" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventHandler = delegate of obj * AsyncCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Source de l'événement.</param>
    <param name="e">
      <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> qui contient les données d'événement.</param>
    <summary>Représente la méthode qui gère l’événement *MethodName*<see langword="Completed" /> d’une opération asynchrone.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous créez un délégué <xref:System.ComponentModel.AsyncCompletedEventHandler>, vous identifiez la méthode qui gérera l'événement. Pour associer l'événement au gestionnaire d'événements, ajoutez une instance du délégué à l'événement. La méthode de gestionnaire d’événements est appelée chaque fois que l’événement se produit, sauf si vous supprimez le délégué. Pour plus d’informations sur les délégués de gestionnaire d’événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 Pour une méthode asynchrone, appelée *Nom_méthode*, dans votre composant, vous aurez un correspondant *Nom_méthode* `Completed` événement et éventuellement un *Nom_méthode* `CompletedEventArgs` classe.  
  
 Pour un composant qui prend en charge plusieurs appels simultanés de ses méthodes asynchrones, le client peut fournir un jeton unique ou des ID de tâche, à distinguer quelle tâche asynchrone déclenche des événements particuliers. Le client <xref:System.ComponentModel.AsyncCompletedEventHandler> peut lire le <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> propriété afin de déterminer quelle tâche signale la fin. Votre implémentation doit utiliser le <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> pour créer un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> qui associe la tâche du client avec les ID des tâches asynchrones en attente.  
  
   
  
## Examples  
 Pour obtenir un exemple de code de la <xref:System.ComponentModel.AsyncCompletedEventHandler> le délégué, consultez l’exemple dans le <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> classe.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
</Type>