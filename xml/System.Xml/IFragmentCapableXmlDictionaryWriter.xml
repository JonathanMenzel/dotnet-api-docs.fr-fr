<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IFragmentCapableXmlDictionaryWriter.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54280186aaca2bcf519af30ba243d6a4fce3f24ed.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4280186aaca2bcf519af30ba243d6a4fce3f24ed</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
          <source>Contains properties and methods that when implemented by a <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>, allows processing of XML fragments.</source>
          <target state="translated">Contient des propriétés et des méthodes qui permettent le traitement de fragments XML lorsqu'elles sont implémentées par un <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
          <source>This class defines the properties and methods related to the capability of an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> to redirect part of its output (a 'fragment') to a different stream than the stream it was created with and to directly insert such a fragment captured by redirection back into the main stream of the same writer at a later point.</source>
          <target state="translated">Cette classe définit les propriétés et les méthodes en rapport avec la capacité d'un <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> à rediriger une partie de sa sortie (un « fragment ») vers un flux autre que son flux de création et à insérer ultérieurement ce fragment capturé directement dans le flux principal.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> can process XML fragments.</source>
          <target state="translated">Obtient une valeur qui indique si ce <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> peut traiter des fragments XML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> can process XML fragments; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si ce <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> peut traiter des fragments XML ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
          <source>Returns <ph id="ph1">`true`</ph> if the writer that implements this interface can generate and accept XML fragments.</source>
          <target state="translated">Retourne <ph id="ph1">`true`</ph> si le writer qui implémente cette interface peut générer et accepter des fragments XML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
          <source>Ends the processing of an XML fragment.</source>
          <target state="translated">Met fin au traitement d'un fragment XML.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
          <source>Stops redirecting output to the stream supplied by the matching <ph id="ph1">`StartFragment`</ph> call.</source>
          <target state="translated">La sortie n'est plus redirigée vers le flux fourni par l'appel à <ph id="ph1">`StartFragment`</ph> correspondant.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
          <source>After this call, the XML writing output goes to the stream originally used by the writer before the <ph id="ph1">`StartFragment`</ph> call.</source>
          <target state="translated">Après cet appel, l'écriture des informations XML est transférée dans le flux utilisé par le writer avant l'appel à <ph id="ph1">`StartFragment`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source>The stream to write to.</source>
          <target state="translated">Le flux dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, any namespaces declared outside the fragment is declared again if used inside of it; if <ph id="ph2">&lt;see langword="false" /&gt;</ph> the namespaces are not declared again.</source>
          <target state="translated">Si la valeur est <ph id="ph1">&lt;see langword="true" /&gt;</ph>, tous les espaces de noms déclarés en dehors du fragment sont de nouveau déclarés s'ils sont utilisés dans le fragment. Si la valeur est <ph id="ph2">&lt;see langword="false" /&gt;</ph>, les espaces de noms ne font pas l'objet d'une nouvelle déclaration.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source>Starts the processing of an XML fragment.</source>
          <target state="translated">Démarre le traitement d'un fragment XML.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source>Temporarily starts redirecting the writing of the XML output to the supplied stream until <ph id="ph1">`EndFragment`</ph> is called.</source>
          <target state="translated">Commence à rediriger temporairement l'écriture de la sortie XML vers le flux fourni jusqu'à l'appel à <ph id="ph1">`EndFragment`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">`generateSelfContainedTextFragment`</ph> is <ph id="ph2">`true`</ph>, then the redirected XML output is always text XML and is self-contained in terms of its namespace context.</source>
          <target state="translated">Si <ph id="ph1">`generateSelfContainedTextFragment`</ph> a la valeur <ph id="ph2">`true`</ph>, la sortie XML redirigée correspond toujours à du texte XML et est autonome quant à son contexte d'espace de noms.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">`StartFragment`</ph>() calls cannot be nested.</source>
          <target state="translated">Les appels de <ph id="ph1">`StartFragment`</ph>() ne peuvent pas être imbriqués.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer to write to.</source>
          <target state="translated">La mémoire tampon dans laquelle écrire.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>The starting position from which to write in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position de départ à partir de laquelle écrire dans <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to be written to the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Nombre d’octets à écrire dans <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>Writes an XML fragment to the underlying stream of the writer.</source>
          <target state="translated">Écrit un fragment XML dans le flux sous-jacent du writer.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a fragment captured between <ph id="ph1">`StartFragment`</ph> and <ph id="ph2">`EndFragment`</ph> and calls back into the XmlDictionaryWriter's main stream.</source>
          <target state="translated">Écrit un fragment capturé entre <ph id="ph1">`StartFragment`</ph> et <ph id="ph2">`EndFragment`</ph> et effectue un nouvel appel dans le flux principal du XmlDictionaryWriter.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>The fragment written is <ph id="ph1">`count`</ph> bytes starting at the index <ph id="ph2">`offset`</ph> from the supplied <ph id="ph3">`buffer`</ph>.</source>
          <target state="translated">Le fragment écrit consiste en <ph id="ph1">`count`</ph> octets à partir de l'index <ph id="ph2">`offset`</ph> du <ph id="ph3">`buffer`</ph> fourni.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
          <source>The behavior is undefined if the supplied fragment was not captured using this writer instance.</source>
          <target state="translated">Le comportement est indéfini si le fragment fourni n'a pas été capturé par cette instance de writer.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>