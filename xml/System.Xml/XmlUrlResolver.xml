<Type Name="XmlUrlResolver" FullName="System.Xml.XmlUrlResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="51b881450d2e16ef964dfc7a60453931d067d5c8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36434444" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlUrlResolver : System.Xml.XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlUrlResolver extends System.Xml.XmlResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlUrlResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlUrlResolver&#xA;Inherits XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlUrlResolver : System::Xml::XmlResolver" />
  <TypeSignature Language="F#" Value="type XmlUrlResolver = class&#xA;    inherit XmlResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Résout les ressources XML externes nommées par un URI (Uniform Resource Identifier).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlUrlResolver> est utilisé pour résoudre des ressources externes telles que les entités, les définitions de type de document (DTD) ou des schémas XML. Il est également utilisé pour traiter inclure et d’importer les éléments figurant dans les feuilles de style de feuille de style XSL (Extensible Language) ou les schémas de langage (XSD XML) XML Schema definition.  
  
 <xref:System.Xml.XmlUrlResolver> est le programme de résolution par défaut pour toutes les classes dans le <xref:System.Xml> espace de noms. Elle prend en charge les requêtes et les protocoles `file://` et `http://` de la classe <xref:System.Net.WebRequest>.  
  
> [!IMPORTANT]
>  Les objets <xref:System.Xml.XmlUrlResolver> peuvent contenir des informations confidentielles telles que des informations d'identification de l'utilisateur. Vous devez être prudent lorsque vous mettez en cache <xref:System.Xml.XmlUrlResolver> objets et ne pas passer <xref:System.Xml.XmlUrlResolver> objets à un composant non fiable.  
  
## <a name="resolving-dtds"></a>Des DTD  
 Si un lecteur XML (<xref:System.Xml.XmlReader>) lit un fichier XML qui contient une DTD externe, il appelle la <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType> méthode pour obtenir une représentation sous forme de flux de données de la DTD. Si l’URI de la DTD est un URI relatif, le lecteur XML appelle le <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType> méthode et retourne un URI absolu pour le donné `relativeUri` et `baseURi` paramètres. Si le <xref:System.Xml.XmlUrlResolver> ne sait pas comment résoudre l’URI, elle retourne `null`.  
  
 La méthode <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> utilise les informations de la propriété <xref:System.Xml.XmlUrlResolver.Credentials%2A> de manière appropriée pour pouvoir accéder à la ressource. Il n'existe aucun accesseur `get` à cette propriété pour des raisons de sécurité. Lors du remplacement <xref:System.Xml.XmlResolver>, **GetEntity** est la méthode qui utilise les informations d’identification dans le **informations d’identification** propriété.  
  
 La résolution de toutes les autres ressources XML est très similaire à celle des DTD. <xref:System.Xml.XmlResolver> négocie la connexion avec la ressource externe et retourne un <xref:System.IO.Stream> représentation du contenu. L’objet qui effectue l’appel à <xref:System.Xml.XmlResolver> interprète le flux.  
  
## <a name="extending-the-xmlurlresolver-class"></a>Extension de la classe XmlUrlResolver  
 Le comportement par défaut de la classe <xref:System.Xml.XmlUrlResolver> consiste à résoudre une ressource de données XML à partir de sa source, et non pas à partir du cache. Dans certains cas, la résolution d'une ressource de données à partir du cache peut améliorer les performances d'une application en économisant un trajet vers le serveur de la ressource de données. Ce gain de performance s'obtient toutefois au détriment de la mise à jour des contenus.  
  
 L’exemple suivant étend <xref:System.Xml.XmlUrlResolver> et génère une nouvelle classe, `XmlCachingResolver`, pour récupérer des ressources à partir du cache. Cette opération s'effectue en substituant la propriété <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> et la méthode <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[XmlCachingResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlCachingResolver_ex/CS/XmlCachingResolver_ex.cs#1)]
 [!code-vb[XmlCachingResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlCachingResolver_ex/VB/XmlCachingResolver_ex.vb#1)]  
  
 Le comportement de mise en cache de la classe `XmlCachingResolver` est implémenté dans la méthode `GetEntity`. Pour cela, les nouveaux objets <xref:System.Net.WebRequest> et <xref:System.Net.Cache.HttpRequestCachePolicy> sont créés. L'objet <xref:System.Net.Cache.HttpRequestCachePolicy> est crée à l'aide du membre <xref:System.Net.Cache.HttpRequestCacheLevel.Default> de l'énumération <xref:System.Net.Cache.HttpRequestCacheLevel>.  
  
 La propriété <xref:System.Net.WebRequest.CachePolicy%2A> de l'objet <xref:System.Net.WebRequest> est définie avec l'objet <xref:System.Net.Cache.HttpRequestCachePolicy>.  
  
 Une instance de la classe `XmlCachingResolver` est créée avec le paramètre `Boolean` qui est de type `enableHttpCaching`. Lorsque cette valeur est définie `true`, l’instance résout une ressource à partir du cache par défaut si possible. Lorsque `enableHttpCaching` a la valeur `false`, l’instance utilise le comportement par défaut et résout les ressources à partir de leur source.  
  
> [!NOTE]
>  Cet exemple illustre l’extensibilité des classes XML dans le .NET Framework. D'autres classes peuvent être étendues et personnalisées pour répondre aux besoins d'une application particulière.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Xml.XmlReader> qui utilise un <xref:System.Xml.XmlUrlResolver> avec les informations d’identification par défaut.  
  
 [!code-csharp[XmlResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#1)]
 [!code-vb[XmlResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlUrlResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlUrlResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlUrlResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy {  void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy" Usage="System.Xml.XmlUrlResolver.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la stratégie de cache pour l'objet <see cref="T:System.Net.WebRequest" /> sous-jacent.</summary>
        <value>Stratégie de cache pour la requête web sous-jacente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlUrlResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit les informations d'identification utilisées pour authentifier les demandes web.</summary>
        <value>Informations d'identification à utiliser pour authentifier les demandes web. Si cette propriété n'est pas définie, la valeur par défaut est <see langword="null" /> ; <see langword="XmlUrlResolver" /> n'a donc pas d'informations d'identification d'utilisateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le répertoire virtuel ne nécessite pas d’authentification, cette propriété ne doit pas être définie. Dans le cas contraire, les informations d’identification de l’utilisateur doivent être fournies.  
  
 Vous pouvez associer des informations d’identification différentes à différents URI et les ajouter à un cache. Vous pouvez ensuite utiliser les informations d’identification pour vérifier l’authentification pour différents URI, quelle que soit la source d’origine du document XML.  
  
 Le code c# suivant montre comment définir le <xref:System.Xml.XmlUrlResolver.Credentials%2A> propriété à un cache d’informations d’identification.  
  
```csharp  
NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);   
CredentialCache myCache = new CredentialCache();   
myCache.Add(new Uri("http://www.contoso.com/"), "Basic", myCred);   
myCache.Add(new Uri("http://app.contoso.com/"), "Basic", myCred);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = myCache;  
```  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Xml.XmlUrlResolver> objet avec les informations d’identification. Le <xref:System.Xml.XmlReader> utilise les informations d’identification sur le <xref:System.Xml.XmlUrlResolver> objet pour accéder à une ressource réseau.  
  
 [!code-csharp[XmlResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#2)]
 [!code-vb[XmlResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntity : Uri * string * Type -&gt; obj" Usage="xmlUrlResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Pas utilisé pour l'instant.</param>
        <param name="ofObjectToReturn">Type d'objet à retourner. L'implémentation actuelle ne retourne que des objets <see cref="T:System.IO.Stream" />.</param>
        <summary>Mappe un URI vers un objet contenant la ressource réelle.</summary>
        <returns>Objet de flux ou <see langword="null" /> si un type autre que stream est spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée lorsque l’appelant veut mapper un URI donné à un objet qui contient la ressource représentée par l’URI.  
  
 Pour obtenir la version asynchrone de cette méthode, consultez <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.  
  
> [!IMPORTANT]
>  Votre application peut limiter les refus de mémoire de service sur le <xref:System.Xml.XmlUrlResolver.GetEntity%2A> méthode en implémentant IStream <xref:System.Runtime.InteropServices.ComTypes.IStream> pour limiter le nombre d’octets lus. Cela permet de se prémunir contre les situations où un code malveillant essaie de passer un flux infini d’octets à la <xref:System.Xml.XmlUrlResolver.GetEntity%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant illustre la `GetEntity` et <xref:System.Xml.XmlResolver.ResolveUri%2A> méthodes.  
  
 [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="ofObjectToReturn" /> n'est ni <see langword="null" /> ni un type <see langword="Stream" />.</exception>
        <exception cref="T:System.UriFormatException">L'URI spécifié n'est pas un URI absolu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="absoluteUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Exception">Une erreur d'exécution se produit (par exemple, une interruption de la connexion au serveur).</exception>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlUrlResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlUrlResolver/&lt;GetEntityAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Pas utilisé pour l'instant.</param>
        <param name="ofObjectToReturn">Type d'objet à retourner. L'implémentation actuelle ne retourne que des objets <see cref="T:System.IO.Stream" />.</param>
        <summary>Mappe de façon asynchrone un URI vers un objet contenant la ressource réelle.</summary>
        <returns>Objet de flux ou <see langword="null" /> si un type autre que stream est spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlUrlResolver.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy {  void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy" Usage="System.Xml.XmlUrlResolver.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le proxy réseau pour l'objet <see cref="T:System.Net.WebRequest" /> sous-jacent.</summary>
        <value>Élément <see cref="T:System.Net.IWebProxy" /> à utiliser pour accéder à la ressource Internet.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public override Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlUrlResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">URI de base utilisé pour résoudre l'URI relatif.</param>
        <param name="relativeUri">URI à résoudre. L'URI peut être absolu ou relatif. S’il est absolu, cette valeur remplace effectivement la valeur <c>baseUri</c>. S’il est relatif, il se combine à <c>baseUri</c> pour produire un URI absolu.</param>
        <summary>Résout l'URI absolu à partir des URI de base et relatifs.</summary>
        <returns>URI absolu ou <see langword="null" /> si l'URI relatif ne peut pas être résolu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’URI absolu peut être utilisé comme URI de base pour toutes les demandes ultérieures pour les entités qui sont relatives à cet URI.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="baseUri" /> a la valeur <see langword="null" /> ou <paramref name="relativeUri" /> a la valeur <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Cette méthode présente une demande d’héritage. Confiance totale est tenue de substituer le <see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /> (méthode).</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>