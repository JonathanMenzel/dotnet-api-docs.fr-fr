<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c4f9b95eeb98d44cb7507cf0eacf384e8165205" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52735760" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <TypeSignature Language="F#" Value="type XmlTextWriter = class&#xA;    inherit XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cbff1-101">Représente un writer qui fournit un moyen rapide, non mis en cache et avant uniquement de génération de flux de fichiers contenant des données XML conforme au W3C Extensible Markup Language (XML) 1.0 et les espaces de noms dans les recommandations de XML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cbff1-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span>
      </span>
      <span data-ttu-id="cbff1-102">À compter de .NET Framework 2.0, nous vous recommandons d'utiliser plutôt la classe <see cref="T:System.Xml.XmlWriter" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cbff1-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbff1-103">Cette classe implémente la <xref:System.Xml.XmlWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="cbff1-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-104">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-105">`XmlTextWriter` conserve une pile d’espace de noms correspondant à tous les espaces de noms définis dans la pile d’élément actuel.</span><span class="sxs-lookup"><span data-stu-id="cbff1-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="cbff1-106">À l’aide de `XmlTextWriter` vous pouvez déclarer des espaces de noms manuellement.</span><span class="sxs-lookup"><span data-stu-id="cbff1-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="cbff1-107">Le code c# ci-dessus génère la sortie suivante.</span><span class="sxs-lookup"><span data-stu-id="cbff1-107">The above C# code produces the following output.</span></span> <span data-ttu-id="cbff1-108">`XmlTextWriter` promeut la déclaration d’espace de noms à l’élément racine pour éviter d’avoir à dupliquer sur les deux éléments enfants.</span><span class="sxs-lookup"><span data-stu-id="cbff1-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="cbff1-109">Les éléments enfants récupèrent le préfixe de la déclaration d’espace de noms.</span><span class="sxs-lookup"><span data-stu-id="cbff1-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="cbff1-110">`XmlTextWriter` vous permet également de substituer la déclaration d’espace de noms actuel.</span><span class="sxs-lookup"><span data-stu-id="cbff1-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="cbff1-111">Dans l’exemple suivant, l’espace de noms URI « 123 » est remplacé par « abc » pour produire l’élément XML `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="cbff1-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="cbff1-112">En utilisant les méthodes d’écriture qui prennent un préfixe en tant qu’argument, vous pouvez également spécifier quel préfixe à utiliser.</span><span class="sxs-lookup"><span data-stu-id="cbff1-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="cbff1-113">Dans l’exemple suivant, deux préfixes différents sont mappés au même espace de noms URI pour produire le texte XML `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span><span class="sxs-lookup"><span data-stu-id="cbff1-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="cbff1-114">S’il existe plusieurs déclarations d’espace de noms mappent différents préfixes au même espace de noms URI, `XmlTextWriter` parcourt la pile de déclarations d’espace de noms vers l’arrière et sélectionne la plus proche.</span><span class="sxs-lookup"><span data-stu-id="cbff1-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="cbff1-115">Dans l’exemple c# ci-dessus, étant donné que le `WriteAttributeString` appel ne spécifie pas de préfixe, le writer utilise le dernier préfixe placé sur la pile de l’espace de noms et génère le code XML suivant :</span><span class="sxs-lookup"><span data-stu-id="cbff1-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="cbff1-116">En cas de conflits d’espace de noms, `XmlTextWriter` les résout en générant des préfixes de remplacement.</span><span class="sxs-lookup"><span data-stu-id="cbff1-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="cbff1-117">Par exemple, si un attribut et l’élément ont le même préfixe, mais différents espaces de noms, `XmlWriter` génère un préfixe de remplacement pour l’attribut.</span><span class="sxs-lookup"><span data-stu-id="cbff1-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="cbff1-118">Les préfixes générés sont nommés `n{i}` où `i` est un nombre commençant à 1.</span><span class="sxs-lookup"><span data-stu-id="cbff1-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="cbff1-119">Le nombre est réinitialisé à 1 pour chaque élément.</span><span class="sxs-lookup"><span data-stu-id="cbff1-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="cbff1-120">Les attributs qui sont associés à un URI d’espace de noms doivent avoir un préfixe (espaces de noms ne s’appliquent pas aux attributs de valeur par défaut).</span><span class="sxs-lookup"><span data-stu-id="cbff1-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="cbff1-121">Cela est conforme à la section 5.2 des espaces de noms W3C dans la recommandation XML.</span><span class="sxs-lookup"><span data-stu-id="cbff1-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="cbff1-122">Si un attribut fait référence à un URI d’espace de noms, mais ne spécifie pas de préfixe, le writer génère un préfixe pour l’attribut.</span><span class="sxs-lookup"><span data-stu-id="cbff1-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="cbff1-123">Lorsque vous écrivez un élément vide, un espace supplémentaire est ajouté entre le nom de balise et la balise de fermeture, par exemple `<item />`.</span><span class="sxs-lookup"><span data-stu-id="cbff1-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="cbff1-124">Cela assure la compatibilité avec les navigateurs plus anciens.</span><span class="sxs-lookup"><span data-stu-id="cbff1-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="cbff1-125">Quand un `String` est utilisé comme paramètre de méthode, `null` et `String.Empty` sont équivalentes.</span><span class="sxs-lookup"><span data-stu-id="cbff1-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="cbff1-126">`String.Empty` suit les règles du W3C.</span><span class="sxs-lookup"><span data-stu-id="cbff1-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="cbff1-127">Pour écrire des données fortement typées, utilisez la <xref:System.Xml.XmlConvert> classe pour convertir des types de données en chaîne.</span><span class="sxs-lookup"><span data-stu-id="cbff1-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="cbff1-128">Par exemple, le code c# suivant convertit les données à partir de `Double` à `String` et écrit l’élément `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="cbff1-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="cbff1-129">`XmlTextWriter` ne vérifie pas les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="cbff1-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="cbff1-130">Caractères non valides dans les noms d’attribut et d’élément.</span><span class="sxs-lookup"><span data-stu-id="cbff1-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="cbff1-131">Caractères Unicode qui ne tiennent pas l’encodage spécifié.</span><span class="sxs-lookup"><span data-stu-id="cbff1-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="cbff1-132">Si les caractères Unicode ne tiennent pas l’encodage spécifié, le `XmlTextWriter` n’échappe pas les caractères Unicode dans les entités de caractères.</span><span class="sxs-lookup"><span data-stu-id="cbff1-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="cbff1-133">Attributs en double.</span><span class="sxs-lookup"><span data-stu-id="cbff1-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="cbff1-134">Caractères dans l’identificateur public DOCTYPE ou l’identificateur du système.</span><span class="sxs-lookup"><span data-stu-id="cbff1-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="cbff1-135">Considérations relatives à la sécurité</span><span class="sxs-lookup"><span data-stu-id="cbff1-135">Security Considerations</span></span>  
 <span data-ttu-id="cbff1-136">Les éléments suivants sont à prendre en compte lorsque vous travaillez avec le <xref:System.Xml.XmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="cbff1-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="cbff1-137">Les exceptions levées par le <xref:System.Xml.XmlTextWriter> peuvent divulguer des informations de chemin d’accès que vous ne souhaitez pas propagées à l’application.</span><span class="sxs-lookup"><span data-stu-id="cbff1-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="cbff1-138">Vos applications doivent intercepter les exceptions et les traiter correctement.</span><span class="sxs-lookup"><span data-stu-id="cbff1-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="cbff1-139">Lorsque vous transmettez l'objet <xref:System.Xml.XmlTextWriter> à une autre application, le flux sous-jacent est exposé à cette application.</span><span class="sxs-lookup"><span data-stu-id="cbff1-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="cbff1-140">Si vous devez transmettre <xref:System.Xml.XmlTextWriter> à une application partiellement fiable, vous devez plutôt utiliser un objet <xref:System.Xml.XmlWriter> créé par la méthode <xref:System.Xml.XmlWriter.Create%2A>.</span><span class="sxs-lookup"><span data-stu-id="cbff1-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="cbff1-141">Le <xref:System.Xml.XmlTextWriter> ne valide pas les données qui sont passées à la <xref:System.Xml.XmlTextWriter.WriteDocType%2A> ou <xref:System.Xml.XmlTextWriter.WriteRaw%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="cbff1-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="cbff1-142">Vous ne devez pas passer des données arbitraires à ces méthodes.</span><span class="sxs-lookup"><span data-stu-id="cbff1-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="cbff1-143">Si les paramètres par défaut sont modifiées, il n’existe aucune garantie que la sortie générée est données XML bien formées.</span><span class="sxs-lookup"><span data-stu-id="cbff1-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="cbff1-144">N’acceptez pas les composants de prise en charge, comme un <xref:System.Text.Encoding> objet, à partir d’une source non fiable.</span><span class="sxs-lookup"><span data-stu-id="cbff1-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e695047f-3c0f-4045-8708-5baea91cc380">
      <span data-ttu-id="cbff1-145">Documents et données XML</span>
      <span class="sxs-lookup">
        <span data-stu-id="cbff1-145">XML Documents and Data</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-146">Crée une instance de la classe <see langword="XmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-146">Creates an instance of the <see langword="XmlTextWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-147">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-147">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.TextWriter -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter w" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="cbff1-148">
            <see langword="TextWriter" /> dans lequel écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-148">The <see langword="TextWriter" /> to write to.</span>
          </span>
          <span data-ttu-id="cbff1-149">Il est supposé que le <see langword="TextWriter" /> est déjà défini selon l’encodage approprié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-149">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-150">Crée une instance de la <see langword="XmlTextWriter" /> à l’aide de l’élément spécifié de la classe <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-150">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-151">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-151">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (w, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="cbff1-152">Flux dans lequel vous voulez écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-152">The stream to which you want to write.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="cbff1-153">Encodage à générer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-153">The encoding to generate.</span>
          </span>
          <span data-ttu-id="cbff1-154">Si l’encodage est <see langword="null" /> il écrit le flux au format UTF-8 et omet l’attribut de codage de la <see langword="ProcessingInstruction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-154">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-155">Crée une instance de la <see langword="XmlTextWriter" /> classe à l’aide du flux spécifié et l’encodage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-155">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-156">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-156">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-157">L’encodage n’est pas pris en charge ou ne peut pas écrire dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-157">The encoding is not supported or the stream cannot be written to.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbff1-158">
            <paramref name="w" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-158">
              <paramref name="w" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : string * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (filename, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="cbff1-159">Nom du fichier dans lequel écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-159">The filename to write to.</span>
          </span>
          <span data-ttu-id="cbff1-160">Si le fichier existe, il le tronque et remplace son contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-160">If the file exists, it truncates it and overwrites it with the new content.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="cbff1-161">Encodage à générer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-161">The encoding to generate.</span>
          </span>
          <span data-ttu-id="cbff1-162">Si l’encodage est <see langword="null" /> il écrit le fichier au format UTF-8 et omet l’attribut de codage de la <see langword="ProcessingInstruction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-162">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-163">Crée une instance de la <see cref="T:System.Xml.XmlTextWriter" /> classe à l’aide du fichier spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-163">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-164">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-164">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-165">L’encodage n’est pas pris en charge ; le nom de fichier est vide, contient uniquement des espaces blancs ou contient un ou plusieurs caractères non valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-165">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="cbff1-166">Accès refusé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-166">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbff1-167">Le nom de fichier est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-167">The filename is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="cbff1-168">Impossible de trouver le répertoire auquel l’écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-168">The directory to write to is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cbff1-169">Le nom de fichier comprend une syntaxe incorrecte ou non valide pour le nom de fichier, nom de répertoire ou syntaxe du nom de volume.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-169">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cbff1-170">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-170">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.Xml.XmlTextWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-171">Obtient l'objet de flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-171">Gets the underlying stream object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbff1-172">Flux vers lequel le <see langword="XmlTextWriter" /> écrit ou <see langword="null" /> si le <see langword="XmlTextWriter" /> a été construit à l’aide un <see cref="T:System.IO.TextWriter" /> qui n’hérite pas de la <see cref="T:System.IO.StreamWriter" /> classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-172">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-173">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-173">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-174">Si le writer a été construit à l’aide un `TextWriter` qui est dérivée de la `StreamWriter` (classe), cette propriété est équivalente à la <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="cbff1-174">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cbff1-175">Si le writer a été construit à l’aide un <xref:System.IO.Stream>, cette propriété retourne le `Stream` passé au constructeur.</span><span class="sxs-lookup"><span data-stu-id="cbff1-175">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="cbff1-176">Si le writer a été construit à l’aide d’un nom de fichier, cette propriété retourne le `Stream` représentant le fichier.</span><span class="sxs-lookup"><span data-stu-id="cbff1-176">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-177">Ferme ce flux et le flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-177">Closes this stream and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-178">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-178">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-179">Les éléments ou des attributs laissés ouverts sont fermés automatiquement.</span><span class="sxs-lookup"><span data-stu-id="cbff1-179">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="cbff1-180">Cette méthode ne lève pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="cbff1-180">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-181">L’exemple suivant écrit un fragment XML.</span><span class="sxs-lookup"><span data-stu-id="cbff1-181">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-182">Vide le contenu de la mémoire tampon dans les flux sous-jacents, puis vide le flux sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-182">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-183">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-183">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-184">On parle au lieu de <xref:System.Xml.XmlTextWriter.Close%2A> lorsque vous souhaitez écrire davantage dans le flux sous-jacent, sans perdre de la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="cbff1-184">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-185">L’exemple suivant écrit deux fragments XML.</span><span class="sxs-lookup"><span data-stu-id="cbff1-185">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberSignature Language="F#" Value="member this.Formatting : System.Xml.Formatting with get, set" Usage="System.Xml.XmlTextWriter.Formatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-186">Indique la façon dont la sortie est mise en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-186">Indicates how the output is formatted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbff1-187">Une des valeurs de <see cref="T:System.Xml.Formatting" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-187">One of the <see cref="T:System.Xml.Formatting" /> values.</span>
          </span>
          <span data-ttu-id="cbff1-188">La valeur par défaut est <see langword="Formatting.None" /> (aucune mise en forme spéciale).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-188">The default is <see langword="Formatting.None" /> (no special formatting).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-189">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-189">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-190">Si le `Indented` option est définie, les éléments enfants sont mises en retrait à l’aide de la <xref:System.Xml.XmlTextWriter.Indentation%2A> et <xref:System.Xml.XmlTextWriter.IndentChar%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="cbff1-190">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="cbff1-191">Contenu de l’élément uniquement est mise en retrait.</span><span class="sxs-lookup"><span data-stu-id="cbff1-191">Only element content is indented.</span></span> <span data-ttu-id="cbff1-192">Le code c# suivant écrit des éléments HTML incluant un contenu mixte :</span><span class="sxs-lookup"><span data-stu-id="cbff1-192">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="cbff1-193">Le code ci-dessus génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="cbff1-193">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="cbff1-194">Lorsqu’il est affiché au format HTML aucun espace blanc n’apparaît entre les éléments en gras et italique.</span><span class="sxs-lookup"><span data-stu-id="cbff1-194">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="cbff1-195">En fait, dans cet exemple, si la mise en retrait a été ajouté entre ces éléments, le mot « Éléphant » serait coupé de manière incorrecte.</span><span class="sxs-lookup"><span data-stu-id="cbff1-195">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="cbff1-196">Écriture de n’importe quel texte, sauf `String.Empty` place cet élément en mode de contenu mixte.</span><span class="sxs-lookup"><span data-stu-id="cbff1-196">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="cbff1-197">Éléments enfants n’héritent pas de cet état en mode « mixte ».</span><span class="sxs-lookup"><span data-stu-id="cbff1-197">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="cbff1-198">Un élément enfant d’un élément « mixte » ne mise en retrait, sauf s’il est également contient un contenu « mixte ».</span><span class="sxs-lookup"><span data-stu-id="cbff1-198">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="cbff1-199">[Contenu de l’élément](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) et [un contenu mixte](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) sont définies d’après les définitions XML 1.0 de ces termes.</span><span class="sxs-lookup"><span data-stu-id="cbff1-199">[Element content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and [mixed content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
## Examples  
 <span data-ttu-id="cbff1-200">L’exemple suivant écrit un fragment XML.</span><span class="sxs-lookup"><span data-stu-id="cbff1-200">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indentation : int with get, set" Usage="System.Xml.XmlTextWriter.Indentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-201">Obtient ou définit le nombre d’IndentChars à écrire pour chaque niveau dans la hiérarchie lorsque <see cref="P:System.Xml.XmlTextWriter.Formatting" /> est défini sur <see langword="Formatting.Indented" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-201">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbff1-202">Nombre de <see langword="IndentChars" /> pour chaque niveau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-202">Number of <see langword="IndentChars" /> for each level.</span>
          </span>
          <span data-ttu-id="cbff1-203">La valeur par défaut est 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-203">The default is 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-204">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-204">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-205">Mise en retrait est effectuée sur les types de nœud suivants : `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, et `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="cbff1-205">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="cbff1-206">Tous les autres types de nœud ne sont pas affectées.</span><span class="sxs-lookup"><span data-stu-id="cbff1-206">All other node types are not affected.</span></span> <span data-ttu-id="cbff1-207">Le `XmlTextWriter` ne met pas en retrait le sous-ensemble interne DTD.</span><span class="sxs-lookup"><span data-stu-id="cbff1-207">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="cbff1-208">Toutefois, vous pourriez procéder comme suit pour mettre en forme le sous-ensemble interne DTD.</span><span class="sxs-lookup"><span data-stu-id="cbff1-208">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft'>]>  
";  
XmlTextWriter tw = new XmlTextWriter(Console.Out);  
tw.WriteDocType(name, pubid, sysid, subset);  
```  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-209">L’exemple suivant écrit un fragment XML.</span><span class="sxs-lookup"><span data-stu-id="cbff1-209">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-210">Définition de cette propriété sur une valeur négative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-210">Setting this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChar : char with get, set" Usage="System.Xml.XmlTextWriter.IndentChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-211">Obtient ou définit le caractère à utiliser pour la mise en retrait lorsque <see cref="P:System.Xml.XmlTextWriter.Formatting" /> est défini sur <see langword="Formatting.Indented" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-211">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbff1-212">Caractère à utiliser pour la mise en retrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-212">The character to use for indenting.</span>
          </span>
          <span data-ttu-id="cbff1-213">La valeur par défaut est un espace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-213">The default is space.</span>
          </span>
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="cbff1-214">Le <see langword="XmlTextWriter" /> vous permet de définir cette propriété sur n’importe quel caractère.</span>
              <span class="sxs-lookup">
                <span data-stu-id="cbff1-214">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span>
              </span>
              <span data-ttu-id="cbff1-215">Pour garantir la validité du code XML, vous devez spécifier un espace blanc valide, 0x9, 0x10, 0x13 ou 0x20.</span>
              <span class="sxs-lookup">
                <span data-stu-id="cbff1-215">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span>
              </span>
            </para>
          </block>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-216">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-216">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.LookupPrefix : string -&gt; string" Usage="xmlTextWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">
          <span data-ttu-id="cbff1-217">Namespace URI dont vous souhaitez rechercher le préfixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-217">Namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-218">Retourne le préfixe le plus proche défini dans la portée espace de noms actuelle pour l'URI de l'espace de noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-218">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbff1-219">Préfixe correspondant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-219">The matching prefix.</span>
          </span>
          <span data-ttu-id="cbff1-220">Ou <see langword="null" /> si aucun espace de noms correspondant URI se trouve dans la portée actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-220">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-221">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-221">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-222">L’exemple suivant écrit un livre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-222">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-223">
            <paramref name="ns" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-223">
              <paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextWriter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-224">Obtient ou définit une valeur indiquant si la prise en charge des espaces de noms doit être assurée ou non.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-224">Gets or sets a value indicating whether to do namespace support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbff1-225">
            <see langword="true" /> pour prendre en charge des espaces de noms ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-225">
              <see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="cbff1-226">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-226">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-227">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-227">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-228">Cette propriété détermine si le writer prend en charge les espaces de noms du W3C dans la recommandation XML à www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="cbff1-228">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbff1-229">Vous pouvez uniquement modifier cette propriété en la <see langword="WriteState.Start" /> état.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-229">You can only change this property when in the <see langword="WriteState.Start" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char with get, set" Usage="System.Xml.XmlTextWriter.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-230">Obtient ou définit le caractère à utiliser pour mettre les valeurs d'attributs entre guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-230">Gets or sets which character to use to quote attribute values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbff1-231">Caractère à utiliser pour mettre les valeurs d'attributs entre guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-231">The character to use to quote attribute values.</span>
          </span>
          <span data-ttu-id="cbff1-232">Cela doit être un guillemet simple (&amp;#39 ;) ou un guillemet double (&amp;#34 ;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-232">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span>
          </span>
          <span data-ttu-id="cbff1-233">La valeur par défaut est un guillemet double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-233">The default is a double quote.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-234">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-234">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-235">La définition de cette propriété à un autre élément qu’un guillemet simple ou double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-235">Setting this property to something other than either a single or double quote.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="cbff1-236">Tableau d'octets à encoder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-236">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="cbff1-237">Position dans la mémoire tampon indiquant le début des octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-237">The position within the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="cbff1-238">Nombre d'octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-238">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-239">Encode les octets binaires spécifiés au format base64 et écrit le texte résultant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-239">Encodes the specified binary bytes as base64 and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-240">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-240">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-241">L’exemple suivant encode un fichier d’entrée en utilisant `WriteBase64` et génère un fichier XML temporaire.</span><span class="sxs-lookup"><span data-stu-id="cbff1-241">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="cbff1-242">Le fichier XML temporaire est décodé à l’aide de la <xref:System.Xml.XmlTextReader.ReadBase64%2A> méthode et comparé au fichier d’origine.</span><span class="sxs-lookup"><span data-stu-id="cbff1-242">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbff1-243">
            <paramref name="buffer" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-243">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-244">La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-244">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cbff1-245">
            <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-245">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbff1-246">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-246">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="cbff1-247">Tableau d'octets à encoder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-247">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="cbff1-248">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-248">The position in the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="cbff1-249">Nombre d'octets à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-249">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-250">Encode les octets binaires spécifiés au format binhex et écrit le texte résultant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-250">Encodes the specified binary bytes as binhex and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-251">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-251">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbff1-252">
            <paramref name="buffer" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-252">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-253">La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-253">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cbff1-254">
            <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-254">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbff1-255">Le <see cref="P:System.Xml.XmlTextWriter.WriteState" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-255">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteCData : string -&gt; unit" Usage="xmlTextWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="cbff1-256">Texte à placer dans le bloc CDATA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-256">Text to place inside the CDATA block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-257">Écrit un bloc &lt;![CDATA[...]]&gt; contenant le texte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-257">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-258">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-258">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-259">Si `text` est soit `null` ou `String.Empty`, cette méthode écrit un bloc CDATA vide, par exemple \<! [ [] CDATA</span><span class="sxs-lookup"><span data-stu-id="cbff1-259">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-260">Le texte entraînerait un document XML incorrect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-260">The text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbff1-261">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-261">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="override this.WriteCharEntity : char -&gt; unit" Usage="xmlTextWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="cbff1-262">Caractère Unicode pour lequel générer une entité de caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-262">Unicode character for which to generate a character entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-263">Force la génération d'une entité de caractère pour la valeur du caractère Unicode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-263">Forces the generation of a character entity for the specified Unicode character value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-264">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-264">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-265">Cette méthode écrit le caractère Unicode dans un format de référence d’entité caractère hexadécimal.</span><span class="sxs-lookup"><span data-stu-id="cbff1-265">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-266">L’exemple suivant utilise la `WriteCharEntity` méthode pour écrire une adresse de messagerie.</span><span class="sxs-lookup"><span data-stu-id="cbff1-266">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-267">Le caractère est dans la plage de caractères de paire de substitution, <see langword="0xd800" /> - <see langword="0xdfff" /> ; sinon, le texte serait un document XML au format incorrect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-267">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbff1-268">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-268">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteChars : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="cbff1-269">Tableau de caractères contenant le texte à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-269">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="cbff1-270">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-270">The position in the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="cbff1-271">Nombre de caractères à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-271">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-272">Écrit du texte mémoire tampon par mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-272">Writes text one buffer at a time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-273">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-273">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-274">Cette méthode peut être utilisée pour écrire de grandes quantités de mémoire tampon de texte un à la fois.</span><span class="sxs-lookup"><span data-stu-id="cbff1-274">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="cbff1-275">Gestion particulière doit être effectuée pour garantir la `WriteChars` méthode ne pas divisé en caractères de paire de substitution plusieurs écritures de mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="cbff1-275">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="cbff1-276">La spécification XML définit les plages valides pour les paires de substitution.</span><span class="sxs-lookup"><span data-stu-id="cbff1-276">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="cbff1-277">Une exception est levée si les caractères de paire de substitution sont écrits qui entraînerait les caractères de paire de substitution séparation dans la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="cbff1-277">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbff1-278">
            <paramref name="buffer" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-278">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cbff1-279">
            <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-279">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="cbff1-280">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-280">-or-</span>
          </span>
          <span data-ttu-id="cbff1-281">La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />; les résultats de l’appel de caractères de paire de substitution soit fractionnée ou une paire de substitution non valide en cours d’écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-281">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbff1-282">Le <see cref="P:System.Xml.XmlTextWriter.WriteState" /> est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-282">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteComment : string -&gt; unit" Usage="xmlTextWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="cbff1-283">Texte à placer dans le commentaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-283">Text to place inside the comment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-284">Écrit un commentaire &lt;!--...--&gt; contenant le texte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-284">Writes out a comment &lt;!--...--&gt; containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-285">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-285">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-286">Si `text` est soit `null` ou `String.Empty`, cette méthode écrit un `Comment` sans données de contenu, par exemple \<!--->.</span><span class="sxs-lookup"><span data-stu-id="cbff1-286">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-287">L’exemple suivant écrit un fichier XML représentant un livre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-287">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-288">Le texte entraînerait un document XML incorrect</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-288">The text would result in a non-well formed XML document</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbff1-289">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-289">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="override this.WriteDocType : string * string * string * string -&gt; unit" Usage="xmlTextWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cbff1-290">Nom de DOCTYPE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-290">The name of the DOCTYPE.</span>
          </span>
          <span data-ttu-id="cbff1-291">Ne doit pas être vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-291">This must be non-empty.</span>
          </span>
        </param>
        <param name="pubid">
          <span data-ttu-id="cbff1-292">Si non null il écrit également PUBLIC « pubid » « sysid » où <paramref name="pubid" /> et <paramref name="sysid" /> sont remplacés par la valeur des arguments spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-292">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span>
          </span>
        </param>
        <param name="sysid">
          <span data-ttu-id="cbff1-293">Si <paramref name="pubid" /> a la valeur null et <paramref name="sysid" /> est non null, elle écrit SYSTEM « sysid » où <paramref name="sysid" /> est remplacé par la valeur de cet argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-293">If <paramref name="pubid" /> is null and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span>
          </span>
        </param>
        <param name="subset">
          <span data-ttu-id="cbff1-294">Si la valeur est non null, elle écrit [subset] où subset est remplacé par la valeur de cet argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-294">If non-null it writes [subset] where subset is replaced with the value of this argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-295">Écrit la déclaration DOCTYPE avec le nom et les attributs facultatifs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-295">Writes the DOCTYPE declaration with the specified name and optional attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-296">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-296">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-297">Cette méthode ne vérifie pas les caractères non valides dans `pubid`, `sysid` ou `subset`.</span><span class="sxs-lookup"><span data-stu-id="cbff1-297">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="cbff1-298">Il ne vérifie pas plus que le sous-ensemble interne est correctement construit.</span><span class="sxs-lookup"><span data-stu-id="cbff1-298">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cbff1-299">Le <xref:System.Xml.XmlTextWriter> ne valide pas les données qui sont passées à la <xref:System.Xml.XmlTextWriter.WriteDocType%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="cbff1-299">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="cbff1-300">Vous ne devez pas passer des données arbitraires à cette méthode.</span><span class="sxs-lookup"><span data-stu-id="cbff1-300">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-301">L’exemple suivant écrit un fichier XML représentant un livre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-301">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbff1-302">Cette méthode a été appelée en dehors du prologue (après l’élément racine).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-302">This method was called outside the prolog (after the root element).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-303">
            <paramref name="name" /> est <see langword="null" /> ou <see langword="String.Empty" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-303">
              <paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span>
          </span>
          <span data-ttu-id="cbff1-304">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-304">-or-</span>
          </span>
          <span data-ttu-id="cbff1-305">La valeur de <paramref name="name" /> entraînerait le code XML non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-305">the value for <paramref name="name" /> would result in invalid XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="override this.WriteEndAttribute : unit -&gt; unit" Usage="xmlTextWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-306">Ferme le précédent <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> appeler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-306">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-307">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-307">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-308">Si vous appelez `WriteStartAttribute`, vous pouvez fermer l’attribut avec cette méthode.</span><span class="sxs-lookup"><span data-stu-id="cbff1-308">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="cbff1-309">Vous pouvez également fermer l’attribut en appelant `WriteStartAttribute` là encore, l’appel <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, ou en appelant <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="cbff1-309">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-310">L’exemple suivant écrit un livre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-310">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteEndDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-311">Ferme les éléments ou attributs ouverts, et replace le writer à l'état Start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-311">Closes any open elements or attributes and puts the writer back in the Start state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-312">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-312">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-313">L’exemple suivant écrit un fichier XML représentant un livre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-313">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-314">Le document XML n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-314">The XML document is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-315">Ferme un élément et exécute un pop sur la portée espace de noms correspondante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-315">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-316">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-316">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-317">Si l’élément ne contient aucun contenu short balise de fin « / > » est écrite ; Sinon, une balise de fin complète est écrite.</span><span class="sxs-lookup"><span data-stu-id="cbff1-317">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-318">L’exemple suivant écrit un fichier XML représentant un livre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-318">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteEntityRef : string -&gt; unit" Usage="xmlTextWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cbff1-319">Nom de la référence d’entité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-319">Name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-320">Écrit une référence d’entité en tant que <see langword="&amp;name;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-320">Writes out an entity reference as <see langword="&amp;name;" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-321">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-321">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-322">L’exemple suivant écrit un fichier XML représentant un livre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-322">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-323">Le texte entraînerait un document XML incorrect ou <paramref name="name" /> est soit <see langword="null" /> ou <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-323">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteFullEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-324">Ferme un élément et exécute un pop sur la portée espace de noms correspondante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-324">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-325">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-326">Cette méthode écrit toujours la balise de fin complète.</span><span class="sxs-lookup"><span data-stu-id="cbff1-326">This method always writes the full end tag.</span></span> <span data-ttu-id="cbff1-327">Cela est utile lorsque vous traitez des éléments qui doivent inclure une balise de fin complète.</span><span class="sxs-lookup"><span data-stu-id="cbff1-327">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="cbff1-328">Par exemple, les navigateurs s’attendent les blocs de script HTML à fermer avec «\</script > ».</span><span class="sxs-lookup"><span data-stu-id="cbff1-328">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-329">L’exemple suivant écrit un élément sans contenu.</span><span class="sxs-lookup"><span data-stu-id="cbff1-329">The following example writes out an element with no content.</span></span> <span data-ttu-id="cbff1-330">Il utilise WriteFullEndElement pour écrire la balise d’élément de fin complète.</span><span class="sxs-lookup"><span data-stu-id="cbff1-330">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteName : string -&gt; unit" Usage="xmlTextWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cbff1-331">Nom à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-331">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-332">Écrit le nom spécifié, en vérifiant qu’il s’agit d’un nom valide conformément à la recommandation W3C pour le XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-332">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-333">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-333">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-334">Si <xref:System.Xml.XmlTextWriter.Namespaces%2A> a la valeur `true`, `WriteName` vérifie également que le nom est également valide pour les espaces de noms du W3C dans la recommandation XML.</span><span class="sxs-lookup"><span data-stu-id="cbff1-334">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-335">
            <paramref name="name" /> n’est pas un nom XML valide ; ou <paramref name="name" /> est soit <see langword="null" /> ou <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-335">
              <paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteNmToken : string -&gt; unit" Usage="xmlTextWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cbff1-336">Nom à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-336">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-337">Écrit le nom spécifié, en vérifiant qu’il s’agit d’un <see langword="NmToken" /> valide conformément à la recommandation W3C pour le XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-337">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-338">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-338">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-339">
            <paramref name="name" /> n’est pas valide <see langword="NmToken" />; ou <paramref name="name" /> est soit <see langword="null" /> ou <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-339">
              <paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlTextWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cbff1-340">Nom de l’instruction de traitement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-340">Name of the processing instruction.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="cbff1-341">Texte à inclure dans l’instruction de traitement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-341">Text to include in the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-342">Écrit une instruction de traitement avec un espace entre le nom et le texte, comme suit : &lt;?name text?&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-342">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-343">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-344">Si `text` est soit `null` ou `String.Empty`, cette méthode écrit un `ProcessingInstruction` sans données de contenu, par exemple \<? nom ? >.</span><span class="sxs-lookup"><span data-stu-id="cbff1-344">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-345">L’exemple suivant écrit un fichier XML représentant un livre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-345">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-346">Le texte entraînerait un document XML incorrect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-346">The text would result in a non-well formed XML document.</span>
          </span>
          <span data-ttu-id="cbff1-347">
            <paramref name="name" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-347">
              <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="cbff1-348">Cette méthode est utilisée pour créer une déclaration XML après <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> a déjà été appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-348">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlTextWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="cbff1-349">Nom local à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-349">The local name to write.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="cbff1-350">L’espace de noms URI à associer au nom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-350">The namespace URI to associate with the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-351">Écrit le nom qualifié de l'espace de noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-351">Writes out the namespace-qualified name.</span>
          </span>
          <span data-ttu-id="cbff1-352">Cette méthode recherche le préfixe situé dans la portée de l'espace de noms spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-352">This method looks up the prefix that is in scope for the given namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-353">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-353">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-354">Par exemple, le code Microsoft Visual c# suivant :</span><span class="sxs-lookup"><span data-stu-id="cbff1-354">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="cbff1-355">Génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="cbff1-355">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="cbff1-356">Si `ns` correspond à la valeur par défaut espace de noms actuel, aucun préfixe n’est généré.</span><span class="sxs-lookup"><span data-stu-id="cbff1-356">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="cbff1-357">Lors de l’écriture des valeurs d’attribut, cette méthode génère un préfixe si `ns` est introuvable.</span><span class="sxs-lookup"><span data-stu-id="cbff1-357">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="cbff1-358">Lorsque vous écrivez le contenu de l’élément, elle lève une exception si `ns` est introuvable.</span><span class="sxs-lookup"><span data-stu-id="cbff1-358">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="cbff1-359">Si ce writer prend en charge les espaces de noms (<xref:System.Xml.XmlTextWriter.Namespaces%2A> a la valeur `true`), cette méthode vérifie également que le nom est valide conformément à la [espaces de noms W3C dans la recommandation XML](https://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="cbff1-359">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the [W3C Namespaces in XML recommendation](https://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-360">L’exemple suivant écrit une partie d’un schéma XSD.</span><span class="sxs-lookup"><span data-stu-id="cbff1-360">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-361">
            <paramref name="localName" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-361">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="cbff1-362">
            <paramref name="localName" /> n’est pas un nom valide conformément à la spécification d’espaces de noms W3C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-362">
              <paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-363">Écrit manuellement un balisage brut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-363">Writes raw markup manually.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-364">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-364">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : string -&gt; unit" Usage="xmlTextWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="cbff1-365">Chaîne contenant le texte à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-365">String containing the text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-366">Écrit manuellement un balisage brut à partir d'une chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-366">Writes raw markup manually from a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-367">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-367">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-368">Cette méthode n’échappe pas les caractères spéciaux.</span><span class="sxs-lookup"><span data-stu-id="cbff1-368">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cbff1-369">Le <xref:System.Xml.XmlTextWriter> ne valide pas les données qui sont passées à la <xref:System.Xml.XmlTextWriter.WriteRaw%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="cbff1-369">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="cbff1-370">Vous ne devez pas passer des données arbitraires à cette méthode.</span><span class="sxs-lookup"><span data-stu-id="cbff1-370">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-371">L’exemple suivant écrit une chaîne à l’aide de la `WriteRaw` (méthode).</span><span class="sxs-lookup"><span data-stu-id="cbff1-371">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="cbff1-372">Tableau de caractères contenant le texte à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-372">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="cbff1-373">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-373">The position within the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="cbff1-374">Nombre de caractères à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-374">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-375">Écrit manuellement un balisage brut à partir d'une mémoire tampon de caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-375">Writes raw markup manually from a character buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-376">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-377">Cette méthode n’échappe pas les caractères spéciaux.</span><span class="sxs-lookup"><span data-stu-id="cbff1-377">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cbff1-378">Le <xref:System.Xml.XmlTextWriter> ne valide pas les données qui sont passées à la <xref:System.Xml.XmlTextWriter.WriteRaw%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="cbff1-378">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="cbff1-379">Vous ne devez pas passer des données arbitraires à cette méthode.</span><span class="sxs-lookup"><span data-stu-id="cbff1-379">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbff1-380">
            <paramref name="buffer" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-380">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cbff1-381">
            <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-381">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="cbff1-382">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-382">-or-</span>
          </span>
          <span data-ttu-id="cbff1-383">La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="cbff1-384">
            <see langword="Namespace" /> préfixe de l’attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-384">
              <see langword="Namespace" /> prefix of the attribute.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="cbff1-385">
            <see langword="LocalName" /> de l’attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-385">
              <see langword="LocalName" /> of the attribute.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="cbff1-386">
            <see langword="NamespaceURI" /> de l’attribut</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-386">
              <see langword="NamespaceURI" /> of the attribute</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-387">Écrit le début d'un attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-387">Writes the start of an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-388">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-389">Il s’agit d’une version plus avancée de <xref:System.Xml.XmlWriter.WriteAttributeString%2A> qui vous permet d’écrire une valeur d’attribut à l’aide de plusieurs méthodes d’écriture, telles que <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="cbff1-389">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-390">L’exemple suivant écrit un livre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-390">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-391">
            <paramref name="localName" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-391">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-392">Écrit la déclaration XML avec la version "1.0".</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-392">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-393">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-393">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-394">Écrit la déclaration XML avec la version "1.0".</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-394">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-395">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-395">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-396">Le niveau d’encodage du document est déterminé par la façon dont le writer est implémenté.</span><span class="sxs-lookup"><span data-stu-id="cbff1-396">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="cbff1-397">Par exemple, si un <xref:System.Text.Encoding> objet est spécifié dans le `XmlTextWriter` constructeur, ce paramètre détermine la valeur de l’attribut de codage.</span><span class="sxs-lookup"><span data-stu-id="cbff1-397">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="cbff1-398">Cette méthode ne crée pas d’attribut autonome.</span><span class="sxs-lookup"><span data-stu-id="cbff1-398">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="cbff1-399">Lorsque `WriteStartDocument` est appelé le writer valide que vous écrivez est un document XML bien formé.</span><span class="sxs-lookup"><span data-stu-id="cbff1-399">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="cbff1-400">Par exemple, il vérifie que la déclaration XML est le premier nœud, que l’une et qu’un seul élément de niveau racine existe et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="cbff1-400">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="cbff1-401">Si cette méthode n’est pas appelée, le writer suppose qu’un fragment XML est écrit et n’applique aucune règle de niveau racine.</span><span class="sxs-lookup"><span data-stu-id="cbff1-401">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="cbff1-402">Si `WriteStartDocument` a été appelée, puis la <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> méthode est utilisée pour créer une autre déclaration XML, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="cbff1-402">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-403">L’exemple suivant écrit un fichier XML représentant un livre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-403">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbff1-404">Cela n’est pas la première méthode d’écriture appelée après le constructeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-404">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : bool -&gt; unit" Usage="xmlTextWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone">
          <span data-ttu-id="cbff1-405">Si <see langword="true" />, il écrit « autonome = yes » ; si <see langword="false" />, elle écrit « autonome = no ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-405">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-406">Écrit la déclaration XML avec la version "1.0" et l'attribut autonome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-406">Writes the XML declaration with the version "1.0" and the standalone attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-407">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-407">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-408">Le niveau d’encodage du document est déterminé par la façon dont le writer est implémenté.</span><span class="sxs-lookup"><span data-stu-id="cbff1-408">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="cbff1-409">Par exemple, si un <xref:System.Text.Encoding> objet est spécifié dans le `XmlTextWriter` constructeur, ce paramètre détermine la valeur de l’attribut de codage.</span><span class="sxs-lookup"><span data-stu-id="cbff1-409">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="cbff1-410">Lorsque `WriteStartDocument` est appelé le writer valide que vous écrivez est un document XML bien formé.</span><span class="sxs-lookup"><span data-stu-id="cbff1-410">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="cbff1-411">Par exemple, il vérifie que la déclaration XML est le premier nœud, que l’une et qu’un seul élément de niveau racine existe et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="cbff1-411">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="cbff1-412">Si cette méthode n’est pas appelée, le writer suppose qu’un fragment XML est écrit et n’applique aucune règle de niveau racine.</span><span class="sxs-lookup"><span data-stu-id="cbff1-412">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="cbff1-413">Si `WriteStartDocument` a été appelée, puis la <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> méthode est utilisée pour créer une autre déclaration XML, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="cbff1-413">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbff1-414">Cela n’est pas la première méthode d’écriture appelée après le constructeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-414">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartElement : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="cbff1-415">Préfixe d'espace de noms de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-415">The namespace prefix of the element.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="cbff1-416">Le nom local de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-416">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="cbff1-417">URI de l'espace de noms à associer à l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-417">The namespace URI to associate with the element.</span>
          </span>
          <span data-ttu-id="cbff1-418">Si cet espace de noms est déjà dans la portée et qu'il possède un préfixe associé, le writer écrit automatiquement ce préfixe également.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-418">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-419">Écrit l’étiquette de début indiquée et l’associe à l’espace de noms et au préfixe spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-419">Writes the specified start tag and associates it with the given namespace and prefix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-420">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-421">Après avoir appelé cette méthode, vous pouvez écrire des attributs, ou créer de contenu à l’aide de <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, ou <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> pour les éléments enfants.</span><span class="sxs-lookup"><span data-stu-id="cbff1-421">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="cbff1-422">Vous pouvez fermer l’élément avec <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> à quel moment une balise de fin est écrit.</span><span class="sxs-lookup"><span data-stu-id="cbff1-422">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-423">L’exemple suivant écrit un livre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-423">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbff1-424">Le writer est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-424">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlTextWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-425">Obtient l'état du writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-425">Gets the state of the writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbff1-426">Une des valeurs de <see cref="T:System.Xml.WriteState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-426">One of the <see cref="T:System.Xml.WriteState" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-427">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteString : string -&gt; unit" Usage="xmlTextWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="cbff1-428">Texte à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-428">Text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-429">Écrit le texte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-429">Writes the given text content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-430">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-430">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-431">`WriteString` effectue les opérations suivantes</span><span class="sxs-lookup"><span data-stu-id="cbff1-431">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="cbff1-432">Les caractères `&`, `<`, et `>` sont remplacées par `&amp;`, `&lt;`, et `&gt;`, respectivement.</span><span class="sxs-lookup"><span data-stu-id="cbff1-432">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="cbff1-433">Les valeurs de caractère dans la plage 0 x-0x1F des (à l’exclusion des espaces blancs 0 x 9, 0xA et 0xD) sont remplacées par les entités de caractères numériques (`&#0;` via `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="cbff1-433">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="cbff1-434">Si `WriteString` est appelée dans le contexte d’une valeur d’attribut, les guillemets doubles et simples sont remplacées par `&quot;` et `&apos;` respectivement.</span><span class="sxs-lookup"><span data-stu-id="cbff1-434">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="cbff1-435">Par exemple, cette chaîne d’entrée `test<item>test` est écrite sous la forme</span><span class="sxs-lookup"><span data-stu-id="cbff1-435">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="cbff1-436">Si `text` est soit `null` ou `String.Empty`, cette méthode écrit un nœud de texte ne contenant aucune donnée.</span><span class="sxs-lookup"><span data-stu-id="cbff1-436">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-437">L’exemple suivant écrit un fragment XML.</span><span class="sxs-lookup"><span data-stu-id="cbff1-437">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-438">La chaîne de texte contient une paire de substitution non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-438">The text string contains an invalid surrogate pair.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="override this.WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlTextWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">
          <span data-ttu-id="cbff1-439">Substitut faible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-439">The low surrogate.</span>
          </span>
          <span data-ttu-id="cbff1-440">Cela doit être une valeur comprise entre <see langword="0xDC00" /> et <see langword="0xDFFF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-440">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span>
          </span>
        </param>
        <param name="highChar">
          <span data-ttu-id="cbff1-441">Substitut étendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-441">The high surrogate.</span>
          </span>
          <span data-ttu-id="cbff1-442">Cela doit être une valeur comprise entre <see langword="0xD800" /> et <see langword="0xDBFF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-442">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-443">Génère et écrit l'entité de caractère de substitution correspondant à la paire de caractères de substitution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-443">Generates and writes the surrogate character entity for the surrogate character pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-444">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-444">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-445">Cette méthode est uniquement applicable sur les systèmes qui utilisent l’encodage UTF-16.</span><span class="sxs-lookup"><span data-stu-id="cbff1-445">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="cbff1-446">L’entité de caractère de substitution est écrite au format hexadécimal.</span><span class="sxs-lookup"><span data-stu-id="cbff1-446">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="cbff1-447">La plage de caractères de substitution est `#x10000` à `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="cbff1-447">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="cbff1-448">La formule suivante est utilisée pour générer l’entité de caractère de substitution : (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="cbff1-448">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="cbff1-449">HTML et XML, le jeu de caractères du document (et par conséquent la notation des caractères numériques) sont basés sur UCS [ISO 10646].</span><span class="sxs-lookup"><span data-stu-id="cbff1-449">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="cbff1-450">Une référence de caractère numérique dans un document source peut parfois correspondre à deux unités de 16 bits dans une chaîne (un substitut étendu et un substitut faible).</span><span class="sxs-lookup"><span data-stu-id="cbff1-450">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="cbff1-451">Ces unités de 16 bits sont appelées une paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="cbff1-451">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="cbff1-452">Pour plus d’informations sur les substituts ou les caractères, reportez-vous à la section 3.7 de l’Unicode 3.0/Unicode 2.0 standard situé dans <https://www.unicode.org>, ou [section 2.2 de la recommandation W3C XML 1.0](https://www.w3.org/TR/REC-xml#charsets).</span><span class="sxs-lookup"><span data-stu-id="cbff1-452">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at <https://www.unicode.org>, or [section 2.2 of the W3C XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml#charsets).</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="cbff1-453">Une paire de caractères de substitution non valide a été passée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-453">An invalid surrogate character pair was passed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="override this.WriteWhitespace : string -&gt; unit" Usage="xmlTextWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws">
          <span data-ttu-id="cbff1-454">Chaîne d'espaces blancs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-454">The string of white space characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbff1-455">Écrit l'espace blanc spécifié</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-455">Writes out the given white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-456">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-457">Cette méthode est utilisée pour mettre en forme manuellement votre document.</span><span class="sxs-lookup"><span data-stu-id="cbff1-457">This method is used to manually format your document.</span></span> <span data-ttu-id="cbff1-458">Utilisez le <xref:System.Xml.XmlTextWriter.Formatting%2A> propriété pour indiquer au writer de mettre en forme automatiquement la sortie.</span><span class="sxs-lookup"><span data-stu-id="cbff1-458">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-459">L’exemple suivant utilise la `WriteWhitespace` méthode pour contrôler la façon dont le fichier est mis en forme.</span><span class="sxs-lookup"><span data-stu-id="cbff1-459">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbff1-460">La chaîne contient des caractères non espace blanc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-460">The string contains non-white space characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-461">Obtient la portée de <see langword="xml:lang" /> actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-461">Gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbff1-462">Actuel <see langword="xml:lang" /> ou <see langword="null" /> s’il existe aucune <see langword="xml:lang" /> dans la portée actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-462">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-463">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-464">Cette propriété permet à un composant déterminer l’état dans lequel le writer a été laissé par un autre composant.</span><span class="sxs-lookup"><span data-stu-id="cbff1-464">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="cbff1-465">Par exemple, peut-être un composant veut dire à quel texte d’aide de langage pour générer un autre.</span><span class="sxs-lookup"><span data-stu-id="cbff1-465">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="cbff1-466">Les informations de langue sont communiquées en écrivant un `xml:lang` attribut.</span><span class="sxs-lookup"><span data-stu-id="cbff1-466">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbff1-467">Obtient un <see cref="T:System.Xml.XmlSpace" /> représentant actuel <see langword="xml:space" /> étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-467">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbff1-468">Un <see langword="XmlSpace" /> représentant actuel <see langword="xml:space" /> étendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbff1-468">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="cbff1-469">Value</span>
                <span class="sxs-lookup">
                  <span data-stu-id="cbff1-469">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="cbff1-470">Signification</span>
                <span class="sxs-lookup">
                  <span data-stu-id="cbff1-470">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="cbff1-471">Aucun.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="cbff1-471">None</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="cbff1-472">Ceci est la valeur par défaut si aucune <see langword="xml:space" /> étendue existe.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="cbff1-472">This is the default if no <see langword="xml:space" /> scope exists.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="cbff1-473">Par défaut</span>
                <span class="sxs-lookup">
                  <span data-stu-id="cbff1-473">Default</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="cbff1-474">La portée actuelle est <see langword="xml:space" />= « default ».</span>
                <span class="sxs-lookup">
                  <span data-stu-id="cbff1-474">The current scope is <see langword="xml:space" />="default".</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="cbff1-475">Preserve</span>
                <span class="sxs-lookup">
                  <span data-stu-id="cbff1-475">Preserve</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="cbff1-476">La portée actuelle est <see langword="xml:space" />= « preserve ».</span>
                <span class="sxs-lookup">
                  <span data-stu-id="cbff1-476">The current scope is <see langword="xml:space" />="preserve".</span>
                </span>
              </description>
            </item>
          </list>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cbff1-477">À compter de .NET Framework 2.0, nous vous recommandons de créer <xref:System.Xml.XmlWriter> instances à l’aide de la <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> (méthode) et le <xref:System.Xml.XmlWriterSettings> classe pour tirer parti des nouvelles fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cbff1-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="cbff1-478">Cette propriété permet à un composant de déterminer l’état dans lequel qu'un autre composant a laissé le writer.</span><span class="sxs-lookup"><span data-stu-id="cbff1-478">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbff1-479">L’exemple suivant utilise la `WriteWhitespace` méthode pour contrôler la façon dont le fichier est mis en forme.</span><span class="sxs-lookup"><span data-stu-id="cbff1-479">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>