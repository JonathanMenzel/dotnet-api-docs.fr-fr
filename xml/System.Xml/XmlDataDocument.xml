<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlDataDocument.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f828c165288c4fb1cc2705e29b4a2f0a84315396.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f828c165288c4fb1cc2705e29b4a2f0a84315396</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Allows structured data to be stored, retrieved, and manipulated through a relational <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Permet le stockage, la récupération et la manipulation de données structurées par l'entremise d'un <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> relationnel.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This class extends <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">Cette classe étend <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM).</source>
          <target state="translated">Il vous permet de charger des données relationnelles ou des données XML et de manipuler les données à l’aide du World Wide Web Consortium (W3C) modèle DOM (Document Object).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>The DOM presents data as a hierarchy of node objects.</source>
          <target state="translated">Le modèle DOM présente les données en tant que hiérarchie d’objets de nœud.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>Because <ph id="ph1">`XmlDataDocument`</ph> implements the <ph id="ph2">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph> interface, it can also be used as the source document for the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class.</source>
          <target state="translated">Étant donné que <ph id="ph1">`XmlDataDocument`</ph> implémente la <ph id="ph2">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph> interface, il peut également être utilisé comme document source pour la <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source><ph id="ph1">`XmlDataDocument`</ph> has a close affiliation with the <ph id="ph2">`DataSet`</ph> class, which provides a relational view of the loaded XML data.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> possède une affiliation étroite avec la <ph id="ph2">`DataSet`</ph> classe, qui fournit une vue relationnelle des données XML chargées.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>Any changes made to the <ph id="ph1">`XmlDataDocument`</ph> are reflected in the <ph id="ph2">`DataSet`</ph> and vice versa.</source>
          <target state="translated">Toute modification apportée à la <ph id="ph1">`XmlDataDocument`</ph> sont répercutées dans le <ph id="ph2">`DataSet`</ph> et vice versa.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>To load a <ph id="ph1">`DataSet`</ph> with XML data, use <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> to build a relational mapping.</source>
          <target state="translated">Pour charger un <ph id="ph1">`DataSet`</ph> avec des données XML, utilisez <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> pour construire un mappage relationnel.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>The XML data can then be loaded using <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument.Load%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;</ph>.</source>
          <target state="translated">Les données XML peuvent ensuite être chargées à l’aide de <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument.Load%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>To load relational data, specify the <ph id="ph1">`DataSet`</ph> containing the relational data as the parameter in the <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Pour charger des données relationnelles, spécifiez le <ph id="ph1">`DataSet`</ph> contenant les données relationnelles en tant que paramètre dans le <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument.%23ctor%2A&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor">
          <source>An empty <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and associated with the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">Vide <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> est créé et associé à la <ph id="ph2">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> to load into <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> à charger dans <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> avec le <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The <ph id="ph1">`XmlDataDocument`</ph> is synchronized with the specified <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">Le <ph id="ph1">`XmlDataDocument`</ph> est synchronisé avec l’objet <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any data in the <ph id="ph1">`DataSet`</ph> is immediately available through the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">Toutes les données dans le <ph id="ph1">`DataSet`</ph> est immédiatement disponible via le <ph id="ph2">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any changes in the <ph id="ph1">`DataSet`</ph> are propagated in the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">Les modifications apportées à la <ph id="ph1">`DataSet`</ph> sont propagées dans la <ph id="ph2">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any changes made in the <ph id="ph1">`XmlDataDocument`</ph>, provided they match the <ph id="ph2">`DataSet`</ph> schema, are propagated in the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">Toutes les modifications apportées dans le <ph id="ph1">`XmlDataDocument`</ph>, à condition qu’ils correspondent à la <ph id="ph2">`DataSet`</ph> schéma, sont propagées dans la <ph id="ph3">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The following example loads a customer table into an <ph id="ph1">`XmlDataDocument`</ph>.</source>
          <target state="translated">L’exemple suivant charge une table de clients dans un <ph id="ph1">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">L’exemple utilise la base de données SQL Server 2000 Northwind.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to recursively clone the subtree under the specified node; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to clone only the node itself.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour cloner seulement le nœud lui-même.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>Creates a duplicate of the current node.</source>
          <target state="translated">Crée un doublon du nœud en cours.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The cloned node.</source>
          <target state="translated">Nœud cloné.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>Cloning the <ph id="ph1">`XmlDataDocument`</ph> also clones the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> schema.</source>
          <target state="translated">Le clonage du <ph id="ph1">`XmlDataDocument`</ph> clone également le <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> schéma.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>If <ph id="ph1">`deep`</ph> is set to <ph id="ph2">`false`</ph>, the cloned <ph id="ph3">`DataSet`</ph> has no data; that is, no rows.</source>
          <target state="translated">Si <ph id="ph1">`deep`</ph> a la valeur <ph id="ph2">`false`</ph>, cloné <ph id="ph3">`DataSet`</ph> a pas de données ; c'est-à-dire, aucune ligne.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>If <ph id="ph1">`deep`</ph> is set to <ph id="ph2">`true`</ph>, the cloned <ph id="ph3">`DataSet`</ph> is set with the schema and then populated with the data.</source>
          <target state="translated">Si <ph id="ph1">`deep`</ph> a la valeur <ph id="ph2">`true`</ph>, cloné <ph id="ph3">`DataSet`</ph> est défini par le schéma et ensuite remplie avec les données.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlNode.CloneNode%2A&gt;</ph> in the <ph id="ph2">`XmlNode`</ph> class to see a table describing how this method behaves with each of the different node types.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;xref:System.Xml.XmlNode.CloneNode%2A&gt;</ph> dans la <ph id="ph2">`XmlNode`</ph> classe pour voir un tableau décrivant comment cette méthode se comporte avec chacun des différents types de nœuds.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The following example loads a <ph id="ph1">`DataSet`</ph> into an <ph id="ph2">`XmlDataDocument`</ph> and then creates a shallow clone of the <ph id="ph3">`XmlDataDocument`</ph>.</source>
          <target state="translated">L’exemple suivant charge un <ph id="ph1">`DataSet`</ph> dans un <ph id="ph2">`XmlDataDocument`</ph> , puis crée un clone superficiel de la <ph id="ph3">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">L’exemple utilise la base de données SQL Server 2000 Northwind.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The prefix of the new element.</source>
          <target state="translated">Préfixe du nouvel élément.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>If String.Empty or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, there is no prefix.</source>
          <target state="translated">Dans le cas de String.Empty ou de <ph id="ph1">&lt;see langword="null" /&gt;</ph>, il n'y a aucun préfixe.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The local name of the new element.</source>
          <target state="translated">Le nom local du nouvel élément.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The namespace Uniform Resource Identifier (URI) of the new element.</source>
          <target state="translated">URI (Uniform Resource Identifier) de l'espace de noms du nouvel élément.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>If String.Empty or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, there is no namespaceURI.</source>
          <target state="translated">Dans le cas de String.Empty ou de <ph id="ph1">&lt;see langword="null" /&gt;</ph>, il n'y a aucun namespaceURI.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>Creates an element with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Prefix" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.LocalName" /&gt;</ph> , and <ph id="ph3">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">Crée un élément avec les <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Prefix" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.LocalName" /&gt;</ph> et <ph id="ph3">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">Nouveau <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source><ph id="ph1">`Note to Inheritors`</ph> If you overload this function, it cannot be used for extensibility.</source>
          <target state="translated"><ph id="ph1">`Note to Inheritors`</ph> Si vous surchargez cette fonction, il ne peut pas être utilisé pour l’extensibilité.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>Instead, you can return an element created by the base class, in this case, <ph id="ph1">`XmlDataDocument`</ph>.</source>
          <target state="translated">Au lieu de cela, vous pouvez retourner un élément créé par la classe de base dans ce cas, <ph id="ph1">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>See the following example.</source>
          <target state="translated">Lisez l'exemple suivant.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">Nom de la référence d'entité.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> with the specified name.</source>
          <target state="translated">Crée un élément <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> avec le nom spécifié.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> with the specified name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> portant le nom spécifié.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> nodes cannot be created for <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> Impossible de créer des nœuds pour <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Calling this method throws an exception.</source>
          <target state="translated">L'appel de cette méthode lève une exception.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Calling this method.</source>
          <target state="translated">Appel de cette méthode.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> you want the navigator initially positioned on.</source>
          <target state="translated">Élément <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> sur lequel vous voulez que le navigateur soit initialement positionné.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this document.</source>
          <target state="translated">Crée un objet <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> pour naviguer dans ce document.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> is positioned on the node specified in the <ph id="ph2">&lt;paramref name="node" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> est placé sur le nœud spécifié dans le paramètre <ph id="ph2">&lt;paramref name="node" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>An <ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> used to navigate the document.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> permettant de naviguer dans le document.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">`XPathNavigator`</ph> provides read-only, random access to data.</source>
          <target state="translated">Le <ph id="ph1">`XPathNavigator`</ph> fournit un accès aléatoire en lecture seule aux données.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> method.</source>
          <target state="translated">Car il est optimisé pour les transformations XSLT, il offre des gains de performance lorsqu’il est utilisé comme un mécanisme d’entrée pour le <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>To see an XSLT transformation using <ph id="ph1">`XmlDataDocument`</ph> and an <ph id="ph2">`XPathNavigator`</ph>, see the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour voir une transformation XSLT à l’aide <ph id="ph1">`XmlDataDocument`</ph> et un <ph id="ph2">`XPathNavigator`</ph>, consultez le <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that provides a relational representation of the data in the <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</source>
          <target state="translated">Obtient un <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> qui fournit une représentation relationnelle des données dans <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>A <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> that can be used to access the data in the <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph> using a relational model.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> pouvant être utilisé pour accéder aux données contenues dans le <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph> à l'aide d'un modèle relationnel.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The <ph id="ph1">`DataSet`</ph> enables you to access the data in the <ph id="ph2">`XmlDataDocument`</ph> using a relational model.</source>
          <target state="translated">Le <ph id="ph1">`DataSet`</ph> vous permet d’accéder aux données dans le <ph id="ph2">`XmlDataDocument`</ph> à l’aide d’un modèle relationnel.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>This means that you can handle the data as tables and views, rows and columns, relations, and so on.</source>
          <target state="translated">Cela signifie que vous pouvez gérer les données en tant que tables, des vues, des lignes et des colonnes, relations et ainsi de suite.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>Changes made in the <ph id="ph1">`DataSet`</ph> are immediately visible in the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">Modifications apportées dans le <ph id="ph1">`DataSet`</ph> sont immédiatement visibles dans le <ph id="ph2">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The following example modifies the price of a book using the <ph id="ph1">`DataSet`</ph> methods.</source>
          <target state="translated">L’exemple suivant modifie le prix d’un livre à l’aide de la <ph id="ph1">`DataSet`</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The example uses the following two files as input.</source>
          <target state="translated">L’exemple utilise les deux fichiers suivants en tant qu’entrée.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>The attribute ID to match.</source>
          <target state="translated">ID d'attribut avec lequel établir une correspondance.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> with the specified ID.</source>
          <target state="translated">Obtient l'élément <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> avec l'ID spécifié.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>This method is not supported by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated">Cette méthode n'est pas prise en charge par la classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Calling this method throws an exception.</source>
          <target state="translated">L'appel de cette méthode lève une exception.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> with the specified ID.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> avec l'ID spécifié.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>This method is not supported by the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> class.</source>
          <target state="translated">Cette méthode n'est pas prise en charge par la classe <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Calling this method.</source>
          <target state="translated">Appel de cette méthode.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> whose associated <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> you want to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> dont vous voulez récupérer le <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> associé.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> associated with the specified <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Récupère le <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> associé au <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> containing a representation of the specified <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> contenant une représentation du <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The following example loads a <ph id="ph1">`DataSet`</ph> into an <ph id="ph2">`XmlDataDocument`</ph> and then creates an <ph id="ph3">`XmlElement`</ph> representing the first customer record.</source>
          <target state="translated">L’exemple suivant charge un <ph id="ph1">`DataSet`</ph> dans un <ph id="ph2">`XmlDataDocument`</ph> , puis crée un <ph id="ph3">`XmlElement`</ph> représentant le premier enregistrement de client.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">L’exemple utilise la base de données SQL Server 2000 Northwind.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>The qualified name to match.</source>
          <target state="translated">Nom qualifié à trouver.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">Il est comparé à la propriété <ph id="ph1">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph> du nœud correspondant.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>The special value "*" matches all tags.</source>
          <target state="translated">La valeur spéciale "*" correspond à toutes les étiquettes.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all descendant elements that match the specified <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph>.</source>
          <target state="translated">Retourne un élément <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> contenant la liste de tous les éléments descendants qui correspondent à l'élément <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all matching nodes.</source>
          <target state="translated">Un élément <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> contenant la liste de tous les nœuds correspondants.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> method instead of the <ph id="ph3">&lt;xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A&gt;</ph> method.</source>
          <target state="translated">Il est recommandé d’utiliser le <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> méthode au lieu du <ph id="ph3">&lt;xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> whose associated <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph> you want to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> dont vous voulez récupérer le <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph> associé.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> associated with the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">Récupère le <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> associé au <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> containing a representation of the <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph>; <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no <ph id="ph4">&lt;see langword="DataRow" /&gt;</ph> associated with the <ph id="ph5">&lt;see langword="XmlElement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> contenant une représentation de <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> ; <ph id="ph3">&lt;see langword="null" /&gt;</ph> s'il n'y a pas de <ph id="ph4">&lt;see langword="DataRow" /&gt;</ph> associé à <ph id="ph5">&lt;see langword="XmlElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The following example modifies the price of the first book.</source>
          <target state="translated">L’exemple suivant modifie le prix du premier livre.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The example uses the following input files:</source>
          <target state="translated">L’exemple utilise les fichiers d’entrée suivants :</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> using the specified data source and synchronizes the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the loaded data.</source>
          <target state="translated">Charge <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> en utilisant la source de données spécifiée et synchronise <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> avec les données chargées.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">Pour afficher les données XML de manière relationnelle, vous devez spécifier un schéma à utiliser pour le mappage de données.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">Cela peut être effectué en appelant le <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> méthode ou en créant les tables et colonnes dans le <ph id="ph2">`DataSet`</ph> manuellement.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">Cette étape doit être effectuée avant d’appeler <ph id="ph1">`Load`</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> ne prend pas en charge la création des références d’entité.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">Si les données incluent des références d’entité, le <ph id="ph1">`Load`</ph> méthode résout et développe les références d’entité.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>However, if you are using the <ph id="ph1">`Load`</ph> overload that takes a <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> as an argument, you must specify an <ph id="ph3">`XmlReader`</ph> that can resolve entities.</source>
          <target state="translated">Toutefois, si vous utilisez la <ph id="ph1">`Load`</ph> surcharge qui accepte un <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> en tant qu’argument, vous devez spécifier un <ph id="ph3">`XmlReader`</ph> qui peut résoudre les entités.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>The stream containing the XML document to load.</source>
          <target state="translated">Flux contenant le document XML à charger.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified stream.</source>
          <target state="translated">Charge le <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> à partir du flux spécifié.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> ne prend pas en charge la création des références d’entité.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">Si les données incluent des références d’entité, le <ph id="ph1">`Load`</ph> méthode résout et développe les références d’entité.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">Pour afficher les données XML de manière relationnelle, vous devez spécifier un schéma à utiliser pour le mappage de données.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">Cela peut être effectué en appelant le <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> méthode ou en créant les tables et colonnes dans le <ph id="ph2">`DataSet`</ph> manuellement.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">Cette étape doit être effectuée avant d’appeler <ph id="ph1">`Load`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> used to feed the XML data into the document.</source>
          <target state="translated">L'élément <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> utilisé pour introduire les données XML dans le document.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Charge le <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> à partir du <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> ne prend pas en charge la création des références d’entité.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">Si les données incluent des références d’entité, le <ph id="ph1">`Load`</ph> méthode résout et développe les références d’entité.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">Pour afficher les données XML de manière relationnelle, vous devez spécifier un schéma à utiliser pour le mappage de données.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">Cela peut être effectué en appelant le <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> méthode ou en créant les tables et colonnes dans le <ph id="ph2">`DataSet`</ph> manuellement.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">Cette étape doit être effectuée avant d’appeler <ph id="ph1">`Load`</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>The URL of the file containing the XML document to load.</source>
          <target state="translated">URL du fichier contenant le document XML à charger.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> using the specified URL.</source>
          <target state="translated">Charge le <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> à partir de l'URL spécifiée.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> ne prend pas en charge la création des références d’entité.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">Si les données incluent des références d’entité, le <ph id="ph1">`Load`</ph> méthode résout et développe les références d’entité.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">Pour afficher les données XML de manière relationnelle, vous devez spécifier un schéma à utiliser pour le mappage de données.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">Cela peut être effectué en appelant le <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> méthode ou en créant les tables et colonnes dans le <ph id="ph2">`DataSet`</ph> manuellement.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">Cette étape doit être effectuée avant d’appeler <ph id="ph1">`Load`</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> containing the XML document to load.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> contenant le document XML à charger.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Charge le <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> à partir du <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> ne prend pas en charge la création des références d’entité.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the data source contains entity references, you must create an <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph> property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the <ph id="ph3">`XmlValidatingReader`</ph> to the <ph id="ph4">`Load`</ph> method.</source>
          <target state="translated">Si la source de données contient des références d’entité, vous devez créer un <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> avec la <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph> propriété valeur EntityHandling.ExpandEntities (il s’agit du comportement par défaut) et passez le <ph id="ph3">`XmlValidatingReader`</ph> à la <ph id="ph4">`Load`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If you do not use an <ph id="ph1">`XmlValidatingReader`</ph>, the <ph id="ph2">`Load`</ph> method throws an exception.</source>
          <target state="translated">Si vous n’utilisez pas un <ph id="ph1">`XmlValidatingReader`</ph>, le <ph id="ph2">`Load`</ph> méthode lève une exception.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`Load`</ph> method always preserves significant white space.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode conserve toujours l’espace blanc significatif.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> property determines whether or not white space is preserved.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> propriété détermine si l’espace blanc est conservé.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The default is <ph id="ph1">`false`</ph>, white space is not preserved.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">`false`</ph>, l’espace blanc n’est pas conservé.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is in the initial state (that is, ReadState=ReadState.Initial), <ph id="ph1">`Load`</ph> consumes the entire contents of the reader and builds the DOM from what it finds.</source>
          <target state="translated">Si le lecteur est dans l’initiale état c'est-à-dire ReadState .initial, <ph id="ph1">`Load`</ph> consomme la totalité du lecteur et crée le DOM à partir de ce qu’il trouve.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is already positioned on some node at depth "n", then this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</source>
          <target state="translated">Si le lecteur est déjà positionné sur un nœud à la profondeur « n », cette méthode charge ce nœud et tous les frères successifs jusqu'à la balise finale qui clôture la profondeur « n ».</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>This has the following results.</source>
          <target state="translated">Cela produit les résultats suivants.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the current node and its following siblings look similar to the following:</source>
          <target state="translated">Si le nœud actuel et ses frères suivants se présenter comme suit :</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`Load`</ph> throws an exception, because a document cannot have two root-level elements.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> lève une exception, car un document ne peut pas avoir deux éléments de niveau racine.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the current node and its following siblings look similar to the following:</source>
          <target state="translated">Si le nœud actuel et ses frères suivants se présenter comme suit :</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`Load`</ph> will succeed; however, you will have an incomplete DOM tree, because there is no root-level element.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> aboutit ; Toutefois, vous devez une arborescence DOM incomplet, car il n’existe aucun élément de niveau racine.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>You have to add a root-level element before you save the document; otherwise, the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> method throws an exception.</source>
          <target state="translated">Vous devez ajouter un élément de niveau racine avant d’enregistrer le document ; dans le cas contraire, la <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> méthode lève une exception.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root.</source>
          <target state="translated">Si le lecteur est positionné sur un nœud sans descendant non valide pour le niveau racine d'un document (par exemple, un espace blanc ou un nœud d'attribut), le lecteur poursuit la lecture jusqu'à se positionner sur un nœud pouvant être utilisé pour la racine.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The document begins loading at this point.</source>
          <target state="translated">Le chargement du document démarre à ce stade.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The following example modifies the price of a book using the <ph id="ph1">`DataSet`</ph> methods.</source>
          <target state="translated">L’exemple suivant modifie le prix d’un livre à l’aide de la <ph id="ph1">`DataSet`</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The example uses the following two input files.</source>
          <target state="translated">L’exemple utilise les deux fichiers d’entrée suivants.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The XML being loaded contains entity references, and the reader cannot resolve entities.</source>
          <target state="translated">Le XML en cours de chargement contient des références d'entités et le lecteur ne peut pas résoudre les entités.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>