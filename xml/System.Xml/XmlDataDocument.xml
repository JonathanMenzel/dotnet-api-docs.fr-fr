<Type Name="XmlDataDocument" FullName="System.Xml.XmlDataDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="269851ce0bce3ca09412babec7031c9530854019" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36435675" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDataDocument : System.Xml.XmlDocument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataDocument extends System.Xml.XmlDocument" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlDataDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataDocument&#xA;Inherits XmlDocument" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataDocument : System::Xml::XmlDocument" />
  <TypeSignature Language="F#" Value="type XmlDataDocument = class&#xA;    inherit XmlDocument" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlDocument</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("XmlDataDocument class will be removed in a future release.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a1beb-101">Allows structured data to be stored, retrieved, and manipulated through a relational <see cref="T:System.Data.DataSet" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1beb-101">Allows structured data to be stored, retrieved, and manipulated through a relational <see cref="T:System.Data.DataSet" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-102">Cette classe étend <xref:System.Xml.XmlDocument>.</span><span class="sxs-lookup"><span data-stu-id="a1beb-102">This class extends <xref:System.Xml.XmlDocument>.</span></span> <span data-ttu-id="a1beb-103">Il vous permet de charger des données relationnelles ou des données XML et de manipuler les données à l’aide du World Wide Web Consortium (W3C) modèle DOM (Document Object).</span><span class="sxs-lookup"><span data-stu-id="a1beb-103">It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM).</span></span> <span data-ttu-id="a1beb-104">Le modèle DOM présente les données en tant que hiérarchie d’objets de nœud.</span><span class="sxs-lookup"><span data-stu-id="a1beb-104">The DOM presents data as a hierarchy of node objects.</span></span> <span data-ttu-id="a1beb-105">Étant donné que `XmlDataDocument` implémente la <xref:System.Xml.XPath.IXPathNavigable> interface, il peut également être utilisé comme document source pour la <xref:System.Xml.Xsl.XslTransform> classe.</span><span class="sxs-lookup"><span data-stu-id="a1beb-105">Because `XmlDataDocument` implements the <xref:System.Xml.XPath.IXPathNavigable> interface, it can also be used as the source document for the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="a1beb-106">`XmlDataDocument` possède une affiliation étroite avec la `DataSet` classe, qui fournit une vue relationnelle des données XML chargées.</span><span class="sxs-lookup"><span data-stu-id="a1beb-106">`XmlDataDocument` has a close affiliation with the `DataSet` class, which provides a relational view of the loaded XML data.</span></span> <span data-ttu-id="a1beb-107">Toute modification apportée à la `XmlDataDocument` sont répercutées dans le `DataSet` et vice versa.</span><span class="sxs-lookup"><span data-stu-id="a1beb-107">Any changes made to the `XmlDataDocument` are reflected in the `DataSet` and vice versa.</span></span>  
  
 <span data-ttu-id="a1beb-108">Pour charger un `DataSet` avec des données XML, utilisez <xref:System.Data.DataSet.ReadXmlSchema%2A> pour construire un mappage relationnel.</span><span class="sxs-lookup"><span data-stu-id="a1beb-108">To load a `DataSet` with XML data, use <xref:System.Data.DataSet.ReadXmlSchema%2A> to build a relational mapping.</span></span> <span data-ttu-id="a1beb-109">Les données XML peuvent ensuite être chargées à l’aide de <xref:System.Xml.XmlDataDocument.Load%2A> ou <xref:System.Xml.XmlDocument.LoadXml%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1beb-109">The XML data can then be loaded using <xref:System.Xml.XmlDataDocument.Load%2A> or <xref:System.Xml.XmlDocument.LoadXml%2A>.</span></span>  
  
 <span data-ttu-id="a1beb-110">Pour charger des données relationnelles, spécifiez le `DataSet` contenant les données relationnelles en tant que paramètre dans le <xref:System.Xml.XmlDataDocument.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="a1beb-110">To load relational data, specify the `DataSet` containing the relational data as the parameter in the <xref:System.Xml.XmlDataDocument.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1beb-111">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-111">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a1beb-112">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-112">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-113">Vide <xref:System.Data.DataSet> est créé et associé à la `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-113">An empty <xref:System.Data.DataSet> is created and associated with the `XmlDataDocument`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataDocument (System.Data.DataSet dataset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataSet dataset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataDocument(System::Data::DataSet ^ dataset);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlDataDocument : System.Data.DataSet -&gt; System.Xml.XmlDataDocument" Usage="new System.Xml.XmlDataDocument dataset" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataset" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataset">
          <span data-ttu-id="a1beb-114">The <see langword="DataSet" /> to load into <see langword="XmlDataDocument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-114">The <see langword="DataSet" /> to load into <see langword="XmlDataDocument" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-115">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class with the specified <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-115">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class with the specified <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-116">Le `XmlDataDocument` est synchronisé avec l’objet `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-116">The `XmlDataDocument` is synchronized with the specified `DataSet`.</span></span> <span data-ttu-id="a1beb-117">Toutes les données dans le `DataSet` est immédiatement disponible via le `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-117">Any data in the `DataSet` is immediately available through the `XmlDataDocument`.</span></span> <span data-ttu-id="a1beb-118">Les modifications apportées à la `DataSet` sont propagées dans la `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-118">Any changes in the `DataSet` are propagated in the `XmlDataDocument`.</span></span> <span data-ttu-id="a1beb-119">Toutes les modifications apportées dans le `XmlDataDocument`, à condition qu’ils correspondent à la `DataSet` schéma, sont propagées dans la `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-119">Any changes made in the `XmlDataDocument`, provided they match the `DataSet` schema, are propagated in the `DataSet`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1beb-120">L’exemple suivant charge une table de clients dans un `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-120">The following example loads a customer table into an `XmlDataDocument`.</span></span>  
  
 <span data-ttu-id="a1beb-121">L’exemple utilise la base de données SQL Server 2000 Northwind.</span><span class="sxs-lookup"><span data-stu-id="a1beb-121">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlConnection" />
        <altmember cref="T:System.Data.SqlClient.SqlDataAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlDataDocument.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="a1beb-122">
            <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-122">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-123">Creates a duplicate of the current node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-123">Creates a duplicate of the current node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1beb-124">The cloned node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-124">The cloned node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-125">Le clonage du `XmlDataDocument` clone également le <xref:System.Data.DataSet> schéma.</span><span class="sxs-lookup"><span data-stu-id="a1beb-125">Cloning the `XmlDataDocument` also clones the <xref:System.Data.DataSet> schema.</span></span>  
  
 <span data-ttu-id="a1beb-126">Si `deep` a la valeur `false`, cloné `DataSet` a pas de données ; c'est-à-dire, aucune ligne.</span><span class="sxs-lookup"><span data-stu-id="a1beb-126">If `deep` is set to `false`, the cloned `DataSet` has no data; that is, no rows.</span></span>  
  
 <span data-ttu-id="a1beb-127">Si `deep` a la valeur `true`, cloné `DataSet` est défini par le schéma et ensuite remplie avec les données.</span><span class="sxs-lookup"><span data-stu-id="a1beb-127">If `deep` is set to `true`, the cloned `DataSet` is set with the schema and then populated with the data.</span></span>  
  
 <span data-ttu-id="a1beb-128">Consultez <xref:System.Xml.XmlNode.CloneNode%2A> dans la `XmlNode` classe pour voir un tableau décrivant comment cette méthode se comporte avec chacun des différents types de nœuds.</span><span class="sxs-lookup"><span data-stu-id="a1beb-128">See <xref:System.Xml.XmlNode.CloneNode%2A> in the `XmlNode` class to see a table describing how this method behaves with each of the different node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1beb-129">L’exemple suivant charge un `DataSet` dans un `XmlDataDocument` , puis crée un clone superficiel de la `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-129">The following example loads a `DataSet` into an `XmlDataDocument` and then creates a shallow clone of the `XmlDataDocument`.</span></span>  
  
 <span data-ttu-id="a1beb-130">L’exemple utilise la base de données SQL Server 2000 Northwind.</span><span class="sxs-lookup"><span data-stu-id="a1beb-130">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement CreateElement(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateElement (prefix As String, localName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ CreateElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.CreateElement : string * string * string -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.CreateElement (prefix, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="a1beb-131">The prefix of the new element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-131">The prefix of the new element.</span>
          </span>
          <span data-ttu-id="a1beb-132">If String.Empty or <see langword="null" />, there is no prefix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-132">If String.Empty or <see langword="null" />, there is no prefix.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="a1beb-133">The local name of the new element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-133">The local name of the new element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="a1beb-134">The namespace Uniform Resource Identifier (URI) of the new element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-134">The namespace Uniform Resource Identifier (URI) of the new element.</span>
          </span>
          <span data-ttu-id="a1beb-135">If String.Empty or <see langword="null" />, there is no namespaceURI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-135">If String.Empty or <see langword="null" />, there is no namespaceURI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-136">Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> , and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-136">Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> , and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1beb-137">A new <see cref="T:System.Xml.XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-137">A new <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-138">`Note to Inheritors` Si vous surchargez cette fonction, il ne peut pas être utilisé pour l’extensibilité.</span><span class="sxs-lookup"><span data-stu-id="a1beb-138">`Note to Inheritors` If you overload this function, it cannot be used for extensibility.</span></span> <span data-ttu-id="a1beb-139">Au lieu de cela, vous pouvez retourner un élément créé par la classe de base dans ce cas, `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-139">Instead, you can return an element created by the base class, in this case, `XmlDataDocument`.</span></span> <span data-ttu-id="a1beb-140">Lisez l'exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="a1beb-140">See the following example.</span></span>  
  
```csharp  
class MyXmlDataDocument : XmlDataDocument {  
 public override XmlElement CreateElement(string prefix, string localName, string nsURI) {  
   //Ensure we are returning the base class implementation of element.  
   XmlElement e = base.CreateElement(prefix, localName, nsURI);  
   //Add additional code here.  
   return e;    //Return the element created by XmlDataDocument.  
 }      
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityReference">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlEntityReference CreateEntityReference (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlEntityReference CreateEntityReference(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEntityReference (name As String) As XmlEntityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlEntityReference ^ CreateEntityReference(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.CreateEntityReference : string -&gt; System.Xml.XmlEntityReference" Usage="xmlDataDocument.CreateEntityReference name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlEntityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a1beb-141">The name of the entity reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-141">The name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-142">Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-142">Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1beb-143">An <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-143">An <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-144"><xref:System.Xml.XmlEntityReference> Impossible de créer des nœuds pour <xref:System.Xml.XmlDataDocument> objets.</span><span class="sxs-lookup"><span data-stu-id="a1beb-144"><xref:System.Xml.XmlEntityReference> nodes cannot be created for <xref:System.Xml.XmlDataDocument> objects.</span></span> <span data-ttu-id="a1beb-145">Appel de cette méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="a1beb-145">Calling this method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a1beb-146">Calling this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-146">Calling this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="protected override System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateNavigator (node As XmlNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.CreateNavigator : System.Xml.XmlNode -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlDataDocument.CreateNavigator node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="a1beb-147">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-147">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-148">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-148">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span>
          </span>
          <span data-ttu-id="a1beb-149">The <see langword="XPathNavigator" /> is positioned on the node specified in the <paramref name="node" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-149">The <see langword="XPathNavigator" /> is positioned on the node specified in the <paramref name="node" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1beb-150">An <see langword="XPathNavigator" /> used to navigate the document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-150">An <see langword="XPathNavigator" /> used to navigate the document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-151">Le `XPathNavigator` fournit un accès aléatoire en lecture seule aux données.</span><span class="sxs-lookup"><span data-stu-id="a1beb-151">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="a1beb-152">Car il est optimisé pour les transformations XSLT, il offre des gains de performance lorsqu’il est utilisé comme un mécanisme d’entrée pour le <xref:System.Xml.Xsl.XslTransform.Transform%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="a1beb-152">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1beb-153">Pour voir une transformation XSLT à l’aide `XmlDataDocument` et un `XPathNavigator`, consultez le <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="a1beb-153">To see an XSLT transformation using `XmlDataDocument` and an `XPathNavigator`, see the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDataDocument.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSet : System.Data.DataSet" Usage="System.Xml.XmlDataDocument.DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a1beb-154">Gets a <see cref="T:System.Data.DataSet" /> that provides a relational representation of the data in the <see langword="XmlDataDocument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-154">Gets a <see cref="T:System.Data.DataSet" /> that provides a relational representation of the data in the <see langword="XmlDataDocument" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a1beb-155">A <see langword="DataSet" /> qui peut être utilisé pour accéder aux données dans le <see langword="XmlDataDocument" /> à l’aide d’un modèle relationnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-155">A <see langword="DataSet" /> that can be used to access the data in the <see langword="XmlDataDocument" /> using a relational model.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-156">Le `DataSet` vous permet d’accéder aux données dans le `XmlDataDocument` à l’aide d’un modèle relationnel.</span><span class="sxs-lookup"><span data-stu-id="a1beb-156">The `DataSet` enables you to access the data in the `XmlDataDocument` using a relational model.</span></span> <span data-ttu-id="a1beb-157">Cela signifie que vous pouvez gérer les données en tant que tables, des vues, des lignes et des colonnes, relations et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="a1beb-157">This means that you can handle the data as tables and views, rows and columns, relations, and so on.</span></span> <span data-ttu-id="a1beb-158">Modifications apportées dans le `DataSet` sont immédiatement visibles dans le `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-158">Changes made in the `DataSet` are immediately visible in the `XmlDataDocument`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1beb-159">L’exemple suivant modifie le prix d’un livre à l’aide de la `DataSet` méthodes.</span><span class="sxs-lookup"><span data-stu-id="a1beb-159">The following example modifies the price of a book using the `DataSet` methods.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a1beb-160">L’exemple utilise les deux fichiers suivants en tant qu’entrée.</span><span class="sxs-lookup"><span data-stu-id="a1beb-160">The example uses the following two files as input.</span></span>  
  
 `2books.xml`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetElementById (string elemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetElementById(string elemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementById (elemId As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetElementById(System::String ^ elemId);" />
      <MemberSignature Language="F#" Value="override this.GetElementById : string -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.GetElementById elemId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elemId">
          <span data-ttu-id="a1beb-161">The attribute ID to match.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-161">The attribute ID to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-162">Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-162">Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span>
          </span>
          <span data-ttu-id="a1beb-163">This method is not supported by the <see cref="T:System.Xml.XmlDataDocument" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-163">This method is not supported by the <see cref="T:System.Xml.XmlDataDocument" /> class.</span>
          </span>
          <span data-ttu-id="a1beb-164">Calling this method throws an exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-164">Calling this method throws an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1beb-165">An <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-165">An <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-166">Cette méthode n’est pas pris en charge par la <xref:System.Xml.XmlDataDocument> classe.</span><span class="sxs-lookup"><span data-stu-id="a1beb-166">This method is not supported by the <xref:System.Xml.XmlDataDocument> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a1beb-167">Calling this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-167">Calling this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementFromRow">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetElementFromRow (System.Data.DataRow r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetElementFromRow(class System.Data.DataRow r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementFromRow (r As DataRow) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetElementFromRow(System::Data::DataRow ^ r);" />
      <MemberSignature Language="F#" Value="member this.GetElementFromRow : System.Data.DataRow -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.GetElementFromRow r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="r">
          <span data-ttu-id="a1beb-168">The <see langword="DataRow" /> whose associated <see langword="XmlElement" /> you want to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-168">The <see langword="DataRow" /> whose associated <see langword="XmlElement" /> you want to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-169">Retrieves the <see cref="T:System.Xml.XmlElement" /> associated with the specified <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-169">Retrieves the <see cref="T:System.Xml.XmlElement" /> associated with the specified <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1beb-170">The <see langword="XmlElement" /> containing a representation of the specified <see langword="DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-170">The <see langword="XmlElement" /> containing a representation of the specified <see langword="DataRow" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1beb-171">L’exemple suivant charge un `DataSet` dans un `XmlDataDocument` , puis crée un `XmlElement` représentant le premier enregistrement de client.</span><span class="sxs-lookup"><span data-stu-id="a1beb-171">The following example loads a `DataSet` into an `XmlDataDocument` and then creates an `XmlElement` representing the first customer record.</span></span>  
  
 <span data-ttu-id="a1beb-172">L’exemple utilise la base de données SQL Server 2000 Northwind.</span><span class="sxs-lookup"><span data-stu-id="a1beb-172">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetElementsByTagName : string -&gt; System.Xml.XmlNodeList" Usage="xmlDataDocument.GetElementsByTagName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a1beb-173">The qualified name to match.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-173">The qualified name to match.</span>
          </span>
          <span data-ttu-id="a1beb-174">It is matched against the <see cref="P:System.Xml.XmlDocument.Name" /> property of the matching node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-174">It is matched against the <see cref="P:System.Xml.XmlDocument.Name" /> property of the matching node.</span>
          </span>
          <span data-ttu-id="a1beb-175">The special value "\*" matches all tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-175">The special value "\*" matches all tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-176">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-176">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1beb-177">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-177">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1beb-178">Il est recommandé d’utiliser le <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> ou <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> méthode au lieu du <xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="a1beb-178">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowFromElement">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetRowFromElement (System.Xml.XmlElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetRowFromElement(class System.Xml.XmlElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowFromElement (e As XmlElement) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetRowFromElement(System::Xml::XmlElement ^ e);" />
      <MemberSignature Language="F#" Value="member this.GetRowFromElement : System.Xml.XmlElement -&gt; System.Data.DataRow" Usage="xmlDataDocument.GetRowFromElement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a1beb-179">The <see langword="XmlElement" /> whose associated <see langword="DataRow" /> you want to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-179">The <see langword="XmlElement" /> whose associated <see langword="DataRow" /> you want to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-180">Retrieves the <see cref="T:System.Data.DataRow" /> associated with the specified <see cref="T:System.Xml.XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-180">Retrieves the <see cref="T:System.Data.DataRow" /> associated with the specified <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1beb-181">The <see langword="DataRow" /> containing a representation of the <see langword="XmlElement" />; <see langword="null" /> if there is no <see langword="DataRow" /> associated with the <see langword="XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-181">The <see langword="DataRow" /> containing a representation of the <see langword="XmlElement" />; <see langword="null" /> if there is no <see langword="DataRow" /> associated with the <see langword="XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1beb-182">L’exemple suivant modifie le prix du premier livre.</span><span class="sxs-lookup"><span data-stu-id="a1beb-182">The following example modifies the price of the first book.</span></span>  
  
 [!code-cpp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CPP/getrow.cpp#1)]
 [!code-csharp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CS/getrow.cs#1)]
 [!code-vb[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/VB/getrow.vb#1)]  
  
 <span data-ttu-id="a1beb-183">L’exemple utilise les fichiers d’entrée suivants :</span><span class="sxs-lookup"><span data-stu-id="a1beb-183">The example uses the following input files:</span></span>  
  
 `2books.xml`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1beb-184">Loads the <see langword="XmlDataDocument" /> using the specified data source and synchronizes the <see cref="T:System.Data.DataSet" /> with the loaded data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-184">Loads the <see langword="XmlDataDocument" /> using the specified data source and synchronizes the <see cref="T:System.Data.DataSet" /> with the loaded data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1beb-185">Pour afficher les données XML de manière relationnelle, vous devez spécifier un schéma à utiliser pour le mappage de données.</span><span class="sxs-lookup"><span data-stu-id="a1beb-185">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="a1beb-186">Cela peut être effectué en appelant le <xref:System.Data.DataSet.ReadXmlSchema%2A> méthode ou en créant les tables et colonnes dans le `DataSet` manuellement.</span><span class="sxs-lookup"><span data-stu-id="a1beb-186">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="a1beb-187">Cette étape doit être effectuée avant d’appeler `Load`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-187">This step must be done before calling `Load`.</span></span>  
  
 <span data-ttu-id="a1beb-188">`XmlDataDocument` ne prend pas en charge la création des références d’entité.</span><span class="sxs-lookup"><span data-stu-id="a1beb-188">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="a1beb-189">Si les données incluent des références d’entité, le `Load` méthode résout et développe les références d’entité.</span><span class="sxs-lookup"><span data-stu-id="a1beb-189">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span> <span data-ttu-id="a1beb-190">Toutefois, si vous utilisez la `Load` surcharge qui accepte un <xref:System.Xml.XmlReader> en tant qu’argument, vous devez spécifier un `XmlReader` qui peut résoudre les entités.</span><span class="sxs-lookup"><span data-stu-id="a1beb-190">However, if you are using the `Load` overload that takes a <xref:System.Xml.XmlReader> as an argument, you must specify an `XmlReader` that can resolve entities.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.IO.Stream inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (inStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::IO::Stream ^ inStream);" />
      <MemberSignature Language="F#" Value="override this.Load : System.IO.Stream -&gt; unit" Usage="xmlDataDocument.Load inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">
          <span data-ttu-id="a1beb-191">The stream containing the XML document to load.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-191">The stream containing the XML document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-192">Loads the <see langword="XmlDataDocument" /> from the specified stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-192">Loads the <see langword="XmlDataDocument" /> from the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-193">`XmlDataDocument` ne prend pas en charge la création des références d’entité.</span><span class="sxs-lookup"><span data-stu-id="a1beb-193">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="a1beb-194">Si les données incluent des références d’entité, le `Load` méthode résout et développe les références d’entité.</span><span class="sxs-lookup"><span data-stu-id="a1beb-194">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1beb-195">Pour afficher les données XML de manière relationnelle, vous devez spécifier un schéma à utiliser pour le mappage de données.</span><span class="sxs-lookup"><span data-stu-id="a1beb-195">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="a1beb-196">Cela peut être effectué en appelant le <xref:System.Data.DataSet.ReadXmlSchema%2A> méthode ou en créant les tables et colonnes dans le `DataSet` manuellement.</span><span class="sxs-lookup"><span data-stu-id="a1beb-196">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="a1beb-197">Cette étape doit être effectuée avant d’appeler `Load`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-197">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.IO.TextReader txtReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.IO.TextReader txtReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (txtReader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::IO::TextReader ^ txtReader);" />
      <MemberSignature Language="F#" Value="override this.Load : System.IO.TextReader -&gt; unit" Usage="xmlDataDocument.Load txtReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="txtReader">
          <span data-ttu-id="a1beb-198">The <see langword="TextReader" /> used to feed the XML data into the document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-198">The <see langword="TextReader" /> used to feed the XML data into the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-199">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-199">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-200">`XmlDataDocument` ne prend pas en charge la création des références d’entité.</span><span class="sxs-lookup"><span data-stu-id="a1beb-200">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="a1beb-201">Si les données incluent des références d’entité, le `Load` méthode résout et développe les références d’entité.</span><span class="sxs-lookup"><span data-stu-id="a1beb-201">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1beb-202">Pour afficher les données XML de manière relationnelle, vous devez spécifier un schéma à utiliser pour le mappage de données.</span><span class="sxs-lookup"><span data-stu-id="a1beb-202">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="a1beb-203">Cela peut être effectué en appelant le <xref:System.Data.DataSet.ReadXmlSchema%2A> méthode ou en créant les tables et colonnes dans le `DataSet` manuellement.</span><span class="sxs-lookup"><span data-stu-id="a1beb-203">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="a1beb-204">Cette étape doit être effectuée avant d’appeler `Load`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-204">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="override this.Load : string -&gt; unit" Usage="xmlDataDocument.Load filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="a1beb-205">The URL of the file containing the XML document to load.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-205">The URL of the file containing the XML document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-206">Loads the <see langword="XmlDataDocument" /> using the specified URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-206">Loads the <see langword="XmlDataDocument" /> using the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-207">`XmlDataDocument` ne prend pas en charge la création des références d’entité.</span><span class="sxs-lookup"><span data-stu-id="a1beb-207">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="a1beb-208">Si les données incluent des références d’entité, le `Load` méthode résout et développe les références d’entité.</span><span class="sxs-lookup"><span data-stu-id="a1beb-208">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1beb-209">Pour afficher les données XML de manière relationnelle, vous devez spécifier un schéma à utiliser pour le mappage de données.</span><span class="sxs-lookup"><span data-stu-id="a1beb-209">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="a1beb-210">Cela peut être effectué en appelant le <xref:System.Data.DataSet.ReadXmlSchema%2A> méthode ou en créant les tables et colonnes dans le `DataSet` manuellement.</span><span class="sxs-lookup"><span data-stu-id="a1beb-210">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="a1beb-211">Cette étape doit être effectuée avant d’appeler `Load`.</span><span class="sxs-lookup"><span data-stu-id="a1beb-211">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Xml.XmlReader -&gt; unit" Usage="xmlDataDocument.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a1beb-212">The <see langword="XmlReader" /> containing the XML document to load.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-212">The <see langword="XmlReader" /> containing the XML document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1beb-213">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-213">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1beb-214">`XmlDataDocument` ne prend pas en charge la création des références d’entité.</span><span class="sxs-lookup"><span data-stu-id="a1beb-214">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="a1beb-215">Si la source de données contient des références d’entité, vous devez créer un <xref:System.Xml.XmlValidatingReader> avec la <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> propriété valeur EntityHandling.ExpandEntities (il s’agit du comportement par défaut) et passez le `XmlValidatingReader` à la `Load` (méthode).</span><span class="sxs-lookup"><span data-stu-id="a1beb-215">If the data source contains entity references, you must create an <xref:System.Xml.XmlValidatingReader> with the <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the `XmlValidatingReader` to the `Load` method.</span></span> <span data-ttu-id="a1beb-216">Si vous n’utilisez pas un `XmlValidatingReader`, le `Load` méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="a1beb-216">If you do not use an `XmlValidatingReader`, the `Load` method throws an exception.</span></span>  
  
 <span data-ttu-id="a1beb-217">Le `Load` méthode conserve toujours l’espace blanc significatif.</span><span class="sxs-lookup"><span data-stu-id="a1beb-217">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="a1beb-218">Le <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> propriété détermine si l’espace blanc est conservé.</span><span class="sxs-lookup"><span data-stu-id="a1beb-218">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not white space is preserved.</span></span> <span data-ttu-id="a1beb-219">La valeur par défaut est `false`, l’espace blanc n’est pas conservé.</span><span class="sxs-lookup"><span data-stu-id="a1beb-219">The default is `false`, white space is not preserved.</span></span>  
  
 <span data-ttu-id="a1beb-220">Si le lecteur est dans l’initiale état c'est-à-dire ReadState .initial, `Load` consomme la totalité du lecteur et crée le DOM à partir de ce qu’il trouve.</span><span class="sxs-lookup"><span data-stu-id="a1beb-220">If the reader is in the initial state (that is, ReadState=ReadState.Initial), `Load` consumes the entire contents of the reader and builds the DOM from what it finds.</span></span>  
  
 <span data-ttu-id="a1beb-221">Si le lecteur est déjà positionné sur un nœud à la profondeur « n », cette méthode charge ce nœud et tous les frères successifs jusqu'à la balise finale qui clôture la profondeur « n ».</span><span class="sxs-lookup"><span data-stu-id="a1beb-221">If the reader is already positioned on some node at depth "n", then this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</span></span> <span data-ttu-id="a1beb-222">Cela produit les résultats suivants.</span><span class="sxs-lookup"><span data-stu-id="a1beb-222">This has the following results.</span></span>  
  
 <span data-ttu-id="a1beb-223">Si le nœud actuel et ses frères suivants se présenter comme suit :</span><span class="sxs-lookup"><span data-stu-id="a1beb-223">If the current node and its following siblings look similar to the following:</span></span>  
  
```xml  
<!--comment--><element1>one</element1><element2>two</element2>  
```  
  
 <span data-ttu-id="a1beb-224">`Load` lève une exception, car un document ne peut pas avoir deux éléments de niveau racine.</span><span class="sxs-lookup"><span data-stu-id="a1beb-224">`Load` throws an exception, because a document cannot have two root-level elements.</span></span> <span data-ttu-id="a1beb-225">Si le nœud actuel et ses frères suivants se présenter comme suit :</span><span class="sxs-lookup"><span data-stu-id="a1beb-225">If the current node and its following siblings look similar to the following:</span></span>  
  
```xml  
<!--comment--><?process  
    instruction?><!--comment--></endtag>  
```  
  
 <span data-ttu-id="a1beb-226">`Load` aboutit ; Toutefois, vous devez une arborescence DOM incomplet, car il n’existe aucun élément de niveau racine.</span><span class="sxs-lookup"><span data-stu-id="a1beb-226">`Load` will succeed; however, you will have an incomplete DOM tree, because there is no root-level element.</span></span> <span data-ttu-id="a1beb-227">Vous devez ajouter un élément de niveau racine avant d’enregistrer le document ; dans le cas contraire, la <xref:System.Xml.XmlDocument.Save%2A> méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="a1beb-227">You have to add a root-level element before you save the document; otherwise, the <xref:System.Xml.XmlDocument.Save%2A> method throws an exception.</span></span>  
  
 <span data-ttu-id="a1beb-228">Si le lecteur est positionné sur un nœud sans descendant non valide pour le niveau racine d'un document (par exemple, un espace blanc ou un nœud d'attribut), le lecteur poursuit la lecture jusqu'à se positionner sur un nœud pouvant être utilisé pour la racine.</span><span class="sxs-lookup"><span data-stu-id="a1beb-228">If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root.</span></span> <span data-ttu-id="a1beb-229">Le chargement du document démarre à ce stade.</span><span class="sxs-lookup"><span data-stu-id="a1beb-229">The document begins loading at this point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1beb-230">L’exemple suivant modifie le prix d’un livre à l’aide de la `DataSet` méthodes.</span><span class="sxs-lookup"><span data-stu-id="a1beb-230">The following example modifies the price of a book using the `DataSet` methods.</span></span>  
  
 [!code-cpp[XmlDataDocument.Load#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.Load/CPP/loadrdr.cpp#1)]
 [!code-csharp[XmlDataDocument.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.Load/CS/loadrdr.cs#1)]
 [!code-vb[XmlDataDocument.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.Load/VB/loadrdr.vb#1)]  
  
 <span data-ttu-id="a1beb-231">L’exemple utilise les deux fichiers d’entrée suivants.</span><span class="sxs-lookup"><span data-stu-id="a1beb-231">The example uses the following two input files.</span></span>  
  
 `2books.xml`  
  
 [!code-xml[XmlDataDocument.Load#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/2books.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[XmlDataDocument.Load#3](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/test.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a1beb-232">The XML being loaded contains entity references, and the reader cannot resolve entities.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1beb-232">The XML being loaded contains entity references, and the reader cannot resolve entities.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>