<Type Name="Stroke" FullName="System.Windows.Ink.Stroke">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1557a866dd28af6d7c36bcac1fb8eace5db1d94f" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52741985" /></Metadata><TypeSignature Language="C#" Value="public class Stroke : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stroke extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.Stroke" />
  <TypeSignature Language="VB.NET" Value="Public Class Stroke&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stroke : System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type Stroke = class&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Représente un trait d’encre unique.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Ink.Stroke> est l’objet de données qui est collectée à partir d’un dispositif de pointage, comme un stylet ou une souris. Le <xref:System.Windows.Ink.Stroke> peuvent être créés et manipulés par programme et peut être représenté visuellement sur un élément manuscrite, telles que le <xref:System.Windows.Controls.InkCanvas>. Un <xref:System.Windows.Ink.Stroke> contient des informations sur sa position et l’apparence. Le <xref:System.Windows.Ink.Stroke.StylusPoints%2A> propriété est une collection de <xref:System.Windows.Input.StylusPoint> objets qui spécifie la position de la <xref:System.Windows.Ink.Stroke>. Le <xref:System.Windows.Ink.DrawingAttributes> propriété spécifie l’apparence d’un trait.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Ink.StrokeCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Ink.Stroke" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stroke (System.Windows.Input.StylusPointCollection stylusPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.StylusPointCollection stylusPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stylusPoints As StylusPointCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stroke(System::Windows::Input::StylusPointCollection ^ stylusPoints);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.Stroke : System.Windows.Input.StylusPointCollection -&gt; System.Windows.Ink.Stroke" Usage="new System.Windows.Ink.Stroke stylusPoints" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stylusPoints" Type="System.Windows.Input.StylusPointCollection" />
      </Parameters>
      <Docs>
        <param name="stylusPoints">Un <see cref="T:System.Windows.Input.StylusPointCollection" /> qui représente le <see cref="T:System.Windows.Ink.Stroke" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Ink.Stroke" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Windows.Ink.Stroke> à partir d’un <xref:System.Windows.Input.StylusPointCollection> et <xref:System.Windows.Ink.DrawingAttributes> objet. Cet exemple suppose qu’il existe un <xref:System.Windows.Controls.InkPresenter> appelée `myInkPresenter`.  
  
 [!code-csharp[StrokeSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#2)]
 [!code-vb[StrokeSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stylusPoints" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="stylusPoints" /> est vide...</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stroke (System.Windows.Input.StylusPointCollection stylusPoints, System.Windows.Ink.DrawingAttributes drawingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.StylusPointCollection stylusPoints, class System.Windows.Ink.DrawingAttributes drawingAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stroke(System::Windows::Input::StylusPointCollection ^ stylusPoints, System::Windows::Ink::DrawingAttributes ^ drawingAttributes);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.Stroke : System.Windows.Input.StylusPointCollection * System.Windows.Ink.DrawingAttributes -&gt; System.Windows.Ink.Stroke" Usage="new System.Windows.Ink.Stroke (stylusPoints, drawingAttributes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stylusPoints" Type="System.Windows.Input.StylusPointCollection" />
        <Parameter Name="drawingAttributes" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="stylusPoints">Un <see cref="T:System.Windows.Input.StylusPointCollection" /> qui représente le <see cref="T:System.Windows.Ink.Stroke" />.</param>
        <param name="drawingAttributes">Un <see cref="T:System.Windows.Ink.DrawingAttributes" /> objet qui spécifie l’apparence de la <see cref="T:System.Windows.Ink.Stroke" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Ink.Stroke" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Windows.Ink.Stroke> à partir d’un <xref:System.Windows.Input.StylusPointCollection> et <xref:System.Windows.Ink.DrawingAttributes> objet.  Cet exemple suppose qu’il existe un <xref:System.Windows.Controls.InkPresenter> appelée `myInkPresenter`.  
  
 [!code-csharp[StrokeSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#2)]
 [!code-vb[StrokeSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stylusPoints" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="drawingAtrributes" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="stylusPoints" /> est vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyData">
      <MemberSignature Language="C#" Value="public void AddPropertyData (Guid propertyDataId, object propertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyData(valuetype System.Guid propertyDataId, object propertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyData (propertyDataId As Guid, propertyData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyData(Guid propertyDataId, System::Object ^ propertyData);" />
      <MemberSignature Language="F#" Value="member this.AddPropertyData : Guid * obj -&gt; unit" Usage="stroke.AddPropertyData (propertyDataId, propertyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
        <Parameter Name="propertyData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Identificateur unique pour la propriété.</param>
        <param name="propertyData">La valeur de la propriété personnalisée. <paramref name="propertyData" /> doit être de type <see cref="T:System.Char" />, <see cref="T:System.Byte" />,<see cref="T:System.Int16" />,<see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, <see cref="T:System.UInt32" />, <see cref="T:System.Int64" />, <see cref="T:System.UInt64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.DateTime" />, <see cref="T:System.Boolean" />, <see cref="T:System.String" />, <see cref="T:System.Decimal" /> ou un tableau de ces types de données, à l’exception de <see cref="T:System.String" />, qui n’est pas autorisé.</param>
        <summary>Ajoute une propriété personnalisée à le <see cref="T:System.Windows.Ink.Stroke" /> objet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utile si vous avez besoin stocker des informations supplémentaires dans le <xref:System.Windows.Ink.Stroke>.  
  
   
  
## Examples  
 L’exemple suivant montre comment ajouter une propriété personnalisée à un <xref:System.Windows.Ink.Stroke> objet.  
  
 [!code-csharp[StrokeSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#3)]
 [!code-vb[StrokeSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le <paramref name="propertyData" /> argument n’est pas un des types de données autorisé répertoriés dans la <see langword="Parameters" /> section.</exception>
        <altmember cref="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Ink.Stroke Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Ink.Stroke Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Stroke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Ink::Stroke ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Ink.Stroke&#xA;override this.Clone : unit -&gt; System.Windows.Ink.Stroke" Usage="stroke.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.Stroke</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une copie complète d’existant <see cref="T:System.Windows.Ink.Stroke" /> objet.</summary>
        <returns>Nouvel objet <see cref="T:System.Windows.Ink.Stroke" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les propriétés d’un objet qui est une copie complète d’un autre objet ont les mêmes valeurs que les propriétés de l’objet d’origine.  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir une copie de l’actuel <xref:System.Windows.Ink.Stroke> objet.  
  
 [!code-csharp[StrokeSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#5)]
 [!code-vb[StrokeSnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPropertyData">
      <MemberSignature Language="C#" Value="public bool ContainsPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsPropertyData (propertyDataId As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.ContainsPropertyData : Guid -&gt; bool" Usage="stroke.ContainsPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Identificateur unique pour la propriété.</param>
        <summary>Retourne une valeur qui indique si le <see cref="T:System.Windows.Ink.Stroke" /> objet contient la propriété personnalisée spécifiée.</summary>
        <returns>Retourne <see langword="true" /> si la propriété personnalisée existe ; sinon, retourne <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment déterminer si un <xref:System.Windows.Ink.Stroke> objet possède une propriété personnalisée.  
  
 [!code-csharp[StrokeSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#3)]
 [!code-vb[StrokeSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
        <altmember cref="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Draw">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restitue le <see cref="T:System.Windows.Ink.Stroke" /> objet basé sur un <see cref="T:System.Windows.Media.DrawingContext" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Windows.Media.DrawingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Windows.Media.DrawingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Draw (context As DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Windows::Media::DrawingContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Draw : System.Windows.Media.DrawingContext -&gt; unit" Usage="stroke.Draw context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="context">Le <see cref="T:System.Windows.Media.DrawingContext" /> de l’objet sur lequel le trait sera affiché.</param>
        <summary>Affiche l’objet <see cref="T:System.Windows.Ink.Stroke" /> en fonction du <see cref="T:System.Windows.Media.DrawingContext" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment dessiner un <xref:System.Windows.Ink.Stroke> objet en utilisant un <xref:System.Windows.Media.DrawingContext>.  
  
 [!code-csharp[DrawTransform#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawTransform/CSharp/Program.cs#1)]
 [!code-vb[DrawTransform#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawTransform/VisualBasic/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Windows.Media.DrawingContext drawingContext, System.Windows.Ink.DrawingAttributes drawingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Windows.Media.DrawingContext drawingContext, class System.Windows.Ink.DrawingAttributes drawingAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Windows::Media::DrawingContext ^ drawingContext, System::Windows::Ink::DrawingAttributes ^ drawingAttributes);" />
      <MemberSignature Language="F#" Value="member this.Draw : System.Windows.Media.DrawingContext * System.Windows.Ink.DrawingAttributes -&gt; unit" Usage="stroke.Draw (drawingContext, drawingAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
        <Parameter Name="drawingAttributes" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="drawingContext">Le <see cref="T:System.Windows.Media.DrawingContext" /> de l’objet sur lequel le trait sera affiché.</param>
        <param name="drawingAttributes">Le <see cref="T:System.Windows.Ink.DrawingAttributes" /> objet définissant les attributs du trait qui est dessiné.</param>
        <summary>Restitue le <see cref="T:System.Windows.Ink.Stroke" /> objet basé sur le spécifié <see cref="T:System.Windows.Media.DrawingContext" /> et <see cref="T:System.Windows.Ink.DrawingAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment dessiner un <xref:System.Windows.Ink.Stroke> objet en utilisant un <xref:System.Windows.Media.DrawingContext> et <xref:System.Windows.Ink.DrawingAttributes>.  
  
 [!code-csharp[DrawTransform#2](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawTransform/CSharp/Program.cs#2)]
 [!code-vb[DrawTransform#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawTransform/VisualBasic/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawCore">
      <MemberSignature Language="C#" Value="protected virtual void DrawCore (System.Windows.Media.DrawingContext drawingContext, System.Windows.Ink.DrawingAttributes drawingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DrawCore(class System.Windows.Media.DrawingContext drawingContext, class System.Windows.Ink.DrawingAttributes drawingAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DrawCore(System::Windows::Media::DrawingContext ^ drawingContext, System::Windows::Ink::DrawingAttributes ^ drawingAttributes);" />
      <MemberSignature Language="F#" Value="abstract member DrawCore : System.Windows.Media.DrawingContext * System.Windows.Ink.DrawingAttributes -&gt; unit&#xA;override this.DrawCore : System.Windows.Media.DrawingContext * System.Windows.Ink.DrawingAttributes -&gt; unit" Usage="stroke.DrawCore (drawingContext, drawingAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
        <Parameter Name="drawingAttributes" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="drawingContext">Le <see cref="T:System.Windows.Media.DrawingContext" /> de l’objet sur lequel le trait sera affiché.</param>
        <param name="drawingAttributes">Le <see cref="T:System.Windows.Ink.DrawingAttributes" /> objet définissant les attributs du trait qui est dessiné.</param>
        <summary>Restitue le <see cref="T:System.Windows.Ink.Stroke" /> sur spécifié <see cref="T:System.Windows.Media.DrawingContext" /> à l’aide de la <see cref="T:System.Windows.Ink.DrawingAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Remplacer le <xref:System.Windows.Ink.Stroke.DrawCore%2A> méthode pour effectuer le dessin personnalisé lorsque vous héritez de la <xref:System.Windows.Ink.Stroke> classe.  
  
   
  
## Examples  
 L’exemple suivant montre comment dessiner un cercle à chaque <xref:System.Windows.Input.StylusPoint> d’un <xref:System.Windows.Ink.Stroke>. Si le <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propriété est définie sur `true`, le <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> est utilisée pour obtenir les points du stylet. Sinon, le <xref:System.Windows.Ink.Stroke.StylusPoints%2A> propriété est utilisée.  
  
 [!code-csharp[StrokeSnippets#23](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyStroke.cs#23)]
 [!code-vb[StrokeSnippets#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyStroke.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingAttributes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.DrawingAttributes DrawingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.DrawingAttributes DrawingAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.Stroke.DrawingAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawingAttributes As DrawingAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::DrawingAttributes ^ DrawingAttributes { System::Windows::Ink::DrawingAttributes ^ get(); void set(System::Windows::Ink::DrawingAttributes ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DrawingAttributes : System.Windows.Ink.DrawingAttributes with get, set" Usage="System.Windows.Ink.Stroke.DrawingAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Windows.Ink.DrawingAttributes" /> pour le <see cref="T:System.Windows.Ink.Stroke" /> objet.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ces attributs, tels que la couleur et la largeur, sont appliqués à la <xref:System.Windows.Ink.Stroke> de l’objet comme il est dessiné.  
  
 Modification <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> provoque le <xref:System.Windows.Ink.Stroke.DrawingAttributesChanged> l’événement.  
  
   
  
## Examples  
 L’exemple suivant définit la <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> pour créer un trait vert.  
  
 [!code-csharp[StrokeSnippets#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#7)]
 [!code-vb[StrokeSnippets#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur définie est <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DrawingAttributesChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler DrawingAttributesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler DrawingAttributesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.DrawingAttributesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DrawingAttributesChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ DrawingAttributesChanged;" />
      <MemberSignature Language="F#" Value="member this.DrawingAttributesChanged : System.Windows.Ink.PropertyDataChangedEventHandler " Usage="member this.DrawingAttributesChanged : System.Windows.Ink.PropertyDataChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le <see cref="P:System.Windows.Ink.Stroke.DrawingAttributes" /> associé à la <see cref="T:System.Windows.Ink.Stroke" /> modification de l’objet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Ink.PropertyDataChangedEventArgs> contient des informations sur la propriété qui a changé. Vous pouvez comparer la <xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A> propriété sur les membres du <xref:System.Windows.Ink.DrawingAttributeIds> pour afficher la valeur qui a changé.  
  
   
  
## Examples  
 L’exemple suivant montre comment ajouter un gestionnaire pour cet événement.  
  
 [!code-csharp[StrokeSnippets#8](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#8)]
 [!code-vb[StrokeSnippets#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Ink.Stroke.DrawingAttributes" />
        <altmember cref="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced" />
        <altmember cref="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.DrawingAttributesReplacedEventHandler DrawingAttributesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.DrawingAttributesReplacedEventHandler DrawingAttributesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event DrawingAttributesReplaced As DrawingAttributesReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::DrawingAttributesReplacedEventHandler ^ DrawingAttributesReplaced;" />
      <MemberSignature Language="F#" Value="member this.DrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventHandler " Usage="member this.DrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque les attributs de dessin d’un <see cref="T:System.Windows.Ink.Stroke" /> objet sont remplacées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment ajouter un gestionnaire pour cet événement.  
  
 [!code-csharp[StrokeSnippets#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#9)]
 [!code-vb[StrokeSnippets#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Ink.Stroke.DrawingAttributes" />
        <altmember cref="M:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="GetBezierStylusPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointCollection GetBezierStylusPoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.StylusPointCollection GetBezierStylusPoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetBezierStylusPoints" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBezierStylusPoints () As StylusPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::StylusPointCollection ^ GetBezierStylusPoints();" />
      <MemberSignature Language="F#" Value="member this.GetBezierStylusPoints : unit -&gt; System.Windows.Input.StylusPointCollection" Usage="stroke.GetBezierStylusPoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne les points du stylet le <see cref="T:System.Windows.Ink.Stroke" /> utilise quand <see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /> est <see langword="true" />.</summary>
        <returns>Un <see cref="T:System.Windows.Input.StylusPointCollection" /> qui contient les points de stylet le long de la pliure d’un <see cref="T:System.Windows.Ink.Stroke" /> lorsque <see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /> est <see langword="true" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> méthode retourne un nouveau <xref:System.Windows.Input.StylusPointCollection> qui contient le stylet qui pointe le <xref:System.Windows.Ink.Stroke> utilise lorsque le <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propriété sur le <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> propriété est définie sur `true`.  Pour obtenir les points du stylet qui sont utilisés lorsque <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> a la valeur `false`, utilisez le <xref:System.Windows.Ink.Stroke.StylusPoints%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment dessiner un cercle à chaque <xref:System.Windows.Input.StylusPoint> d’un <xref:System.Windows.Ink.Stroke>. Si le <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propriété est définie sur `true`, le <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> est utilisée pour obtenir les points du stylet. Sinon, le <xref:System.Windows.Ink.Stroke.StylusPoints%2A> propriété est utilisée.  
  
 [!code-csharp[StrokeSnippets#23](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyStroke.cs#23)]
 [!code-vb[StrokeSnippets#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyStroke.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Rect GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Rect GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Rect GetBounds();" />
      <MemberSignature Language="F#" Value="abstract member GetBounds : unit -&gt; System.Windows.Rect&#xA;override this.GetBounds : unit -&gt; System.Windows.Rect" Usage="stroke.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère le cadre englobant pour le <see cref="T:System.Windows.Ink.Stroke" /> objet.</summary>
        <returns>Un <see cref="T:System.Windows.Rect" /> zone de structure qui définit le cadre englobant pour le <see cref="T:System.Windows.Ink.Stroke" /> objet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment obtenir le rectangle ajusté pour une <xref:System.Windows.Ink.Stroke> objet.  
  
 [!code-csharp[StrokeSnippets#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#11)]
 [!code-vb[StrokeSnippets#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClipResult">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne des segments du cours <see cref="T:System.Windows.Ink.Stroke" /> qui sont dans la zone spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClipResult">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetClipResult (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetClipResult(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClipResult (lassoPoints As IEnumerable(Of Point)) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetClipResult(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberSignature Language="F#" Value="member this.GetClipResult : seq&lt;System.Windows.Point&gt; -&gt; System.Windows.Ink.StrokeCollection" Usage="stroke.GetClipResult lassoPoints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Les points qui spécifient la ligne qui définit où découper.</param>
        <summary>Retourne des segments du cours <see cref="T:System.Windows.Ink.Stroke" /> qui sont dans les limites spécifiées.</summary>
        <returns>Un <see cref="T:System.Windows.Ink.StrokeCollection" /> qui contient des copies des segments du cours <see cref="T:System.Windows.Ink.Stroke" /> qui sont dans les limites spécifiées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Ink.Stroke.GetClipResult%2A> méthode retourne un <xref:System.Windows.Ink.StrokeCollection> qui contient les traits qui représentent les segments de la <xref:System.Windows.Ink.Stroke> qui figure dans `lassoPoints`. <xref:System.Windows.Ink.Stroke.GetClipResult%2A> ne modifie pas l’original <xref:System.Windows.Ink.Stroke>.  
  
 Le <xref:System.Windows.Ink.Stroke.GetClipResult%2A> méthode connecte le premier et le dernier point dans `lassoPoints` pour créer le lasso.  
  
   
  
## Examples  
 L’exemple suivant supprime l’entrée manuscrite située en dehors des limites spécifiées.  
  
 [!code-csharp[HitTestSample#6](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#6)]
 [!code-vb[HitTestSample#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClipResult">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetClipResult (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetClipResult(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClipResult (bounds As Rect) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetClipResult(System::Windows::Rect bounds);" />
      <MemberSignature Language="F#" Value="member this.GetClipResult : System.Windows.Rect -&gt; System.Windows.Ink.StrokeCollection" Usage="stroke.GetClipResult bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">Un <see cref="T:System.Windows.Rect" /> qui spécifie la zone à découper.</param>
        <summary>Retourne des segments du cours <see cref="T:System.Windows.Ink.Stroke" /> situés dans le rectangle spécifié.</summary>
        <returns>Un <see cref="T:System.Windows.Ink.StrokeCollection" /> qui contient des copies des segments du cours <see cref="T:System.Windows.Ink.Stroke" /> qui sont dans les limites de <paramref name="bounds" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Ink.Stroke.GetClipResult%2A> méthode retourne un <xref:System.Windows.Ink.StrokeCollection> qui contient les traits qui représentent les segments de la <xref:System.Windows.Ink.Stroke> qui figure dans `bounds`. <xref:System.Windows.Ink.Stroke.GetClipResult%2A> ne modifie pas l’original <xref:System.Windows.Ink.Stroke>.  
  
   
  
## Examples  
 L’exemple suivant supprime l’entrée manuscrite située en dehors des limites spécifiées.  
  
 [!code-csharp[HitTestSample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#5)]
 [!code-vb[HitTestSample#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEraseResult">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne les segments du courant <see cref="T:System.Windows.Ink.Stroke" /> après que la partie de la <see cref="T:System.Windows.Ink.Stroke" /> est effacé.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEraseResult">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetEraseResult (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetEraseResult(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraseResult (lassoPoints As IEnumerable(Of Point)) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetEraseResult(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberSignature Language="F#" Value="member this.GetEraseResult : seq&lt;System.Windows.Point&gt; -&gt; System.Windows.Ink.StrokeCollection" Usage="stroke.GetEraseResult lassoPoints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Tableau de type <see cref="T:System.Windows.Point" /> qui spécifie la zone à effacer.</param>
        <summary>Retourne des segments du cours <see cref="T:System.Windows.Ink.Stroke" /> qui sont en dehors des limites spécifiées.</summary>
        <returns>Un <see cref="T:System.Windows.Ink.StrokeCollection" /> qui contient les segments d’actuel <see cref="T:System.Windows.Ink.Stroke" /> qui sont en dehors des limites spécifiées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> méthode retourne un <xref:System.Windows.Ink.StrokeCollection> qui contient les traits qui représentent les segments de la <xref:System.Windows.Ink.Stroke> qui sont en dehors de `lassoPoints`. <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> ne modifie pas l’original <xref:System.Windows.Ink.Stroke>.  
  
 Le <xref:System.Windows.Ink.Stroke.GetClipResult%2A> méthode connecte le premier et le dernier point dans `lassoPoints` pour créer le lasso.  
  
   
  
## Examples  
 L’exemple suivant supprime l’entrée manuscrite située dans les limites spécifiées.  
  
 [!code-csharp[HitTestSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#1)]
 [!code-vb[HitTestSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEraseResult">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetEraseResult (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetEraseResult(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraseResult (bounds As Rect) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetEraseResult(System::Windows::Rect bounds);" />
      <MemberSignature Language="F#" Value="member this.GetEraseResult : System.Windows.Rect -&gt; System.Windows.Ink.StrokeCollection" Usage="stroke.GetEraseResult bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">Un <see cref="T:System.Windows.Rect" /> qui spécifie la zone à effacer.</param>
        <summary>Retourne des segments du cours <see cref="T:System.Windows.Ink.Stroke" /> qui sont en dehors du rectangle spécifié.</summary>
        <returns>Un <see cref="T:System.Windows.Ink.StrokeCollection" /> qui contient les segments du courant <see cref="T:System.Windows.Ink.Stroke" /> qui sont en dehors des limites de l’objet <see cref="T:System.Windows.Rect" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> méthode retourne un <xref:System.Windows.Ink.StrokeCollection> qui contient les traits qui représentent les segments de la <xref:System.Windows.Ink.Stroke> qui sont en dehors de `bounds`. <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> ne modifie pas l’original <xref:System.Windows.Ink.Stroke>.  
  
   
  
## Examples  
 L’exemple suivant supprime l’entrée manuscrite située dans les limites spécifiées.  
  
 [!code-csharp[HitTestSample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#4)]
 [!code-vb[HitTestSample#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEraseResult">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetEraseResult (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; eraserPath, System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetEraseResult(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; eraserPath, class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraseResult (eraserPath As IEnumerable(Of Point), eraserShape As StylusShape) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetEraseResult(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ eraserPath, System::Windows::Ink::StylusShape ^ eraserShape);" />
      <MemberSignature Language="F#" Value="member this.GetEraseResult : seq&lt;System.Windows.Point&gt; * System.Windows.Ink.StylusShape -&gt; System.Windows.Ink.StrokeCollection" Usage="stroke.GetEraseResult (eraserPath, eraserShape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserPath" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserPath">Tableau de type <see cref="T:System.Windows.Point" /> qui spécifie le chemin d’accès qui examine le <see cref="T:System.Windows.Ink.Stroke" />.</param>
        <param name="eraserShape">Un <see cref="T:System.Windows.Ink.StylusShape" /> qui spécifie la forme de la gomme.</param>
        <summary>Retourne les segments du courant <see cref="T:System.Windows.Ink.Stroke" /> après qu’il ait été découpé par le chemin d’accès désigné à l’aide de la <see cref="T:System.Windows.Ink.StylusShape" />.</summary>
        <returns>Un <see cref="T:System.Windows.Ink.StrokeCollection" /> qui contient des copies des segments du cours <see cref="T:System.Windows.Ink.Stroke" /> après qu’il ait été découpé par le chemin d’accès spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> méthode utilise `eraserShape` à atteindre le trait le long de test `eraserPath` et retourne un <xref:System.Windows.Ink.StrokeCollection> qui représentent des segments découpés. <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> ne modifie pas l’original <xref:System.Windows.Ink.Stroke>.  
  
   
  
## Examples  
 L’exemple suivant montre comment effacer l’encre qui entre en intersection avec un chemin d’accès spécifié.  
  
 [!code-csharp[HitTestSample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#2)]
 [!code-vb[HitTestSample#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGeometry">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Windows.Media.Geometry" /> de l'objet <see cref="T:System.Windows.Ink.Stroke" /> actuel.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry GetGeometry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry GetGeometry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeometry () As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ GetGeometry();" />
      <MemberSignature Language="F#" Value="member this.GetGeometry : unit -&gt; System.Windows.Media.Geometry" Usage="stroke.GetGeometry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Windows.Media.Geometry" /> de l'objet <see cref="T:System.Windows.Ink.Stroke" /> actuel.</summary>
        <returns>Un <see cref="T:System.Windows.Media.Geometry" /> qui représente le <see cref="T:System.Windows.Ink.Stroke" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Ink.Stroke.GetGeometry%2A> méthode pour obtenir un <xref:System.Windows.Media.PathGeometry> pour personnaliser la forme de la <xref:System.Windows.Ink.Stroke>. Envisagez la mise en cache le <xref:System.Windows.Media.Geometry> pour éviter d’appeler <xref:System.Windows.Ink.Stroke.GetGeometry%2A> plusieurs fois, ce qui peut affecter les performances.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry GetGeometry (System.Windows.Ink.DrawingAttributes drawingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry GetGeometry(class System.Windows.Ink.DrawingAttributes drawingAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ GetGeometry(System::Windows::Ink::DrawingAttributes ^ drawingAttributes);" />
      <MemberSignature Language="F#" Value="member this.GetGeometry : System.Windows.Ink.DrawingAttributes -&gt; System.Windows.Media.Geometry" Usage="stroke.GetGeometry drawingAttributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingAttributes" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="drawingAttributes">Le <see cref="T:System.Windows.Ink.DrawingAttributes" /> qui détermine le <see cref="T:System.Windows.Media.Geometry" /> de la <see cref="T:System.Windows.Ink.Stroke" />.</param>
        <summary>Obtient le <see cref="T:System.Windows.Media.Geometry" /> d’actuel <see cref="T:System.Windows.Ink.Stroke" /> à l’aide de la <see cref="T:System.Windows.Ink.DrawingAttributes" />.</summary>
        <returns>Un <see cref="T:System.Windows.Media.Geometry" /> qui représente le <see cref="T:System.Windows.Ink.Stroke" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Ink.Stroke.GetGeometry%2A> méthode utilise le <xref:System.Windows.Ink.DrawingAttributes.Width%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> et <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> propriétés de `drawingAttributes` pour déterminer le <xref:System.Windows.Media.Geometry>. Envisagez la mise en cache le <xref:System.Windows.Media.Geometry> pour éviter d’appeler <xref:System.Windows.Ink.Stroke.GetGeometry%2A> plusieurs fois, ce qui peut affecter les performances.  
  
   
  
## Examples  
 L’exemple suivant montre comment dessiner un cercle à chaque <xref:System.Windows.Input.StylusPoint> d’un <xref:System.Windows.Ink.Stroke>. Si le <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propriété est définie sur `true`, le <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> est utilisée pour obtenir les points du stylet. Sinon, le <xref:System.Windows.Ink.Stroke.StylusPoints%2A> propriété est utilisée.  
  
 [!code-csharp[StrokeSnippets#23](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyStroke.cs#23)]
 [!code-vb[StrokeSnippets#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyStroke.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyData">
      <MemberSignature Language="C#" Value="public object GetPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyData (propertyDataId As Guid) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyData : Guid -&gt; obj" Usage="stroke.GetPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Identificateur unique pour la propriété.</param>
        <summary>Récupère les données de propriété pour le GUID spécifié.</summary>
        <returns>Un <see langword="object" /> contenant les données de propriété.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment récupérer une propriété personnalisée sur un <xref:System.Windows.Ink.Stroke> objet.  
  
 [!code-csharp[StrokeSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#3)]
 [!code-vb[StrokeSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyDataId" /> n’est pas associé à une propriété personnalisée de la <see cref="T:System.Windows.Ink.Stroke" />.</exception>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
        <altmember cref="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.GetPropertyDataIds" />
        <altmember cref="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyDataIds">
      <MemberSignature Language="C#" Value="public Guid[] GetPropertyDataIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid[] GetPropertyDataIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetPropertyDataIds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyDataIds () As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Guid&gt; ^ GetPropertyDataIds();" />
      <MemberSignature Language="F#" Value="member this.GetPropertyDataIds : unit -&gt; Guid[]" Usage="stroke.GetPropertyDataIds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère les GUID de toutes les propriétés personnalisées associées le <see cref="T:System.Windows.Ink.Stroke" /> objet.</summary>
        <returns>Tableau d'objets <see cref="T:System.Guid" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment obtenir les GUID des propriétés personnalisées d’un trait.  
  
 [!code-csharp[DrawTransform#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawTransform/CSharp/Program.cs#3)]
 [!code-vb[DrawTransform#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawTransform/VisualBasic/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
        <altmember cref="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne si le <see cref="T:System.Windows.Ink.Stroke" /> croise ou est dans une certaine zone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Windows.Ink.Stroke.HitTest%2A> méthodes pour déterminer si un <xref:System.Windows.Ink.Stroke> entre en intersection avec un certain point ou se trouve dans les limites spécifiées.  
  
 Les méthodes suivantes vérifient si le <xref:System.Windows.Ink.Stroke> est croisé.  
  
-   <xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Ink.Stroke.HitTest%28System.Collections.Generic.IEnumerable%7BSystem.Windows.Point%7D%2CSystem.Windows.Ink.StylusShape%29?displayProperty=nameWithType>  
  
 Les méthodes suivantes vérifient si le <xref:System.Windows.Ink.Stroke> est entourée.  
  
-   <xref:System.Windows.Ink.Stroke.HitTest%28System.Collections.Generic.IEnumerable%7BSystem.Windows.Point%7D%2CSystem.Int32%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Rect%2CSystem.Int32%29?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public bool HitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Point -&gt; bool" Usage="stroke.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><see cref="T:System.Windows.Point" /> sur lequel exécuter le test de positionnement.</param>
        <summary>Retourne une valeur qui indique si elle est en cours <see cref="T:System.Windows.Ink.Stroke" /> croise le point spécifié.</summary>
        <returns><see langword="true" /> Si <paramref name="point" /> croise le trait actuel ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode comporte de la même façon que surchargées <xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29> fait de méthode quand `diameter` est 1.  
  
   
  
## Examples  
 L’exemple suivant modifie la couleur d’un <xref:System.Windows.Ink.Stroke> si elle entre en intersection avec une certaine zone.  
  
 [!code-csharp[HitTestSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#3)]
 [!code-vb[HitTestSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public bool HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints, int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints, int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (lassoPoints As IEnumerable(Of Point), percentageWithinLasso As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints, int percentageWithinLasso);" />
      <MemberSignature Language="F#" Value="member this.HitTest : seq&lt;System.Windows.Point&gt; * int -&gt; bool" Usage="stroke.HitTest (lassoPoints, percentageWithinLasso)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Tableau de type <see cref="T:System.Windows.Point" /> qui représente les limites de la zone de test d’atteinte.</param>
        <param name="percentageWithinLasso">Le pourcentage de la longueur de la <see cref="T:System.Windows.Ink.Stroke" />, qui doit être dans <paramref name="lassoPoints" /> pour le <see cref="T:System.Windows.Ink.Stroke" /> pour être considéré comme testé.</param>
        <summary>Retourne une valeur qui indique si l’actuel <see cref="T:System.Windows.Ink.Stroke" /> est dans les limites spécifiées.</summary>
        <returns><see langword="true" /> Si le trait actuel se trouve dans les limites spécifiées ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Ink.Stroke.HitTest%2A> méthode connecte le premier et le dernier point dans `lassoPoints` pour créer le lasso.  
  
   
  
## Examples  
 L’exemple suivant restitue un trait pourpre si au moins 80 % du trait est dans les limites de `myPoints`.  
  
 [!code-csharp[HitTestSample#7](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#7)]
 [!code-vb[HitTestSample#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public bool HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; path, System.Windows.Ink.StylusShape stylusShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; path, class System.Windows.Ink.StylusShape stylusShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ path, System::Windows::Ink::StylusShape ^ stylusShape);" />
      <MemberSignature Language="F#" Value="member this.HitTest : seq&lt;System.Windows.Point&gt; * System.Windows.Ink.StylusShape -&gt; bool" Usage="stroke.HitTest (path, stylusShape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="stylusShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="path">Le chemin d’accès qui <paramref name="stylusShape" /> suit pour le test de positionnement</param>
        <param name="stylusShape">La forme de <paramref name="path" /> avec lequel le test d’atteinte.</param>
        <summary>Retourne si le chemin d’accès spécifié croise le <see cref="T:System.Windows.Ink.Stroke" /> à l’aide de la <see cref="T:System.Windows.Ink.StylusShape" />.</summary>
        <returns><see langword="true" /> Si <paramref name="stylusShape" /> croise le trait actuel ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Ink.Stroke.HitTest%2A> méthode utilise `stylusShape` de positionnement du trait le long de test `eraserPath`.  
  
   
  
## Examples  
 Le code suivant restitue un trait pourpre si le trait croise le chemin d’accès `myPoints`.  
  
 [!code-csharp[HitTestSample#9](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#9)]
 [!code-vb[HitTestSample#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public bool HitTest (System.Windows.Point point, double diameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HitTest(valuetype System.Windows.Point point, float64 diameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HitTest(System::Windows::Point point, double diameter);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Point * double -&gt; bool" Usage="stroke.HitTest (point, diameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="diameter" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="point">Le <see cref="T:System.Windows.Point" /> qui définit le centre de la zone de test d’atteinte.</param>
        <param name="diameter">Le diamètre de la zone de test d’atteinte.</param>
        <summary>Retourne une valeur qui indique si elle est en cours <see cref="T:System.Windows.Ink.Stroke" /> croise la zone spécifiée.</summary>
        <returns><see langword="true" /> Si la zone spécifiée croise le trait actuel ; Sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant modifie la couleur d’un <xref:System.Windows.Ink.Stroke> si elle entre en intersection avec une certaine zone.  
  
 [!code-csharp[HitTestSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#3)]
 [!code-vb[HitTestSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public bool HitTest (System.Windows.Rect bounds, int percentageWithinBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HitTest(valuetype System.Windows.Rect bounds, int32 percentageWithinBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (bounds As Rect, percentageWithinBounds As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HitTest(System::Windows::Rect bounds, int percentageWithinBounds);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Rect * int -&gt; bool" Usage="stroke.HitTest (bounds, percentageWithinBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
        <Parameter Name="percentageWithinBounds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bounds"><see cref="T:System.Windows.Rect" /> qui représente les limites de la zone du test de positionnement.</param>
        <param name="percentageWithinBounds">Le pourcentage de la longueur du <see cref="T:System.Windows.Ink.Stroke" />, qui doit être dans <paramref name="percentageWithinBounds" /> pour que le <see cref="T:System.Windows.Ink.Stroke" /> puisse être considéré comme positionné.</param>
        <summary>Retourne une valeur qui indique si le <see cref="T:System.Windows.Ink.Stroke" /> se trouve dans les limites du rectangle spécifié.</summary>
        <returns><see langword="true" /> si le trait actuel se trouve dans les limites de <paramref name="bounds" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant restitue un trait pourpre si au moins 80 % du trait se trouve dans le <xref:System.Windows.Rect>.  
  
 [!code-csharp[HitTestSample#8](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#8)]
 [!code-vb[HitTestSample#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidated">
      <MemberSignature Language="C#" Value="public event EventHandler Invalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Invalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.Invalidated" />
      <MemberSignature Language="VB.NET" Value="Public Event Invalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Invalidated;" />
      <MemberSignature Language="F#" Value="member this.Invalidated : EventHandler " Usage="member this.Invalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l’apparence de la <see cref="T:System.Windows.Ink.Stroke" /> modifications.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Controls.InkPresenter> gère la <xref:System.Windows.Ink.Stroke.Invalidated> événement et appelle le <xref:System.Windows.Ink.Stroke.DrawCore%2A> (méthode). Si vous héritez de la <xref:System.Windows.Ink.Stroke> classe et l’apparence de votre trait est basée sur un état personnalisé, vous devez appeler la <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> méthode pour déclencher le <xref:System.Windows.Ink.Stroke.Invalidated> événement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawingAttributesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawingAttributesChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawingAttributesChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawingAttributesChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawingAttributesChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawingAttributesChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit&#xA;override this.OnDrawingAttributesChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit" Usage="stroke.OnDrawingAttributesChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> qui contient les données d’événement.</param>
        <summary>Permet aux classes dérivées de modifier le comportement par défaut de la <see cref="E:System.Windows.Ink.Stroke.DrawingAttributesChanged" /> événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous substituez cette méthode dans une classe dérivée, appelez le <xref:System.Windows.Ink.Stroke.OnDrawingAttributesChanged%2A> méthode de la classe de base afin que les délégués inscrits reçoivent l’événement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawingAttributesReplaced (System.Windows.Ink.DrawingAttributesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawingAttributesReplaced(class System.Windows.Ink.DrawingAttributesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawingAttributesReplaced (e As DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawingAttributesReplaced(System::Windows::Ink::DrawingAttributesReplacedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventArgs -&gt; unit&#xA;override this.OnDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventArgs -&gt; unit" Usage="stroke.OnDrawingAttributesReplaced e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.DrawingAttributesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.Windows.Ink.DrawingAttributesReplacedEventArgs" /> qui contient les données d’événement.</param>
        <summary>Permet aux classes dérivées de modifier le comportement par défaut de la <see cref="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced" /> événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous substituez cette méthode dans une classe dérivée, appelez le <xref:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced%2A> méthode de la classe de base afin que les délégués inscrits reçoivent l’événement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInvalidated">
      <MemberSignature Language="C#" Value="protected virtual void OnInvalidated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInvalidated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInvalidated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInvalidated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInvalidated : EventArgs -&gt; unit&#xA;override this.OnInvalidated : EventArgs -&gt; unit" Usage="stroke.OnInvalidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Ink.Stroke.Invalidated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous héritez de la <xref:System.Windows.Ink.Stroke> classe et l’apparence de votre trait est basée sur un état personnalisé, vous devez appeler la <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> méthode pour déclencher le <xref:System.Windows.Ink.Stroke.Invalidated> événement. Le <xref:System.Windows.Controls.InkPresenter> gère la <xref:System.Windows.Ink.Stroke.Invalidated> événement et appelle le <xref:System.Windows.Ink.Stroke.DrawCore%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant dessine une <xref:System.Windows.Ink.Stroke> sous la forme d’un trait solide ou une série de <xref:System.Windows.Input.StylusPoint> objets, selon le `Mode` propriété. L’exemple appelle la <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> (méthode), qui à son tour appelle la <xref:System.Windows.Ink.Stroke.DrawCore%2A> où le trait est dessiné.  
  
 [!code-csharp[StrokeSnippets#24](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/CustomRenderedStroke.cs#24)]
 [!code-vb[StrokeSnippets#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/CustomRenderedStroke.vb#24)]  
[!code-csharp[StrokeSnippets#25](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/CustomRenderedStroke.cs#25)]
[!code-vb[StrokeSnippets#25](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/CustomRenderedStroke.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="stroke.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données d’événement qui décrivent la propriété qui a changé, ainsi que les anciennes et nouvelles valeurs.</param>
        <summary>Se produit lorsqu’une <see cref="T:System.Windows.Ink.Stroke" /> modifications apportées aux propriétés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyDataChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyDataChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyDataChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyDataChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit&#xA;override this.OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit" Usage="stroke.OnPropertyDataChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> qui contient les données d’événement.</param>
        <summary>Permet aux classes dérivées de modifier le comportement par défaut de la <see cref="E:System.Windows.Ink.Stroke.PropertyDataChanged" /> événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous substituez cette méthode dans une classe dérivée, appelez le <xref:System.Windows.Ink.Stroke.OnPropertyDataChanged%2A> méthode de la classe de base afin que les délégués inscrits reçoivent l’événement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusPointsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusPointsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusPointsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnStylusPointsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusPointsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusPointsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusPointsChanged : EventArgs -&gt; unit&#xA;override this.OnStylusPointsChanged : EventArgs -&gt; unit" Usage="stroke.OnStylusPointsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Ink.Stroke.StylusPointsChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusPointsReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusPointsReplaced (System.Windows.Ink.StylusPointsReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusPointsReplaced(class System.Windows.Ink.StylusPointsReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnStylusPointsReplaced(System.Windows.Ink.StylusPointsReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusPointsReplaced (e As StylusPointsReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusPointsReplaced(System::Windows::Ink::StylusPointsReplacedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusPointsReplaced : System.Windows.Ink.StylusPointsReplacedEventArgs -&gt; unit&#xA;override this.OnStylusPointsReplaced : System.Windows.Ink.StylusPointsReplacedEventArgs -&gt; unit" Usage="stroke.OnStylusPointsReplaced e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.StylusPointsReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Ink.StylusPointsReplacedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Ink.Stroke.StylusPointsReplaced" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDataChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.PropertyDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyDataChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ PropertyDataChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " Usage="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque les propriétés personnalisées sur un <see cref="T:System.Windows.Ink.Stroke" /> l’objet de modifications.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment ajouter un gestionnaire pour cet événement.  
  
 [!code-csharp[StrokeSnippets#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#20)]
 [!code-vb[StrokeSnippets#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
        <altmember cref="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyData">
      <MemberSignature Language="C#" Value="public void RemovePropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyData (propertyDataId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.RemovePropertyData : Guid -&gt; unit" Usage="stroke.RemovePropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Identificateur unique pour la propriété.</param>
        <summary>Supprime une propriété personnalisée à partir de la <see cref="T:System.Windows.Ink.Stroke" /> objet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment supprimer une propriété personnalisée à partir d’un <xref:System.Windows.Ink.Stroke> objet.  
  
 [!code-csharp[StrokeSnippets#30](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#30)]
 [!code-vb[StrokeSnippets#30](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
        <altmember cref="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="StylusPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointCollection StylusPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointCollection StylusPoints" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.Stroke.StylusPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property StylusPoints As StylusPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusPointCollection ^ StylusPoints { System::Windows::Input::StylusPointCollection ^ get(); void set(System::Windows::Input::StylusPointCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StylusPoints : System.Windows.Input.StylusPointCollection with get, set" Usage="System.Windows.Ink.Stroke.StylusPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne les points du stylet de la <see cref="T:System.Windows.Ink.Stroke" />.</summary>
        <value>Le <see cref="T:System.Windows.Input.StylusPointCollection" /> qui contient les points du stylet qui représentent le cours <see cref="T:System.Windows.Ink.Stroke" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir les points du stylet qui sont utilisée lorsque le <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propriété sur le <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> propriété est définie sur `true`, utilisez le <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Input.StylusPointCollection> affectée à la <xref:System.Windows.Ink.Stroke.StylusPoints%2A> propriété doit avoir au moins un <xref:System.Windows.Input.StylusPoint> qu’il contient.  Si vous essayez d’assigner un vide <xref:System.Windows.Input.StylusPointCollection> à <xref:System.Windows.Ink.Stroke.StylusPoints%2A>, ou de supprimer tous les <xref:System.Windows.Input.StylusPoint> objets à partir de <xref:System.Windows.Ink.Stroke.StylusPoints%2A>, une exception se produit.  
  
   
  
## Examples  
 L’exemple suivant fait partie d’un substituée <xref:System.Windows.Ink.Stroke> qui dessine un cercle à chaque <xref:System.Windows.Input.StylusPoint>. Si le <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propriété est définie sur `true`, le <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> est utilisée pour obtenir les points du stylet. Sinon, le <xref:System.Windows.Ink.Stroke.StylusPoints%2A> propriété est utilisée.  
  
 [!code-csharp[StrokeSnippets#23](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyStroke.cs#23)]
 [!code-vb[StrokeSnippets#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyStroke.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPointsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StylusPointsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StylusPointsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.StylusPointsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StylusPointsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StylusPointsChanged;" />
      <MemberSignature Language="F#" Value="member this.StylusPointsChanged : EventHandler " Usage="member this.StylusPointsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit quand la propriété <see cref="P:System.Windows.Ink.Stroke.StylusPoints" /> change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment gérer les <xref:System.Windows.Ink.Stroke.StylusPointsChanged> événement.  
  
 [!code-csharp[StrokeSnippets#28](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#28)]
 [!code-vb[StrokeSnippets#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPointsReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.StylusPointsReplacedEventHandler StylusPointsReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.StylusPointsReplacedEventHandler StylusPointsReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.StylusPointsReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event StylusPointsReplaced As StylusPointsReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::StylusPointsReplacedEventHandler ^ StylusPointsReplaced;" />
      <MemberSignature Language="F#" Value="member this.StylusPointsReplaced : System.Windows.Ink.StylusPointsReplacedEventHandler " Usage="member this.StylusPointsReplaced : System.Windows.Ink.StylusPointsReplacedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StylusPointsReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le <see cref="P:System.Windows.Ink.Stroke.StylusPoints" /> propriété est affectée d’un nouveau <see cref="T:System.Windows.Input.StylusPointCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment gérer les <xref:System.Windows.Ink.Stroke.StylusPointsReplaced> événement.  
  
 [!code-csharp[StrokeSnippets#29](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#29)]
 [!code-vb[StrokeSnippets#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la valeur de n’importe quel <see cref="T:System.Windows.Ink.Stroke" /> propriété a été modifiée.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public virtual void Transform (System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transform(valuetype System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Transform (transformMatrix As Matrix, applyToStylusTip As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Transform(System::Windows::Media::Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberSignature Language="F#" Value="abstract member Transform : System.Windows.Media.Matrix * bool -&gt; unit&#xA;override this.Transform : System.Windows.Media.Matrix * bool -&gt; unit" Usage="stroke.Transform (transformMatrix, applyToStylusTip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformMatrix" Type="System.Windows.Media.Matrix" />
        <Parameter Name="applyToStylusTip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="transformMatrix">Le <see cref="T:System.Windows.Media.Matrix" /> objet définissant la transformation.</param>
        <param name="applyToStylusTip"><see langword="true" /> Pour appliquer la transformation à l’extrémité du stylet ; Sinon, <see langword="false" />.</param>
        <summary>Exécute une transformation basée sur le texte spécifié <see cref="T:System.Windows.Media.Matrix" /> objet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Media.Matrix> objet représente une matrice 3 x 3 utilisée pour les transformations dans un espace à deux dimensions. Chaque point de l’objet de tracé est transformé par la matrice fournie. Par exemple si la valeur Point.X d’origine est 100, la valeur Point.Y d’origine est 55 et la transformation Matrix.Scale (0,5, 0,5), la nouvelle valeur Point.X est 50 et la nouvelle valeur Point.Y est 27.5.  
  
   
  
## Examples  
 L’exemple suivant montre comment transformer un <xref:System.Windows.Ink.Stroke> objet.  
  
 [!code-csharp[DrawTransform#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawTransform/CSharp/Program.cs#1)]
 [!code-vb[DrawTransform#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawTransform/VisualBasic/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>