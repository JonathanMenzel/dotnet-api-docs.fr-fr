<Type Name="InstanceStore" FullName="System.Runtime.DurableInstancing.InstanceStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6596a79c48ca9827c47f213b39d9aec72e827a2f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30480983" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class InstanceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstanceStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstanceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceStore abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cd47d-101">Représente un magasin d'instances.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd47d-101">Represents an instance store.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd47d-102">Un fournisseur de persistance donne accès à un magasin d'instances par le biais d'une implémentation concrète de la classe <xref:System.Runtime.DurableInstancing.InstanceStore>.</span><span class="sxs-lookup"><span data-stu-id="cd47d-102">A persistence provider provides access to an instance store through a concrete implementation of the <xref:System.Runtime.DurableInstancing.InstanceStore> class.</span></span>  
  
 <span data-ttu-id="cd47d-103">Les fournisseurs de persistance peuvent appeler InstanceHandle.Free sur les handles passés à TryCommand, même au terme de l'exécution de la commande.</span><span class="sxs-lookup"><span data-stu-id="cd47d-103">Persistence providers may call InstanceHandle.Free on handles passed to TryCommand, even after the command has finished executing.</span></span> <span data-ttu-id="cd47d-104">Toutefois, les fournisseurs de persistance ne doivent pas contenir de références fortes aux objets InstanceHandle ou InstanceOwner, car ceci peut empêcher la récupération d'InstanceStore par le garbage collector.</span><span class="sxs-lookup"><span data-stu-id="cd47d-104">But persistence providers must not hold strong references to InstanceHandle or InstanceOwner objects, as this can prevent InstanceStore from being garbage collected.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="cd47d-105">Impossible de modifier les définitions de flux de travail des workflows persistants.</span><span class="sxs-lookup"><span data-stu-id="cd47d-105">Workflow definitions for persisted workflows cannot be changed.</span></span> <span data-ttu-id="cd47d-106">Si une définition de workflow est modifiée une fois qu’il est rendu persistant, l’exécution du workflow se bloque lorsque le workflow est rechargé.</span><span class="sxs-lookup"><span data-stu-id="cd47d-106">If a workflow definition is changed after it is persisted, the workflow runtime will crash when the workflow is reloaded.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstanceStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstanceStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cd47d-107">Initialise une instance de la classe <see cref="T:System.Runtime.DurableInstancing.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-107">Initializes an instance of the <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="cd47d-108">Handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-108">An instance handle.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="cd47d-109">Commande à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-109">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="cd47d-110">Valeur de délai d'attente pour l'exécution de la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-110">The timeout value for the command execution.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="cd47d-111">Délégué de rappel asynchrone qui reçoit la notification de la fin de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-111">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="cd47d-112">Informations d'état.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-112">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-113">Exécute de façon asynchrone des commandes de persistance telles que <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> et <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-113">Asynchronously executes persistence commands such as <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-114">État de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-114">The state of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd47d-115">Un hôte appelle la méthode <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> pour exécuter de façon asynchrone une commande de persistance sur un handle d'instance.</span><span class="sxs-lookup"><span data-stu-id="cd47d-115">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> method to execute a persistence command against an instance handle asynchronously.</span></span> <span data-ttu-id="cd47d-116">L'hôte obtient le handle d'instance en appelant la méthode <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="cd47d-116">The host obtains the instance handle by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="cd47d-117">Le handle d'instance peut être lié à des entités qui représentent le contexte et l' objet de la commande, notamment une instance, un propriétaire d'instance ou un verrou d'instance.</span><span class="sxs-lookup"><span data-stu-id="cd47d-117">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="cd47d-118">Une seule commande à la fois peut être émise sur un handle d'instance.</span><span class="sxs-lookup"><span data-stu-id="cd47d-118">Only one command may be issued against an instance handle at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="cd47d-119">Contexte d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-119">The instance context.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="cd47d-120">Commande de persistance à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-120">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="cd47d-121">Valeur de délai d'attente pour l'exécution de la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-121">The timeout value for the command execution.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="cd47d-122">Délégué de rappel asynchrone qui reçoit la notification de la fin de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-122">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="cd47d-123">Informations d'état.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-123">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-124">Un fournisseur de persistance implémente cette méthode, qui détermine si une commande de persistance particulière peut être exécutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-124">A persistence provider implements this method, which determines whether a particular persistence command can be executed.</span>
          </span>
          <span data-ttu-id="cd47d-125">Si la commande peut être exécutée, exécute la commande de façon asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-125">If the command can be executed, executes the command asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-126">État de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-126">The state of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd47d-127">Si la commande peut être exécutée, le fournisseur de persistance appelle les méthodes pertinentes sur InstancePersistenceContext pour fournir les résultats de la commande.</span><span class="sxs-lookup"><span data-stu-id="cd47d-127">If the command can be executed, the persistence provider calls relevant methods on the InstancePersistenceContext to provide the results of the command.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="cd47d-128">Bien que cette méthode est déclarée en tant que `virtual` plutôt que `abstract`, il n’existe aucune implémentation.</span><span class="sxs-lookup"><span data-stu-id="cd47d-128">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="cd47d-129">Cette méthode doit être substituée pour fournir des fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cd47d-129">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForEvents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForEvents (handle As InstanceHandle, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="cd47d-130">Handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-130">An instance handle.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="cd47d-131">Période précédant l'expiration de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-131">The period after which the operation times out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="cd47d-132">Méthode à appeler une fois l'opération asynchrone terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-132">The method to be called after the asynchronous operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="cd47d-133">Objet contenant les informations d'état associées à l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-133">An object containing the state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-134">Commence une opération asynchrone pour écouter tous les événements déclenchés par le magasin d'instances pour un handle d'instance spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-134">Begins an asynchronous operation to listen for any events raised by the instance store for a specific instance handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-135">Retourne un objet <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-135">Returns an <see cref="T:System.IAsyncResult" /> object..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cd47d-136">Crée un handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-136">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="cd47d-137">Si DefaultInstanceOwner est défini, la valeur est automatiquement liée en tant que propriétaire d'instance du nouveau handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-137">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle () As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cd47d-138">Crée un handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-138">Creates an instance handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-139">Handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-139">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="cd47d-140">Identificateur d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-140">An instance identifier.</span>
          </span>
          <span data-ttu-id="cd47d-141">Ne doit pas avoir la valeur Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-141">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-142">Crée un handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-142">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="cd47d-143">Si DefaultInstanceOwner est défini, la valeur est automatiquement liée en tant que propriétaire d'instance du nouveau handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-143">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="cd47d-144">L'identificateur d'instance passé comme paramètre est automatiquement lié en tant qu'instance du nouveau handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-144">The instance identifier passed as a parameter is automatically bound as the new handle’s instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-145">Handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-145">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="cd47d-146">Propriétaire d'une instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-146">The owner of an instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-147">Crée un handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-147">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="cd47d-148">Si le propriétaire d'instance passé comme paramètre n'a pas la valeur Null, la valeur est automatiquement liée en tant que propriétaire d'instance du nouveau handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-148">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="cd47d-149">(Sinon, aucun propriétaire d'instance n'est lié, même si DefaultInstanceOwner est défini.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-149">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-150">Handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-150">The instance handle.</span>
          </span>
          <span data-ttu-id="cd47d-151">Une valeur Null indique que le nouveau handle ne doit pas être automatiquement lié à un propriétaire d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-151">A null value indicates that the new handle should not be automatically bound to an instance owner.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner, instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner, Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="cd47d-152">Objet InstanceOwner qui représente le propriétaire d'une instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-152">An InstanceOwner object  that represents the owner of an instance.</span>
          </span>
          <span data-ttu-id="cd47d-153">Passez Null comme valeur de ce paramètre pour indiquer que le nouveau handle ne doit pas être automatiquement lié à un propriétaire d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-153">Pass null as the value for this parameter to indicate that the new handle should not be automatically bound to an instance owner.</span>
          </span>
        </param>
        <param name="instanceId">
          <span data-ttu-id="cd47d-154">Identificateur d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-154">An instance identifier.</span>
          </span>
          <span data-ttu-id="cd47d-155">Ne doit pas avoir la valeur Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-155">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-156">Crée un handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-156">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="cd47d-157">Si le propriétaire d'instance passé comme paramètre n'a pas la valeur Null, la valeur est automatiquement liée en tant que propriétaire d'instance du nouveau handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-157">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="cd47d-158">(Sinon, aucun propriétaire d'instance n'est lié, même si DefaultInstanceOwner est défini.) L'identificateur d'instance passé comme paramètre est automatiquement lié en tant qu'instance du nouveau handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-158">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.) The instance identifier passed as a parameter is automatically bound as the new handle’s instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-159">Handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-159">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultInstanceOwner As InstanceOwner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceOwner ^ DefaultInstanceOwner { System::Runtime::DurableInstancing::InstanceOwner ^ get(); void set(System::Runtime::DurableInstancing::InstanceOwner ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd47d-160">Obtient ou définit le propriétaire d'instance par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-160">Gets or sets the default instance owner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd47d-161">Propriétaire d'instance par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-161">The default instance owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd47d-162">Certains hôtes déduisent le propriétaire d'instance à utiliser en lisant cette propriété.</span><span class="sxs-lookup"><span data-stu-id="cd47d-162">Some hosts infer the instance owner to use by reading this property.</span></span> <span data-ttu-id="cd47d-163">WorkflowApplication peut utiliser cette propriété.</span><span class="sxs-lookup"><span data-stu-id="cd47d-163">WorkflowApplication can use this property.</span></span> <span data-ttu-id="cd47d-164">WorkflowServiceHost n'utilise pas cette propriété.</span><span class="sxs-lookup"><span data-stu-id="cd47d-164">WorkflowServiceHost does not use this property.</span></span>  
  
 <span data-ttu-id="cd47d-165">La propriété DefaultInstanceOwner doit avoir la valeur Null lorsqu'elle n'est plus nécessaire.</span><span class="sxs-lookup"><span data-stu-id="cd47d-165">The DefaultInstanceOwner propery must be set to null when it is no longer necessary.</span></span> <span data-ttu-id="cd47d-166">Les objets InstanceStore peuvent ne pas être récupérés par le garbage collector si DefaultInstanceOwner n'a pas la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="cd47d-166">InstanceStore objects might not be garbage collected if DefaultInstanceOwner is not null.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="cd47d-167">Bien que cette méthode est déclarée en tant que `virtual` plutôt que `abstract`, il n’existe aucune implémentation.</span><span class="sxs-lookup"><span data-stu-id="cd47d-167">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="cd47d-168">Cette méthode doit être substituée pour fournir des fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cd47d-168">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute (result As IAsyncResult) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ EndExecute(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="cd47d-169">Résultat de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-169">The result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-170">Termine l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-170">Ends the asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-171">Objet InstanceView représentant l’état connu de l’instance une fois la commande exécutée avec succès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-171">An InstanceView object  representing the known state of the instance after the successful completion of the command.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd47d-172">Si BeginExecute a été appelé sous une transaction, cet état peut inclure des données non validées.</span><span class="sxs-lookup"><span data-stu-id="cd47d-172">If BeginExecute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="cd47d-173">Une fois la transaction validée avec succès, les données dans l’objet InstanceView peuvent être considérées comme validées.</span><span class="sxs-lookup"><span data-stu-id="cd47d-173">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool EndTryCommand (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool EndTryCommand(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function EndTryCommand (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool EndTryCommand(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="cd47d-174">Résultat de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-174">The result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-175">Termine une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-175">Ends an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-176">Une implémentation de fournisseur de persistance doit retourner False si elle ne prend pas en charge la commande passée à la méthode BeginTryCommand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-176">A persistence provider implementation should return false if it doesn’t support the command passed to the BeginTryCommand method.</span>
          </span>
          <span data-ttu-id="cd47d-177">Sinon, elle doit retourner True ou lever une exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-177">Otherwise it should return true or throw an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="cd47d-178">Bien que cette méthode est déclarée en tant que `virtual` plutôt que `abstract`, il n’existe aucune implémentation.</span><span class="sxs-lookup"><span data-stu-id="cd47d-178">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="cd47d-179">Cette méthode doit être substituée pour fournir des fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="cd47d-179">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForEvents (result As IAsyncResult) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ EndWaitForEvents(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="cd47d-180">Objet IAsyncResult donné au client par la méthode Begin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-180">An IAsyncResult object that was handed over to the client by the Begin method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-181">Termine l'opération asynchrone initiée par la méthode <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-181">Ends the asynchronous operation initiated by the <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-182">Retourne une liste d'objets <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-182">Returns a list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView Execute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ Execute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="cd47d-183">Handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-183">An instance handle.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="cd47d-184">Commande à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-184">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="cd47d-185">Valeur de délai d'attente pour l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-185">The timeout value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-186">Exécute une commande de persistance de façon synchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-186">Executes a persistence command synchronously.</span>
          </span>
          <span data-ttu-id="cd47d-187">
            <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> et <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" /> sont des exemples de commandes de persistance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-187">Examples of persistence commands are: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-188">Objet InstanceView représentant l'état connu de l'instance une fois la commande exécutée avec succès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-188">An InstanceView object representing the known state of the instance after the successful completion of the command.</span>
          </span>
          <span data-ttu-id="cd47d-189">Si Execute a été appelé sous une transaction, cet état peut inclure des données non validées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-189">If Execute was called under a transaction, this state may include uncommitted data.</span>
          </span>
          <span data-ttu-id="cd47d-190">Une fois la transaction validée avec succès, les données dans l’objet InstanceView peuvent être considérées comme validées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-190">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd47d-191">Un hôte appelle la méthode <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> pour exécuter une commande de persistance sur un handle d'instance, que l'hôte obtient en appelant la méthode <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="cd47d-191">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> method to execute a persistence command against an instance handle, which the host obtains by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="cd47d-192">Le handle d'instance peut être lié à des entités qui représentent le contexte et l' objet de la commande, notamment une instance, un propriétaire d'instance ou un verrou d'instance.</span><span class="sxs-lookup"><span data-stu-id="cd47d-192">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="cd47d-193">Une seule commande à la fois peut être émise sur un handle d'instance.</span><span class="sxs-lookup"><span data-stu-id="cd47d-193">Only one command may be issued against an instance handle at a time.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="cd47d-194">Si cette méthode est exécutée avec un <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, il créera un <xref:System.Runtime.DurableInstancing.InstanceOwner> et la lier à l’instance.</span><span class="sxs-lookup"><span data-stu-id="cd47d-194">If this method is executed with a <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, it will create an <xref:System.Runtime.DurableInstancing.InstanceOwner> and bind it to the instance.</span></span> <span data-ttu-id="cd47d-195">Cela signifie qu’aucun autre processus ne pourrez pas accéder à ce flux de travail ; Si le processus se termine, le flux de travail ne peut pas être récupérée ou exécutée.</span><span class="sxs-lookup"><span data-stu-id="cd47d-195">This means that no other process will be able to access that workflow; if the process ends, the workflow cannot be recovered or executed.</span></span> <span data-ttu-id="cd47d-196">Si ce un flux de travail est exécutée à nouveau, un <xref:System.Runtime.DurableInstancing.InstanceLockedException> sera levée.</span><span class="sxs-lookup"><span data-stu-id="cd47d-196">If such a workflow is executed again, a <xref:System.Runtime.DurableInstancing.InstanceLockedException> will be thrown.</span></span>  
>   
>  <span data-ttu-id="cd47d-197">Si <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> est ne pas utilisé, le magasin d’instances créera un fichier temporaire <xref:System.Runtime.DurableInstancing.InstanceOwner> qui sera supprimé à la fin du processus.</span><span class="sxs-lookup"><span data-stu-id="cd47d-197">If <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> is not used, the instance store will create a temporary <xref:System.Runtime.DurableInstancing.InstanceOwner> that will be deleted at the end of the process.</span></span> <span data-ttu-id="cd47d-198">Toutefois, si le processus se termine avant le point de persistance finale du flux de travail, cette exception est levée, sauf si la période de temps spécifiée dans le **HostLockRenewalPeriod** paramètre a expiré.</span><span class="sxs-lookup"><span data-stu-id="cd47d-198">However, if the process ends before the workflow’s final persistence point, this exception will be thrown, unless the period of time specified in the **HostLockRenewalPeriod** parameter has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetEvents (owner As InstanceOwner) As InstancePersistenceEvent()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ GetEvents(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstancePersistenceEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="cd47d-199">Objet <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> représentant le propriétaire d'une instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-199">An <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object representing the owner of an instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-200">Obtient tous les événements signalés liés à un objet <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-200">Gets all the signaled events bound to an <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-201">Retourne un tableau d'objets <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-201">Returns an array of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceOwners">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInstanceOwners () As InstanceOwner()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstanceOwner ^&gt; ^ GetInstanceOwners();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cd47d-202">Obtient chaque objet InstanceOwner qui est lié à un handle d'instance valide ou qui n'a pas été récupéré par le garbage collector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-202">Gets each InstanceOwner object that is bound to a valid instance handle or has not been garbage collected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-203">Propriétaire de l'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-203">The owner of the instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd47d-204">Retourne un tableau d'objets InstanceOwner.</span><span class="sxs-lookup"><span data-stu-id="cd47d-204">Returns an array of InstanceOwner objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreeInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFreeInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFreeInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle, System::Object ^ userContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="userContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">
          <span data-ttu-id="cd47d-205">Handle d'instance libéré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-205">The instance handle that was freed.</span>
          </span>
        </param>
        <param name="userContext">
          <span data-ttu-id="cd47d-206">Informations de contexte utilisateur du fournisseur de persistance retournées d'OnNewInstanceHandle, ou Null si OnNewInstanceHandle n'est pas remplacé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-206">The persistence provider’s user context information that was returned from OnNewInstanceHandle, or null if OnNewInstanceHandle is not overridden.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-207">Appelé lorsqu'un handle d'instance est libéré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-207">Invoked when an instance handle is freed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnNewInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnNewInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">
          <span data-ttu-id="cd47d-208">Handle d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-208">An instance handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-209">Appelé lorsqu'un nouveau handle d'instance est créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-209">Invoked when a new instance handle is created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-210">Objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-210">An object.</span>
          </span>
          <span data-ttu-id="cd47d-211">Cet objet de contexte utilisateur sera accessible au fournisseur de persistance lorsque des commandes sont exécutées à l’aide du handle et lorsque le handle est libéré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-211">This user context object will be available to the persistence provider when commands are executed using the handle, and when the handle is freed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetEvent">
      <MemberSignature Language="C#" Value="protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="cd47d-212">Événement de persistance signalé précédemment et devant être réinitialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-212">The persistence event that was signaled earlier and to be reset.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="cd47d-213">Propriétaire d'instance associé à l'événement de persistance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-213">The instance owner associated with the persistence event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-214">Réinitialise l'événement signalé et supprime l'événement de la liste des événements signalés gérée par le propriétaire d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-214">Resets the signaled event and removes the event from the signaled events list maintained by the instance owner.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalEvent">
      <MemberSignature Language="C#" Value="protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SignalEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SignalEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SignalEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="cd47d-215">Événement de persistance à signaler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-215">The persistence event to be signaled.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="cd47d-216">Propriétaire d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-216">The instance owner.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-217">Un magasin d'instances appelle cette méthode pour signaler un événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-217">An instance store invokes this method to signal an event.</span>
          </span>
          <span data-ttu-id="cd47d-218">Un hôte de flux de travail qui s'abonne à cet événement de persistance le reçoit et effectue une action appropriée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-218">A workflow host that subscribes for this persistence event receives it and takes an appropriate action.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="cd47d-219">Contexte d'instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-219">The instance context.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="cd47d-220">Commande à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-220">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="cd47d-221">Valeur de délai d'attente pour l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-221">Timeout value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-222">Un fournisseur de persistance implémente cette méthode, qui détermine si une commande de persistance particulière peut être exécutée et, si la commande peut être exécutée, l'exécute de façon asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-222">A persistence provider implements this method, which determines whether a particular persistence command can be executed and if the command can be executed executes it asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-223">Une implémentation de fournisseur de persistance doit retourner <see langword="false" /> si elle ne prend pas en charge la commande passée comme paramètre ; sinon, elle doit retourner <see langword="true" /> ou lever une exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-223">A persistence provider implementation should return <see langword="false" /> if it doesn’t support the command passed as a parameter; otherwise it should return <see langword="true" /> or throw an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd47d-224">Si la commande peut être exécutée, le fournisseur de persistance appelle les méthodes pertinentes sur <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> pour fournir les résultats de la commande.</span><span class="sxs-lookup"><span data-stu-id="cd47d-224">If the command can be executed, the persistence provider calls relevant methods on the <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> to provide the results of the command.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEvents (handle As InstanceHandle, timeout As TimeSpan) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ WaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="cd47d-225">Handle d'instance lié à l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-225">The instance handle that is bound to the event.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="cd47d-226">Intervalle de temps à l'issue duquel l'opération d'attente arrive à expiration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-226">The time span after which the waiting operation times out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd47d-227">Un hôte de flux de travail appelle généralement cette méthode pour attendre qu'un événement soit signalé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-227">A workflow host typically invokes this method to wait for an event to be signaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd47d-228">Liste d'objets <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd47d-228">A list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>