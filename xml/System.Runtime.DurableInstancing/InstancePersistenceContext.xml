<Type Name="InstancePersistenceContext" FullName="System.Runtime.DurableInstancing.InstancePersistenceContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b56731eed89c75526c90596c1490cb950651dccf" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53290311" /></Metadata><TypeSignature Language="C#" Value="public sealed class InstancePersistenceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InstancePersistenceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InstancePersistenceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstancePersistenceContext sealed" />
  <TypeSignature Language="F#" Value="type InstancePersistenceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f2e22-101">Représente les informations d'état d'exécution lorsqu'une commande de persistance est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="f2e22-101">Represents execution state information while a persistence command is being executed.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-102">Une instance de cette classe est passée à la méthode TryCommand des implémentations de fournisseur de persistance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-102">An instance of this class is passed to the TryCommand method of persistence provider implementations.</span></span> <span data-ttu-id="f2e22-103">Les fournisseurs de persistance utilisent cette classe pour inspecter la vue en mémoire de l'instance ainsi que pour indiquer les résultats des opérations sur le magasin externe qui peuvent affecter la vue ou d'autres éléments dans le contexte en mémoire.</span><span class="sxs-lookup"><span data-stu-id="f2e22-103">Persistence providers use this class to inspect the in-memory view of the instance as well as indicate the results of operations on the external store which may affect the view or other in-memory context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void AssociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociatedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.AssociatedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.AssociatedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f2e22-104">Identificateur de clé d'instance pour la clé associée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-104">The instance key identifier  for the key that has been associated.</span></span> <span data-ttu-id="f2e22-105">Ne doit pas avoir la valeur Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="f2e22-105">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="f2e22-106">Indique que le fournisseur de persistance a associé avec succès une clé à l'instance actuelle dans le magasin d'instances.</span><span class="sxs-lookup"><span data-stu-id="f2e22-106">Indicates that the persistence provider has successfully associated a key to the current instance in the instance store.</span></span> <span data-ttu-id="f2e22-107">L'identificateur de la clé est spécifié comme un paramètre.</span><span class="sxs-lookup"><span data-stu-id="f2e22-107">The identifier of the key is specified as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-108">La clé d'instance doit être non associée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-108">The instance key must be unassociated.</span></span> <span data-ttu-id="f2e22-109">Le handle d'instance actuel doit être lié à une instance et avoir un verrou sur cette instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-109">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginBindReclaimedLock">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBindReclaimedLock (long instanceVersion, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBindReclaimedLock (instanceVersion As Long, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBindReclaimedLock(long instanceVersion, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginBindReclaimedLock : int64 * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instancePersistenceContext.BeginBindReclaimedLock (instanceVersion, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceVersion"><span data-ttu-id="f2e22-110">Version du verrou maintenu sur l'instance, ou zéro si le fournisseur de persistance n'implémente pas de versions de verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-110">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span></span></param>
        <param name="timeout"><span data-ttu-id="f2e22-111">Délai d'attente de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f2e22-111">The timeout period for the asynchronous operation.</span></span></param>
        <param name="callback"><span data-ttu-id="f2e22-112">Méthode à appeler lorsque l'opération est terminée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-112">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="f2e22-113">Informations d'état associées à l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f2e22-113">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="f2e22-114">Commence une opération asynchrone pour lier un verrou existant sur une instance au handle d'instance actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-114">Begin an asynchronous operation to bind an existing lock on an instance to the current instance handle.</span></span> <span data-ttu-id="f2e22-115">La version du verrou existant est passée comme un paramètre.</span><span class="sxs-lookup"><span data-stu-id="f2e22-115">The version of the existing lock is passed as a parameter.</span></span></summary>
        <returns><span data-ttu-id="f2e22-116">État d'une opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f2e22-116">The status of an asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-117">Lors de la tentative d'acquisition d'un verrou, le fournisseur de persistance peut décider que l'instance actuelle est déjà verrouillée dans le magasin actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-117">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="f2e22-118">Si le lock-token correspond au lock-token du handle actuel, le fournisseur de persistance peut essayer de récupérer le verrou en inspectant sa version et en le passant à BeginBindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="f2e22-118">If the lock token matches the current handle's lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BeginBindReclaimedLock.</span></span> <span data-ttu-id="f2e22-119">Le fournisseur de persistance ne doit pas apporter de modifications à l'instance tant que le verrou n'a pas été récupéré avec succès.</span><span class="sxs-lookup"><span data-stu-id="f2e22-119">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="f2e22-120">Si aucun autre handle n'est lié au verrou, l'opération BeginBindReclaimedLock réussit et le handle actuel est lié au verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-120">If no other handle is bound to the lock, then the BeginBindReclaimedLock operation succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="f2e22-121">Sinon, BeginBindReclaimedLock ou EndBindReclaimedLock lève l'exception InstanceHandleConflictException.</span><span class="sxs-lookup"><span data-stu-id="f2e22-121">Otherwise, BeginBindReclaimedLock or EndBindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="f2e22-122">Si des commandes sont en cours sur d'autres handles, il est possible que l'opération ne s'achève pas tant que le résultat de ces commandes n'est pas obtenu pour décider si le verrou peut être récupéré.</span><span class="sxs-lookup"><span data-stu-id="f2e22-122">If commands are in progress on other handles, the operation may not complete while waiting for the outcome of those commands to decide whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="f2e22-123">Le handle d'instance actuel doit être lié à un propriétaire d'instance et à un propriétaire de verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-123">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="f2e22-124">L'instance ne doit pas être terminée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-124">The instance must not be completed.</span></span> <span data-ttu-id="f2e22-125">Le lock-token associé au propriétaire de verrou est utilisé pour identifier le propriétaire du verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-125">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="f2e22-126">Lorsqu'un verrou est lié à un handle, il le reste pour la durée de vie du handle.</span><span class="sxs-lookup"><span data-stu-id="f2e22-126">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="f2e22-127">Ni le lock-token ni la version d'instance ne peuvent être modifiés.</span><span class="sxs-lookup"><span data-stu-id="f2e22-127">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instancePersistenceContext.BeginExecute (command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="f2e22-128">Commande de persistance à exécuter.</span><span class="sxs-lookup"><span data-stu-id="f2e22-128">The persistence command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="f2e22-129">Valeur de délai d'attente pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="f2e22-129">The time-out value for the operation.</span></span></param>
        <param name="callback"><span data-ttu-id="f2e22-130">Délégué qui reçoit la notification de la réception asynchrone qu'une opération de demande exécute.</span><span class="sxs-lookup"><span data-stu-id="f2e22-130">The delegate that receives the notification of the asynchronous receive that a request operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="f2e22-131">Informations d'état.</span><span class="sxs-lookup"><span data-stu-id="f2e22-131">The state information.</span></span></param>
        <summary><span data-ttu-id="f2e22-132">Commence à exécuter une commande de persistance de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f2e22-132">Begins executing a persistence command asynchronously.</span></span></summary>
        <returns><span data-ttu-id="f2e22-133">État d'une opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f2e22-133">The status of an asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-134">Un fournisseur de persistance peut utiliser cette méthode pour exécuter des sous-commandes dans le cadre d'une commande.</span><span class="sxs-lookup"><span data-stu-id="f2e22-134">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="f2e22-135">La sous-commande sera exécutée à l'aide de BeginTryCommand, qui est une commande semblable aux commandes passées à InstanceStore.BeginExecute.</span><span class="sxs-lookup"><span data-stu-id="f2e22-135">The sub-command will be executed using BeginTryCommand, similar to commands passed to InstanceStore.BeginExecute.</span></span> <span data-ttu-id="f2e22-136">Les commandes peuvent être imbriquées, mais aucune commande ne peut exécuter plusieurs sous-commandes à la fois.</span><span class="sxs-lookup"><span data-stu-id="f2e22-136">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindAcquiredLock">
      <MemberSignature Language="C#" Value="public void BindAcquiredLock (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindAcquiredLock(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindAcquiredLock (instanceVersion As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindAcquiredLock(long instanceVersion);" />
      <MemberSignature Language="F#" Value="member this.BindAcquiredLock : int64 -&gt; unit" Usage="instancePersistenceContext.BindAcquiredLock instanceVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion"><span data-ttu-id="f2e22-137">Version du verrou acquis sur l'instance, ou zéro si le fournisseur de persistance n'implémente pas de versions de verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-137">Version of the lock acquired on the instance, or zero if the persistence provider does not implement lock versions.</span></span></param>
        <summary><span data-ttu-id="f2e22-138">Lie un verrou récemment acquis sur une instance au handle d'instance actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-138">Binds a newly acquired lock on an instance to the current instance handle.</span></span> <span data-ttu-id="f2e22-139">La version du verrou acquis est passée comme un paramètre.</span><span class="sxs-lookup"><span data-stu-id="f2e22-139">The version of the acquired lock is passed as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-140">Si un fournisseur de persistance implémente le contrôle de version du verrou, chaque fois qu'un verrou est acquis sur l'instance, la version doit être incrémentée d'une unité dans le magasin externe.</span><span class="sxs-lookup"><span data-stu-id="f2e22-140">If a persistence provider implements lock versioning, then each time a lock is acquired on the instance, the version must be incremented by one in the external store.</span></span> <span data-ttu-id="f2e22-141">La première fois que l'instance est verrouillée, la version doit être 1.</span><span class="sxs-lookup"><span data-stu-id="f2e22-141">The first time the instance is locked, the version should be 1.</span></span> <span data-ttu-id="f2e22-142">Chaque acquisition de verrou invalide le verrou précédent.</span><span class="sxs-lookup"><span data-stu-id="f2e22-142">Each lock acquisition invalidates the previous lock.</span></span> <span data-ttu-id="f2e22-143">Le handle d'instance actuel doit être lié à un propriétaire d'instance et à un propriétaire de verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-143">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="f2e22-144">L'instance ne doit pas être terminée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-144">The instance must not be completed.</span></span> <span data-ttu-id="f2e22-145">Le lock-token associé au propriétaire de verrou est utilisé pour identifier le propriétaire du verrou</span><span class="sxs-lookup"><span data-stu-id="f2e22-145">The lock token associated with the lock owner is used to identify the owner of the lock</span></span>  
  
 <span data-ttu-id="f2e22-146">Lorsqu'un verrou est lié à un handle, il le reste pour la durée de vie du handle.</span><span class="sxs-lookup"><span data-stu-id="f2e22-146">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="f2e22-147">Ni le lock-token ni la version d'instance ne peuvent être modifiés.</span><span class="sxs-lookup"><span data-stu-id="f2e22-147">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindEvent">
      <MemberSignature Language="C#" Value="public void BindEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindEvent (persistenceEvent As InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent);" />
      <MemberSignature Language="F#" Value="member this.BindEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent -&gt; unit" Usage="instancePersistenceContext.BindEvent persistenceEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent"><span data-ttu-id="f2e22-148">Objet <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> contenant des informations sur l'événement.</span><span class="sxs-lookup"><span data-stu-id="f2e22-148">An <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> object containing information about the event.</span></span></param>
        <summary><span data-ttu-id="f2e22-149">Lie <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> à un handle d'instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-149">Binds an <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> to an instance handle.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstance">
      <MemberSignature Language="C#" Value="public void BindInstance (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstance(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstance (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstance(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.BindInstance : Guid -&gt; unit" Usage="instancePersistenceContext.BindInstance instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="f2e22-150">Identificateur d'instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-150">An instance identifier.</span></span> <span data-ttu-id="f2e22-151">Ne doit pas avoir la valeur Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="f2e22-151">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="f2e22-152">Lie une instance dont l'identificateur est spécifié comme paramètre au handle d'instance actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-152">Binds an instance whose identifier is specified as a parameter to the current instance handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-153">Lorsqu'une instance est liée à un handle, elle le reste pour la durée de vie du handle.</span><span class="sxs-lookup"><span data-stu-id="f2e22-153">Once an instance is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="f2e22-154">Aucune autre instance ne peut être liée au handle.</span><span class="sxs-lookup"><span data-stu-id="f2e22-154">No other instance can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstanceOwner">
      <MemberSignature Language="C#" Value="public void BindInstanceOwner (Guid instanceOwnerId, Guid lockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstanceOwner(valuetype System.Guid instanceOwnerId, valuetype System.Guid lockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstanceOwner (instanceOwnerId As Guid, lockToken As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstanceOwner(Guid instanceOwnerId, Guid lockToken);" />
      <MemberSignature Language="F#" Value="member this.BindInstanceOwner : Guid * Guid -&gt; unit" Usage="instancePersistenceContext.BindInstanceOwner (instanceOwnerId, lockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceOwnerId" Type="System.Guid" />
        <Parameter Name="lockToken" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceOwnerId"><span data-ttu-id="f2e22-155">Identificateur pour le propriétaire d'instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-155">The identifier for the instance owner.</span></span></param>
        <param name="lockToken"><span data-ttu-id="f2e22-156">Lock-token du propriétaire d'instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-156">The lock token of the instance owner.</span></span> <span data-ttu-id="f2e22-157">Un fournisseur de persistance peut choisir d’utiliser la même valeur pour l’identificateur de propriétaire d’instance et le lock-token du propriétaire.</span><span class="sxs-lookup"><span data-stu-id="f2e22-157">A persistence provider may choose to use the same value for the instance owner identifier and the owner's lock token.</span></span></param>
        <summary><span data-ttu-id="f2e22-158">Lie un propriétaire d'instance au handle d'instance actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-158">Binds an instance owner to the current instance handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-159">Lorsqu'un propriétaire d'instance est lié à un handle, il le reste pour la durée de vie du handle.</span><span class="sxs-lookup"><span data-stu-id="f2e22-159">Once an instance owner is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="f2e22-160">Aucun autre propriétaire d'instance ne peut être lié au handle.</span><span class="sxs-lookup"><span data-stu-id="f2e22-160">No other instance owner can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindReclaimedLock">
      <MemberSignature Language="C#" Value="public void BindReclaimedLock (long instanceVersion, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindReclaimedLock (instanceVersion As Long, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindReclaimedLock(long instanceVersion, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.BindReclaimedLock : int64 * TimeSpan -&gt; unit" Usage="instancePersistenceContext.BindReclaimedLock (instanceVersion, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceVersion"><span data-ttu-id="f2e22-161">Version du verrou maintenu sur l'instance, ou zéro si le fournisseur de persistance n'implémente pas de versions de verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-161">Version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span></span></param>
        <param name="timeout"><span data-ttu-id="f2e22-162">Valeur de délai d'attente pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="f2e22-162">The time-out value for the operation.</span></span></param>
        <summary><span data-ttu-id="f2e22-163">Lie un verrou existant sur une instance au handle d'instance actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-163">Binds an existing lock on an instance to the current instance handle.</span></span> <span data-ttu-id="f2e22-164">La version du verrou existant est passée comme un paramètre.</span><span class="sxs-lookup"><span data-stu-id="f2e22-164">The version of the existing lock is passed as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-165">Lors de la tentative d'acquisition d'un verrou, le fournisseur de persistance peut décider que l'instance actuelle est déjà verrouillée dans le magasin actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-165">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="f2e22-166">Si le lock-token correspond au lock-token du handle actuel, le fournisseur de persistance peut essayer de récupérer le verrou en inspectant sa version et en le passant à BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="f2e22-166">If the lock token matches the current handle's lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BindReclaimedLock.</span></span> <span data-ttu-id="f2e22-167">Le fournisseur de persistance ne doit pas apporter de modifications à l'instance tant que le verrou n'a pas été récupéré avec succès.</span><span class="sxs-lookup"><span data-stu-id="f2e22-167">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="f2e22-168">Si aucun autre handle n'est lié au verrou, BindReclaimedLock réussit et le handle actuel est lié au verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-168">If no other handle is bound to the lock, then BindReclaimedLock succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="f2e22-169">Sinon, BindReclaimedLock lève l'exception InstanceHandleConflictException.</span><span class="sxs-lookup"><span data-stu-id="f2e22-169">Otherwise, BindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="f2e22-170">Si des commandes sont en cours sur d'autres handles, BindReclaimedLock peut se bloquer et attendre le résultat de ces commandes avant de décider si le verrou peut être récupéré.</span><span class="sxs-lookup"><span data-stu-id="f2e22-170">If commands are in progress on other handles, BindReclaimedLock may block waiting for the outcome of those commands before deciding whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="f2e22-171">Le handle d'instance actuel doit être lié à un propriétaire d'instance et à un propriétaire de verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-171">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="f2e22-172">L'instance ne doit pas être terminée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-172">The instance must not be completed.</span></span> <span data-ttu-id="f2e22-173">Le lock-token associé au propriétaire de verrou est utilisé pour identifier le propriétaire du verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-173">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="f2e22-174">Lorsqu'un verrou est lié à un handle, il le reste pour la durée de vie du handle.</span><span class="sxs-lookup"><span data-stu-id="f2e22-174">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="f2e22-175">Ni le lock-token ni la version d'instance ne peuvent être modifiés.</span><span class="sxs-lookup"><span data-stu-id="f2e22-175">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstance">
      <MemberSignature Language="C#" Value="public void CompletedInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstance();" />
      <MemberSignature Language="F#" Value="member this.CompletedInstance : unit -&gt; unit" Usage="instancePersistenceContext.CompletedInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2e22-176">Indique que le fournisseur de persistance a marqué avec succès l'instance actuelle comme étant terminée dans le magasin d'instances.</span><span class="sxs-lookup"><span data-stu-id="f2e22-176">Indicates that the persistence provider has successfully marked the current instance as complete in the instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-177">Le handle d'instance actuel doit être lié à une instance et avoir un verrou sur cette instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-177">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="f2e22-178">L'instance doit être initialisée et ne doit pas être déjà terminée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-178">The instance must be initialized and not be already completed.</span></span> <span data-ttu-id="f2e22-179">(Une instance est initialisée si un jeu de données d'instance n'a jamais été persistant sur l'instance.) Toutes les clés associées à l'instance doivent être terminées.</span><span class="sxs-lookup"><span data-stu-id="f2e22-179">(An instance is initialized if a set of instance data has ever been persisted to it.) All of the keys associated to the instance must be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstanceKey">
      <MemberSignature Language="C#" Value="public void CompletedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.CompletedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.CompletedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f2e22-180">Identificateur de clé d'instance pour la clé terminée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-180">The instance key identifier for the key that has been completed.</span></span> <span data-ttu-id="f2e22-181">Ne doit pas avoir la valeur Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="f2e22-181">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="f2e22-182">Indique que le fournisseur de persistance a marqué avec succès une clé comme terminée dans le magasin externe.</span><span class="sxs-lookup"><span data-stu-id="f2e22-182">Indicates that the persistence provider has successfully marked a key as complete in the external store.</span></span> <span data-ttu-id="f2e22-183">L'identificateur de la clé est spécifié comme un paramètre.</span><span class="sxs-lookup"><span data-stu-id="f2e22-183">The identifier of the key is specified as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-184">Le handle d'instance actuel doit être lié à une instance et avoir un verrou sur cette instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-184">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="f2e22-185">La clé d'instance doit être associée à l'instance actuelle et ne doit pas être déjà terminée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-185">The instance key must be associated to the current instance and not be already completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindReclaimedLockException">
      <MemberSignature Language="C#" Value="public Exception CreateBindReclaimedLockException (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception CreateBindReclaimedLockException(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBindReclaimedLockException (instanceVersion As Long) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ CreateBindReclaimedLockException(long instanceVersion);" />
      <MemberSignature Language="F#" Value="member this.CreateBindReclaimedLockException : int64 -&gt; Exception" Usage="instancePersistenceContext.CreateBindReclaimedLockException instanceVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion"><span data-ttu-id="f2e22-186">Version du verrou maintenu sur l'instance, ou zéro si le fournisseur de persistance n'implémente pas de versions de verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-186">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span></span></param>
        <summary><span data-ttu-id="f2e22-187">Crée une instance d'une exception qui peut être levée depuis TryCommand pour déclencher le comportement BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="f2e22-187">Creates an instance of an exception which can be thrown from TryCommand to trigger BindReclaimedLock behavior.</span></span></summary>
        <returns><span data-ttu-id="f2e22-188">Exception.</span><span class="sxs-lookup"><span data-stu-id="f2e22-188">An exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-189">Exemple de code :</span><span class="sxs-lookup"><span data-stu-id="f2e22-189">Sample code:</span></span>  
  
```  
  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    throw context.CreateBindReclaimedLockException(5);  
}  
is equivalent to  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    context.BindReclaimedLock(5, timeout);  
    throw new OperationCanceledException();  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBindReclaimedLock">
      <MemberSignature Language="C#" Value="public void EndBindReclaimedLock (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndBindReclaimedLock(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndBindReclaimedLock (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndBindReclaimedLock(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndBindReclaimedLock : IAsyncResult -&gt; unit" Usage="instancePersistenceContext.EndBindReclaimedLock result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="f2e22-190">Résultat de l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f2e22-190">The result of the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="f2e22-191">Termine l'opération asynchrone démarrée par la méthode <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-191">Ends the asynchronous operation started by the <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public void EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndExecute (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; unit" Usage="instancePersistenceContext.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="f2e22-192">État d'une opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f2e22-192">The status of an asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="f2e22-193">Termine l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="f2e22-193">Ends the asynchronous operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (command As InstancePersistenceCommand, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; unit" Usage="instancePersistenceContext.Execute (command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="f2e22-194">Commande de persistance à exécuter.</span><span class="sxs-lookup"><span data-stu-id="f2e22-194">The persistence command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="f2e22-195">Valeur de délai d'attente pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="f2e22-195">The time-out value for the operation.</span></span></param>
        <summary><span data-ttu-id="f2e22-196">Exécute une commande de persistance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-196">Executes a persistence command.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-197">Un fournisseur de persistance peut utiliser cette méthode pour exécuter des sous-commandes dans le cadre d'une commande.</span><span class="sxs-lookup"><span data-stu-id="f2e22-197">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="f2e22-198">La sous-commande sera exécutée à l'aide de TryCommand, qui est une commande semblable aux commandes passées à InstanceStore.Execute.</span><span class="sxs-lookup"><span data-stu-id="f2e22-198">The sub-command will be executed using TryCommand, similar to commands passed to InstanceStore.Execute.</span></span> <span data-ttu-id="f2e22-199">Les commandes peuvent être imbriquées, mais aucune commande ne peut exécuter plusieurs sous-commandes à la fois.</span><span class="sxs-lookup"><span data-stu-id="f2e22-199">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle InstanceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceHandle InstanceHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceHandle As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceHandle ^ InstanceHandle { System::Runtime::DurableInstancing::InstanceHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceHandle : System.Runtime.DurableInstancing.InstanceHandle" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e22-200">Obtient le handle d'instance actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-200">Gets the current instance handle.</span></span></summary>
        <value><span data-ttu-id="f2e22-201">Handle d'instance actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-201">The current instance handle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceVersion">
      <MemberSignature Language="C#" Value="public long InstanceVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceVersion As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceVersion { long get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceVersion : int64" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e22-202">Obtient la version du verrou maintenu sur l'instance actuelle par le handle d'instance actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-202">Gets the version of the lock held on the current instance by the current instance handle.</span></span></summary>
        <value><span data-ttu-id="f2e22-203">La version du verrou d’instance lié au handle d’instance actuel, ou -1 si le handle n’est pas lié à un verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-203">The version of the instance lock bound to the current instance handle, or -1 if the handle isn't bound to a lock.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-204">Le fournisseur de persistance doit comparer cette valeur à la version du verrou maintenu sur une instance dans le magasin d'instances lorsqu'une opération qui requiert un verrou est effectuée (par exemple, la persistance de données d'instance) avec un handle lié au verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-204">The persistence provider should check this value against the lock version of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="f2e22-205">Si la version de verrou ne correspond pas, la commande doit échouer instancelocklostexception.</span><span class="sxs-lookup"><span data-stu-id="f2e22-205">If the lock version doesn't match, the command should fail with InstanceLockLostException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceView">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView InstanceView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceView InstanceView" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceView As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceView ^ InstanceView { System::Runtime::DurableInstancing::InstanceView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceView : System.Runtime.DurableInstancing.InstanceView" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e22-206">Obtient l'objet de vue d'instance qui représente l'état en mémoire de l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="f2e22-206">Gets the instance view object that represents the in-memory state of the current instance.</span></span> <span data-ttu-id="f2e22-207">Cette vue reflète les mises à jour telles qu'effectuées par la commande en cours.</span><span class="sxs-lookup"><span data-stu-id="f2e22-207">This view reflects updates as they are made by the command in progress.</span></span></summary>
        <value><span data-ttu-id="f2e22-208">Objet de vue d'instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-208">The instance view object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadedInstance">
      <MemberSignature Language="C#" Value="public void LoadedInstance (System.Runtime.DurableInstancing.InstanceState state, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadedInstance(valuetype System.Runtime.DurableInstancing.InstanceState state, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadedInstance (state As InstanceState, instanceData As IDictionary(Of XName, InstanceValue), instanceMetadata As IDictionary(Of XName, InstanceValue), associatedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)), completedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadedInstance(System::Runtime::DurableInstancing::InstanceState state, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceData, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ associatedInstanceKeyMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ completedInstanceKeyMetadata);" />
      <MemberSignature Language="F#" Value="member this.LoadedInstance : System.Runtime.DurableInstancing.InstanceState * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * System.Collections.Generic.IDictionary&lt;Guid, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt;&gt; * System.Collections.Generic.IDictionary&lt;Guid, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt;&gt; -&gt; unit" Usage="instancePersistenceContext.LoadedInstance (state, instanceData, instanceMetadata, associatedInstanceKeyMetadata, completedInstanceKeyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Runtime.DurableInstancing.InstanceState" />
        <Parameter Name="instanceData" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="instanceMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="associatedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
        <Parameter Name="completedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="f2e22-209">Informations d'état de l'instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-209">The instance state information.</span></span></param>
        <param name="instanceData"><span data-ttu-id="f2e22-210">Données d'instance sous forme d'un dictionnaire d'objets <see cref="T:System.Xml.Linq.XName" /> et <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-210">The instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="instanceMetadata"><span data-ttu-id="f2e22-211">Métadonnées d'instance sous forme d'une collection d'objets <see cref="T:System.Xml.Linq.XName" /> et <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-211">Instance metadata as a collection of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="associatedInstanceKeyMetadata"><span data-ttu-id="f2e22-212">Métadonnées de clé d'instance associées sous forme d'un dictionnaire de métadonnées d'identificateur d'instance et de clé d'instance, c'est-à-dire un dictionnaire d'objets <see cref="T:System.Xml.Linq.XName" /> et <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-212">Associated instance key metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="completedInstanceKeyMetadata"><span data-ttu-id="f2e22-213">Métadonnées d'instance terminées sous forme d'un dictionnaire de métadonnées d'identificateur d'instance et de clé d'instance, c'est-à-dire un dictionnaire d'objets <see cref="T:System.Xml.Linq.XName" /> et <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-213">Completed instance metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <summary><span data-ttu-id="f2e22-214">Indique que le fournisseur de persistance a récupéré avec succès l'instance actuelle du magasin d'instances.</span><span class="sxs-lookup"><span data-stu-id="f2e22-214">Indicates that the persistence provider has successfully retrieved the current instance from the instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-215">Le handle d'instance actuel doit être lié à une instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-215">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="f2e22-216">Si le handle d'instance est lié à un verrou ou si l'instance chargée est marquée comme terminée, les données chargées sont considérées cohérentes ; dans le cas contraire, elles sont considérées incertaines.</span><span class="sxs-lookup"><span data-stu-id="f2e22-216">If the instance handle is bound to a lock or the loaded instance is marked as complete, the loaded data is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockToken">
      <MemberSignature Language="C#" Value="public Guid LockToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid LockToken" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LockToken As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid LockToken { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.LockToken : Guid" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e22-217">Obtient le lock-token du propriétaire d'instance lié au handle d'instance actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-217">Gets the lock token of the instance owner bound to the current instance handle.</span></span></summary>
        <value><span data-ttu-id="f2e22-218">Lock-token lié au handle d’instance actuel, ou <see cref="F:System.Guid.Empty" /> si le handle n’est pas lié à un propriétaire d’instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-218">The lock token bound to the current instance handle, or <see cref="F:System.Guid.Empty" /> if the handle isn't bound to an instance owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-219">Le fournisseur de persistance doit comparer cette valeur au lock-token du verrou maintenu sur une instance dans le magasin d'instances lorsqu'une opération qui requiert un verrou est effectuée (par exemple, la persistance de données d'instance) avec un handle lié au verrou.</span><span class="sxs-lookup"><span data-stu-id="f2e22-219">The persistence provider should check this value against the lock token of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="f2e22-220">Si le lock-token ne correspond pas, la commande doit échouer instancelocklostexception.</span><span class="sxs-lookup"><span data-stu-id="f2e22-220">If the lock token doesn't match, the command should fail with InstanceLockLostException.</span></span>  
  
 <span data-ttu-id="f2e22-221">Le fournisseur de persistance doit utiliser cette valeur comme lock-token lors de l'acquisition d'un nouveau verrou sur une instance (par exemple, pour rendre persistantes des données d'instance à l'aide d'un handle qui n'est pas encore lié à un verrou).</span><span class="sxs-lookup"><span data-stu-id="f2e22-221">The persistence provider should use this value as the lock token when acquiring a new lock on an instance (such as persisting instance data using a handle not already bound to a lock).</span></span> <span data-ttu-id="f2e22-222">Si l'instance est déjà verrouillée dans le magasin d'instances et le lock-token correspond à ce lock-token, le fournisseur de persistance peut essayer de récupérer l'instance à l'aide de BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="f2e22-222">If the instance is already locked in the instance store and the lock token matches this lock token, the persistence provider can attempt to reclaim the instance using BindReclaimedLock.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedInstance">
      <MemberSignature Language="C#" Value="public void PersistedInstance (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PersistedInstance(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PersistedInstance (data As IDictionary(Of XName, InstanceValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PersistedInstance(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.PersistedInstance : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; -&gt; unit" Usage="instancePersistenceContext.PersistedInstance data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="f2e22-223">Données d'instance sous forme d'un dictionnaire d'objets <see cref="T:System.Xml.Linq.XName" /> et <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-223">Instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <summary><span data-ttu-id="f2e22-224">Indique que le fournisseur de persistance a réussi à rendre persistant un jeu de données d'instance sur le magasin d'instances.</span><span class="sxs-lookup"><span data-stu-id="f2e22-224">Indicates that the persistence provider has successfully persisted a set of instance data to the instance store.</span></span> <span data-ttu-id="f2e22-225">Cela a pour effet d’initialiser l’instance, si elle ne l’était pas déjà.</span><span class="sxs-lookup"><span data-stu-id="f2e22-225">This has the effect of initializing the instance if it wasn't already.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-226">Le handle d'instance actuel doit être lié à une instance et avoir un verrou sur cette instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-226">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="f2e22-227">Chaque jeu de données d'instance remplace complètement le jeu précédent.</span><span class="sxs-lookup"><span data-stu-id="f2e22-227">Each set of instance data completely replaces the previous set.</span></span> <span data-ttu-id="f2e22-228">Le jeu de données d’instance peut être null, cela revient vide.</span><span class="sxs-lookup"><span data-stu-id="f2e22-228">The set of instance data may be null - this is the same as empty.</span></span> <span data-ttu-id="f2e22-229">Le fait de rendre persistant un jeu de données d'instance vide supprime le jeu de données d'instance existant.</span><span class="sxs-lookup"><span data-stu-id="f2e22-229">Persisting a null set of instance data deletes the existing set of instance data.</span></span> <span data-ttu-id="f2e22-230">(Le fait de rendre persistant un jeu de données d'instance n'a aucun effet sur les métadonnées d'instance.)</span><span class="sxs-lookup"><span data-stu-id="f2e22-230">(Persisting a set of instance data has no effect on instance metadata.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueriedInstanceStore">
      <MemberSignature Language="C#" Value="public void QueriedInstanceStore (System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueriedInstanceStore(class System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueriedInstanceStore (queryResult As InstanceStoreQueryResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueriedInstanceStore(System::Runtime::DurableInstancing::InstanceStoreQueryResult ^ queryResult);" />
      <MemberSignature Language="F#" Value="member this.QueriedInstanceStore : System.Runtime.DurableInstancing.InstanceStoreQueryResult -&gt; unit" Usage="instancePersistenceContext.QueriedInstanceStore queryResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryResult" Type="System.Runtime.DurableInstancing.InstanceStoreQueryResult" />
      </Parameters>
      <Docs>
        <param name="queryResult"><span data-ttu-id="f2e22-231">Résultats d'une requête sur un magasin d'instances.</span><span class="sxs-lookup"><span data-stu-id="f2e22-231">The results of a query against an instance store.</span></span></param>
        <summary><span data-ttu-id="f2e22-232">Ajoute le <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> passé comme paramètre à une liste d'objets <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> dans <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-232">Adds the <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> passed as a parameter to a list of <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> objects in an <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceKeyMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceKeyMetadata (Guid key, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceKeyMetadata(valuetype System.Guid key, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceKeyMetadata (key As Guid, metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceKeyMetadata(Guid key, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceKeyMetadata : Guid * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceKeyMetadata (key, metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f2e22-233">Identificateur de clé d'instance de la clé dont les métadonnées ont été lues.</span><span class="sxs-lookup"><span data-stu-id="f2e22-233">The instance key identifier for the key whose metadata was read.</span></span> <span data-ttu-id="f2e22-234">Ne doit pas avoir la valeur Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="f2e22-234">Must not be Guid.Empty.</span></span></param>
        <param name="metadata"><span data-ttu-id="f2e22-235">Métadonnées sous forme d'un dictionnaire d'objets <see cref="T:System.Xml.Linq.XName" /> et <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-235">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="complete"><span data-ttu-id="f2e22-236"><see langword="true" /> si les métadonnées représentent toutes les métadonnées associées à la clé d’instance ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-236"><see langword="true" /> if the metadata represents all of the metadata associated to the instance key; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f2e22-237">Indique que le fournisseur de persistance a lu avec succès une partie des métadonnées de clé d'instance d'une clé associée à l'instance actuelle du magasin d'instances.</span><span class="sxs-lookup"><span data-stu-id="f2e22-237">Indicates that the persistence provider has successfully read some instance key metadata for a key associated to the current instance from the instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-238">Le handle d'instance actuel doit être lié à une instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-238">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="f2e22-239">Si le handle d'instance est lié à un verrou ou si l'instance actuelle est marquée comme terminée, les métadonnées sont considérées cohérentes ; dans le cas contraire, elles sont considérées incertaines.</span><span class="sxs-lookup"><span data-stu-id="f2e22-239">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceMetadata : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceMetadata (metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="f2e22-240">Métadonnées sous forme d'un dictionnaire d'objets <see cref="T:System.Xml.Linq.XName" /> et <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-240">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="complete"><span data-ttu-id="f2e22-241"><see langword="true" /> si les métadonnées représentent toutes les métadonnées associées à l’instance ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-241"><see langword="true" /> if the metadata represents all of the metadata associated to the instance; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f2e22-242">Indique que le fournisseur de persistance a lu avec succès une partie des métadonnées de l'instance actuelle du magasin d'instances.</span><span class="sxs-lookup"><span data-stu-id="f2e22-242">Indicates that the persistence provider has successfully read some instance metadata for the current instance from the instance store.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceOwnerMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceOwnerMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceOwnerMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceOwnerMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceOwnerMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceOwnerMetadata : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceOwnerMetadata (metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="f2e22-243">Dictionnaire d'objets <see cref="T:System.Xml.Linq.XName" /> et <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-243">The dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="complete"><span data-ttu-id="f2e22-244">Valeur à utiliser pour spécifier si la cohérence doit avoir la valeur <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> ou <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span><span class="sxs-lookup"><span data-stu-id="f2e22-244">The value to specify whether the consistency to be set to <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> or <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span></span></param>
        <summary><span data-ttu-id="f2e22-245">Définit les métadonnées de propriétaire d'instance à l'aide des données passées dans le paramètre.</span><span class="sxs-lookup"><span data-stu-id="f2e22-245">Sets the instance owner metadata using the data passed in the parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-246">Le handle d'instance actuel doit être lié à une instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-246">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="f2e22-247">Si le handle d'instance est lié à un verrou ou si l'instance actuelle est marquée comme terminée, les métadonnées sont considérées cohérentes ; dans le cas contraire, elles sont considérées incertaines.</span><span class="sxs-lookup"><span data-stu-id="f2e22-247">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCancellationHandler">
      <MemberSignature Language="C#" Value="public void SetCancellationHandler (Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCancellationHandler(class System.Action`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCancellationHandler (cancellationHandler As Action(Of InstancePersistenceContext))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCancellationHandler(Action&lt;System::Runtime::DurableInstancing::InstancePersistenceContext ^&gt; ^ cancellationHandler);" />
      <MemberSignature Language="F#" Value="member this.SetCancellationHandler : Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt; -&gt; unit" Usage="instancePersistenceContext.SetCancellationHandler cancellationHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationHandler" Type="System.Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt;" />
      </Parameters>
      <Docs>
        <param name="cancellationHandler"><span data-ttu-id="f2e22-248">Référence à une fonction à appeler.</span><span class="sxs-lookup"><span data-stu-id="f2e22-248">The reference to a function to be called.</span></span></param>
        <summary><span data-ttu-id="f2e22-249">Définit le gestionnaire d'annulation à appeler lorsque l'annulation d'une opération est demandée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-249">Sets the cancellation handler to be called when the cancel of an operation is requested.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-250">Si le gestionnaire d'annulation est appelé, le fournisseur de persistance doit annuler toutes les opérations en attente et lever l'exception OperationCanceledException depuis TryCommand pour indiquer que la commande de persistance a été interrompue avant d'avoir été effectuée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-250">If the cancellation handler is called, the persistence provider should cancel all pending operations and throw OperationCanceledException from TryCommand to indicate that the persistence command was interrupted before it could be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnassociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void UnassociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnassociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnassociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnassociatedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.UnassociatedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.UnassociatedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f2e22-251">Identificateur de clé d'instance pour la clé dissociée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-251">The instance key identifier for the key that has been unassociated.</span></span> <span data-ttu-id="f2e22-252">Ne doit pas avoir la valeur Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="f2e22-252">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="f2e22-253">Indique que le fournisseur de persistance a dissocié avec succès une clé de l'instance actuelle dans le magasin d'instances.</span><span class="sxs-lookup"><span data-stu-id="f2e22-253">Indicates that the persistence provider has successfully disassociated a key from the current instance in the instance store.</span></span> <span data-ttu-id="f2e22-254">L'identificateur de la clé est spécifié comme un paramètre.</span><span class="sxs-lookup"><span data-stu-id="f2e22-254">The identifier of the key is specified as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-255">Le handle d'instance actuel doit être lié à une instance et avoir un verrou sur cette instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-255">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="f2e22-256">La clé d'instance doit être associée à l'instance actuelle et doit être marquée comme terminée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-256">The instance key must be associated to the current instance and must be marked complete.</span></span> <span data-ttu-id="f2e22-257">L'instance actuelle ne doit pas être marquée comme terminée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-257">The current instance must not be marked complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserContext">
      <MemberSignature Language="C#" Value="public object UserContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserContext { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserContext : obj" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e22-258">Obtient les informations de contexte d'utilisateur jointes au handle d'instance actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-258">Gets the user context information attached to the current instance handle.</span></span></summary>
        <value><span data-ttu-id="f2e22-259">Informations sur le contexte utilisateur.</span><span class="sxs-lookup"><span data-stu-id="f2e22-259">The user context information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-260">L'objet est celui retourné depuis InstanceStore.OnNewInstanceHandle pour le handle d'instance actuel.</span><span class="sxs-lookup"><span data-stu-id="f2e22-260">The object is the one that is returned from InstanceStore.OnNewInstanceHandle for the current instance handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceKeyMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceKeyMetadataValue (Guid key, System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceKeyMetadataValue(valuetype System.Guid key, class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceKeyMetadataValue (key As Guid, name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceKeyMetadataValue(Guid key, System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceKeyMetadataValue : Guid * System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceKeyMetadataValue (key, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f2e22-261">Identificateur de clé d'instance de la clé.</span><span class="sxs-lookup"><span data-stu-id="f2e22-261">The instance key identifier for the key.</span></span> <span data-ttu-id="f2e22-262">Ne doit pas avoir la valeur Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="f2e22-262">Must not be Guid.Empty.</span></span></param>
        <param name="name"><span data-ttu-id="f2e22-263">Nom de la propriété de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="f2e22-263">The name of the metadata property.</span></span></param>
        <param name="value"><span data-ttu-id="f2e22-264">Valeur de la propriété de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="f2e22-264">The value of the metadata property.</span></span></param>
        <summary><span data-ttu-id="f2e22-265">Indique que le fournisseur de persistance a écrit avec succès une valeur de métadonnées pour une clé d'instance associée à l'instance actuelle dans le magasin d'instances</span><span class="sxs-lookup"><span data-stu-id="f2e22-265">Indicates that the persistence provider has successfully written a metadata value for an instance key that is associated with the current instance to the instance store</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-266">Le handle d'instance actuel doit être lié à une instance et avoir un verrou sur cette instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-266">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="f2e22-267">La clé d'instance doit être associée à l'instance actuelle et ne doit pas être terminée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-267">The instance key must be associated with the current instance and must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceMetadataValue : System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceMetadataValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f2e22-268">Nom de la propriété de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="f2e22-268">The name of the metadata property.</span></span></param>
        <param name="value"><span data-ttu-id="f2e22-269">Valeur de la propriété de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="f2e22-269">The value of the metadata property.</span></span></param>
        <summary><span data-ttu-id="f2e22-270">Indique que le fournisseur de persistance a écrit avec succès une valeur de métadonnées pour l'instance actuelle dans le magasin d'instances externe.</span><span class="sxs-lookup"><span data-stu-id="f2e22-270">Indicates that the persistence provider has successfully written a metadata value for the current instance to the external instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-271">Le handle d'instance actuel doit être lié à une instance et avoir un verrou sur cette instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-271">The current instance handle must be bound to an instance as well as has a lock on that instance.</span></span> <span data-ttu-id="f2e22-272">L'instance ne doit pas être terminée.</span><span class="sxs-lookup"><span data-stu-id="f2e22-272">The instance must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceOwnerMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceOwnerMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceOwnerMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceOwnerMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceOwnerMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceOwnerMetadataValue : System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceOwnerMetadataValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f2e22-273">Nom de la propriété de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="f2e22-273">The name of the metadata property.</span></span></param>
        <param name="value"><span data-ttu-id="f2e22-274">Valeur de la propriété de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="f2e22-274">The value of the metadata property.</span></span></param>
        <summary><span data-ttu-id="f2e22-275">Indique que le fournisseur de persistance a écrit avec succès une valeur de métadonnées pour le propriétaire de l'instance actuelle dans le magasin d'instances.</span><span class="sxs-lookup"><span data-stu-id="f2e22-275">Indicates that the persistence provider has successfully written a metadata value for the current instance owner to the instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e22-276">Le handle d'instance actuel doit être lié à un propriétaire d'instance.</span><span class="sxs-lookup"><span data-stu-id="f2e22-276">The current instance handle must be bound to an instance owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>