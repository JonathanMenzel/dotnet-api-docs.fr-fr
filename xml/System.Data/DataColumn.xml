<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58edc1bb46a57035950cbd411ffd6b3c6877327a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37670935" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type DataColumn = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eb533-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb533-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-102">Le <xref:System.Data.DataColumn> est le bloc de construction fondamental pour la création du schéma d’un <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="eb533-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="eb533-103">Vous générez le schéma en ajoutant un ou plusieurs <xref:System.Data.DataColumn> des objets sur le <xref:System.Data.DataColumnCollection>.</span><span class="sxs-lookup"><span data-stu-id="eb533-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="eb533-104">Pour plus d’informations, consultez [Ajout de colonnes à un DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="eb533-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="eb533-105">Chaque <xref:System.Data.DataColumn> a un <xref:System.Data.DataColumn.DataType%2A> propriété qui détermine le type de données le <xref:System.Data.DataColumn> contient.</span><span class="sxs-lookup"><span data-stu-id="eb533-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="eb533-106">Par exemple, vous pouvez restreindre le type de données pour les entiers, chaînes ou des décimales.</span><span class="sxs-lookup"><span data-stu-id="eb533-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="eb533-107">Étant donné que les données contenues par la <xref:System.Data.DataTable> est généralement fusionnée dans sa source de données d’origine, vous devez faire correspondre les types de données à ceux de la source de données.</span><span class="sxs-lookup"><span data-stu-id="eb533-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="eb533-108">Pour plus d’informations, consultez [mappages de Type de données dans ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span><span class="sxs-lookup"><span data-stu-id="eb533-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="eb533-109">Propriétés, telles que <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, et <xref:System.Data.DataColumn.ReadOnly%2A> imposent des restrictions à l’entrée et la mise à jour de données, tout en aidant à garantir l’intégrité des données.</span><span class="sxs-lookup"><span data-stu-id="eb533-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="eb533-110">Vous pouvez également utiliser le <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, et <xref:System.Data.DataColumn.AutoIncrementStep%2A> propriétés qui contrôlent la génération automatique de données.</span><span class="sxs-lookup"><span data-stu-id="eb533-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="eb533-111">Pour plus d’informations sur <xref:System.Data.DataColumn.AutoIncrement%2A> colonnes, consultez [création des colonnes AutoIncrement](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span><span class="sxs-lookup"><span data-stu-id="eb533-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="eb533-112">Pour plus d’informations, consultez [définition des clés primaires](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="eb533-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="eb533-113">Vous pouvez également vous assurer que les valeurs d’un <xref:System.Data.DataColumn> sont uniques en créant un <xref:System.Data.UniqueConstraint> et en l’ajoutant à la <xref:System.Data.ConstraintCollection> de la <xref:System.Data.DataTable> auquel le <xref:System.Data.DataColumn> appartient.</span><span class="sxs-lookup"><span data-stu-id="eb533-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="eb533-114">Pour plus d’informations, consultez [contraintes de DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span><span class="sxs-lookup"><span data-stu-id="eb533-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="eb533-115">Pour créer une relation entre <xref:System.Data.DataColumn> créer des objets, un <xref:System.Data.DataRelation> de l’objet et l’ajouter à la <xref:System.Data.DataRelationCollection> d’un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="eb533-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="eb533-116">Vous pouvez utiliser la <xref:System.Data.DataColumn.Expression%2A> propriété de la <xref:System.Data.DataColumn> pour calculer les valeurs dans une colonne de l’objet, ou créer une colonne agrégat.</span><span class="sxs-lookup"><span data-stu-id="eb533-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="eb533-117">Pour plus d’informations, consultez [création de colonnes d’Expression](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span><span class="sxs-lookup"><span data-stu-id="eb533-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-118">L’exemple suivant crée un <xref:System.Data.DataTable> avec plusieurs <xref:System.Data.DataColumn> objets.</span><span class="sxs-lookup"><span data-stu-id="eb533-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="eb533-119">Ce type est sécurisé pour les opérations de lecture multithreads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb533-119">This type is safe for multithreaded read operations.</span>
      </span>
      <span data-ttu-id="eb533-120">Vous devez synchroniser des opérations d’écriture.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb533-120">You must synchronize any write operations.</span>
      </span>
    </threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-121">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-121">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb533-122">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-122">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-123">Lors de la création, un <xref:System.Data.DataColumn> objet n’a aucune valeur par défaut <xref:System.Data.DataColumn.ColumnName%2A> ou <xref:System.Data.DataColumn.Caption%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb533-123">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="eb533-124">Lorsque vous ajoutez à un <xref:System.Data.DataColumnCollection>, un nom par défaut (« Column1 », « Column2 » et ainsi de suite) sera généré si un nom n’a pas été affecté à la <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb533-124">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-125">L’exemple suivant crée un nouveau <xref:System.Data.DataColumn>, définit différentes propriétés et l’ajoute à un <xref:System.Data.DataColumnCollection> pour le <xref:System.Data.DataTable> objet.</span><span class="sxs-lookup"><span data-stu-id="eb533-125">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn columnName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="eb533-126">A string that represents the name of the column to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-126">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="eb533-127">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-127">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb533-128">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-128">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-129">Par défaut, le nom spécifique à une colonne devient la <xref:System.Data.DataColumn.Caption%2A> valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="eb533-129">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-130">L’exemple suivant crée un nouveau <xref:System.Data.DataColumn> avec un <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb533-130">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="eb533-131">A string that represents the name of the column to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-131">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="eb533-132">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-132">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="eb533-133">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-133">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb533-134">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-134">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb533-135">L’exemple suivant crée un nouveau <xref:System.Data.DataColumn> avec un <xref:System.Data.DataColumn.ColumnName%2A> et <xref:System.Data.DataColumn.DataType%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb533-135">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb533-136">No <paramref name="dataType" /> was specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-136">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="eb533-137">A string that represents the name of the column to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-137">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="eb533-138">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-138">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="eb533-139">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-139">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="eb533-140">The expression used to create this column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-140">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="eb533-141">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-141">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb533-142">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-142">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb533-143">L’exemple suivant crée une colonne calculée.</span><span class="sxs-lookup"><span data-stu-id="eb533-143">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb533-144">No <paramref name="dataType" /> was specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-144">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string * System.Data.MappingType -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="eb533-145">A string that represents the name of the column to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-145">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="eb533-146">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-146">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="eb533-147">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-147">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="eb533-148">The expression used to create this column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-148">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="eb533-149">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-149">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="eb533-150">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-150">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb533-151">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-151">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-152">Le `type` argument définit le <xref:System.Data.DataColumn.ColumnMapping%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="eb533-152">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="eb533-153">La propriété spécifie comment un <xref:System.Data.DataColumn> est mappé si un <xref:System.Data.DataSet> est transformé en un document XML.</span><span class="sxs-lookup"><span data-stu-id="eb533-153">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="eb533-154">Par exemple, si la colonne est nommée « Pnom », et la valeur qu’il contient est « Bob », et `type` a la valeur `MappingType.Attribute`, l’élément XML se présente comme suit :</span><span class="sxs-lookup"><span data-stu-id="eb533-154">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="eb533-155">\<Nom fName = « Bob » / ></span><span class="sxs-lookup"><span data-stu-id="eb533-155">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="eb533-156">Pour plus d’informations sur la façon dont les colonnes sont mappées aux éléments ou attributs, consultez le <xref:System.Data.DataColumn.ColumnMapping%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="eb533-156">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-157">L’exemple suivant construit une colonne calculée.</span><span class="sxs-lookup"><span data-stu-id="eb533-157">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb533-158">No <paramref name="dataType" /> was specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-158">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDBNull : bool with get, set" Usage="System.Data.DataColumn.AllowDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-159">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-159">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-160">
            <see langword="true" /> Si les valeurs de valeurs null sont autorisées ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-160">
              <see langword="true" /> if null values values are allowed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb533-161">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-161">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb533-162">L’exemple suivant crée un nouveau <xref:System.Data.DataColumn> et définit ses <xref:System.Data.DataColumn.AllowDBNull%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="eb533-162">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrement : bool with get, set" Usage="System.Data.DataColumn.AutoIncrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-163">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-163">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-164">
            <see langword="true" /> Si la valeur de la colonne est automatiquement incrémentée ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-164">
              <see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb533-165">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-166">Si le type de cette colonne n’est pas Int16, Int32 ou Int64 lorsque cette propriété est définie, le <xref:System.Data.DataColumn.DataType%2A> propriété est convertie en Int32.</span><span class="sxs-lookup"><span data-stu-id="eb533-166">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="eb533-167">Une exception est générée s’il s’agit d’une colonne calculée.</span><span class="sxs-lookup"><span data-stu-id="eb533-167">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="eb533-168">Le <xref:System.Data.DataColumn.Expression%2A> propriété est définie.</span><span class="sxs-lookup"><span data-stu-id="eb533-168">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="eb533-169">La valeur incrémentée est utilisée uniquement si la valeur de la ligne pour cette colonne est ajouté à la collection de colonnes, est égale à la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="eb533-169">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="eb533-170">Vous pouvez créer une nouvelle ligne en utilisant le <xref:System.Data.DataRow.ItemArray%2A> propriété de la <xref:System.Data.DataRow> classe et en passant un tableau de valeurs.</span><span class="sxs-lookup"><span data-stu-id="eb533-170">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="eb533-171">Il s’agit d’un problème potentiel pour une colonne avec sa <xref:System.Data.DataColumn.AutoIncrement%2A> défini sur `true`, car sa valeur est générée automatiquement.</span><span class="sxs-lookup"><span data-stu-id="eb533-171">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="eb533-172">Pour utiliser le <xref:System.Data.DataRow.ItemArray%2A> propriété, place `null` dans la position de la colonne dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="eb533-172">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="eb533-173">Pour plus d’informations, consultez le <xref:System.Data.DataRow.ItemArray%2A> propriété de la <xref:System.Data.DataRow> classe.</span><span class="sxs-lookup"><span data-stu-id="eb533-173">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="eb533-174">Si le type de la colonne est <xref:System.Data.SqlTypes.SqlInt16> ou <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> ne fonctionnera pas.</span><span class="sxs-lookup"><span data-stu-id="eb533-174">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="eb533-175">Utilisez à la place Int16 ou Int32.</span><span class="sxs-lookup"><span data-stu-id="eb533-175">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="eb533-176">Si le type de la colonne est <xref:System.Data.SqlTypes.SqlInt64> ou <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> fonctionnera uniquement partiellement.</span><span class="sxs-lookup"><span data-stu-id="eb533-176">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="eb533-177">Utilisez à la place Int64 ou décimal.</span><span class="sxs-lookup"><span data-stu-id="eb533-177">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="eb533-178">Lorsque le <xref:System.Data.DataColumn.AutoIncrementStep%2A> valeur est ajoutée à la valeur actuelle, la vérification de dépassement de capacité est supprimée.</span><span class="sxs-lookup"><span data-stu-id="eb533-178">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-179">L’exemple suivant définit la <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, et <xref:System.Data.DataColumn.AutoIncrementStep%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="eb533-179">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb533-180">The column is a computed column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-180">The column is a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementSeed : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-181">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-181">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="eb533-182">The default is 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-182">The default is 0.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-183">La valeur de départ pour la <see cref="P:System.Data.DataColumn.AutoIncrement" /> fonctionnalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-183">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb533-184">L’exemple suivant définit la <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, et <xref:System.Data.DataColumn.AutoIncrementStep%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="eb533-184">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementStep : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-185">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-185">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-186">Le nombre par lequel la valeur de la colonne est automatiquement incrémentée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-186">The number by which the value of the column is automatically incremented.</span>
          </span>
          <span data-ttu-id="eb533-187">La valeur par défaut est 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-187">The default is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb533-188">L’exemple suivant définit la <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, et <xref:System.Data.DataColumn.AutoIncrementStep%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="eb533-188">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb533-189">The value set is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-189">The value set is zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Data.DataColumn.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-190">Gets or sets the caption for the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-190">Gets or sets the caption for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-191">La légende de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-191">The caption of the column.</span>
          </span>
          <span data-ttu-id="eb533-192">Si ce n’est pas défini, retourne le <see cref="P:System.Data.DataColumn.ColumnName" /> valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-192">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-193">Vous pouvez utiliser la <xref:System.Data.DataColumn.Caption%2A> propriété pour afficher un nom descriptif ou convivial pour un <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="eb533-193">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-194">L’exemple suivant crée un nouveau <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="eb533-194">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="eb533-195">Il ajoute ensuite trois <xref:System.Data.DataColumn> des objets sur un <xref:System.Data.DataColumnCollection> et définit le <xref:System.Data.DataColumn.Caption%2A> propriété pour chaque <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="eb533-195">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberSignature Language="F#" Value="member this.CheckNotAllowNull : unit -&gt; unit" Usage="dataColumn.CheckNotAllowNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb533-196">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-196">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberSignature Language="F#" Value="member this.CheckUnique : unit -&gt; unit" Usage="dataColumn.CheckUnique " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb533-197">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-197">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMapping : System.Data.MappingType with get, set" Usage="System.Data.DataColumn.ColumnMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-198">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-198">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-199">Une des valeurs de <see cref="T:System.Data.MappingType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-199">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-200">Le <xref:System.Data.DataColumn.ColumnMapping%2A> propriété détermine comment un <xref:System.Data.DataColumn> est mappé lorsque un <xref:System.Data.DataSet> est enregistré comme un document XML en utilisant le <xref:System.Data.DataSet.WriteXml%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="eb533-200">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="eb533-201">Par exemple, si un <xref:System.Data.DataColumn> est nommé « customerID » et sa <xref:System.Data.DataColumn.ColumnMapping%2A> propriété est définie sur `MappingType.Element`, la valeur de la colonne génère le code XML suivant :</span><span class="sxs-lookup"><span data-stu-id="eb533-201">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="eb533-202">Toutefois, si la même colonne est mappée à `MappingType.Attribute`, le code XML suivant est généré :</span><span class="sxs-lookup"><span data-stu-id="eb533-202">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="eb533-203">Utilisez le <xref:System.Data.DataColumn.%23ctor%2A> constructeur qui contient le `type` argument pour spécifier la manière dont le <xref:System.Data.DataColumn> est mappé lorsque son <xref:System.Data.DataSet> est transformé en un document XML.</span><span class="sxs-lookup"><span data-stu-id="eb533-203">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specificy how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="eb533-204">Le <xref:System.Data.DataColumn.ColumnMapping%2A> propriété correspond à l’argument du constructeur `type`.</span><span class="sxs-lookup"><span data-stu-id="eb533-204">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-205">L’exemple suivant définit la <xref:System.Data.DataColumn.ColumnMapping%2A> de la propriété type du nouveau <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="eb533-205">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnName : string with get, set" Usage="System.Data.DataColumn.ColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-206">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-206">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-207">Nom de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-207">The name of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-208">Quand un <xref:System.Data.DataColumn> est créé, il ne possède aucune <xref:System.Data.DataColumn.ColumnName%2A> valeur.</span><span class="sxs-lookup"><span data-stu-id="eb533-208">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="eb533-209">Toutefois, lorsque le <xref:System.Data.DataColumn> est ajouté à un <xref:System.Data.DataColumnCollection> pour un <xref:System.Data.DataTable> de l’objet, elle reçoit un nom par défaut (« Column1 », « Column2 » et ainsi de suite).</span><span class="sxs-lookup"><span data-stu-id="eb533-209">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="eb533-210">Par défaut, le <xref:System.Data.DataColumn.Caption%2A> a la valeur la <xref:System.Data.DataColumn.ColumnName%2A> valeur.</span><span class="sxs-lookup"><span data-stu-id="eb533-210">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-211">Les exemples suivants obtiennent le <xref:System.Data.DataColumn.ColumnName%2A> pour chaque colonne dans chaque table dans un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="eb533-211">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="eb533-212">L’exemple montre également comment créer un <xref:System.Data.DataColumn> avec un nouveau <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb533-212">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb533-213">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-213">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <span data-ttu-id="eb533-214">A column with the same name already exists in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-214">A column with the same name already exists in the collection.</span>
          </span>
          <span data-ttu-id="eb533-215">The name comparison is not case sensitive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-215">The name comparison is not case sensitive.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : Type with get, set" Usage="System.Data.DataColumn.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-216">Gets or sets the type of data stored in the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-216">Gets or sets the type of data stored in the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-217">Un <see cref="T:System.Type" /> objet qui représente le type de données de colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-217">A <see cref="T:System.Type" /> object that represents the column data type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-218">Définition de la <xref:System.Data.DataColumn.DataType%2A> valeur est très important de garantir la création correcte et la mise à jour des données dans une source de données.</span><span class="sxs-lookup"><span data-stu-id="eb533-218">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="eb533-219">Le <xref:System.Data.DataColumn.DataType%2A> propriété prend en charge les types de données .NET Framework de base suivants :</span><span class="sxs-lookup"><span data-stu-id="eb533-219">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="eb533-220">ainsi que le type de tableau suivante :</span><span class="sxs-lookup"><span data-stu-id="eb533-220">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="eb533-221">Une exception est générée lors de la modification de cette propriété après la colonne a commencé à stocker des données.</span><span class="sxs-lookup"><span data-stu-id="eb533-221">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="eb533-222">Si <xref:System.Data.DataColumn.AutoIncrement%2A> a la valeur `true` avant de définir le <xref:System.Data.DataColumn.DataType%2A> propriété et que vous essayez de définir le type autre qu’un type entier, une exception est générée.</span><span class="sxs-lookup"><span data-stu-id="eb533-222">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb533-223">Une colonne de type de données `Byte[]` nécessite un traitement spécial dans certains cas, car, contrairement aux types de données .NET Framework de base, c’est un type de données de référence.</span><span class="sxs-lookup"><span data-stu-id="eb533-223">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="eb533-224">Si une colonne de type de données `Byte[]` est utilisé comme un <xref:System.Data.DataTable.PrimaryKey%2A>, ou en tant qu’un <xref:System.Data.DataView.Sort%2A> ou <xref:System.Data.DataView.RowFilter%2A> clé pour un <xref:System.Data.DataView>, toute modification apportée à la valeur de colonne doit impliquer l’assignation le `Byte[]` valeur de colonne à un instanciéséparément`Byte[]` objet.</span><span class="sxs-lookup"><span data-stu-id="eb533-224">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="eb533-225">Cette affectation est nécessaire pour déclencher la mise à jour des index internes utilisé par le tri, filtrage et des opérations de clé primaires.</span><span class="sxs-lookup"><span data-stu-id="eb533-225">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="eb533-226">Ceci est illustré dans l'exemple suivant :</span><span class="sxs-lookup"><span data-stu-id="eb533-226">This is illustrated by the following example:</span></span>  
  
```  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="eb533-227">Bien qu’il soit possible de définir une colonne comme type de données autres que les types de données .NET Framework base et `Byte[]`, une telle colonne sera considérée comme un type défini par l’utilisateur, soumis aux restrictions d’utilisation suivantes.</span><span class="sxs-lookup"><span data-stu-id="eb533-227">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="eb533-228">(Pour plus d’informations sur les types définis par l’utilisateur, consultez [création et Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span><span class="sxs-lookup"><span data-stu-id="eb533-228">(For more information on user-defined types, see [Creating and Using User-Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="eb533-229">La colonne ne peut pas faire partie d’un <xref:System.Data.DataView.RowFilter%2A> ou <xref:System.Data.DataTable.Select%2A> expression.</span><span class="sxs-lookup"><span data-stu-id="eb533-229">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="eb533-230">Si la colonne est utilisée comme un <xref:System.Data.DataTable.PrimaryKey%2A>, ou comme un <xref:System.Data.DataView.Sort%2A> ou pour un <xref:System.Data.DataView>, elle doit être traitée comme un champ immuable ; les données de colonne ne doivent pas être modifiées une fois qu’elle a été ajoutée à la table.</span><span class="sxs-lookup"><span data-stu-id="eb533-230">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="eb533-231">Son <xref:System.Data.DataColumn.ColumnMapping%2A> ne peuvent être définis `MappingType.Element`.</span><span class="sxs-lookup"><span data-stu-id="eb533-231">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="eb533-232">La classe qui implémente le type de données colonne doit être doit être marqués avec le <xref:System.SerializableAttribute>, et si nécessaire, implémenter la <xref:System.Runtime.Serialization.ISerializable> ou <xref:System.Xml.Serialization.IXmlSerializable> interface.</span><span class="sxs-lookup"><span data-stu-id="eb533-232">The class that implements the column’s data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="eb533-233">Prise en charge pour le suivi des modifications est limité.</span><span class="sxs-lookup"><span data-stu-id="eb533-233">Support for change tracking is limited.</span></span> <span data-ttu-id="eb533-234">Pour utiliser le <xref:System.Data.DataTable> mécanisme de suivi des modifications de la classe, la classe qui implémente le type de données de la colonne doit implémenter le <xref:System.ComponentModel.IChangeTracking> interface, ou prendre la responsabilité d’informer le <xref:System.Data.DataRow> lorsque la valeur de colonne a été modifié, soit par l’appel <xref:System.Data.DataRow.SetModified%2A> sur la ligne ou en assignant l’objet de valeur de colonne à un objet de valeur de colonne instancié séparément.</span><span class="sxs-lookup"><span data-stu-id="eb533-234">To utilize the <xref:System.Data.DataTable> class’s change tracking mechanism, the class that implements the column’s data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-235">L’exemple suivant ajoute des colonnes de plusieurs types de données à un <xref:System.Data.DataTable>, puis ajoute une ligne à la table.</span><span class="sxs-lookup"><span data-stu-id="eb533-235">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb533-236">The column already has data stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-236">The column already has data stored.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeMode : System.Data.DataSetDateTime with get, set" Usage="System.Data.DataColumn.DateTimeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-237">Gets or sets the <see langword="DateTimeMode" /> for the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-237">Gets or sets the <see langword="DateTimeMode" /> for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-238">Le <see cref="T:System.Data.DataSetDateTime" /> pour la colonne spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-238">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-239">Le <xref:System.Data.DataColumn.DateTimeMode%2A> ne peut pas être modifiée une fois que les lignes sont ajoutées à un <xref:System.Data.DataColumn>, à l’exception de la modification de <xref:System.Data.DataSetDateTime.Unspecified> et <xref:System.Data.DataSetDateTime.UnspecifiedLocal> ou vice versa.</span><span class="sxs-lookup"><span data-stu-id="eb533-239">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="eb533-240">La modification de `UnspecifiedLocal` à `Unspecified` et vice versa est autorisé comme la différence entre ces deux options uniquement pendant la sérialisation et n’affecte pas le stockage.</span><span class="sxs-lookup"><span data-stu-id="eb533-240">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj with get, set" Usage="System.Data.DataColumn.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-241">Gets or sets the default value for the column when you are creating new rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-241">Gets or sets the default value for the column when you are creating new rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-242">Une valeur appropriée à la colonne <see cref="P:System.Data.DataColumn.DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-242">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-243">Une valeur par défaut est la valeur qui est automatiquement attribuée à la colonne lorsqu’un <xref:System.Data.DataRow> est créé (par exemple, la date et l’heure auxquelles le <xref:System.Data.DataRow> a été créé.</span><span class="sxs-lookup"><span data-stu-id="eb533-243">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="eb533-244">Lorsque <xref:System.Data.DataColumn.AutoIncrement%2A> a la valeur true, il ne peut y avoir aucune valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="eb533-244">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="eb533-245">Vous pouvez créer une nouvelle ligne en utilisant le <xref:System.Data.DataRow.ItemArray%2A> propriété de la <xref:System.Data.DataRow> classe et en passant la méthode à un tableau de valeurs.</span><span class="sxs-lookup"><span data-stu-id="eb533-245">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="eb533-246">Il s’agit d’un problème potentiel pour une colonne avec une valeur par défaut, car sa valeur est générée automatiquement.</span><span class="sxs-lookup"><span data-stu-id="eb533-246">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="eb533-247">Pour utiliser le <xref:System.Data.DataRow.ItemArray%2A> propriété avec une telle colonne, placez `null` dans la position de la colonne dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="eb533-247">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="eb533-248">Pour plus d'informations, consultez la propriété <xref:System.Data.DataRow.ItemArray%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb533-248">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-249">L’exemple suivant crée plusieurs <xref:System.Data.DataColumn> valeurs à chaque colonne par défaut des objets qui ont différents types de données et définit approprié.</span><span class="sxs-lookup"><span data-stu-id="eb533-249">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eb533-250">When you are adding a row, the default value is not an instance of the column's data type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-250">When you are adding a row, the default value is not an instance of the column's data type.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.DataColumn.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-251">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-251">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-252">Une expression pour calculer la valeur d’une colonne, ou créer une colonne agrégat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-252">An expression to calculate the value of a column, or create an aggregate column.</span>
          </span>
          <span data-ttu-id="eb533-253">Le type de retour d’une expression est déterminé par le <see cref="P:System.Data.DataColumn.DataType" /> de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-253">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-254">Une des utilisations de la <xref:System.Data.DataColumn.Expression%2A> propriété consiste à créer des colonnes calculées.</span><span class="sxs-lookup"><span data-stu-id="eb533-254">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="eb533-255">Par exemple, pour calculer une valeur de taxe, le prix unitaire est multiplié par un taux de taxe d’une région spécifique.</span><span class="sxs-lookup"><span data-stu-id="eb533-255">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="eb533-256">Taux d’imposition varier d’une région à l’autre, il est impossible de placer un taux de taxe unique dans une colonne ; au lieu de cela, la valeur est calculée à l’aide de la <xref:System.Data.DataColumn.Expression%2A> propriété, comme indiqué dans le code Visual Basic dans la section suivante :</span><span class="sxs-lookup"><span data-stu-id="eb533-256">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="eb533-257">DataSet1.Tables("Products"). Columns("Tax"). Expression = « UnitPrice \* 0,086 »</span><span class="sxs-lookup"><span data-stu-id="eb533-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="eb533-258">Une deuxième utilisation consiste à créer une colonne agrégat.</span><span class="sxs-lookup"><span data-stu-id="eb533-258">A second use is to create an aggregate column.</span></span> <span data-ttu-id="eb533-259">Similaire à une valeur calculée, un agrégat effectue une opération basée sur l’ensemble complet de lignes dans le <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="eb533-259">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="eb533-260">Un exemple simple consiste à compter le nombre de lignes retournées dans le jeu.</span><span class="sxs-lookup"><span data-stu-id="eb533-260">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="eb533-261">Il s’agit de la méthode que vous utiliseriez pour compter le nombre de transactions terminées par un vendeur particulier, comme illustré dans ce code Visual Basic :</span><span class="sxs-lookup"><span data-stu-id="eb533-261">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="eb533-262">Syntaxe d'expression</span><span class="sxs-lookup"><span data-stu-id="eb533-262">Expression Syntax</span></span>  
 <span data-ttu-id="eb533-263">Lorsque vous créez une expression, utilisez le <xref:System.Data.DataColumn.ColumnName%2A> propriété pour faire référence aux colonnes.</span><span class="sxs-lookup"><span data-stu-id="eb533-263">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="eb533-264">Par exemple, si le <xref:System.Data.DataColumn.ColumnName%2A> pour une colonne est « UnitPrice » et un autre « Quantity », l’expression se présente comme suit :</span><span class="sxs-lookup"><span data-stu-id="eb533-264">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="eb533-265">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="eb533-265">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb533-266">Si une colonne est utilisée dans une expression, l’expression est dite avoir une dépendance sur cette colonne.</span><span class="sxs-lookup"><span data-stu-id="eb533-266">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="eb533-267">Si une colonne dépendante est renommée ou supprimée, aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="eb533-267">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="eb533-268">Une exception est levée lors de l’accès à la colonne d’expression désormais interrompue.</span><span class="sxs-lookup"><span data-stu-id="eb533-268">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="eb533-269">Lorsque vous créez une expression pour un filtre, placez les chaînes avec guillemets simples :</span><span class="sxs-lookup"><span data-stu-id="eb533-269">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="eb533-270">« LastName = 'Jones' »</span><span class="sxs-lookup"><span data-stu-id="eb533-270">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="eb533-271">Si un nom de colonne contient des caractères non alphanumériques ou commence par un chiffre ou correspond à (pas la casse) des mots réservés suivants, il nécessite un traitement spécial, comme décrit dans les paragraphes suivants.</span><span class="sxs-lookup"><span data-stu-id="eb533-271">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="eb533-272">Et</span><span class="sxs-lookup"><span data-stu-id="eb533-272">And</span></span>  
  
 <span data-ttu-id="eb533-273">Entre</span><span class="sxs-lookup"><span data-stu-id="eb533-273">Between</span></span>  
  
 <span data-ttu-id="eb533-274">Enfant</span><span class="sxs-lookup"><span data-stu-id="eb533-274">Child</span></span>  
  
 <span data-ttu-id="eb533-275">False</span><span class="sxs-lookup"><span data-stu-id="eb533-275">False</span></span>  
  
 <span data-ttu-id="eb533-276">Vers l'avant</span><span class="sxs-lookup"><span data-stu-id="eb533-276">In</span></span>  
  
 <span data-ttu-id="eb533-277">Est</span><span class="sxs-lookup"><span data-stu-id="eb533-277">Is</span></span>  
  
 <span data-ttu-id="eb533-278">Comme</span><span class="sxs-lookup"><span data-stu-id="eb533-278">Like</span></span>  
  
 <span data-ttu-id="eb533-279">Ne convient pas</span><span class="sxs-lookup"><span data-stu-id="eb533-279">Not</span></span>  
  
 <span data-ttu-id="eb533-280">Null</span><span class="sxs-lookup"><span data-stu-id="eb533-280">Null</span></span>  
  
 <span data-ttu-id="eb533-281">Ou</span><span class="sxs-lookup"><span data-stu-id="eb533-281">Or</span></span>  
  
 <span data-ttu-id="eb533-282">Parent</span><span class="sxs-lookup"><span data-stu-id="eb533-282">Parent</span></span>  
  
 <span data-ttu-id="eb533-283">True</span><span class="sxs-lookup"><span data-stu-id="eb533-283">True</span></span>  
  
 <span data-ttu-id="eb533-284">Si un nom de colonne satisfait l’une des conditions ci-dessus, il doit être encapsulé dans des crochets ou les « ' » entre guillemets (accent grave).</span><span class="sxs-lookup"><span data-stu-id="eb533-284">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="eb533-285">Par exemple, pour utiliser une colonne nommée « Colonne # » dans une expression, vous écririez soit « [colonne #] » :</span><span class="sxs-lookup"><span data-stu-id="eb533-285">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="eb533-286">Total \* (colonne #)</span><span class="sxs-lookup"><span data-stu-id="eb533-286">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="eb533-287">ou «\`colonne #' » :</span><span class="sxs-lookup"><span data-stu-id="eb533-287">or "\`Column#`":</span></span>  
  
 <span data-ttu-id="eb533-288">Total \* \`colonne #'</span><span class="sxs-lookup"><span data-stu-id="eb533-288">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="eb533-289">Si le nom de colonne est placé entre crochets, alors les ']' et '\\' caractères (mais pas d’autres caractères) qu’il contient doivent être échappés en leur ajoutant la barre oblique inverse («\\») caractères.</span><span class="sxs-lookup"><span data-stu-id="eb533-289">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="eb533-290">Si le nom de colonne est placé entre les caractères accent grave puis il ne doit contenir des caractères accent grave qu’il contient.</span><span class="sxs-lookup"><span data-stu-id="eb533-290">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="eb533-291">Par exemple, une colonne nommée « [] colonne\\» serait écrite :</span><span class="sxs-lookup"><span data-stu-id="eb533-291">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="eb533-292">Total \* [colonne [\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="eb533-292">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="eb533-293">ou</span><span class="sxs-lookup"><span data-stu-id="eb533-293">or</span></span>  
  
 <span data-ttu-id="eb533-294">Total \* \`Column]\\`</span><span class="sxs-lookup"><span data-stu-id="eb533-294">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="eb533-295">Valeurs définies par l’utilisateur</span><span class="sxs-lookup"><span data-stu-id="eb533-295">User-Defined Values</span></span>  
 <span data-ttu-id="eb533-296">Valeurs définies par l’utilisateur peuvent servir dans des expressions à comparer avec les valeurs de colonne.</span><span class="sxs-lookup"><span data-stu-id="eb533-296">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="eb533-297">Valeurs de chaîne doivent être entourées de guillemets simples (et chaque guillemet simple dans une valeur de chaîne doit être échappé en ajoutant le préfixe avec un autre guillemet simple).</span><span class="sxs-lookup"><span data-stu-id="eb533-297">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="eb533-298">Valeurs de date doivent être entourées de signes dièse (#) ou des guillemets simples (') selon le fournisseur de données.</span><span class="sxs-lookup"><span data-stu-id="eb533-298">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="eb533-299">Nombre de décimales et la notation scientifique sont autorisées pour les valeurs numériques.</span><span class="sxs-lookup"><span data-stu-id="eb533-299">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="eb533-300">Exemple :</span><span class="sxs-lookup"><span data-stu-id="eb533-300">For example:</span></span>  
  
 <span data-ttu-id="eb533-301">« FirstName = 'John' »</span><span class="sxs-lookup"><span data-stu-id="eb533-301">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="eb533-302">« Prix < = 50,00 »</span><span class="sxs-lookup"><span data-stu-id="eb533-302">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="eb533-303">« Date de naissance < #1/31/82 # »</span><span class="sxs-lookup"><span data-stu-id="eb533-303">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="eb533-304">Pour les colonnes qui contiennent des valeurs d’énumération, castez la valeur à un type de données entier.</span><span class="sxs-lookup"><span data-stu-id="eb533-304">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="eb533-305">Exemple :</span><span class="sxs-lookup"><span data-stu-id="eb533-305">For example:</span></span>  
  
 <span data-ttu-id="eb533-306">« EnumColumn = 5 »</span><span class="sxs-lookup"><span data-stu-id="eb533-306">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="eb533-307">L’analyse des Expressions littérales</span><span class="sxs-lookup"><span data-stu-id="eb533-307">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="eb533-308">Toutes les expressions littérales doivent être exprimées dans les paramètres régionaux de culture dite indifférente.</span><span class="sxs-lookup"><span data-stu-id="eb533-308">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="eb533-309">Lorsque `DataSet` analyse et convertit des expressions littérales, il utilise toujours la culture dite indifférente, pas la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="eb533-309">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="eb533-310">Littéraux de chaîne sont identifiés lorsqu’il y a des guillemets simples autour de la valeur.</span><span class="sxs-lookup"><span data-stu-id="eb533-310">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="eb533-311">Exemple :</span><span class="sxs-lookup"><span data-stu-id="eb533-311">For example:</span></span>  
  
 <span data-ttu-id="eb533-312">'John'</span><span class="sxs-lookup"><span data-stu-id="eb533-312">'John'</span></span>  
  
 <span data-ttu-id="eb533-313">`Boolean` les littéraux sont true et false ; ils ne sont pas mis entre guillemets dans les expressions.</span><span class="sxs-lookup"><span data-stu-id="eb533-313">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="eb533-314">`Integer` littéraux [+-] ? [0-9] + sont traités comme `System.Int32`, `System.Int64` ou `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="eb533-314">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="eb533-315">`System.Double` peut manquer de précision le nombre selon la taille.</span><span class="sxs-lookup"><span data-stu-id="eb533-315">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="eb533-316">Par exemple, si le nombre dans le littéral est 2147483650, `DataSet` tentera d’analyser le nombre comme un `Int32`.</span><span class="sxs-lookup"><span data-stu-id="eb533-316">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="eb533-317">Cela ne réussira pas car le nombre est trop volumineux.</span><span class="sxs-lookup"><span data-stu-id="eb533-317">This will not succeed because the number is too large.</span></span> <span data-ttu-id="eb533-318">Dans ce cas `DataSet` analysera le nombre comme un `Int64`, qui réussira.</span><span class="sxs-lookup"><span data-stu-id="eb533-318">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="eb533-319">Si le littéral était un nombre supérieur à la valeur maximale de Int64, `DataSet` analysera le littéral à l’aide `Double`.</span><span class="sxs-lookup"><span data-stu-id="eb533-319">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="eb533-320">Littéraux réels à l’aide de la notation scientifique, tels que 4.42372E-30, sont analysés à l’aide de `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="eb533-320">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="eb533-321">Vrais littéraux sans notation scientifique, mais avec une virgule décimale, sont traités en tant que `System.Decimal`.</span><span class="sxs-lookup"><span data-stu-id="eb533-321">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="eb533-322">Si le nombre dépasse les valeurs maximales ou minimales prises en charge par `System.Decimal`, puis il est analysé comme un `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="eb533-322">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="eb533-323">Exemple :</span><span class="sxs-lookup"><span data-stu-id="eb533-323">For example:</span></span>  
  
 <span data-ttu-id="eb533-324">142526,144524 sera converti en un `Decimal`.</span><span class="sxs-lookup"><span data-stu-id="eb533-324">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="eb533-325">345262,78036719560925667 sera traité un `Double`.</span><span class="sxs-lookup"><span data-stu-id="eb533-325">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="eb533-326">Opérateurs</span><span class="sxs-lookup"><span data-stu-id="eb533-326">Operators</span></span>  
 <span data-ttu-id="eb533-327">La concaténation est autorisée à l’aide de booléens AND, OR, opérateurs et NOT.</span><span class="sxs-lookup"><span data-stu-id="eb533-327">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="eb533-328">Vous pouvez utiliser des parenthèses pour regrouper des clauses et forcer la priorité.</span><span class="sxs-lookup"><span data-stu-id="eb533-328">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="eb533-329">L’opérateur AND est prioritaire sur les autres opérateurs.</span><span class="sxs-lookup"><span data-stu-id="eb533-329">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="eb533-330">Exemple :</span><span class="sxs-lookup"><span data-stu-id="eb533-330">For example:</span></span>  
  
 <span data-ttu-id="eb533-331">(LastName = 'Smith' OR LastName = 'Jones') ET FirstName = 'John'</span><span class="sxs-lookup"><span data-stu-id="eb533-331">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="eb533-332">Lorsque vous créez des expressions de comparaison, les opérateurs suivants sont autorisés :</span><span class="sxs-lookup"><span data-stu-id="eb533-332">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 >  
  
 \<=  
  
 >=  
  
 <>  
  
 =  
  
 <span data-ttu-id="eb533-333">IN</span><span class="sxs-lookup"><span data-stu-id="eb533-333">IN</span></span>  
  
 <span data-ttu-id="eb533-334">LIKE</span><span class="sxs-lookup"><span data-stu-id="eb533-334">LIKE</span></span>  
  
 <span data-ttu-id="eb533-335">Les opérateurs arithmétiques suivants sont également pris en charge dans les expressions :</span><span class="sxs-lookup"><span data-stu-id="eb533-335">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="eb533-336">\+ (addition)</span><span class="sxs-lookup"><span data-stu-id="eb533-336">\+ (addition)</span></span>  
  
 <span data-ttu-id="eb533-337">\- (soustraction)</span><span class="sxs-lookup"><span data-stu-id="eb533-337">\- (subtraction)</span></span>  
  
 <span data-ttu-id="eb533-338">\* (multiplication)</span><span class="sxs-lookup"><span data-stu-id="eb533-338">\* (multiplication)</span></span>  
  
 <span data-ttu-id="eb533-339">/ (division)</span><span class="sxs-lookup"><span data-stu-id="eb533-339">/ (division)</span></span>  
  
 <span data-ttu-id="eb533-340">% (modulo)</span><span class="sxs-lookup"><span data-stu-id="eb533-340">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="eb533-341">Opérateurs de chaîne</span><span class="sxs-lookup"><span data-stu-id="eb533-341">String Operators</span></span>  
 <span data-ttu-id="eb533-342">Pour concaténer une chaîne, utilisez le caractère « + ».</span><span class="sxs-lookup"><span data-stu-id="eb533-342">To concatenate a string, use the + character.</span></span> <span data-ttu-id="eb533-343">La valeur de la <xref:System.Data.DataSet.CaseSensitive%2A> propriété de la <xref:System.Data.DataSet> classe détermine si les comparaisons de chaînes respectent la casse.</span><span class="sxs-lookup"><span data-stu-id="eb533-343">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="eb533-344">Toutefois, vous pouvez remplacer cette valeur avec le <xref:System.Data.DataTable.CaseSensitive%2A> propriété de la <xref:System.Data.DataTable> classe.</span><span class="sxs-lookup"><span data-stu-id="eb533-344">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="eb533-345">Caractères génériques</span><span class="sxs-lookup"><span data-stu-id="eb533-345">Wildcard Characters</span></span>  
 <span data-ttu-id="eb533-346">À la fois le \* et % peut être utilisée indifféremment des caractères génériques dans une comparaison LIKE.</span><span class="sxs-lookup"><span data-stu-id="eb533-346">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="eb533-347">Si la chaîne dans une clause LIKE contient un \* ou %, ces caractères doivent être entourés de crochets ([]).</span><span class="sxs-lookup"><span data-stu-id="eb533-347">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="eb533-348">Si un crochet est dans la clause, chaque caractère de crochet doit être placé entre parenthèses (par exemple [[] ou []]).</span><span class="sxs-lookup"><span data-stu-id="eb533-348">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="eb533-349">Un caractère générique est autorisé au début et à la fin d’un modèle, ou à la fin d’un modèle ou au début d’un modèle.</span><span class="sxs-lookup"><span data-stu-id="eb533-349">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="eb533-350">Exemple :</span><span class="sxs-lookup"><span data-stu-id="eb533-350">For example:</span></span>  
  
 <span data-ttu-id="eb533-351">« ItemName comme ' * produit\*' »</span><span class="sxs-lookup"><span data-stu-id="eb533-351">"ItemName LIKE '*product\*'"</span></span>  
  
 <span data-ttu-id="eb533-352">« ItemName comme ' \* produit « »</span><span class="sxs-lookup"><span data-stu-id="eb533-352">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="eb533-353">« ItemName comme produit \* »</span><span class="sxs-lookup"><span data-stu-id="eb533-353">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="eb533-354">Caractères génériques ne sont pas autorisés au milieu d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="eb533-354">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="eb533-355">Par exemple, « te \* xt' n’est pas autorisée.</span><span class="sxs-lookup"><span data-stu-id="eb533-355">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="eb533-356">Relation parent/enfant faisant référence à</span><span class="sxs-lookup"><span data-stu-id="eb533-356">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="eb533-357">Une table parente peut être référencée dans une expression en ajoutant le préfixe le nom de colonne avec `Parent`.</span><span class="sxs-lookup"><span data-stu-id="eb533-357">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="eb533-358">Par exemple, le `Parent.Price` fait référence à des colonnes de la table parent nommé `Price`.</span><span class="sxs-lookup"><span data-stu-id="eb533-358">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="eb533-359">Lorsqu’un enfant a plusieurs lignes parents, utilisez parent (RelationName). ColumnName.</span><span class="sxs-lookup"><span data-stu-id="eb533-359">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="eb533-360">Par exemple, le parent (RelationName). Prix fait référence à des colonnes de la table parent nommée Price via la relation.</span><span class="sxs-lookup"><span data-stu-id="eb533-360">For example, the Parent(RelationName).Price references the parent table’s column named Price via the relation.</span></span>  
  
 <span data-ttu-id="eb533-361">Une colonne dans une table enfant peut être référencée dans une expression en ajoutant le nom de colonne avec le préfixe `Child`.</span><span class="sxs-lookup"><span data-stu-id="eb533-361">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="eb533-362">Toutefois, étant donné que les relations enfants peuvent retourner plusieurs lignes, vous devez inclure la référence à la colonne enfant dans une fonction d’agrégation.</span><span class="sxs-lookup"><span data-stu-id="eb533-362">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="eb533-363">Par exemple, `Sum(Child.Price)` retournerait la somme de la colonne nommée `Price` dans la table enfant.</span><span class="sxs-lookup"><span data-stu-id="eb533-363">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="eb533-364">Si une table possède plusieurs enfants, la syntaxe est : `Child(RelationName)`.</span><span class="sxs-lookup"><span data-stu-id="eb533-364">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="eb533-365">Par exemple, si une table possède deux tables enfants nommées `Customers` et `Orders`et le <xref:System.Data.DataRelation> objet est nommé `Customers2Orders`, la référence se présente comme suit :</span><span class="sxs-lookup"><span data-stu-id="eb533-365">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="eb533-366">AVG(Child(Customers2Orders). Quantité)</span><span class="sxs-lookup"><span data-stu-id="eb533-366">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="eb533-367">Agrégats</span><span class="sxs-lookup"><span data-stu-id="eb533-367">Aggregates</span></span>  
 <span data-ttu-id="eb533-368">Les types d’agrégation suivantes sont prises en charge :</span><span class="sxs-lookup"><span data-stu-id="eb533-368">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="eb533-369">Somme (Sum)</span><span class="sxs-lookup"><span data-stu-id="eb533-369">Sum (Sum)</span></span>  
  
 <span data-ttu-id="eb533-370">AVG (moyenne)</span><span class="sxs-lookup"><span data-stu-id="eb533-370">Avg (Average)</span></span>  
  
 <span data-ttu-id="eb533-371">Min (Minimum)</span><span class="sxs-lookup"><span data-stu-id="eb533-371">Min (Minimum)</span></span>  
  
 <span data-ttu-id="eb533-372">Max (Maximum)</span><span class="sxs-lookup"><span data-stu-id="eb533-372">Max (Maximum)</span></span>  
  
 <span data-ttu-id="eb533-373">Count (nombre)</span><span class="sxs-lookup"><span data-stu-id="eb533-373">Count (Count)</span></span>  
  
 <span data-ttu-id="eb533-374">StDev (écart type statistique)</span><span class="sxs-lookup"><span data-stu-id="eb533-374">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="eb533-375">Var (variance statistique).</span><span class="sxs-lookup"><span data-stu-id="eb533-375">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="eb533-376">Agrégats s’exécutent généralement dans les relations.</span><span class="sxs-lookup"><span data-stu-id="eb533-376">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="eb533-377">Créer une expression d’agrégation à l’aide d’une des fonctions répertoriées précédemment et une colonne de table enfant comme détaillé dans la référence de Relation Parent/enfant qui a été abordé précédemment.</span><span class="sxs-lookup"><span data-stu-id="eb533-377">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="eb533-378">Exemple :</span><span class="sxs-lookup"><span data-stu-id="eb533-378">For example:</span></span>  
  
 <span data-ttu-id="eb533-379">Avg(Child.Price)</span><span class="sxs-lookup"><span data-stu-id="eb533-379">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="eb533-380">AVG(Child(Orders2Details). Prix)</span><span class="sxs-lookup"><span data-stu-id="eb533-380">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="eb533-381">Un agrégat peut également être effectué sur une seule table.</span><span class="sxs-lookup"><span data-stu-id="eb533-381">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="eb533-382">Par exemple, pour créer un résumé des valeurs dans une colonne nommée « Price » :</span><span class="sxs-lookup"><span data-stu-id="eb533-382">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="eb533-383">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="eb533-383">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb533-384">Si vous utilisez une seule table pour créer un agrégat, il n’y aurait aucune fonctionnalité group by.</span><span class="sxs-lookup"><span data-stu-id="eb533-384">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="eb533-385">Au lieu de cela, toutes les lignes afficherait la même valeur dans la colonne.</span><span class="sxs-lookup"><span data-stu-id="eb533-385">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="eb533-386">Si une table n’a aucune ligne, les fonctions d’agrégation retournera `null`.</span><span class="sxs-lookup"><span data-stu-id="eb533-386">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="eb533-387">Types de données peuvent toujours être déterminés en examinant la <xref:System.Data.DataColumn.DataType%2A> propriété d’une colonne.</span><span class="sxs-lookup"><span data-stu-id="eb533-387">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="eb533-388">Vous pouvez également convertir des types de données à l’aide de la fonction Convert, illustrée dans la section suivante.</span><span class="sxs-lookup"><span data-stu-id="eb533-388">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="eb533-389">Un agrégat peut uniquement être appliqué à une colonne unique et aucune autres expressions ne peuvent être utilisées à l’intérieur de l’agrégat.</span><span class="sxs-lookup"><span data-stu-id="eb533-389">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="eb533-390">Fonctions</span><span class="sxs-lookup"><span data-stu-id="eb533-390">Functions</span></span>  
 <span data-ttu-id="eb533-391">Les fonctions suivantes sont également prises en charge :</span><span class="sxs-lookup"><span data-stu-id="eb533-391">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="eb533-392">Description</span><span class="sxs-lookup"><span data-stu-id="eb533-392">Description</span></span>|<span data-ttu-id="eb533-393">Convertit l’expression particulière pour un Type .NET Framework spécifié.</span><span class="sxs-lookup"><span data-stu-id="eb533-393">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="eb533-394">Syntaxe</span><span class="sxs-lookup"><span data-stu-id="eb533-394">Syntax</span></span>|<span data-ttu-id="eb533-395">Convert(`expression`, `type`)</span><span class="sxs-lookup"><span data-stu-id="eb533-395">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="eb533-396">Arguments</span><span class="sxs-lookup"><span data-stu-id="eb533-396">Arguments</span></span>|<span data-ttu-id="eb533-397">`expression` --Expression à convertir.</span><span class="sxs-lookup"><span data-stu-id="eb533-397">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="eb533-398">`type` --Type .NET Framework à laquelle la valeur sera convertie.</span><span class="sxs-lookup"><span data-stu-id="eb533-398">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="eb533-399">Exemple : myDataColumn.Expression="Convert (total, « System.Int32 ») »</span><span class="sxs-lookup"><span data-stu-id="eb533-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="eb533-400">Toutes les conversions sont valides avec les exceptions suivantes : `Boolean` peut être forcé vers et depuis `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` et lui-même.</span><span class="sxs-lookup"><span data-stu-id="eb533-400">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="eb533-401">`Char` peut être forcé vers et depuis `Int32`, `UInt32`, `String`et lui-même.</span><span class="sxs-lookup"><span data-stu-id="eb533-401">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="eb533-402">`DateTime` peut être forcé vers et depuis `String` et lui-même.</span><span class="sxs-lookup"><span data-stu-id="eb533-402">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="eb533-403">`TimeSpan` peut être forcé vers et depuis `String` et lui-même.</span><span class="sxs-lookup"><span data-stu-id="eb533-403">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="eb533-404">Description</span><span class="sxs-lookup"><span data-stu-id="eb533-404">Description</span></span>|<span data-ttu-id="eb533-405">Obtient la longueur d’une chaîne</span><span class="sxs-lookup"><span data-stu-id="eb533-405">Gets the length of a string</span></span>|  
|<span data-ttu-id="eb533-406">Syntaxe</span><span class="sxs-lookup"><span data-stu-id="eb533-406">Syntax</span></span>|<span data-ttu-id="eb533-407">LEN (`expression`)</span><span class="sxs-lookup"><span data-stu-id="eb533-407">LEN(`expression`)</span></span>|  
|<span data-ttu-id="eb533-408">Arguments</span><span class="sxs-lookup"><span data-stu-id="eb533-408">Arguments</span></span>|<span data-ttu-id="eb533-409">`expression` --La chaîne à évaluer.</span><span class="sxs-lookup"><span data-stu-id="eb533-409">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="eb533-410">Exemple : myDataColumn.Expression="Len(ItemName) »</span><span class="sxs-lookup"><span data-stu-id="eb533-410">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="eb533-411">Description</span><span class="sxs-lookup"><span data-stu-id="eb533-411">Description</span></span>|<span data-ttu-id="eb533-412">Vérifie une expression et retourne l’expression vérifiée ou une valeur de remplacement.</span><span class="sxs-lookup"><span data-stu-id="eb533-412">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="eb533-413">Syntaxe</span><span class="sxs-lookup"><span data-stu-id="eb533-413">Syntax</span></span>|<span data-ttu-id="eb533-414">ISNULL(`expression`, `replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="eb533-414">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="eb533-415">Arguments</span><span class="sxs-lookup"><span data-stu-id="eb533-415">Arguments</span></span>|<span data-ttu-id="eb533-416">`expression` --Expression à vérifier.</span><span class="sxs-lookup"><span data-stu-id="eb533-416">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="eb533-417">`replacementvalue` --Si l’expression est `null`, `replacementvalue` est retournée.</span><span class="sxs-lookup"><span data-stu-id="eb533-417">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="eb533-418">Exemple : myDataColumn.Expression="IsNull (prix, -1) »</span><span class="sxs-lookup"><span data-stu-id="eb533-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="eb533-419">Description</span><span class="sxs-lookup"><span data-stu-id="eb533-419">Description</span></span>|<span data-ttu-id="eb533-420">Obtient une des deux valeurs en fonction du résultat d’une expression logique.</span><span class="sxs-lookup"><span data-stu-id="eb533-420">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="eb533-421">Syntaxe</span><span class="sxs-lookup"><span data-stu-id="eb533-421">Syntax</span></span>|<span data-ttu-id="eb533-422">IIF(`expr`, `truepart`, `falsepart`)</span><span class="sxs-lookup"><span data-stu-id="eb533-422">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="eb533-423">Arguments</span><span class="sxs-lookup"><span data-stu-id="eb533-423">Arguments</span></span>|<span data-ttu-id="eb533-424">`expr` --Expression à évaluer.</span><span class="sxs-lookup"><span data-stu-id="eb533-424">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="eb533-425">`truepart` --La valeur à retourner si l’expression est vraie.</span><span class="sxs-lookup"><span data-stu-id="eb533-425">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="eb533-426">`falsepart` --La valeur à retourner si l’expression est false.</span><span class="sxs-lookup"><span data-stu-id="eb533-426">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="eb533-427">Exemple : myDataColumn.Expression = « IIF (total > 1000, « coûteuse », « Cher/Chère »)</span><span class="sxs-lookup"><span data-stu-id="eb533-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="eb533-428">Description</span><span class="sxs-lookup"><span data-stu-id="eb533-428">Description</span></span>|<span data-ttu-id="eb533-429">Supprime tout début et de fin vide des caractères tels que \r, \n, \t, ' '</span><span class="sxs-lookup"><span data-stu-id="eb533-429">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="eb533-430">Syntaxe</span><span class="sxs-lookup"><span data-stu-id="eb533-430">Syntax</span></span>|<span data-ttu-id="eb533-431">TRIM (`expression`)</span><span class="sxs-lookup"><span data-stu-id="eb533-431">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="eb533-432">Arguments</span><span class="sxs-lookup"><span data-stu-id="eb533-432">Arguments</span></span>|<span data-ttu-id="eb533-433">`expression` --Expression à tronquer.</span><span class="sxs-lookup"><span data-stu-id="eb533-433">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="eb533-434">Description</span><span class="sxs-lookup"><span data-stu-id="eb533-434">Description</span></span>|<span data-ttu-id="eb533-435">Obtient une sous-chaîne d’une longueur spécifiée, en commençant à un point spécifié dans la chaîne.</span><span class="sxs-lookup"><span data-stu-id="eb533-435">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="eb533-436">Syntaxe</span><span class="sxs-lookup"><span data-stu-id="eb533-436">Syntax</span></span>|<span data-ttu-id="eb533-437">SUBSTRING(`expression`, `start`, `length`)</span><span class="sxs-lookup"><span data-stu-id="eb533-437">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="eb533-438">Arguments</span><span class="sxs-lookup"><span data-stu-id="eb533-438">Arguments</span></span>|<span data-ttu-id="eb533-439">`expression` --La chaîne de la source de la sous-chaîne.</span><span class="sxs-lookup"><span data-stu-id="eb533-439">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="eb533-440">`start` --Entier qui spécifie où commence la sous-chaîne.</span><span class="sxs-lookup"><span data-stu-id="eb533-440">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="eb533-441">`length` --Entier qui spécifie la longueur de la sous-chaîne.</span><span class="sxs-lookup"><span data-stu-id="eb533-441">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="eb533-442">Exemple : myDataColumn.Expression = « Sous-chaîne (téléphone, 7, 8) »</span><span class="sxs-lookup"><span data-stu-id="eb533-442">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb533-443">Vous pouvez réinitialiser le <xref:System.Data.DataColumn.Expression%2A> propriété en lui assignant une valeur null ou vide.</span><span class="sxs-lookup"><span data-stu-id="eb533-443">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="eb533-444">Si une valeur par défaut est définie sur la colonne d’expression, toutes les lignes déjà remplies reçoivent la valeur par défaut après la <xref:System.Data.DataColumn.Expression%2A> propriété est réinitialisée.</span><span class="sxs-lookup"><span data-stu-id="eb533-444">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-445">L’exemple suivant crée trois colonnes dans un <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="eb533-445">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="eb533-446">Les deuxième et troisième colonnes contiennent des expressions. la deuxième calcule les taxes à l’aide d’un taux de taxe variable et la troisième ajoute le résultat du calcul à la valeur de la première colonne.</span><span class="sxs-lookup"><span data-stu-id="eb533-446">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="eb533-447">La table résultante s’affiche dans un <xref:System.Windows.Forms.DataGrid> contrôle.</span><span class="sxs-lookup"><span data-stu-id="eb533-447">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb533-448">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-448">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="eb533-449">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-449">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eb533-450">When you are using the CONVERT function, the requested cast is not possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-450">When you are using the CONVERT function, the requested cast is not possible.</span>
          </span>
          <span data-ttu-id="eb533-451">See the Conversion function in the following section for detailed information about possible casts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-451">See the Conversion function in the following section for detailed information about possible casts.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb533-452">When you use the SUBSTRING function, the start argument is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-452">When you use the SUBSTRING function, the start argument is out of range.</span>
          </span>
          <span data-ttu-id="eb533-453">-Or-  When you use the SUBSTRING function, the length argument is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-453">-Or-  When you use the SUBSTRING function, the length argument is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="eb533-454">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-454">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span>
          </span>
          <span data-ttu-id="eb533-455">This includes expressions that evaluate to <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-455">This includes expressions that evaluate to <see cref="T:System.Char" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataColumn.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-456">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-456">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-457">Un <see cref="T:System.Data.PropertyCollection" /> d’informations personnalisées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-457">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-458">Le <xref:System.Data.DataColumn.ExtendedProperties%2A> propriété vous permet de stocker des informations personnalisées avec l’objet.</span><span class="sxs-lookup"><span data-stu-id="eb533-458">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="eb533-459">Par exemple, vous pouvez stocker une heure à laquelle les données doivent être actualisées.</span><span class="sxs-lookup"><span data-stu-id="eb533-459">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="eb533-460">Les propriétés étendues doivent être de type <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="eb533-460">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="eb533-461">Les propriétés qui ne sont pas de type <xref:System.String> ne sont pas conservées lorsque le <xref:System.Data.DataColumn> est écrit au format XML.</span><span class="sxs-lookup"><span data-stu-id="eb533-461">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-462">L’exemple suivant ajoute une propriété personnalisée à la <xref:System.Data.PropertyCollection> retourné par la <xref:System.Data.DataColumn.ExtendedProperties%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="eb533-462">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="eb533-463">Le deuxième exemple récupère la propriété personnalisée.</span><span class="sxs-lookup"><span data-stu-id="eb533-463">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Data.DataColumn.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-464">Gets or sets the maximum length of a text column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-464">Gets or sets the maximum length of a text column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-465">La longueur maximale de la colonne en caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-465">The maximum length of the column in characters.</span>
          </span>
          <span data-ttu-id="eb533-466">Si la colonne n’a aucune longueur maximale, la valeur est -1 (valeur par défaut).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-466">If the column has no maximum length, the value is –1 (default).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-467">Le <xref:System.Data.DataColumn.MaxLength%2A> propriété est ignorée pour les colonnes de non-texte.</span><span class="sxs-lookup"><span data-stu-id="eb533-467">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="eb533-468">Un <xref:System.ArgumentException> exception est levée si vous affectez <xref:System.Data.DataColumn.MaxLength%2A> à une colonne autre qu’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="eb533-468">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataColumn.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-469">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-469">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-470">L’espace de noms du <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-470">The namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-471">Le <xref:System.Data.DataColumn.Namespace%2A> propriété est utilisée lors de la lecture et écriture d’un document XML document dans un <xref:System.Data.DataTable> dans le <xref:System.Data.DataSet> à l’aide de la <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, ou <xref:System.Data.DataSet.WriteXmlSchema%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="eb533-471">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="eb533-472">L’espace de noms d’un document XML est utilisé pour définir la portée des attributs XML et les éléments lors de la lecture dans un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="eb533-472">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="eb533-473">Par exemple, un <xref:System.Data.DataSet> contient un schéma lire à partir d’un document qui a l’espace de noms « myCompany », et une tentative est effectuée pour lire des données (avec la <xref:System.Data.DataSet.ReadXml%2A> méthode) à partir d’un document qui possède l’espace de noms « LeurSociété. »</span><span class="sxs-lookup"><span data-stu-id="eb533-473">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="eb533-474">Toutes les données qui ne correspondant pas au schéma existant va être ignorées.</span><span class="sxs-lookup"><span data-stu-id="eb533-474">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb533-475">The namespace already has data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-475">The namespace already has data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataColumn.OnPropertyChanging pcevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">
          <span data-ttu-id="eb533-476">Parameter reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-476">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb533-477">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-477">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="System.Data.DataColumn.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-478">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-478">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-479">La position de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-479">The position of the column.</span>
          </span>
          <span data-ttu-id="eb533-480">Obtient -1 si la colonne n’est pas un membre d’une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-480">Gets -1 if the column is not a member of a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb533-481">L’exemple suivant retourne la colonne nom, ordinal et type de données d’une colonne.</span><span class="sxs-lookup"><span data-stu-id="eb533-481">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataColumn.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-482">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-482">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-483">Le préfixe XML pour le <see cref="T:System.Data.DataTable" /> espace de noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-483">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-484">Le <xref:System.Data.DataTable.Prefix%2A> est utilisée dans un document XML pour identifier les éléments qui appartiennent à l’espace de noms pour un <xref:System.Data.DataSet> objet (tels que définis par le <xref:System.Data.DataSet.Namespace%2A> propriété).</span><span class="sxs-lookup"><span data-stu-id="eb533-484">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RaisePropertyChanging : string -&gt; unit" Usage="dataColumn.RaisePropertyChanging name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="eb533-485">Parameter reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-485">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb533-486">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-486">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Data.DataColumn.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-487">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-487">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-488">
            <see langword="true" /> Si la colonne est en lecture seule ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-488">
              <see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb533-489">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-489">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb533-490">L’exemple suivant crée un <xref:System.Data.DataColumn> et définit ses <xref:System.Data.DataColumn.ReadOnly%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="eb533-490">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb533-491">The property is set to <see langword="false" /> on a computed column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-491">The property is set to <see langword="false" /> on a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.SetOrdinal : int -&gt; unit" Usage="dataColumn.SetOrdinal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="eb533-492">The specified ordinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-492">The specified ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb533-493">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-493">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-494">Remplace l’ordinal ou la position de la <xref:System.Data.DataColumn> à l’ordinal spécifié ou la position.</span><span class="sxs-lookup"><span data-stu-id="eb533-494">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="eb533-495">Si l’ordinal est inférieur à 0 ou supérieur au nombre de colonnes – 1 (supérieur à l’ordinal de la dernière colonne) existant puis non valide <xref:System.ArgumentException> est levée.</span><span class="sxs-lookup"><span data-stu-id="eb533-495">If ordinal is less than 0 or greater than the existing number of columns – 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="eb533-496">Lorsque vous modifiez les ordinal d’une colonne, la colonne est déplacée vers la nouvelle position dans la collection de colonnes.</span><span class="sxs-lookup"><span data-stu-id="eb533-496">When you change a column’s ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="eb533-497">Toutes les colonnes entre l’ordinal de précédent et nouveau sont renumérotées, pour ajuster l’ordinal de nouveau d’une colonne.</span><span class="sxs-lookup"><span data-stu-id="eb533-497">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataColumn.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-498">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-498">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-499">Le <see cref="T:System.Data.DataTable" /> qui le <see cref="T:System.Data.DataColumn" /> appartient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-499">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb533-500">L’exemple suivant retourne la table parente d’un <xref:System.Data.DataColumn> via son <xref:System.Data.DataColumn.Table%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="eb533-500">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="dataColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb533-501">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-501">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb533-502">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-502">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb533-503">L’exemple suivant utilise le <xref:System.Data.DataColumn.ToString%2A> propriété pour retourner la chaîne par défaut de chaque membre d’une collection de <xref:System.Data.DataColumn> objets.</span><span class="sxs-lookup"><span data-stu-id="eb533-503">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Unique : bool with get, set" Usage="System.Data.DataColumn.Unique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb533-504">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-504">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb533-505">
            <see langword="true" /> Si la valeur doit être unique ; Sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-505">
              <see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb533-506">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-506">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb533-507">Dès que cette propriété est passée de false à true, une contrainte unique est créée sur cette colonne pour vous assurer que les valeurs sont uniques.</span><span class="sxs-lookup"><span data-stu-id="eb533-507">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb533-508">L’exemple suivant crée de nouveaux <xref:System.Data.DataColumn>, définit ses propriétés et l’ajoute à la collection de colonnes d’une table.</span><span class="sxs-lookup"><span data-stu-id="eb533-508">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb533-509">The column is a calculated column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb533-509">The column is a calculated column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
      </Docs>
    </Member>
  </Members>
</Type>