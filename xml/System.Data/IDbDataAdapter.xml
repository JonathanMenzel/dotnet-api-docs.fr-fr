<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3d3320f5641ca0cd337941446b509047e049423" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36745768" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="126d5-101">Représente un jeu de propriétés liées à des commandes qui sont utilisées pour remplir <see cref="T:System.Data.DataSet" /> et mettre à jour une source de données, et est implémenté par les fournisseurs de données .NET Framework qui accèdent à des bases de données relationnelles.</span>
      <span class="sxs-lookup">
        <span data-stu-id="126d5-101">Represents a set of command-related properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="126d5-102">Le <xref:System.Data.IDbDataAdapter> interface hérite de la <xref:System.Data.IDataAdapter> de l’interface et autorise un objet à créer un DataAdapter conçu pour une utilisation avec une base de données relationnelle.</span><span class="sxs-lookup"><span data-stu-id="126d5-102">The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database.</span></span> <span data-ttu-id="126d5-103">Le <xref:System.Data.IDbDataAdapter> interface et, éventuellement, la classe d’utilitaire, <xref:System.Data.Common.DbDataAdapter>, permettent à une classe qui hérite d’implémenter une classe DataAdapter représentant le pont entre une source de données et un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="126d5-103">The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="126d5-104">Pour plus d’informations sur les classes DataAdapter, consultez [remplissage d’un DataSet à partir d’un DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span><span class="sxs-lookup"><span data-stu-id="126d5-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span> <span data-ttu-id="126d5-105">Pour plus d’informations sur l’implémentation des fournisseurs de données .NET Framework, consultez [ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).</span><span class="sxs-lookup"><span data-stu-id="126d5-105">For more information about implementing .NET Framework data providers, see [&#91;\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).</span></span>  
  
 <span data-ttu-id="126d5-106">Une application ne crée pas une instance de la <xref:System.Data.IDbDataAdapter> interface directement, mais crée une instance d’une classe qui hérite de <xref:System.Data.IDbDataAdapter> et <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="126d5-106">An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="126d5-107">Les classes qui héritent <xref:System.Data.IDbDataAdapter> doit implémenter les membres hérités et définissent généralement des membres supplémentaires pour ajouter des fonctionnalités spécifiques au fournisseur.</span><span class="sxs-lookup"><span data-stu-id="126d5-107">Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="126d5-108">Par exemple, le <xref:System.Data.IDbDataAdapter> interface définit les <xref:System.Data.IDbDataAdapter.SelectCommand%2A> propriété et le <xref:System.Data.Common.DbDataAdapter> interface définit un <xref:System.Data.IDataAdapter.Fill%2A> méthode qui prend un <xref:System.Data.DataTable> en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="126d5-108">For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter.</span></span> <span data-ttu-id="126d5-109">À son tour, le <xref:System.Data.OleDb.OleDbDataAdapter> hérite de la classe le <xref:System.Data.IDbDataAdapter.SelectCommand%2A> propriété et la <xref:System.Data.Common.DbDataAdapter.Fill%2A> (méthode) et définit également deux surcharges supplémentaires de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> méthode qui prend un objet de jeu d’enregistrements ADO en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="126d5-109">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="126d5-110">L’exemple suivant utilise les classes dérivées, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> et <xref:System.Data.SqlClient.SqlConnection>pour sélectionner des enregistrements à partir d’une source de données.</span><span class="sxs-lookup"><span data-stu-id="126d5-110">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source.</span></span> <span data-ttu-id="126d5-111">La pleine <xref:System.Data.DataSet> est alors retournée.</span><span class="sxs-lookup"><span data-stu-id="126d5-111">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="126d5-112">Pour ce faire, est passé à la méthode initialisé <xref:System.Data.DataSet>, une chaîne de connexion et une chaîne de requête qui est une instruction Transact-SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="126d5-112">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="126d5-113">
        <para>Pour promouvoir la cohérence entre les fournisseurs de données .NET Framework, nommez la classe qui hérite sous la forme <paramref name="Prv" /> DataAdapter où <paramref name="Prv" /> est le préfixe uniforme affecté à toutes les classes dans un espace de noms de fournisseur de données .NET Framework spécifique. Par exemple, <paramref name="Sql" /> est le préfixe de le <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> classe dans le <see langword="System.Data.SqlClient" /> espace de noms.  Lorsque vous héritez de la <see cref="T:System.Data.IDbDataAdapter" /> interface, vous devez implémenter les constructeurs suivants : <list type="table"><listheader><term> élément </term><description> Description </description></listheader><item><term> PrvDataAdapter() </term><description> Initialise une nouvelle instance de la classe PrvDataAdapter.  </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand) </term><description> Initialise une nouvelle instance de la classe PrvDataAdapter avec l’instruction SQL SELECT spécifiée.  </description></item><item><term> PrvDataAdapter (selectCommandText de chaîne, chaîne selectConnectionString) </term><description> Initialise une nouvelle instance de la classe PrvDataAdapter avec une instruction SQL SELECT et une chaîne de connexion.  </description></item><item><term> PrvDataAdapter (chaîne selectCommandText, PrvConnection selectConnection) </term><description> Initialise une nouvelle instance de la classe PrvDataAdapter avec une instruction SQL SELECT et un objet PrvConnection.  </description></item></list></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="126d5-113">
          <para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.  When you inherit from the <see cref="T:System.Data.IDbDataAdapter" /> interface, you should implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> PrvDataAdapter()  </term><description> Initializes a new instance of the PrvDataAdapter class.  </description></item><item><term> PrvDataAdapter(PrvCommand selectCommand)  </term><description> Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.  </description></item><item><term> PrvDataAdapter(string selectCommandText, string selectConnectionString)  </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.  </description></item><item><term> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)  </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.  </description></item></list></para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="126d5-114">Obtient ou définit une instruction SQL permettant de supprimer les enregistrements du groupe de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="126d5-114">Gets or sets an SQL statement for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="126d5-115">
            <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour supprimer les enregistrements de la source de données des lignes supprimées dans le groupe de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="126d5-115">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="126d5-116">Au cours de <xref:System.Data.Common.DbDataAdapter.Update%2A>, si cette propriété n’est pas définie et les informations de clé primaire sont présentes dans le <xref:System.Data.DataSet>, le <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> peut être généré automatiquement si vous définissez le `SelectCommand` propriété d’un fournisseur de données .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="126d5-116">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="126d5-117">Ensuite, toutes les commandes que vous ne définissez pas sont générées par CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="126d5-117">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="126d5-118">Cette logique de génération requiert des informations de colonne clé dans le <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="126d5-118">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="126d5-119">Pour plus d’informations, consultez [génération de commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="126d5-119">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="126d5-120">Lors de la <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> est attribué à un créé précédemment <xref:System.Data.IDbCommand>, le <xref:System.Data.IDbCommand> n’est pas cloné.</span><span class="sxs-lookup"><span data-stu-id="126d5-120">When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="126d5-121">Le <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> conserve une référence à précédemment créé <xref:System.Data.IDbCommand> objet.</span><span class="sxs-lookup"><span data-stu-id="126d5-121">The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="126d5-122">L’exemple suivant crée une instance de la <xref:System.Data.OleDb.OleDbDataAdapter> classe et affecte le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="126d5-122">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="126d5-123">Il suppose que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.</span><span class="sxs-lookup"><span data-stu-id="126d5-123">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="126d5-124">Obtient ou définit une instruction SQL utilisée pour insérer de nouveaux enregistrements dans la source de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="126d5-124">Gets or sets an SQL statement used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="126d5-125">
            <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour insérer des enregistrements dans la source de données pour les nouvelles lignes du groupe de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="126d5-125">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="126d5-126">Au cours de <xref:System.Data.Common.DbDataAdapter.Update%2A>, si cette propriété n’est pas définie et les informations de clé primaire sont présentes dans le <xref:System.Data.DataSet>, le <xref:System.Data.IDbDataAdapter.InsertCommand%2A> peut être généré automatiquement si vous définissez le `SelectCommand` propriété d’un fournisseur de données .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="126d5-126">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="126d5-127">Ensuite, toutes les commandes que vous ne définissez pas sont générées par CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="126d5-127">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="126d5-128">Cette logique de génération requiert des informations de colonne clé dans le <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="126d5-128">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="126d5-129">Pour plus d’informations, consultez [génération de commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="126d5-129">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="126d5-130">Lors de la <xref:System.Data.IDbDataAdapter.InsertCommand%2A> est attribué à un créé précédemment <xref:System.Data.IDbCommand>, le <xref:System.Data.IDbCommand> n’est pas cloné.</span><span class="sxs-lookup"><span data-stu-id="126d5-130">When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="126d5-131">Le <xref:System.Data.IDbDataAdapter.InsertCommand%2A> conserve une référence à précédemment créé <xref:System.Data.IDbCommand> objet.</span><span class="sxs-lookup"><span data-stu-id="126d5-131">The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="126d5-132">Si l’exécution de cette commande retourne des lignes, ces lignes peuvent être ajoutées à la <xref:System.Data.DataSet> selon la façon dont vous définissez la <xref:System.Data.IDbCommand.UpdatedRowSource%2A> propriété de la <xref:System.Data.IDbCommand> objet.</span><span class="sxs-lookup"><span data-stu-id="126d5-132">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="126d5-133">L’exemple suivant crée une instance de la <xref:System.Data.OleDb.OleDbDataAdapter> classe et affecte le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="126d5-133">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="126d5-134">Il suppose que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.</span><span class="sxs-lookup"><span data-stu-id="126d5-134">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="126d5-135">Obtient ou définit une instruction SQL utilisée pour sélectionner des enregistrements dans la source de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="126d5-135">Gets or sets an SQL statement used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="126d5-136">
            <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour sélectionner des enregistrements de la source de données afin de les placer dans le groupe de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="126d5-136">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="126d5-137">Lors de la <xref:System.Data.IDbDataAdapter.SelectCommand%2A> est attribué à un créé précédemment <xref:System.Data.IDbCommand>, le <xref:System.Data.IDbCommand> n’est pas cloné.</span><span class="sxs-lookup"><span data-stu-id="126d5-137">When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="126d5-138">Le <xref:System.Data.IDbDataAdapter.SelectCommand%2A> conserve une référence à précédemment créé <xref:System.Data.IDbCommand> objet.</span><span class="sxs-lookup"><span data-stu-id="126d5-138">The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
 <span data-ttu-id="126d5-139">Si le <xref:System.Data.IDbDataAdapter.SelectCommand%2A> ne retourne pas de lignes, aucune table n’est ajoutés à la <xref:System.Data.DataSet>, et aucune exception n’est déclenchée.</span><span class="sxs-lookup"><span data-stu-id="126d5-139">If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="126d5-140">L’exemple suivant crée une instance de la <xref:System.Data.OleDb.OleDbDataAdapter> classe et affecte le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="126d5-140">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="126d5-141">Il suppose que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.</span><span class="sxs-lookup"><span data-stu-id="126d5-141">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="126d5-142">Obtient ou définit une instruction SQL utilisée pour mettre à jour les enregistrements dans la source de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="126d5-142">Gets or sets an SQL statement used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="126d5-143">
            <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour mettre à jour les enregistrements de la source de données pour des lignes modifiées dans le groupe de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="126d5-143">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="126d5-144">Au cours de <xref:System.Data.Common.DbDataAdapter.Update%2A>, si cette propriété n’est pas définie et les informations de clé primaire sont présentes dans le <xref:System.Data.DataSet>, le <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> peut être généré automatiquement si vous définissez le `SelectCommand` propriété d’un fournisseur de données .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="126d5-144">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="126d5-145">Ensuite, toutes les commandes que vous ne définissez pas sont générées par CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="126d5-145">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="126d5-146">Cette logique de génération requiert des informations de colonne clé dans le <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="126d5-146">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="126d5-147">Pour plus d’informations, consultez [génération de commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="126d5-147">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="126d5-148">Lors de la <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> est attribué à un créé précédemment <xref:System.Data.IDbCommand>, le <xref:System.Data.IDbCommand> n’est pas cloné.</span><span class="sxs-lookup"><span data-stu-id="126d5-148">When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="126d5-149">Le <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> conserve une référence à précédemment créé <xref:System.Data.IDbCommand> objet.</span><span class="sxs-lookup"><span data-stu-id="126d5-149">The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="126d5-150">Si l’exécution de cette commande retourne des lignes, ces lignes sont ajoutées à la <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="126d5-150">If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="126d5-151">L’exemple suivant crée une instance de la <xref:System.Data.OleDb.OleDbDataAdapter> classe et affecte le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="126d5-151">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="126d5-152">Il suppose que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.</span><span class="sxs-lookup"><span data-stu-id="126d5-152">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>