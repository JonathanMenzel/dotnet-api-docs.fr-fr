<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7b8552f0b8cc3c321fda2dc30b6b5908095956ab" /><Meta Name="ms.sourcegitcommit" Value="800d45fb80a298c4bde743e8a40af69755fc850f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/24/2019" /><Meta Name="ms.locfileid" Value="54895328" /></Metadata><TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Représente un jeu de propriétés liées à des commandes qui sont utilisées pour remplir <see cref="T:System.Data.DataSet" /> et mettre à jour une source de données, et est implémenté par les fournisseurs de données .NET Framework qui accèdent à des bases de données relationnelles.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.IDbDataAdapter> interface hérite le <xref:System.Data.IDataAdapter> interface et permet à un objet créer un DataAdapter conçu pour être utilisé avec une base de données relationnelle. Le <xref:System.Data.IDbDataAdapter> interface et, éventuellement, la classe d’utilitaire, <xref:System.Data.Common.DbDataAdapter>, permettent à une classe qui hérite d’implémenter une classe DataAdapter, qui représente le pont entre une source de données et un <xref:System.Data.DataSet>. Pour plus d’informations sur les classes DataAdapter, consultez [remplissage d’un DataSet à partir d’un DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md). Pour plus d’informations sur l’implémentation des fournisseurs de données .NET Framework, consultez [implémentation d’un fournisseur de données .NET Framework](https://docs.microsoft.com/previous-versions/dotnet/netframework-1.1/4ksaf9z5(v=vs.71)).  
  
 Une application ne crée pas une instance de la <xref:System.Data.IDbDataAdapter> interface directement, mais crée une instance d’une classe qui hérite de <xref:System.Data.IDbDataAdapter> et <xref:System.Data.Common.DbDataAdapter>.  
  
 Les classes qui héritent <xref:System.Data.IDbDataAdapter> doit implémenter les membres hérités et définissent généralement des membres supplémentaires pour ajouter des fonctionnalités spécifiques au fournisseur. Par exemple, le <xref:System.Data.IDbDataAdapter> interface définit les <xref:System.Data.IDbDataAdapter.SelectCommand%2A> propriété et le <xref:System.Data.Common.DbDataAdapter> interface définit un <xref:System.Data.IDataAdapter.Fill%2A> méthode qui prend un <xref:System.Data.DataTable> en tant que paramètre. À son tour, le <xref:System.Data.OleDb.OleDbDataAdapter> hérite de la classe la <xref:System.Data.IDbDataAdapter.SelectCommand%2A> propriété et la <xref:System.Data.Common.DbDataAdapter.Fill%2A> (méthode) et définit également deux surcharges supplémentaires de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> méthode qui prend un objet de jeu d’enregistrements ADO en tant que paramètre.  
  
   
  
## Examples  
 L’exemple suivant utilise les classes dérivées, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> et <xref:System.Data.SqlClient.SqlConnection>, pour sélectionner des enregistrements à partir d’une source de données. La pleine <xref:System.Data.DataSet> est alors retournée. Pour ce faire, est passé à la méthode initialisé <xref:System.Data.DataSet>, une chaîne de connexion et une chaîne de requête qui est une instruction Transact-SQL SELECT.  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Pour promouvoir la cohérence entre les fournisseurs de données .NET Framework, nommez la classe qui hérite sous la forme <paramref name="Prv" /> DataAdapter où <paramref name="Prv" /> est le préfixe uniforme affecté à toutes les classes dans un espace de noms de fournisseur de données .NET Framework spécifique. Par exemple, <paramref name="Sql" /> est le préfixe de le <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> classe dans le <see langword="System.Data.SqlClient" /> espace de noms.  
  
Lorsque vous héritez de la <see cref="T:System.Data.IDbDataAdapter" /> interface, vous devez implémenter les constructeurs suivants : 
 <list type="table"><listheader><term> Élément 
 </term><description> Description  
 </description></listheader><item><term> PrvDataAdapter() 
 </term><description> Initialise une nouvelle instance de la classe PrvDataAdapter.  
  
 </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand) 
 </term><description> Initialise une nouvelle instance de la classe PrvDataAdapter avec l’instruction SQL SELECT spécifiée.  
  
 </description></item><item><term> PrvDataAdapter(string selectCommandText, string selectConnectionString) 
 </term><description> Initialise une nouvelle instance de la classe PrvDataAdapter avec une instruction SQL SELECT et une chaîne de connexion.  
  
 </description></item><item><term> PrvDataAdapter (chaîne selectCommandText, PrvConnection selectConnection) 
 </term><description> Initialise une nouvelle instance de la classe PrvDataAdapter avec une instruction SQL SELECT et un objet PrvConnection.  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une instruction SQL permettant de supprimer les enregistrements du groupe de données.</summary>
        <value><see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour supprimer les enregistrements de la source de données des lignes supprimées dans le groupe de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Au cours de <xref:System.Data.Common.DbDataAdapter.Update%2A>, si cette propriété n’est pas définie et informations de clé primaire sont présentes dans le <xref:System.Data.DataSet>, le <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> peut être généré automatiquement si vous définissez le `SelectCommand` propriété d’un fournisseur de données .NET Framework. Ensuite, toutes les commandes que vous ne définissez pas sont générées par CommandBuilder. Cette logique de génération nécessite des informations de colonne clé dans le <xref:System.Data.DataSet>. Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Lorsque <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> est affecté à un créé précédemment <xref:System.Data.IDbCommand>, le <xref:System.Data.IDbCommand> ne sont pas clonés. Le <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> conserve une référence à l’élément précédemment créé <xref:System.Data.IDbCommand> objet.  
  
   
  
## Examples  
 L’exemple suivant crée une instance de l’élément hérité <xref:System.Data.OleDb.OleDbDataAdapter> classe et affecte le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> propriétés. Il part du principe que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une instruction SQL utilisée pour insérer de nouveaux enregistrements dans la source de données.</summary>
        <value><see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour insérer des enregistrements dans la source de données pour les nouvelles lignes du groupe de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Au cours de <xref:System.Data.Common.DbDataAdapter.Update%2A>, si cette propriété n’est pas définie et informations de clé primaire sont présentes dans le <xref:System.Data.DataSet>, le <xref:System.Data.IDbDataAdapter.InsertCommand%2A> peut être généré automatiquement si vous définissez le `SelectCommand` propriété d’un fournisseur de données .NET Framework. Ensuite, toutes les commandes que vous ne définissez pas sont générées par CommandBuilder. Cette logique de génération nécessite des informations de colonne clé dans le <xref:System.Data.DataSet>. Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Lorsque <xref:System.Data.IDbDataAdapter.InsertCommand%2A> est affecté à un créé précédemment <xref:System.Data.IDbCommand>, le <xref:System.Data.IDbCommand> ne sont pas clonés. Le <xref:System.Data.IDbDataAdapter.InsertCommand%2A> conserve une référence à l’élément précédemment créé <xref:System.Data.IDbCommand> objet.  
  
> [!NOTE]
>  Si l’exécution de cette commande retourne des lignes, ces lignes peuvent être ajoutées à la <xref:System.Data.DataSet> selon la façon dont vous définissez la <xref:System.Data.IDbCommand.UpdatedRowSource%2A> propriété de la <xref:System.Data.IDbCommand> objet.  
  
   
  
## Examples  
 L’exemple suivant crée une instance de l’élément hérité <xref:System.Data.OleDb.OleDbDataAdapter> classe et affecte le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propriétés. Il part du principe que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une instruction SQL utilisée pour sélectionner des enregistrements dans la source de données.</summary>
        <value><see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour sélectionner des enregistrements de la source de données afin de les placer dans le groupe de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque <xref:System.Data.IDbDataAdapter.SelectCommand%2A> est affecté à un créé précédemment <xref:System.Data.IDbCommand>, le <xref:System.Data.IDbCommand> ne sont pas clonés. Le <xref:System.Data.IDbDataAdapter.SelectCommand%2A> conserve une référence à l’élément précédemment créé <xref:System.Data.IDbCommand> objet.  
  
 Si le <xref:System.Data.IDbDataAdapter.SelectCommand%2A> ne retourne pas de lignes, aucune table n’est ajoutés à la <xref:System.Data.DataSet>, et aucune exception n’est levée.  
  
   
  
## Examples  
 L’exemple suivant crée une instance de l’élément hérité <xref:System.Data.OleDb.OleDbDataAdapter> classe et affecte le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propriétés. Il part du principe que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une instruction SQL utilisée pour mettre à jour les enregistrements dans la source de données.</summary>
        <value><see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour mettre à jour les enregistrements de la source de données pour des lignes modifiées dans le groupe de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Au cours de <xref:System.Data.Common.DbDataAdapter.Update%2A>, si cette propriété n’est pas définie et informations de clé primaire sont présentes dans le <xref:System.Data.DataSet>, le <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> peut être généré automatiquement si vous définissez le `SelectCommand` propriété d’un fournisseur de données .NET Framework. Ensuite, toutes les commandes que vous ne définissez pas sont générées par CommandBuilder. Cette logique de génération nécessite des informations de colonne clé dans le <xref:System.Data.DataSet>. Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Lorsque <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> est affecté à un créé précédemment <xref:System.Data.IDbCommand>, le <xref:System.Data.IDbCommand> ne sont pas clonés. Le <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> conserve une référence à l’élément précédemment créé <xref:System.Data.IDbCommand> objet.  
  
> [!NOTE]
>  Si l’exécution de cette commande retourne des lignes, ces lignes sont ajoutées à la <xref:System.Data.DataSet>.  
  
   
  
## Examples  
 L’exemple suivant crée une instance de l’élément hérité <xref:System.Data.OleDb.OleDbDataAdapter> classe et affecte le <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> et <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> propriétés. Il part du principe que vous avez déjà créé un <xref:System.Data.OleDb.OleDbConnection> objet.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>