<Type Name="DataTableReader" FullName="System.Data.DataTableReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d96f365684ba6298910d34f1cda3153f7d6f8e88" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58744500" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataTableReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type DataTableReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="afbf7-101">L'objet <see cref="T:System.Data.DataTableReader" /> obtient le contenu d'un ou plusieurs objets <see cref="T:System.Data.DataTable" /> sous la forme d'un ou plusieurs jeux de résultats en lecture seule et en avant uniquement.</span><span class="sxs-lookup"><span data-stu-id="afbf7-101">The <see cref="T:System.Data.DataTableReader" /> obtains the contents of one or more <see cref="T:System.Data.DataTable" /> objects in the form of one or more read-only, forward-only result sets.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-102">Le <xref:System.Data.DataTableReader> fonctionne comme tout autre lecteur de données, telles que la <xref:System.Data.SqlClient.SqlDataReader>, sauf que le <xref:System.Data.DataTableReader> permet d’itérer les lignes dans un <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-102">The <xref:System.Data.DataTableReader> works much like any other data reader, such as the <xref:System.Data.SqlClient.SqlDataReader>, except that the <xref:System.Data.DataTableReader> provides for iterating over rows in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="afbf7-103">En d’autres termes, il fournit pour itérer sur des lignes dans un cache.</span><span class="sxs-lookup"><span data-stu-id="afbf7-103">In other words, it provides for iterating over rows in a cache.</span></span> <span data-ttu-id="afbf7-104">Les données mises en cache peuvent être modifiées pendant que le <xref:System.Data.DataTableReader> est actif, et le lecteur maintient automatiquement sa position.</span><span class="sxs-lookup"><span data-stu-id="afbf7-104">The cached data can be modified while the <xref:System.Data.DataTableReader> is active, and the reader automatically maintains its position.</span></span>  
  
 <span data-ttu-id="afbf7-105">Lorsque vous créez un <xref:System.Data.DataTableReader> à partir d’un <xref:System.Data.DataTable>, résultant <xref:System.Data.DataTableReader> objet contient un jeu de résultats avec les mêmes données que le <xref:System.Data.DataTable> à partir de laquelle il a été créé, à l’exception de toutes les lignes qui ont été marquées comme supprimées.</span><span class="sxs-lookup"><span data-stu-id="afbf7-105">When you create a <xref:System.Data.DataTableReader> from a <xref:System.Data.DataTable>, the resulting <xref:System.Data.DataTableReader> object contains one result set with the same data as the <xref:System.Data.DataTable> from which it was created, except for any rows that have been marked as deleted.</span></span> <span data-ttu-id="afbf7-106">Les colonnes apparaissent dans le même ordre que dans la version d’origine <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-106">The columns appear in the same order as in the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="afbf7-107">La structure du résultat retourné est identique dans le schéma et les données à l’original <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-107">The structure of the returned result is identical in schema and data to the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="afbf7-108">Un <xref:System.Data.DataTableReader> qui a été créé en appelant le <xref:System.Data.DataSet.CreateDataReader*> méthode d’un <xref:System.Data.DataSet> objet contient plusieurs jeux de résultats si le <xref:System.Data.DataSet> contient plusieurs tables.</span><span class="sxs-lookup"><span data-stu-id="afbf7-108">A <xref:System.Data.DataTableReader> that was created by calling the <xref:System.Data.DataSet.CreateDataReader*> method of a <xref:System.Data.DataSet> object contains multiple result sets if the <xref:System.Data.DataSet> contains more than one table.</span></span> <span data-ttu-id="afbf7-109">Les résultats sont dans la même séquence que les <xref:System.Data.DataTable> des objets dans le <xref:System.Data.DataTableCollection> de la <xref:System.Data.DataSet> objet.</span><span class="sxs-lookup"><span data-stu-id="afbf7-109">The results are in the same sequence as the <xref:System.Data.DataTable> objects in the <xref:System.Data.DataTableCollection> of the <xref:System.Data.DataSet> object.</span></span>  
  
 <span data-ttu-id="afbf7-110">Le jeu de résultats retourné contient uniquement la version actuelle de chaque <xref:System.Data.DataRow>; les lignes marquées pour suppression sont ignorées.</span><span class="sxs-lookup"><span data-stu-id="afbf7-110">The returned result set contains only the current version of each <xref:System.Data.DataRow>; rows that are marked for deletion are skipped.</span></span>  
  
 <span data-ttu-id="afbf7-111">Le `DataTableReader` fournit une stable itérateur ; autrement dit, le contenu de la `DataTableReader` ne sont pas invalidées si la taille de la collection sous-jacente est modifiée pendant l’itération.</span><span class="sxs-lookup"><span data-stu-id="afbf7-111">The `DataTableReader` provides a stable iterator; that is, the contents of the `DataTableReader` are not invalidated if the size of the underlying collection is modified during iteration.</span></span> <span data-ttu-id="afbf7-112">Par exemple, si une ou plusieurs lignes dans le <xref:System.Data.DataTable.Rows%2A> collection sont supprimés ou supprimées pendant l’itération, la position actuelle dans le `DataTableReader` est conservée de manière appropriée et elle n’invalide pas l’itérateur.</span><span class="sxs-lookup"><span data-stu-id="afbf7-112">For example, if one or more rows in the <xref:System.Data.DataTable.Rows%2A> collection are deleted or removed during iteration, the current position within the `DataTableReader` is maintained appropriately and it does not invalidate the iterator.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="afbf7-113">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTableReader" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-113">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="afbf7-114"><see cref="T:System.Data.DataTable" /> à partir duquel le nouveau <see cref="T:System.Data.DataTableReader" /> obtient son jeu de résultats.</span><span class="sxs-lookup"><span data-stu-id="afbf7-114">The <see cref="T:System.Data.DataTable" /> from which the new <see cref="T:System.Data.DataTableReader" /> obtains its result set.</span></span></param>
        <summary><span data-ttu-id="afbf7-115">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTableReader" /> en utilisant des données provenant du <see cref="T:System.Data.DataTable" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="afbf7-115">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class by using data from the supplied <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable[] -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTables" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="afbf7-116">Tableau d'objets <see cref="T:System.Data.DataTable" /> qui fournit les résultats pour le nouvel objet <see cref="T:System.Data.DataTableReader" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-116">The array of <see cref="T:System.Data.DataTable" /> objects that supplies the results for the new <see cref="T:System.Data.DataTableReader" /> object.</span></span></param>
        <summary><span data-ttu-id="afbf7-117">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTableReader" /> avec le tableau d'objets <see cref="T:System.Data.DataTable" /> fourni.</span><span class="sxs-lookup"><span data-stu-id="afbf7-117">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class using the supplied array of <see cref="T:System.Data.DataTable" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-118">Si vous devez créer un <xref:System.Data.DataTableReader> basé sur tout ou partie des tables au sein d’un spécifique <xref:System.Data.DataSet>, appelez le `DataSet`de <xref:System.Data.DataSet.CreateDataReader*> (méthode).</span><span class="sxs-lookup"><span data-stu-id="afbf7-118">If you must create a <xref:System.Data.DataTableReader> based on all or a subset of the tables within a specific <xref:System.Data.DataSet>, call the `DataSet`'s <xref:System.Data.DataSet.CreateDataReader*> method.</span></span> <span data-ttu-id="afbf7-119">Si vous souhaitez créer un nouveau <xref:System.Data.DataTableReader> instance basée sur un groupe de `DataTable` instances qui ne sont pas autres liées, utilisez ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="afbf7-119">If you want to create a new <xref:System.Data.DataTableReader> instance based on a group of `DataTable` instances that are not otherwise related, use this constructor.</span></span> <span data-ttu-id="afbf7-120">Vous pouvez également tirer parti de ce constructeur pour réorganiser l’ordre de la `DataTables` au sein de la `DataTableReader`, si leur classement dans leur source `DataSet` ne répond pas à vos besoins.</span><span class="sxs-lookup"><span data-stu-id="afbf7-120">You can also take advantage of this constructor to rearrange the ordering of the `DataTables` within the `DataTableReader`, if their ordering within their source `DataSet` does not meet your needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-121">Dans l’exemple suivant, la méthode TestConstructor crée deux <xref:System.Data.DataTable> instances.</span><span class="sxs-lookup"><span data-stu-id="afbf7-121">In the following example, the TestConstructor method creates two <xref:System.Data.DataTable> instances.</span></span> <span data-ttu-id="afbf7-122">Pour montrer ce constructeur pour le <xref:System.Data.DataTableReader> (classe), l’exemple crée un `DataTableReader` basé sur un tableau qui contient les deux `DataTables`et effectue une opération simple, en imprimant le contenu à partir des premières colonnes dans la console fenêtre.</span><span class="sxs-lookup"><span data-stu-id="afbf7-122">In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window.</span></span> <span data-ttu-id="afbf7-123">Pour tester cette application, créez une application Console et collez l’exemple de code dans le fichier nouvellement créé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-123">In order to test this application, create a new Console application, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/VB/source.vb#1)]  
  
 <span data-ttu-id="afbf7-124">La fenêtre de Console affiche les résultats suivants :</span><span class="sxs-lookup"><span data-stu-id="afbf7-124">The Console window displays the following results:</span></span>  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="dataTableReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afbf7-125">Ferme le <see cref="T:System.Data.DataTableReader" /> en cours.</span><span class="sxs-lookup"><span data-stu-id="afbf7-125">Closes the current <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-126">Appel `Close()` sur un fermé `DataTableReader` objet ne génère pas d’erreur.</span><span class="sxs-lookup"><span data-stu-id="afbf7-126">Calling `Close()` on a closed `DataTableReader` object does not raise an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.DataTableReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="afbf7-127">Profondeur d'imbrication de la ligne en cours du <see cref="T:System.Data.DataTableReader" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-127">The depth of nesting for the current row of the <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <value><span data-ttu-id="afbf7-128">Profondeur d'imbrication de la ligne en cours ; toujours zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-128">The depth of nesting for the current row; always zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-129">`DataTableReader` ne prend pas en charge l’imbrication.</span><span class="sxs-lookup"><span data-stu-id="afbf7-129">`DataTableReader` does not support nesting.</span></span> <span data-ttu-id="afbf7-130">Le `Depth` propriété retourne toujours zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-130">The `Depth` property always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.DataTableReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="afbf7-131">Retourne le nombre de colonnes figurant dans la ligne en cours.</span><span class="sxs-lookup"><span data-stu-id="afbf7-131">Returns the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="afbf7-132">0 en l'absence de positionnement dans un jeu de résultats valide ; sinon, le nombre de colonnes figurant dans la ligne en cours.</span><span class="sxs-lookup"><span data-stu-id="afbf7-132">When not positioned in a valid result set, 0; otherwise the number of columns in the current row.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-133">Une tentative a été effectuée pour récupérer le nombre de champs dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-133">An attempt was made to retrieve the field count in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="dataTableReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-134">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-134">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="afbf7-135">Obtient la valeur de la colonne spécifiée sous la forme d'un <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-135">Gets the value of the specified column as a <see cref="T:System.Boolean" />.</span></span></summary>
        <returns><span data-ttu-id="afbf7-136">Valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-136">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-137">Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être une valeur booléenne ou être converti en une valeur booléenne ou une exception est générée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-137">No conversions are performed; therefore the data retrieved must either already be a Boolean or coercible to a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="afbf7-138">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-138">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-139">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le passé dans <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-139">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-140">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-140">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-141">Si les données figurant dans la colonne ne sont pas le type correct, l’exemple affiche un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-141">If the data within the column is not the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-142">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-142">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-143">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-143">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-144">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-144">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-145">La colonne spécifiée ne contient pas de <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-145">The specified column does not contain a <see langword="Boolean" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="dataTableReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-146">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-146">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="afbf7-147">Obtient la valeur de la colonne spécifiée sous la forme d'un octet.</span><span class="sxs-lookup"><span data-stu-id="afbf7-147">Gets the value of the specified column as a byte.</span></span></summary>
        <returns><span data-ttu-id="afbf7-148">Valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-148">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-149">Aucuns conversions ne sont effectuées ; Par conséquent les données récupérées doivent déjà être octet ou être converti en un octet.</span><span class="sxs-lookup"><span data-stu-id="afbf7-149">No conversions are performed; therefore the data retrieved must already be a byte or coercible to a byte.</span></span>  
  
 <span data-ttu-id="afbf7-150">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-150">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-151">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le passé dans <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-151">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-152">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-152">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-153">Si les données figurant dans la colonne ne sont pas du type correct, l’exemple affiche un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-153">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetByte#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetByte#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-154">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-154">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-155">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-155">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-156">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-156">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-157">La colonne spécifiée ne contient pas d'octet.</span><span class="sxs-lookup"><span data-stu-id="afbf7-157">The specified column does not contain a byte.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dataTableReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-158">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-158">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="afbf7-159">L’index figurant dans le champ à partir duquel l’opération de lecture doit être lancée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-159">The index within the field from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="afbf7-160">La mémoire tampon dans laquelle le flux d’octets doit être lu.</span><span class="sxs-lookup"><span data-stu-id="afbf7-160">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="afbf7-161">Index de la mémoire tampon à partir duquel commencer à placer les données.</span><span class="sxs-lookup"><span data-stu-id="afbf7-161">The index within the buffer at which to start placing the data.</span></span></param>
        <param name="length"><span data-ttu-id="afbf7-162">Longueur maximale à copier dans la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="afbf7-162">The maximum length to copy into the buffer.</span></span></param>
        <summary><span data-ttu-id="afbf7-163">Lit un flux d'octets à partir de l'offset de colonne spécifié dans la mémoire tampon, sous la forme d'un tableau en commençant à l'offset de mémoire tampon spécifié.</span><span class="sxs-lookup"><span data-stu-id="afbf7-163">Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.</span></span></summary>
        <returns><span data-ttu-id="afbf7-164">Nombre réel d'octets lus.</span><span class="sxs-lookup"><span data-stu-id="afbf7-164">The actual number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-165">`GetBytes` Retourne le nombre d’octets disponibles dans le champ.</span><span class="sxs-lookup"><span data-stu-id="afbf7-165">`GetBytes` returns the number of available bytes in the field.</span></span> <span data-ttu-id="afbf7-166">La plupart du temps il s’agit de la longueur exacte du champ.</span><span class="sxs-lookup"><span data-stu-id="afbf7-166">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="afbf7-167">Toutefois, le nombre retourné peut être inférieure à la longueur réelle du champ si `GetBytes` a déjà été utilisé pour obtenir des octets à partir du champ.</span><span class="sxs-lookup"><span data-stu-id="afbf7-167">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="afbf7-168">Cela peut être le cas, par exemple, lorsque le <xref:System.Data.DataTableReader> lit une structure de données volumineux dans une mémoire tampon</span><span class="sxs-lookup"><span data-stu-id="afbf7-168">This may be the case, for example, when the <xref:System.Data.DataTableReader> is reading a large data structure into a buffer</span></span>  
  
 <span data-ttu-id="afbf7-169">Si vous passez une mémoire tampon qui est `null` (`Nothing` en Visual Basic), `GetBytes` retourne la longueur totale du champ en octets, pas la taille restante selon le paramètre offset de mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="afbf7-169">If you pass a buffer that is `null` (`Nothing` in Visual Basic), `GetBytes` returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="afbf7-170">Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un tableau d’octets ou pouvoir être converties en un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="afbf7-170">No conversions are performed; therefore the data retrieved must already be a byte array or coercible to a byte array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-171">L’exemple suivant crée un <xref:System.Data.DataTableReader> en fonction des données dans la base de données AdventureWorks et enregistre chaque image récupérée dans un fichier distinct dans le dossier C:\.</span><span class="sxs-lookup"><span data-stu-id="afbf7-171">The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\ folder.</span></span> <span data-ttu-id="afbf7-172">Pour tester cette application, créez une application Console, référencer l’assembly System.Drawing.dll et collez l’exemple de code dans le fichier nouvellement créé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-172">In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-173">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-173">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-174">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-174">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-175">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-175">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-176">La colonne spécifiée ne contient pas de tableau d'octets.</span><span class="sxs-lookup"><span data-stu-id="afbf7-176">The specified column does not contain a byte array.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="dataTableReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-177">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-177">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="afbf7-178">Obtient la valeur de la colonne spécifiée sous la forme d'un caractère.</span><span class="sxs-lookup"><span data-stu-id="afbf7-178">Gets the value of the specified column as a character.</span></span></summary>
        <returns><span data-ttu-id="afbf7-179">La valeur de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-179">The value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-180">Aucuns conversions ne sont effectuées ; Par conséquent les données récupérées doivent déjà être un caractère ou pouvoir être converties en un caractère.</span><span class="sxs-lookup"><span data-stu-id="afbf7-180">No conversions are performed; therefore the data retrieved must already be a character or coercible to a character.</span></span>  
  
 <span data-ttu-id="afbf7-181">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-181">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-182">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le DataTableReader passé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-182">The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</span></span> <span data-ttu-id="afbf7-183">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-183">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-184">Si les données figurant dans la colonne ne sont pas du type correct, l’exemple affiche un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-184">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetChar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-185">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-185">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-186">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-186">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-187">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-187">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-188">Le champ spécifié ne contient pas de caractère.</span><span class="sxs-lookup"><span data-stu-id="afbf7-188">The specified field does not contain a character.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dataTableReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-189">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-189">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="afbf7-190">L’index figurant dans le champ à partir duquel l’opération de lecture doit être lancée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-190">The index within the field from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="afbf7-191">Mémoire tampon dans laquelle lire le flux de caractères.</span><span class="sxs-lookup"><span data-stu-id="afbf7-191">The buffer into which to read the stream of chars.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="afbf7-192">Index de la mémoire tampon à partir duquel commencer à placer les données.</span><span class="sxs-lookup"><span data-stu-id="afbf7-192">The index within the buffer at which to start placing the data.</span></span></param>
        <param name="length"><span data-ttu-id="afbf7-193">Longueur maximale à copier dans la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="afbf7-193">The maximum length to copy into the buffer.</span></span></param>
        <summary><span data-ttu-id="afbf7-194">Retourne la valeur de la colonne spécifiée sous la forme d'un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="afbf7-194">Returns the value of the specified column as a character array.</span></span></summary>
        <returns><span data-ttu-id="afbf7-195">Nombre réel de caractères lus.</span><span class="sxs-lookup"><span data-stu-id="afbf7-195">The actual number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-196">`GetChars` Retourne le nombre de caractères disponibles dans le champ.</span><span class="sxs-lookup"><span data-stu-id="afbf7-196">`GetChars` returns the number of available characters in the field.</span></span> <span data-ttu-id="afbf7-197">La plupart du temps il s’agit de la longueur exacte du champ.</span><span class="sxs-lookup"><span data-stu-id="afbf7-197">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="afbf7-198">Toutefois, le nombre retourné peut être inférieure à la longueur réelle du champ si `GetChars` a déjà été utilisé pour obtenir des caractères à partir du champ.</span><span class="sxs-lookup"><span data-stu-id="afbf7-198">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span>  
  
 <span data-ttu-id="afbf7-199">Le nombre réel de caractères lus peut être inférieure à la longueur demandée, si la fin du champ est atteinte.</span><span class="sxs-lookup"><span data-stu-id="afbf7-199">The actual number of characters read can be less than the requested length, if the end of the field is reached.</span></span> <span data-ttu-id="afbf7-200">Si vous passez une mémoire tampon qui a la valeur null (`Nothing` en Visual Basic), `GetChars` retourne la longueur du champ entier en caractères, pas la taille restante selon le paramètre offset de mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="afbf7-200">If you pass a buffer that is null (`Nothing` in Visual Basic), `GetChars` returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="afbf7-201">Aucuns conversions ne sont effectuées ; Par conséquent, les données à récupérer doivent déjà être un tableau de caractères ou pouvoir être converties en un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="afbf7-201">No conversions are performed; therefore the data to be retrieved must already be a character array or coercible to a character array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-202">L’exemple suivant montre le `GetChars` (méthode).</span><span class="sxs-lookup"><span data-stu-id="afbf7-202">The following example demonstrates the `GetChars` method.</span></span> <span data-ttu-id="afbf7-203">Le `TestGetChars` méthode s’attend à être transmis un `DataTableReader` rempli avec deux colonnes de données : un nom de fichier dans la première colonne et un tableau de caractères dans la seconde.</span><span class="sxs-lookup"><span data-stu-id="afbf7-203">The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second.</span></span> <span data-ttu-id="afbf7-204">En outre, `TestGetChars` vous permet de spécifier la taille de mémoire tampon à utiliser comme il lit les données du tableau de caractères dans le `DataTableReader`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-204">In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`.</span></span> <span data-ttu-id="afbf7-205">`TestGetChars` Crée un fichier correspondant à chaque ligne de données dans le `DataTableReader`, à l’aide des données fournies dans la première colonne de la `DataTableReader` comme nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="afbf7-205">`TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.</span></span>  
  
 <span data-ttu-id="afbf7-206">Cette procédure illustre l’utilisation de la `GetChars` méthode de lecture de données qui ont été stockées dans le `DataTable` comme un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="afbf7-206">This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array.</span></span> <span data-ttu-id="afbf7-207">Tout autre type de données entraîne la `GetChars` méthode lève un `InvalidCastException`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-207">Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetChars#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-208">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-208">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-209">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-209">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-210">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-210">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-211">La colonne spécifiée ne contient pas de tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="afbf7-211">The specified column does not contain a character array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="dataTableReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-212">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-212">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="afbf7-213">Obtient une chaîne qui représente le type de données de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-213">Gets a string representing the data type of the specified column.</span></span></summary>
        <returns><span data-ttu-id="afbf7-214">Chaîne représentant le type de données de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-214">A string representing the column's data type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-215">Le <xref:System.Data.DataTableReader.GetDataTypeName%2A> méthode retourne toujours le type de l’objet sous-jacent <xref:System.Data.DataColumn> au lieu d’un type spécifique au fournisseur.</span><span class="sxs-lookup"><span data-stu-id="afbf7-215">The <xref:System.Data.DataTableReader.GetDataTypeName%2A> method always returns the type of the underlying <xref:System.Data.DataColumn> instead of a provider-specific type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-216">L’application console suivante affiche une liste de champs et leurs noms de types à partir d’une simple <xref:System.Data.DataTable>:</span><span class="sxs-lookup"><span data-stu-id="afbf7-216">The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/VB/source.vb#1)]  
  
 <span data-ttu-id="afbf7-217">La fenêtre de Console affiche les résultats suivants :</span><span class="sxs-lookup"><span data-stu-id="afbf7-217">The Console window displays the following results:</span></span>  
  
```  
ID: Int32  
Name: String  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-218">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-218">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-219">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-219">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="dataTableReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-220">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-220">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="afbf7-221">Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-221">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="afbf7-222">Valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-222">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-223">Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un <xref:System.DateTime> ou être converti en un `DataTime`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-223">No conversions are performed; therefore the data retrieved must already be a <xref:System.DateTime> or coercible to a `DataTime`.</span></span>  
  
 <span data-ttu-id="afbf7-224">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-224">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-225">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le passé dans <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-225">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-226">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-226">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-227">Si les données figurant dans la colonne ne sont pas du type correct, l’exemple affiche un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-227">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-228">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-228">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-229">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-229">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-230">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-230">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-231">La colonne spécifiée ne contient pas de valeur DateTime.</span><span class="sxs-lookup"><span data-stu-id="afbf7-231">The specified column does not contain a DateTime value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="dataTableReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-232">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-232">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="afbf7-233">Obtient la valeur de la colonne spécifiée sous la forme d'un <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-233">Gets the value of the specified column as a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="afbf7-234">Valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-234">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-235">Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un <xref:System.Decimal> ou être converti en un `Decimal`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-235">No conversions are performed; therefore the data retrieved must already be a <xref:System.Decimal> or coercible to a `Decimal`.</span></span>  
  
 <span data-ttu-id="afbf7-236">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-236">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-237">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le passé dans <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-237">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-238">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-238">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-239">Si les données figurant dans la colonne ne sont pas du type correct, l’exemple affiche un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-239">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-240">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-240">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-241">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-241">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-242">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-242">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-243">La colonne spécifiée ne contient pas de valeur <see langword="Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-243">The specified column does not contain a <see langword="Decimal" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="dataTableReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-244">Numéro en base zéro de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-244">The zero-based ordinal of the column.</span></span></param>
        <summary><span data-ttu-id="afbf7-245">Obtient la valeur de la colonne sous la forme d'un nombre à virgule flottante double précision.</span><span class="sxs-lookup"><span data-stu-id="afbf7-245">Gets the value of the column as a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="afbf7-246">Valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-246">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-247">Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un nombre à virgule flottante double précision ou doivent pouvoir être converties dans un nombre à virgule flottante double précision.</span><span class="sxs-lookup"><span data-stu-id="afbf7-247">No conversions are performed; therefore the data retrieved must already be a double-precision floating point number or must be coercible to a double-precision floating point number.</span></span>  
  
 <span data-ttu-id="afbf7-248">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-248">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-249">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le passé dans <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-249">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-250">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-250">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-251">Si les données figurant dans la colonne ne sont pas du type correct, l’exemple affiche un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-251">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-252">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-252">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-253">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-253">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-254">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-254">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-255">La colonne spécifiée ne contient pas de nombre à virgule flottante double précision.</span><span class="sxs-lookup"><span data-stu-id="afbf7-255">The specified column does not contain a double-precision floating point number.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataTableReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afbf7-256">Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection d'éléments.</span><span class="sxs-lookup"><span data-stu-id="afbf7-256">Returns an enumerator that can be used to iterate through the item collection.</span></span></summary>
        <returns><span data-ttu-id="afbf7-257"><see cref="T:System.Collections.IEnumerator" /> représentant la collection d'éléments.</span><span class="sxs-lookup"><span data-stu-id="afbf7-257">An <see cref="T:System.Collections.IEnumerator" /> object that represents the item collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-258">Les énumérateurs permettent uniquement la lecture des données dans le <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-258">Enumerators only allow for reading the data in the <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-259">Les énumérateurs ne peuvent pas être utilisés pour modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="afbf7-259">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="afbf7-260">Dans un premier temps, l’énumérateur est positionné avant le premier élément dans la collection.</span><span class="sxs-lookup"><span data-stu-id="afbf7-260">At first, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="afbf7-261">À cette position, l’appel <xref:System.Collections.IEnumerator.Current%2A> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="afbf7-261">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="afbf7-262">Par conséquent, vous devez appeler `MoveNext` pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de `Current`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-262">Therefore, you must call `MoveNext` to advance the enumerator to the first element of the collection before reading the value of `Current`.</span></span>  
  
 <span data-ttu-id="afbf7-263">`Current` Retourne un <xref:System.Data.Common.DbDataRecord>et retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-263">`Current` returns a <xref:System.Data.Common.DbDataRecord>, and returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="afbf7-264">`MoveNext` affecte l'élément suivant à `Current`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-264">`MoveNext` sets `Current` to the next element.</span></span>  
  
 <span data-ttu-id="afbf7-265">Après la fin de la collection est passée, l’énumérateur est positionné après le dernier élément dans la collection et l’appel `MoveNext` retourne la valeur false.</span><span class="sxs-lookup"><span data-stu-id="afbf7-265">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling `MoveNext` returns false.</span></span> <span data-ttu-id="afbf7-266">Si le dernier appel à `MoveNext` retourné `false`, l’appel `Current` lève une exception.</span><span class="sxs-lookup"><span data-stu-id="afbf7-266">If the last call to `MoveNext` returned `false`, calling `Current` throws an exception.</span></span> <span data-ttu-id="afbf7-267">En outre, étant donné que le <xref:System.Data.DataTableReader> fournit un accès avant uniquement à ses données, en appelant le <xref:System.Collections.IEnumerator.Reset%2A> méthode de l’objet IEnumerator lève un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-267">In addition, because the <xref:System.Data.DataTableReader> provides forward-only access to its data, calling the <xref:System.Collections.IEnumerator.Reset%2A> method of the IEnumerator throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="afbf7-268">Le <xref:System.Data.DataTableReader> fournit un énumérateur stable.</span><span class="sxs-lookup"><span data-stu-id="afbf7-268">The <xref:System.Data.DataTableReader> provides a stable enumerator.</span></span> <span data-ttu-id="afbf7-269">Cela signifie que même si les suppressions de lignes ou des ajouts se produisent dans les données sous-jacentes, l’énumérateur retourné par un appel à <xref:System.Data.DataTableReader.GetEnumerator%2A> est toujours valide.</span><span class="sxs-lookup"><span data-stu-id="afbf7-269">This means that even if row deletions or additions occur within the underlying data, the enumerator returned by a call to <xref:System.Data.DataTableReader.GetEnumerator%2A> is still valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-270">L'exemple suivant illustre l'utilisation de la méthode <xref:System.Data.DataTableReader.GetEnumerator%2A>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-270">The following example demonstrates the use of the <xref:System.Data.DataTableReader.GetEnumerator%2A> method.</span></span> <span data-ttu-id="afbf7-271">Cela inclut le comportement de l’énumérateur lorsque des lignes sont supprimées sous-jacent <xref:System.Data.DataTable> pendant que l’énumérateur est actif.</span><span class="sxs-lookup"><span data-stu-id="afbf7-271">This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/VB/source.vb#1)]  
  
 <span data-ttu-id="afbf7-272">La procédure affiche le texte suivant dans la fenêtre de Console :</span><span class="sxs-lookup"><span data-stu-id="afbf7-272">The procedure displays the following text in the Console window:</span></span>  
  
```  
Peter  
Mary  
Russ  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-273">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-273">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="dataTableReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-274">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-274">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="afbf7-275">Obtient le <see cref="T:System.Type" /> qui correspond au type de données de l'objet.</span><span class="sxs-lookup"><span data-stu-id="afbf7-275">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span></span></summary>
        <returns><span data-ttu-id="afbf7-276">Le <see cref="T:System.Type" /> qui est le type de données de l’objet.</span><span class="sxs-lookup"><span data-stu-id="afbf7-276">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="afbf7-277">Appelez la procédure suivante, en passant un <xref:System.Data.DataTableReader> instance afin d’afficher une liste de tous les champs et le nom complet pour chaque type dans la fenêtre de Console.</span><span class="sxs-lookup"><span data-stu-id="afbf7-277">Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-278">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-278">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-279">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-279">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="dataTableReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-280">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-280">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="afbf7-281">Obtient la valeur de la colonne spécifiée sous la forme d'un nombre à virgule flottante simple précision.</span><span class="sxs-lookup"><span data-stu-id="afbf7-281">Gets the value of the specified column as a single-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="afbf7-282">La valeur de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-282">The value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-283">Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un nombre à virgule flottante simple précision ou doivent pouvoir être converties dans un nombre à virgule flottante simple précision.</span><span class="sxs-lookup"><span data-stu-id="afbf7-283">No conversions are performed; therefore the data retrieved must already be a single-precision floating point number or must be coercible to a single-precision floating point number.</span></span>  
  
 <span data-ttu-id="afbf7-284">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-284">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-285">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le passé dans <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-285">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-286">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-286">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-287">Si les données figurant dans la colonne ne sont pas du type correct, l’exemple affiche un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-287">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-288">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-288">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-289">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-289">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-290">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-290">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-291">La colonne spécifiée ne contient pas de nombre à virgule flottante simple précision.</span><span class="sxs-lookup"><span data-stu-id="afbf7-291">The specified column does not contain a single-precision floating point number.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="dataTableReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-292">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-292">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="afbf7-293">Obtient la valeur de la colonne spécifiée sous la forme d'un identificateur global unique (GUID, Globally Unique IDentifier).</span><span class="sxs-lookup"><span data-stu-id="afbf7-293">Gets the value of the specified column as a globally-unique identifier (GUID).</span></span></summary>
        <returns><span data-ttu-id="afbf7-294">Valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-294">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-295">Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un <xref:System.Guid> ou être converti en un `Guid`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-295">No conversions are performed; therefore the data retrieved must already be a <xref:System.Guid> or coercible to a `Guid`.</span></span>  
  
 <span data-ttu-id="afbf7-296">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-296">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-297">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le DataTableReader passé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-297">The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</span></span> <span data-ttu-id="afbf7-298">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-298">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-299">Si les données figurant dans la colonne ne sont pas du type correct, l’exemple affiche un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-299">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-300">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-300">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-301">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-301">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-302">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-302">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-303">La colonne spécifiée ne contient pas de GUID.</span><span class="sxs-lookup"><span data-stu-id="afbf7-303">The specified column does not contain a GUID.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="dataTableReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-304">Numéro de colonne de base zéro</span><span class="sxs-lookup"><span data-stu-id="afbf7-304">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="afbf7-305">Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="afbf7-305">Gets the value of the specified column as a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="afbf7-306">Valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-306">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-307">Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un <xref:System.Int16> ou être converti en un `Int16`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-307">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int16> or coercible to an `Int16`.</span></span>  
  
 <span data-ttu-id="afbf7-308">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-308">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-309">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le passé dans <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-309">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-310">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-310">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-311">Si les données figurant dans la colonne ne sont pas du type correct, l’exemple affiche un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-311">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-312">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-312">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-313">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-313">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-314">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-314">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-315">La colonne spécifiée ne contient pas d'entier signé 16 bits.</span><span class="sxs-lookup"><span data-stu-id="afbf7-315">The specified column does not contain a 16-bit signed integer.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="dataTableReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-316">Numéro de colonne de base zéro</span><span class="sxs-lookup"><span data-stu-id="afbf7-316">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="afbf7-317">Obtient la valeur de la colonne spécifiée sous la forme d’un entier signé 32 bits.</span><span class="sxs-lookup"><span data-stu-id="afbf7-317">Gets the value of the specified column as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="afbf7-318">Valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-318">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-319">Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un <xref:System.Int32> ou être converti en un `Int32`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-319">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int32> or coercible to an `Int32`.</span></span>  
  
 <span data-ttu-id="afbf7-320">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-320">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-321">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le passé dans <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-321">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-322">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-322">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-323">Si les données figurant dans la colonne ne sont pas du type correct, l’exemple affiche un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-323">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-324">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-324">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-325">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-325">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-326">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-326">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-327">La colonne spécifiée ne contient pas de valeur entière signée 32 bits.</span><span class="sxs-lookup"><span data-stu-id="afbf7-327">The specified column does not contain a 32-bit signed integer value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="dataTableReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-328">Numéro de colonne de base zéro</span><span class="sxs-lookup"><span data-stu-id="afbf7-328">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="afbf7-329">Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 64 bits.</span><span class="sxs-lookup"><span data-stu-id="afbf7-329">Gets the value of the specified column as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="afbf7-330">Valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-330">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-331">Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un <xref:System.Int64> ou être converti en un `Int64`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-331">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int64> or coercible to an `Int64`.</span></span>  
  
 <span data-ttu-id="afbf7-332">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-332">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-333">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le passé dans <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-333">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-334">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-334">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-335">Si les données figurant dans la colonne ne sont pas du type correct, l’exemple affiche un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-335">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-336">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-336">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-337">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-337">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-338">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-338">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-339">La colonne spécifiée ne contient pas de valeur entière signée 64 bits.</span><span class="sxs-lookup"><span data-stu-id="afbf7-339">The specified column does not contain a 64-bit signed integer value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="dataTableReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-340">Numéro de colonne de base zéro</span><span class="sxs-lookup"><span data-stu-id="afbf7-340">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="afbf7-341">Obtient la valeur de la colonne spécifiée sous la forme d'un <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-341">Gets the value of the specified column as a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="afbf7-342">Nom de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-342">The name of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-343">Le `GetName` et <xref:System.Data.DataTableReader.GetOrdinal%2A> méthodes fournissent les fonctionnalités inverses.</span><span class="sxs-lookup"><span data-stu-id="afbf7-343">The `GetName` and <xref:System.Data.DataTableReader.GetOrdinal%2A> methods provide inverse functionality.</span></span> <span data-ttu-id="afbf7-344">Autrement dit, l’appel `GetOrdinal` sur la valeur de retour de l’appel `GetName` doit retourner le paramètre d’origine passé à `GetName`; va de même pour l’appelant les procédures dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="afbf7-344">That is, calling `GetOrdinal` on the return value of calling `GetName` should return the original parameter passed to `GetName`; the same applies to calling the procedures in the opposite order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-345">L’exemple simple suivant inclut une procédure qui répertorie les noms de toutes les colonnes dans le texte spécifié `DataTableReader`et la position ordinale de la colonne, dans la fenêtre de Console.</span><span class="sxs-lookup"><span data-stu-id="afbf7-345">The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-346">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-346">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-347">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-347">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="dataTableReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="afbf7-348">Nom de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-348">The name of the column.</span></span></param>
        <summary><span data-ttu-id="afbf7-349">Obtient le numéro de la colonne, en fonction du nom de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-349">Gets the column ordinal, given the name of the column.</span></span></summary>
        <returns><span data-ttu-id="afbf7-350">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-350">The zero-based column ordinal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-351">Étant donné que la plupart des méthodes fournies par le <xref:System.Data.DataTableReader> classe doit être fourni avec un numéro de colonne, vous pouvez utiliser la `GetOrdinal` méthode pour récupérer le numéro de colonne, étant donné le nom de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-351">Because most of the methods provided by the <xref:System.Data.DataTableReader> class must be provided with an ordinal column number, you can use the `GetOrdinal` method to retrieve the column number, given the name of the column.</span></span>  
  
 <span data-ttu-id="afbf7-352">`GetOrdinal` effectue d’abord une recherche qui respecte la casse.</span><span class="sxs-lookup"><span data-stu-id="afbf7-352">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="afbf7-353">En cas d’échec, un deuxième non-respect de la casse est recherché.</span><span class="sxs-lookup"><span data-stu-id="afbf7-353">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="afbf7-354">Si le numéro de colonne n’est pas trouvé un `IndexOutOfRangeException` est levée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-354">If the column number is not found an `IndexOutOfRangeException` is thrown.</span></span>  
  
 <span data-ttu-id="afbf7-355">`GetOrdinal` est la largeur des caractères kana, non-respect de.</span><span class="sxs-lookup"><span data-stu-id="afbf7-355">`GetOrdinal` is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="afbf7-356">Étant donné que les recherches basées sur un ordinal sont plus efficaces que les recherches par nom, il est inutile d’appeler `GetOrdinal` dans une boucle.</span><span class="sxs-lookup"><span data-stu-id="afbf7-356">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="afbf7-357">Gagnez du temps en appelant `GetOrdinal` une fois et en assignant les résultats à une variable de type entier pour une utilisation dans la boucle</span><span class="sxs-lookup"><span data-stu-id="afbf7-357">Save time by calling `GetOrdinal` one time and assigning the results to an integer variable for use within the loop</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-358">Si vous avez uniquement un nom de colonne, auquel cas le nom de colonne est fourni, par l’utilisateur et vous devez récupérer des informations à partir de la colonne, vous pouvez utiliser une procédure similaire à celui-ci pour extraire les informations requises.</span><span class="sxs-lookup"><span data-stu-id="afbf7-358">If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information.</span></span> <span data-ttu-id="afbf7-359">Dans cet exemple, la procédure accepte un nom de colonne et retourne les données contenues dans cette colonne pour la ligne actuelle dans le <xref:System.Data.DataTableReader> :</span><span class="sxs-lookup"><span data-stu-id="afbf7-359">In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-360">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-360">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="afbf7-361">Le nom spécifié n'est pas un nom de colonne valide.</span><span class="sxs-lookup"><span data-stu-id="afbf7-361">The name specified is not a valid column name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dataTableReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-362">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-362">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="afbf7-363">Obtient le type de la colonne spécifiée dans le format spécifique au fournisseur.</span><span class="sxs-lookup"><span data-stu-id="afbf7-363">Gets the type of the specified column in provider-specific format.</span></span></summary>
        <returns><span data-ttu-id="afbf7-364">Le <see cref="T:System.Type" /> qui est le type de données de l’objet.</span><span class="sxs-lookup"><span data-stu-id="afbf7-364">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-365">Étant donné que le <xref:System.Data.DataTableReader> retourne toujours le type stocké dans sous-jacent <xref:System.Data.DataColumn>, la valeur retournée en appelant le <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> méthode retourne toujours le même type que le type stocké dans le <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-365">Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> method always returns the same type as the type stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="afbf7-366">Lorsque vous travaillez avec le <xref:System.Data.DataTableReader> classe, appelant le <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> méthode retourne le même type que si vous appelez le <xref:System.Type.GetType%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="afbf7-366">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> method returns the same type as calling the <xref:System.Type.GetType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-367">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-367">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-368">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-368">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="dataTableReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-369">Numéro de base zéro de la colonne dont la valeur est récupérée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-369">The zero-based number of the column whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="afbf7-370">Obtient la valeur de la colonne spécifiée dans le format spécifique au fournisseur.</span><span class="sxs-lookup"><span data-stu-id="afbf7-370">Gets the value of the specified column in provider-specific format.</span></span></summary>
        <returns><span data-ttu-id="afbf7-371">Valeur de la colonne spécifiée dans le format spécifique au fournisseur.</span><span class="sxs-lookup"><span data-stu-id="afbf7-371">The value of the specified column in provider-specific format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-372">Étant donné que le <xref:System.Data.DataTableReader> retourne toujours le type stocké dans sous-jacent <xref:System.Data.DataColumn>, la valeur retournée en appelant le <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> méthode retourne toujours les données du même type que les données stockées dans le <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-372">Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> method always returns data of the same type as the data stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="afbf7-373">Lorsque vous travaillez avec le <xref:System.Data.DataTableReader> classe, appelant le <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> méthode retourne la même valeur et que vous tapez que si vous appelez le <xref:System.Data.DataTableReader.GetValue%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="afbf7-373">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> method returns the same value and type as calling the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-374">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-374">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-375">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-375">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-376">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé</span><span class="sxs-lookup"><span data-stu-id="afbf7-376">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /></span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dataTableReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="afbf7-377">Tableau d'objets à remplir avec les informations de type des colonnes du <see cref="T:System.Data.DataTableReader" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-377">An array of objects to be filled in with type information for the columns in the <see cref="T:System.Data.DataTableReader" />.</span></span></param>
        <summary><span data-ttu-id="afbf7-378">Remplit le tableau fourni avec les informations de type spécifiques au fournisseur pour toutes les colonnes du <see cref="T:System.Data.DataTableReader" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-378">Fills the supplied array with provider-specific type information for all the columns in the <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <returns><span data-ttu-id="afbf7-379">Nombre de valeurs de colonne copiées dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="afbf7-379">The number of column values copied into the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-380">Étant donné que le <xref:System.Data.DataTableReader> retourne toujours les données du type stocké dans sous-jacent <xref:System.Data.DataColumn>, les valeurs retournées en appelant le <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> méthode est toujours les mêmes types que les données stockées dans le <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-380">Because the <xref:System.Data.DataTableReader> always returns the data of the type stored within the underlying <xref:System.Data.DataColumn>, the values returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> method is always of the same types as the data stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="afbf7-381">Lorsque vous travaillez avec le <xref:System.Data.DataTableReader> classe, appelant le <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> méthode retourne les valeurs et les types de même que si vous appelez le <xref:System.Data.DataTableReader.GetValues%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="afbf7-381">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> method returns the same values and types as calling the <xref:System.Data.DataTableReader.GetValues%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-382">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-382">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-383">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-383">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dataTableReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afbf7-384">Retourne un <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne de <see cref="T:System.Data.DataTableReader" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-384">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.DataTableReader" />.</span></span></summary>
        <returns><span data-ttu-id="afbf7-385"><see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-385">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-386">La méthode GetSchemaTable retourne les métadonnées de chaque colonne dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="afbf7-386">The GetSchemaTable method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="afbf7-387">Colonne de DataReader</span><span class="sxs-lookup"><span data-stu-id="afbf7-387">DataReader column</span></span>|<span data-ttu-id="afbf7-388">Description </span><span class="sxs-lookup"><span data-stu-id="afbf7-388">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="afbf7-389">Nom de colonne</span><span class="sxs-lookup"><span data-stu-id="afbf7-389">ColumnName</span></span>|<span data-ttu-id="afbf7-390">Le nom de la colonne tel qu’il apparaît dans le <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-390">The name of the column as it appears in the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="afbf7-391">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="afbf7-391">ColumnOrdinal</span></span>|<span data-ttu-id="afbf7-392">L’ordinal de la colonne</span><span class="sxs-lookup"><span data-stu-id="afbf7-392">The ordinal of the column</span></span>|  
|<span data-ttu-id="afbf7-393">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="afbf7-393">ColumnSize</span></span>|<span data-ttu-id="afbf7-394">-1 si le <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (ou <xref:System.Data.DataColumn.MaxLength%2A>) la propriété de la <xref:System.Data.DataColumn> ne peut pas être déterminé ou n’est pas pertinente ; sinon, 0 ou un entier positif qui contient le `MaxLength` valeur.</span><span class="sxs-lookup"><span data-stu-id="afbf7-394">-1 if the <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (or <xref:System.Data.DataColumn.MaxLength%2A>) property of the <xref:System.Data.DataColumn> cannot be determined or is not relevant; otherwise, 0 or a positive integer that contains the `MaxLength` value.</span></span>|  
|<span data-ttu-id="afbf7-395">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="afbf7-395">NumericPrecision</span></span>|<span data-ttu-id="afbf7-396">Si le type de colonne est un type numérique, il s’agit de la précision maximale de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-396">If the column type is a numeric type, this is the maximum precision of the column.</span></span> <span data-ttu-id="afbf7-397">Si le type de colonne n’est pas un type de données numérique, il s’agit d’une valeur null.</span><span class="sxs-lookup"><span data-stu-id="afbf7-397">If the column type is not a numeric data type, this is a null value.</span></span>|  
|<span data-ttu-id="afbf7-398">NumericScale</span><span class="sxs-lookup"><span data-stu-id="afbf7-398">NumericScale</span></span>|<span data-ttu-id="afbf7-399">Si le type de données de colonne a un composant de mise à l’échelle, retourne le nombre de chiffres à droite de la virgule décimale.</span><span class="sxs-lookup"><span data-stu-id="afbf7-399">If column data type has a scale component, return the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="afbf7-400">Sinon, retourne une valeur null.</span><span class="sxs-lookup"><span data-stu-id="afbf7-400">Otherwise, return a null value.</span></span>|  
|<span data-ttu-id="afbf7-401">Type de données</span><span class="sxs-lookup"><span data-stu-id="afbf7-401">DataType</span></span>|<span data-ttu-id="afbf7-402">Le type sous-jacent de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-402">The underlying type of the column.</span></span>|  
|<span data-ttu-id="afbf7-403">ProviderType</span><span class="sxs-lookup"><span data-stu-id="afbf7-403">ProviderType</span></span>|<span data-ttu-id="afbf7-404">L’indicateur de la colonne type de données.</span><span class="sxs-lookup"><span data-stu-id="afbf7-404">The indicator of the column's data type.</span></span> <span data-ttu-id="afbf7-405">Si le type de données de la colonne varie d’une ligne, cette valeur est <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-405">If the data type of the column varies from row to row, this value is <xref:System.Object>.</span></span> <span data-ttu-id="afbf7-406">Cette colonne ne peut pas contenir une valeur null.</span><span class="sxs-lookup"><span data-stu-id="afbf7-406">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="afbf7-407">IsLong</span><span class="sxs-lookup"><span data-stu-id="afbf7-407">IsLong</span></span>|<span data-ttu-id="afbf7-408">`true` Si le type de données de la colonne est <xref:System.String> et son <xref:System.Data.DataColumn.MaxLength%2A> propriété est -1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-408">`true` if the data type of the column is <xref:System.String> and its <xref:System.Data.DataColumn.MaxLength%2A> property is -1.</span></span> <span data-ttu-id="afbf7-409">Sinon, `false`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-409">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="afbf7-410">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="afbf7-410">AllowDBNull</span></span>|<span data-ttu-id="afbf7-411">`true` Si la contrainte AllowDbNull est définie sur true pour la colonne ; Sinon, `false`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-411">`true` if the AllowDbNull constraint is set to true for the column; otherwise, `false`.</span></span>|  
|<span data-ttu-id="afbf7-412">IsReadOnly</span><span class="sxs-lookup"><span data-stu-id="afbf7-412">IsReadOnly</span></span>|<span data-ttu-id="afbf7-413">`true` Si la colonne ne peut pas être modifiée ; sinon `false`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-413">`true` if the column cannot be modified; otherwise `false`.</span></span>|  
|<span data-ttu-id="afbf7-414">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="afbf7-414">IsRowVersion</span></span>|<span data-ttu-id="afbf7-415">`false`, pour chaque colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-415">`false`, for every column.</span></span>|  
|<span data-ttu-id="afbf7-416">IsUnique</span><span class="sxs-lookup"><span data-stu-id="afbf7-416">IsUnique</span></span>|<span data-ttu-id="afbf7-417">`true`: Aucun deux lignes dans la <xref:System.Data.DataTable> peut avoir la même valeur dans cette colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-417">`true`: No two rows in the <xref:System.Data.DataTable> can have the same value in this column.</span></span> <span data-ttu-id="afbf7-418">`IsUnique` est garanti être true si la colonne représente une clé en soi ou s’il existe une contrainte de type UNIQUE qui s’applique uniquement à cette colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-418">`IsUnique` is guaranteed to be true if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span> <span data-ttu-id="afbf7-419">`false`: La colonne peut contenir des valeurs dupliquées dans le `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-419">`false`: The column can contain duplicate values in the `DataTable`.</span></span> <span data-ttu-id="afbf7-420">La valeur par défaut de cette colonne est `false`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-420">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="afbf7-421">IsKey</span><span class="sxs-lookup"><span data-stu-id="afbf7-421">IsKey</span></span>|<span data-ttu-id="afbf7-422">`true`: La colonne fait partie d’un ensemble de colonnes qui, ensemble, identifient de manière unique la ligne dans le <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-422">`true`: The column is one of a set of columns that, taken together, uniquely identify the row in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="afbf7-423">L’ensemble de colonnes avec `IsKey` définie sur `true` doit identifier de manière unique une ligne dans le `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-423">The set of columns with `IsKey` set to `true` must uniquely identify a row in the `DataTable`.</span></span> <span data-ttu-id="afbf7-424">Il n’existe aucune exigence que cet ensemble de colonnes est un ensemble minimal de colonnes.</span><span class="sxs-lookup"><span data-stu-id="afbf7-424">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="afbf7-425">Cet ensemble de colonnes peut-être être généré à partir d’un `DataTable` clé primaire, une contrainte unique ou un index unique.</span><span class="sxs-lookup"><span data-stu-id="afbf7-425">This set of columns may be generated from a `DataTable` primary key, a unique constraint or a unique index.</span></span> <span data-ttu-id="afbf7-426">`false`: La colonne n’est pas nécessaire pour identifier la ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-426">`false`: The column is not required to uniquely identify the row.</span></span> <span data-ttu-id="afbf7-427">Cette valeur est `true` si la colonne participe à une clé primaire unique ou composite.</span><span class="sxs-lookup"><span data-stu-id="afbf7-427">This value is `true` if the column participates in a single or composite primary key.</span></span> <span data-ttu-id="afbf7-428">Sinon, sa valeur est `false`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-428">Otherwise, its value is `false`.</span></span>|  
|<span data-ttu-id="afbf7-429">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="afbf7-429">IsAutoIncrement</span></span>|<span data-ttu-id="afbf7-430">`true`: La colonne assigne des valeurs aux nouvelles lignes selon des incréments fixes.</span><span class="sxs-lookup"><span data-stu-id="afbf7-430">`true`: The column assigns values to new rows in fixed increments.</span></span> <span data-ttu-id="afbf7-431">`false`: La colonne n’affecte pas les valeurs aux nouvelles lignes selon des incréments fixes.</span><span class="sxs-lookup"><span data-stu-id="afbf7-431">`false`: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="afbf7-432">La valeur par défaut de cette colonne est `false`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-432">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="afbf7-433">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="afbf7-433">BaseCatalogName</span></span>|<span data-ttu-id="afbf7-434">Le nom du catalogue dans le magasin de données qui contient la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-434">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="afbf7-435">`Null` Si le nom de catalogue de base ne peut pas être déterminé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-435">`Null` if the base catalog name cannot be determined.</span></span> <span data-ttu-id="afbf7-436">La valeur par défaut pour cette colonne est un `null` valeur.</span><span class="sxs-lookup"><span data-stu-id="afbf7-436">The default value for this column is a `null` value.</span></span>|  
|<span data-ttu-id="afbf7-437">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="afbf7-437">BaseSchemaName</span></span>|<span data-ttu-id="afbf7-438">Cette valeur est toujours `Null`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-438">This value is always `Null`.</span></span>|  
|<span data-ttu-id="afbf7-439">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="afbf7-439">BaseTableName</span></span>|<span data-ttu-id="afbf7-440">Nom du <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-440">The name of the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="afbf7-441">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="afbf7-441">BaseColumnName</span></span>|<span data-ttu-id="afbf7-442">Le nom de la colonne dans la <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-442">The name of the column in the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="afbf7-443">AutoIncrementSeed</span><span class="sxs-lookup"><span data-stu-id="afbf7-443">AutoIncrementSeed</span></span>|<span data-ttu-id="afbf7-444">La valeur de la <xref:System.Data.DataTable>de <xref:System.Data.DataColumn.AutoIncrementSeed%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="afbf7-444">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementSeed%2A> property.</span></span>|  
|<span data-ttu-id="afbf7-445">AutoIncrementStep</span><span class="sxs-lookup"><span data-stu-id="afbf7-445">AutoIncrementStep</span></span>|<span data-ttu-id="afbf7-446">La valeur de la <xref:System.Data.DataTable>de <xref:System.Data.DataColumn.AutoIncrementStep%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="afbf7-446">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementStep%2A> property.</span></span>|  
|<span data-ttu-id="afbf7-447">DefaultValue</span><span class="sxs-lookup"><span data-stu-id="afbf7-447">DefaultValue</span></span>|<span data-ttu-id="afbf7-448">La valeur de la <xref:System.Data.DataColumn>de <xref:System.Data.DataColumn.DefaultValue%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="afbf7-448">The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.DefaultValue%2A> property.</span></span>|  
|<span data-ttu-id="afbf7-449">Expression</span><span class="sxs-lookup"><span data-stu-id="afbf7-449">Expression</span></span>|<span data-ttu-id="afbf7-450">La chaîne d’expression, si la colonne actuelle est une colonne d’expression et toutes les colonnes utilisées dans l’expression appartiennent au même `T:System.Data.DataTable` qui contient la colonne d’expression ; sinon `null`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-450">The expression string, if the current column is an expression column and all columns used in the expression belong to the same `T:System.Data.DataTable` that contains the expression column; otherwise `null`.</span></span>|  
|<span data-ttu-id="afbf7-451">ColumnMapping</span><span class="sxs-lookup"><span data-stu-id="afbf7-451">ColumnMapping</span></span>|<span data-ttu-id="afbf7-452">Le <xref:System.Data.MappingType> valeur associée à la <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-452">The <xref:System.Data.MappingType> value associated with the <xref:System.Data.DataColumn>.</span></span> <span data-ttu-id="afbf7-453">Le type peut être une des `Attribute`, `Element`, `Hidden`, ou `SimpleContent`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-453">The type can be one of `Attribute`, `Element`, `Hidden`, or `SimpleContent`.</span></span> <span data-ttu-id="afbf7-454">La valeur par défaut est `Element`.</span><span class="sxs-lookup"><span data-stu-id="afbf7-454">The default value is `Element`.</span></span>|  
|<span data-ttu-id="afbf7-455">BaseTableNamespace</span><span class="sxs-lookup"><span data-stu-id="afbf7-455">BaseTableNamespace</span></span>|<span data-ttu-id="afbf7-456">La valeur de la <xref:System.Data.DataTable>de <xref:System.Data.DataTable.Namespace%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="afbf7-456">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataTable.Namespace%2A> property.</span></span>|  
|<span data-ttu-id="afbf7-457">BaseColumnNamespace</span><span class="sxs-lookup"><span data-stu-id="afbf7-457">BaseColumnNamespace</span></span>|<span data-ttu-id="afbf7-458">La valeur de la <xref:System.Data.DataColumn>de <xref:System.Data.DataColumn.Namespace%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="afbf7-458">The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.Namespace%2A> property.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-459">L’exemple d’application console suivant récupère des informations de schéma sur la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-459">The following console application example retrieves schema information about the specified column.</span></span> <span data-ttu-id="afbf7-460">Passer le `DisplaySchemaTableInfo` procédure un <xref:System.Data.DataTableReader> et un entier qui représente la position ordinale d’une colonne dans la `DataTableReader`, et la procédure renvoie des informations de schéma à la fenêtre de console.</span><span class="sxs-lookup"><span data-stu-id="afbf7-460">Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-461">Le <see cref="T:System.Data.DataTableReader" /> est fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-461">The <see cref="T:System.Data.DataTableReader" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="dataTableReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-462">Numéro de colonne de base zéro</span><span class="sxs-lookup"><span data-stu-id="afbf7-462">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="afbf7-463">Obtient la valeur de la colonne spécifiée sous la forme d'une chaîne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-463">Gets the value of the specified column as a string.</span></span></summary>
        <returns><span data-ttu-id="afbf7-464">Valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-464">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-465">Appelez <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-465">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-466">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le passé dans <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-466">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-467">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-467">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-468">Si les données figurant dans la colonne du type correct, l’exemple affichent un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-468">If the data within the column of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-469">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-469">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-470">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-470">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-471">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-471">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="afbf7-472">La colonne spécifiée ne contient pas de chaîne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-472">The specified column does not contain a string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="dataTableReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-473">Numéro de colonne de base zéro</span><span class="sxs-lookup"><span data-stu-id="afbf7-473">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="afbf7-474">Obtient la valeur de la colonne spécifiée dans son format natif.</span><span class="sxs-lookup"><span data-stu-id="afbf7-474">Gets the value of the specified column in its native format.</span></span></summary>
        <returns><span data-ttu-id="afbf7-475">Valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-475">The value of the specified column.</span></span> <span data-ttu-id="afbf7-476">Cette méthode retourne <see langword="DBNull" /> pour les colonnes ayant la valeur null.</span><span class="sxs-lookup"><span data-stu-id="afbf7-476">This method returns <see langword="DBNull" /> for null columns.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-477">Bien que vous pouvez appeler <xref:System.Data.DataTableReader.IsDBNull%2A> pour voir s’il existe des valeurs null avant d’appeler cette méthode, vous n’êtes pas obligé de cela.</span><span class="sxs-lookup"><span data-stu-id="afbf7-477">Although you can call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method, you do not have to do this.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-478">L’exemple suivant effectue une itération dans toutes les colonnes dans la ligne actuelle dans un <xref:System.Data.DataTableReader>, affichant le contenu de chaque colonne et le nom de colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-478">The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name.</span></span> <span data-ttu-id="afbf7-479">En règle générale, si votre objectif est d’utiliser toutes les colonnes d’une ligne récupérée par un <xref:System.Data.DataTableReader>, envisagez d’utiliser le <xref:System.Data.DataTableReader.GetValues%2A> méthode au lieu de cela, car il est plus efficace.</span><span class="sxs-lookup"><span data-stu-id="afbf7-479">Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-480">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-480">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-481">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-481">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-482">Une tentative de lecture de colonnes ou d’accès à des colonnes dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-482">An attempt was made to read or access columns in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="dataTableReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="afbf7-483">Tableau de <see cref="T:System.Object" /> dans lequel copier les valeurs des colonnes à partir du <see cref="T:System.Data.DataTableReader" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-483">An array of <see cref="T:System.Object" /> into which to copy the column values from the <see cref="T:System.Data.DataTableReader" />.</span></span></param>
        <summary><span data-ttu-id="afbf7-484">Remplit un tableau d'objets avec les valeurs de colonne de la ligne en cours.</span><span class="sxs-lookup"><span data-stu-id="afbf7-484">Populates an array of objects with the column values of the current row.</span></span></summary>
        <returns><span data-ttu-id="afbf7-485">Nombre de valeurs de colonne copiées dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="afbf7-485">The number of column values copied into the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-486">Pour la plupart des applications, cette méthode fournit un moyen efficace pour récupérer toutes les colonnes, au lieu de récupérer chaque colonne individuellement.</span><span class="sxs-lookup"><span data-stu-id="afbf7-486">For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span> <span data-ttu-id="afbf7-487">Si votre intention est de récupérer toutes les valeurs de colonne d’une ligne dans le <xref:System.Data.DataTableReader>, le `GetValues` méthode offre la solution la plus efficace.</span><span class="sxs-lookup"><span data-stu-id="afbf7-487">If your intent is to retrieve all the column values from a row within the <xref:System.Data.DataTableReader>, the `GetValues` method provides the most efficient solution.</span></span>  
  
 <span data-ttu-id="afbf7-488">Vous pouvez passer un <xref:System.Object> tableau qui contient un nombre inférieur au nombre de colonnes qui sont contenues dans la ligne obtenue.</span><span class="sxs-lookup"><span data-stu-id="afbf7-488">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="afbf7-489">Uniquement la quantité de données le `Object` tableau peut contenir est copié dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="afbf7-489">Only the amount of data the `Object` array can hold is copied to the array.</span></span> <span data-ttu-id="afbf7-490">Vous pouvez également passer un `Object` tableau dont la longueur est supérieure au nombre de colonnes qui sont contenus dans la ligne résultante, auquel cas les éléments de tableau supplémentaires demeurent inchangés par l’appel de méthode.</span><span class="sxs-lookup"><span data-stu-id="afbf7-490">You can also pass an `Object` array whose length is more than the number of columns that are contained in the resulting row, in which case the additional array elements remains unchanged by the method call.</span></span>  
  
 <span data-ttu-id="afbf7-491">Cette méthode place `DBNull` dans le tableau de sortie pour les colonnes null.</span><span class="sxs-lookup"><span data-stu-id="afbf7-491">This method places `DBNull` in the output array for null columns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-492">L’exemple suivant montre à l’aide d’un tableau qui est la taille correcte, pour lire toutes les valeurs à partir de la ligne actuelle dans la liste fournie <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-492">The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-493">En outre, l’exemple montre à l’aide d’un tableau de taille fixe qui peut être inférieure ou supérieure au nombre de colonnes disponibles.</span><span class="sxs-lookup"><span data-stu-id="afbf7-493">In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-494">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-494">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-495">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-495">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-496">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-496">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.DataTableReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="afbf7-497">Obtient une valeur qui indique si <see cref="T:System.Data.DataTableReader" /> contient une ou plusieurs lignes.</span><span class="sxs-lookup"><span data-stu-id="afbf7-497">Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> contains one or more rows.</span></span></summary>
        <value><span data-ttu-id="afbf7-498"><see langword="true" /> si le <see cref="T:System.Data.DataTableReader" /> contient une ou plusieurs lignes ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-498"><see langword="true" /> if the <see cref="T:System.Data.DataTableReader" /> contains one or more rows; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-499">Le `HasRows` propriété renvoie des informations sur le jeu de résultats actuel.</span><span class="sxs-lookup"><span data-stu-id="afbf7-499">The `HasRows` property returns information about the current result set.</span></span> <span data-ttu-id="afbf7-500">Si le <xref:System.Data.DataTableReader> contient le résultat de plusieurs jeux, vous pouvez examiner la valeur de la `HasRows` propriété immédiatement après avoir appelé la <xref:System.Data.DataTableReader.NextResult%2A> méthode afin de déterminer si le nouveau jeu de résultats contient des lignes.</span><span class="sxs-lookup"><span data-stu-id="afbf7-500">If the <xref:System.Data.DataTableReader> contains multiple result sets, you can examine the value of the `HasRows` property immediately after you call the <xref:System.Data.DataTableReader.NextResult%2A> method in order to determine whether the new result set contains rows.</span></span>  
  
 <span data-ttu-id="afbf7-501">Utilisez le `HasRows` propriété évite d’avoir à appeler le <xref:System.Data.DataTableReader.Read%2A> méthode de la <xref:System.Data.DataTableReader> si aucune ligne dans le jeu de résultats actuel.</span><span class="sxs-lookup"><span data-stu-id="afbf7-501">Use the `HasRows` property to avoid the requirement to call the <xref:System.Data.DataTableReader.Read%2A> method of the <xref:System.Data.DataTableReader> if there are no rows within the current result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-502">L’exemple suivant remplit deux <xref:System.Data.DataTable> instances avec des données.</span><span class="sxs-lookup"><span data-stu-id="afbf7-502">The following example fills two <xref:System.Data.DataTable> instances with data.</span></span> <span data-ttu-id="afbf7-503">Le premier <xref:System.Data.DataTable> contient une ligne, et la seconde ne contient aucune ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-503">The first <xref:System.Data.DataTable> contains one row, and the second contains no rows.</span></span> <span data-ttu-id="afbf7-504">L’exemple crée ensuite un <xref:System.Data.DataTableReader> qui contient à la fois <xref:System.Data.DataTable> objets et appelle la méthode PrintData pour afficher le contenu de chacun, en vérifiant la valeur de la <xref:System.Data.DataTableReader.HasRows%2A> propriété de chacun avant d’appeler PrintData.</span><span class="sxs-lookup"><span data-stu-id="afbf7-504">The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the <xref:System.Data.DataTableReader.HasRows%2A> property of each before it makes the call to PrintData.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.HasRows#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.HasRows#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-505">Une tentative a été effectuée pour récupérer des informations sur un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-505">An attempt was made to retrieve information about a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.NextResult" />
        <altmember cref="M:System.Data.DataTableReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.DataTableReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="afbf7-506">Obtient une valeur qui indique si le <see cref="T:System.Data.DataTableReader" /> est fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-506">Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> is closed.</span></span></summary>
        <value><span data-ttu-id="afbf7-507"><see langword="true" /> si <see cref="T:System.Data.DataTableReader" /> est fermé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-507"><see langword="true" /> if the <see cref="T:System.Data.DataTableReader" /> is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-508"><xref:System.Data.DataTableReader.Close%2A> est la seule méthode et `IsClosed` et <xref:System.Data.DataTableReader.RecordsAffected%2A> sont les seules propriétés qui sont accessibles après le <xref:System.Data.DataTableReader> a été fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-508"><xref:System.Data.DataTableReader.Close%2A> is the only method and `IsClosed` and <xref:System.Data.DataTableReader.RecordsAffected%2A> are the only properties that can be accessed after the <xref:System.Data.DataTableReader> has been closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="dataTableReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-509">Numéro de colonne de base zéro</span><span class="sxs-lookup"><span data-stu-id="afbf7-509">The zero-based column ordinal</span></span></param>
        <summary><span data-ttu-id="afbf7-510">Obtient une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</span><span class="sxs-lookup"><span data-stu-id="afbf7-510">Gets a value that indicates whether the column contains non-existent or missing values.</span></span></summary>
        <returns><span data-ttu-id="afbf7-511"><see langword="true" /> si la valeur de colonne spécifiée équivaut à <see cref="T:System.DBNull" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-511"><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-512">Appelez cette méthode pour voir s’il existe des valeurs de colonne null avant d’appeler les méthodes get typées (par exemple, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>, et ainsi de suite) pour éviter de lever une erreur.</span><span class="sxs-lookup"><span data-stu-id="afbf7-512">Call this method to see if there are null column values before calling the typed get methods (for example, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-513">L’exemple suivant affiche le contenu de la colonne numéroté 2 dans le passé dans <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-513">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-514">Si la valeur de la colonne dans une ligne particulière est null, le code affiche le texte \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="afbf7-514">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="afbf7-515">Si les données figurant dans la colonne du type correct, l’exemple affichent un message d’erreur pour chaque ligne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-515">If the data within the column of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="afbf7-516">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-516">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-517">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-517">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-518">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-518">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="afbf7-519">Obtient la valeur de la colonne spécifiée dans son format natif.</span><span class="sxs-lookup"><span data-stu-id="afbf7-519">Gets the value of the specified column in its native format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="afbf7-520">Numéro de colonne de base zéro.</span><span class="sxs-lookup"><span data-stu-id="afbf7-520">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="afbf7-521">Obtient la valeur de la colonne spécifiée dans son format natif en fonction du numéro de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-521">Gets the value of the specified column in its native format given the column ordinal.</span></span></summary>
        <value><span data-ttu-id="afbf7-522">Valeur de la colonne spécifiée dans son format natif.</span><span class="sxs-lookup"><span data-stu-id="afbf7-522">The value of the specified column in its native format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-523">Cette surcharge pour <xref:System.Data.DataTableReader.Item%2A> se comporte comme le <xref:System.Data.DataTableReader.GetValue%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="afbf7-523">This overload for <xref:System.Data.DataTableReader.Item%2A> behaves identically to the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-524">L’exemple suivant affiche le contenu de toutes les colonnes, dans toutes les lignes à partir de le <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="afbf7-524">The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="afbf7-525">Le code utilise le <xref:System.Data.DataTableReader.Item%2A> (méthode) (l’indexeur dans Microsoft C#) pour récupérer la valeur contenue dans chaque colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-525">The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="afbf7-526">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="afbf7-526">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span></span></exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="afbf7-527">Nom de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-527">The name of the column.</span></span></param>
        <summary><span data-ttu-id="afbf7-528">Obtient la valeur de la colonne spécifiée dans son format natif en fonction du nom de la colonne.</span><span class="sxs-lookup"><span data-stu-id="afbf7-528">Gets the value of the specified column in its native format given the column name.</span></span></summary>
        <value><span data-ttu-id="afbf7-529">Valeur de la colonne spécifiée dans son format natif.</span><span class="sxs-lookup"><span data-stu-id="afbf7-529">The value of the specified column in its native format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-530">Une recherche respectant la casse est effectuée en premier.</span><span class="sxs-lookup"><span data-stu-id="afbf7-530">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="afbf7-531">En cas d’échec, un deuxième non-respect de la casse est recherché.</span><span class="sxs-lookup"><span data-stu-id="afbf7-531">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="afbf7-532">Cette méthode est la longueur des caractères kana, non-respect de.</span><span class="sxs-lookup"><span data-stu-id="afbf7-532">This method is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="afbf7-533">Cette version surchargée de <xref:System.Data.DataTableReader.Item%2A> correspond à l’appel le <xref:System.Data.DataTableReader.GetOrdinal%2A> (méthode), puis par la suite en appelant le <xref:System.Data.DataTableReader.GetValue%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="afbf7-533">This overloaded version of <xref:System.Data.DataTableReader.Item%2A> corresponds to calling the <xref:System.Data.DataTableReader.GetOrdinal%2A> method, and then subsequently calling the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-534">Étant donné un <xref:System.Data.DataTableReader> et un nom de colonne, la procédure GetValueByName retourne la valeur de la colonne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-534">Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column.</span></span> <span data-ttu-id="afbf7-535">Avant d’appeler cette procédure, vous devez créer un nouveau <xref:System.Data.DataTableReader> de l’instance et appelez sa méthode Read au moins une fois pour positionner le pointeur de la ligne sur une ligne de données.</span><span class="sxs-lookup"><span data-stu-id="afbf7-535">Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.ItemName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ItemName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="afbf7-536">Le nom spécifié n'est pas un nom de colonne valide.</span><span class="sxs-lookup"><span data-stu-id="afbf7-536">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="afbf7-537">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-537">An attempt was made to retrieve data from a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-538">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-538">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="dataTableReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afbf7-539">Avance le <see cref="T:System.Data.DataTableReader" /> jusqu'au jeu de résultats suivant, s'il existe.</span><span class="sxs-lookup"><span data-stu-id="afbf7-539">Advances the <see cref="T:System.Data.DataTableReader" /> to the next result set, if any.</span></span></summary>
        <returns><span data-ttu-id="afbf7-540"><see langword="true" /> s'il existe un autre jeu de résultats ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-540"><see langword="true" /> if there was another result set; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-541">Utilisé pour traiter plusieurs résultats qui peuvent être générées en créant un <xref:System.Data.DataTableReader> via un <xref:System.Data.DataSet> qui contient deux ou plusieurs tables, ou un tableau qui contient deux ou plusieurs <xref:System.Data.DataTable> instances.</span><span class="sxs-lookup"><span data-stu-id="afbf7-541">Used to process multiple results that can be generated by creating a <xref:System.Data.DataTableReader> over a <xref:System.Data.DataSet> that contains two or more tables, or an array that contains two or more <xref:System.Data.DataTable> instances.</span></span>  
  
 <span data-ttu-id="afbf7-542">Un nouveau <xref:System.Data.DataTableReader> est positionné sur le premier résultat.</span><span class="sxs-lookup"><span data-stu-id="afbf7-542">A new <xref:System.Data.DataTableReader> is positioned on the first result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-543">Dans l’exemple suivant, la méthode TestConstructor crée deux <xref:System.Data.DataTable> instances.</span><span class="sxs-lookup"><span data-stu-id="afbf7-543">In the following example, the TestConstructor method creates two <xref:System.Data.DataTable> instances.</span></span> <span data-ttu-id="afbf7-544">Pour montrer ce constructeur pour le <xref:System.Data.DataTableReader> (classe), l’exemple crée un `DataTableReader` basé sur un tableau qui contient les deux `DataTables`et effectue une opération simple, en imprimant le contenu à partir des premières colonnes dans la console fenêtre.</span><span class="sxs-lookup"><span data-stu-id="afbf7-544">In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window.</span></span> <span data-ttu-id="afbf7-545">Pour tester cette application, créez une application Console et collez l’exemple de code dans le fichier nouvellement créé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-545">In order to test this application, create a new Console application, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/VB/source.vb#1)]  
  
 <span data-ttu-id="afbf7-546">La fenêtre de Console affiche les résultats suivants :</span><span class="sxs-lookup"><span data-stu-id="afbf7-546">The Console window displays the following results:</span></span>  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-547">Une tentative a été effectuée pour naviguer dans un <see cref="T:System.Data.DataTableReader" /> fermé.</span><span class="sxs-lookup"><span data-stu-id="afbf7-547">An attempt was made to navigate within a closed <see cref="T:System.Data.DataTableReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="dataTableReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afbf7-548">Fait passer le <see cref="T:System.Data.DataTableReader" /> à l’enregistrement suivant.</span><span class="sxs-lookup"><span data-stu-id="afbf7-548">Advances the <see cref="T:System.Data.DataTableReader" /> to the next record.</span></span></summary>
        <returns><span data-ttu-id="afbf7-549"><see langword="true" /> s'il y avait une autre ligne à lire; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="afbf7-549"><see langword="true" /> if there was another row to read; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afbf7-550">La position par défaut de la <xref:System.Data.DataTableReader> est avant le premier enregistrement.</span><span class="sxs-lookup"><span data-stu-id="afbf7-550">The default position of the <xref:System.Data.DataTableReader> is before the first record.</span></span> <span data-ttu-id="afbf7-551">Par conséquent, vous devez appeler `Read` pour commencer à accéder aux données.</span><span class="sxs-lookup"><span data-stu-id="afbf7-551">Therefore, you must call `Read` to start accessing any data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afbf7-552">La procédure de PrintColumns effectue une boucle sur toutes les lignes dans le <xref:System.Data.DataTableReader>, affichant le contenu de chaque colonne dans la fenêtre de Console.</span><span class="sxs-lookup"><span data-stu-id="afbf7-552">The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.Read#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Read#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afbf7-553">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</span><span class="sxs-lookup"><span data-stu-id="afbf7-553">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.DataTableReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="afbf7-554">Obtient le nombre de lignes insérées, modifiées ou supprimées par l'exécution de l'instruction SQL.</span><span class="sxs-lookup"><span data-stu-id="afbf7-554">Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="afbf7-555">Le <see cref="T:System.Data.DataTableReader" /> ne prend pas en charge cette propriété et retourne toujours 0.</span><span class="sxs-lookup"><span data-stu-id="afbf7-555">The <see cref="T:System.Data.DataTableReader" /> does not support this property and always returns 0.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>