<Type Name="DataRowExtensions" FullName="System.Data.DataRowExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36601976c7faf30589ff2204148eeb238ed3bba6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30399493" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataRowExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataRowExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataRowExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit les méthodes d'extension à la classe <see cref="T:System.Data.DataRow" />. C'est une classe statique.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataSet> API a été étendue avec deux nouvelles méthodes de la <xref:System.Data.DataRow> (classe), <xref:System.Data.DataRowExtensions.Field%2A> et <xref:System.Data.DataRowExtensions.SetField%2A>. Vous pouvez utiliser celles-ci pour former [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expressions et les requêtes de méthode sur <xref:System.Data.DataTable> objets. Ce sont les méthodes recommandées pour accéder aux valeurs des colonnes dans [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expressions et des requêtes de méthode. Pour plus d’informations, consultez [méthodes génériques Field et SetField](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Field&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
        <param name="column">L'objet <see cref="T:System.Data.DataColumn" /> d'entrée dont spécifie la colonne pour retourner la valeur.</param>
        <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> prend également en charge les types Nullable.</summary>
        <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="column" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataSet> classe représente **null** les valeurs de la <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur génèrent un <xref:System.InvalidCastException> au moment de l’exécution. En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable. Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables.  Si la valeur sous-jacente dans la <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a une valeur de **null**.  
  
 Si la valeur de l’objet <xref:System.Data.DataColumn> est <xref:System.DBNull.Value> et `T` est un type référence ou nullable, le type de retour sera **null**. Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retourne pas <xref:System.DBNull.Value>.  
  
 Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de types. Si la conversion de type est requise, vous devez d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode). La valeur de colonne doit ensuite être convertie en un autre type.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="column" /> ne se produit pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
        <exception cref="T:System.NullReferenceException">Une valeur **null** a été affectée à un type qui n’accepte pas les valeurs null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
        <param name="columnIndex">Index de la colonne.</param>
        <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> prend également en charge les types Nullable.</summary>
        <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="columnIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataSet> classe représente **null** les valeurs de la <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur génèrent un <xref:System.InvalidCastException> au moment de l’exécution. En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable. Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables.  Si la valeur sous-jacente dans la <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a une valeur de **null**.  
  
 Si la valeur de l’objet <xref:System.Data.DataColumn> est **null** et `T` est un type référence ou nullable, le type de retour est **null**.  Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retourne pas <xref:System.DBNull.Value>.  
  
 Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de types. Si la conversion de type est requise, vous devez d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode). La valeur de colonne doit ensuite être convertie en un autre type.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="ordinal" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
        <exception cref="T:System.NullReferenceException">Une valeur **null** a été affectée à un type qui n’accepte pas les valeurs null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
        <param name="columnName">Nom de la colonne dont la valeur est à retourner.</param>
        <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> prend également en charge les types Nullable.</summary>
        <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="columnName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataSet> classe représente **null** les valeurs de la <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe. A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur génèrent un <xref:System.InvalidCastException> au moment de l’exécution. En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable. Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables. Si la valeur sous-jacente dans la <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a une valeur de **null**.  
  
 Si la valeur de l’objet <xref:System.Data.DataColumn> est **null** et `T` est un type référence ou nullable, le type de retour sera **null**. Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retourne pas <xref:System.DBNull.Value>.  
  
 Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de types. Si la conversion de type est requise, vous devez d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode). La valeur de colonne doit ensuite être convertie en un autre type.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="columnName" /> ne se produit pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
        <exception cref="T:System.NullReferenceException">Une valeur <see langword="null" /> a été assignée à un type non Nullable.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
        <param name="column">L'objet <see cref="T:System.Data.DataColumn" /> d'entrée dont spécifie la colonne pour retourner la valeur.</param>
        <param name="version">Énumération <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de la valeur de colonne à retourner, telle que la version <see langword="Current" /> ou <see langword="Original" />.</param>
        <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> prend également en charge les types Nullable.</summary>
        <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="column" /> et <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataSet> classe représente **null** les valeurs de la <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur génèrent un <xref:System.InvalidCastException> au moment de l’exécution. En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable. Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables.  Si la valeur sous-jacente dans la <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a une valeur de **null**.  
  
 Si la valeur de l’objet <xref:System.Data.DataColumn> a la valeur null et `T` est un type référence ou nullable, le type de retour est **null**. Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retourne pas <xref:System.DBNull.Value>.  
  
 Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de types. Si la conversion de type est requise, vous devez d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode). La valeur de colonne doit ensuite être convertie en un autre type.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="column" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
        <exception cref="T:System.NullReferenceException">Une valeur **null** a été affectée à un type qui n’accepte pas les valeurs null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
        <param name="columnIndex">Numéro de colonne de base zéro dont la valeur est à retourner.</param>
        <param name="version">Énumération <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de la valeur de colonne à retourner, telle que la version <see langword="Current" /> ou <see langword="Original" />.</param>
        <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> prend également en charge les types Nullable.</summary>
        <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="ordinal" /> et <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataSet> classe représente **null** les valeurs de la <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur génèrent un <xref:System.InvalidCastException> au moment de l’exécution. En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable. Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables.  Si la valeur sous-jacente dans la <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a une valeur de **null**.  
  
 Si la valeur de l’objet <xref:System.Data.DataColumn> a la valeur null et `T` est un type référence ou nullable, le type de retour est **null**. Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retourne pas <xref:System.DBNull.Value>.  
  
 Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de types. Si la conversion de type est requise, vous devez d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode). La valeur de colonne doit ensuite être convertie en un autre type.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="ordinal" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
        <exception cref="T:System.NullReferenceException">Une valeur **null** a été affectée à un type qui n’accepte pas les valeurs null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
        <param name="columnName">Nom de la colonne dont la valeur est à retourner.</param>
        <param name="version">Énumération <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de la valeur de colonne à retourner, telle que la version <see langword="Current" /> ou <see langword="Original" />.</param>
        <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> prend également en charge les types Nullable.</summary>
        <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="columnName" /> et <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataSet> classe représente **null** les valeurs de la <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur génèrent un <xref:System.InvalidCastException> au moment de l’exécution. En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable. Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables.  Si la valeur sous-jacente dans la <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a une valeur de **null**.  
  
 Si la valeur de l’objet <xref:System.Data.DataColumn> a la valeur null et `T` est un type référence ou nullable, le type de retour est **null**. Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retourne pas <xref:System.DBNull.Value>.  
  
 Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de types. Si la conversion de type est requise, vous devez d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode). La valeur de colonne doit ensuite être convertie en un autre type.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="columnName" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
        <exception cref="T:System.NullReferenceException">Une valeur **null** a été affectée à un type qui n’accepte pas les valeurs null.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetField&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit une nouvelle valeur pour la colonne spécifiée dans la <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, column As DataColumn, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Paramètre générique qui spécifie le type valeur de la colonne.</typeparam>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
        <param name="column">La <see cref="T:System.Data.DataColumn" /> d'entrée spécifie quelle valeur de ligne récupérer.</param>
        <param name="value">Nouvelle valeur de ligne pour la colonne spécifiée, de type <c>T</c>.</param>
        <summary>Définit une nouvelle valeur pour la colonne spécifiée dans la <see cref="T:System.Data.DataRow" />. La méthode <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> prend également en charge les types Nullable.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `value` est **null**, le <xref:System.Data.DataRowExtensions.SetField%2A> méthode convertit le **null** valeur <xref:System.DBNull.Value> dans sous-jacent <xref:System.Data.DataColumn>.  
  
 Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode n’effectue pas les conversions de type. Toutefois, cela ne signifie pas qu'une conversion de type ne se produira pas. Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode expose le [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] comportement de la <xref:System.Data.DataRow> classe. Une conversion de type pourrait être exécutée par le <xref:System.Data.DataRow> objet et la valeur convertie sont enregistrées ensuite à la ligne.  
  
 Exceptions peuvent être passées via la <xref:System.Data.DataRowExtensions.SetField%2A> méthode sous-jacent <xref:System.Data.DataRow> objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La colonne spécifiée par <paramref name="column" /> est introuvable.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> a la valeur **null**.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
        <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, int columnIndex, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnIndex As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, int columnIndex, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Paramètre générique qui spécifie le type valeur de la colonne.</typeparam>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
        <param name="columnIndex">Numéro de colonne de base zéro dont la valeur est à définir.</param>
        <param name="value">Nouvelle valeur de ligne pour la colonne spécifiée, de type <c>T</c>.</param>
        <summary>Définit une nouvelle valeur pour la colonne spécifiée dans la <see cref="T:System.Data.DataRow" /> sur laquelle la méthode est appelée. La méthode <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> prend également en charge les types Nullable.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `value` est **null**, le <xref:System.Data.DataRowExtensions.SetField%2A> méthode convertit le **null** valeur <xref:System.DBNull.Value> dans sous-jacent <xref:System.Data.DataColumn>.  
  
 Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode n’effectue pas les conversions de type. Toutefois, cela ne signifie pas qu'une conversion de type ne se produira pas. Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode expose le [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] comportement de la <xref:System.Data.DataRow> classe. Une conversion de type pourrait être exécutée par le <xref:System.Data.DataRow> objet et la valeur convertie sont enregistrées ensuite à la ligne.  
  
 Exceptions peuvent être passées via la <xref:System.Data.DataRowExtensions.SetField%2A> méthode sous-jacent <xref:System.Data.DataRow> objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
        <exception cref="T:System.IndexOutOfRangeException">L'argument <paramref name="ordinal" /> est hors limites.</exception>
        <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, string columnName, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, string columnName, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnName As String, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::String ^ columnName, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Paramètre générique qui spécifie le type valeur de la colonne.</typeparam>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
        <param name="columnName">Nom de la colonne dont la valeur est à définir.</param>
        <param name="value">Nouvelle valeur de ligne pour la colonne spécifiée, de type <c>T</c>.</param>
        <summary>Définit une nouvelle valeur pour la colonne spécifiée dans la <see cref="T:System.Data.DataRow" />. La méthode <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> prend également en charge les types Nullable.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `value` est **null**, le <xref:System.Data.DataRowExtensions.SetField%2A> méthode convertit le **null** valeur <xref:System.DBNull.Value> dans sous-jacent <xref:System.Data.DataColumn>.  
  
 Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode n’effectue pas les conversions de type. Toutefois, cela ne signifie pas qu'une conversion de type ne se produira pas. Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode expose le [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] comportement de la <xref:System.Data.DataRow> classe. Une conversion de type pourrait être exécutée par le <xref:System.Data.DataRow> objet et la valeur convertie sont enregistrées ensuite à la ligne.  
  
 Exceptions peuvent être passées via la <xref:System.Data.DataRowExtensions.SetField%2A> méthode sous-jacent <xref:System.Data.DataRow> objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
        <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>