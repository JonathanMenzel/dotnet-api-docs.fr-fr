<Type Name="DataRowExtensions" FullName="System.Data.DataRowExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="757e3e01bb0a6c805ad1b1cd5f7992bc5ab4e09a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37670282" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataRowExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataRowExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataRowExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataRowExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ec7da-101">Defines the extension methods to the <see cref="T:System.Data.DataRow" /> class.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec7da-101">Defines the extension methods to the <see cref="T:System.Data.DataRow" /> class.</span>
      </span>
      <span data-ttu-id="ec7da-102">This is a static class.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec7da-102">This is a static class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec7da-103">Le <xref:System.Data.DataSet> API a été étendu avec deux nouvelles méthodes de la <xref:System.Data.DataRow> (classe), <xref:System.Data.DataRowExtensions.Field%2A> et <xref:System.Data.DataRowExtensions.SetField%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec7da-103">The <xref:System.Data.DataSet> API has been extended with two new methods of the <xref:System.Data.DataRow> class, <xref:System.Data.DataRowExtensions.Field%2A> and <xref:System.Data.DataRowExtensions.SetField%2A>.</span></span> <span data-ttu-id="ec7da-104">Vous pouvez utiliser celles-ci pour former [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expressions et les requêtes de méthode sur <xref:System.Data.DataTable> objets.</span><span class="sxs-lookup"><span data-stu-id="ec7da-104">You can use these to form [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expressions and method queries against <xref:System.Data.DataTable> objects.</span></span> <span data-ttu-id="ec7da-105">Ils sont les méthodes recommandées à utiliser pour accéder aux valeurs de colonne dans [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expressions et des requêtes de méthode.</span><span class="sxs-lookup"><span data-stu-id="ec7da-105">They are the recommended methods to use for accessing column values within [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expressions and method queries.</span></span> <span data-ttu-id="ec7da-106">Pour plus d’informations, consultez [méthodes génériques Field et SetField](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md).</span><span class="sxs-lookup"><span data-stu-id="ec7da-106">For more information, see [Generic Field and SetField Methods](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Field&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ec7da-107">Provides strongly-typed access to each of the column values in the <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-107">Provides strongly-typed access to each of the column values in the <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ec7da-108">Un paramètre générique qui spécifie le type de retour de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-108">A generic parameter that specifies the return type of the column.</span>
          </span>
        </typeparam>
        <param name="row">
          <span data-ttu-id="ec7da-109">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-109">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          </span>
        </param>
        <param name="column">
          <span data-ttu-id="ec7da-110">The input <see cref="T:System.Data.DataColumn" /> object that specifies the column to return the value of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-110">The input <see cref="T:System.Data.DataColumn" /> object that specifies the column to return the value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec7da-111">Provides strongly-typed access to each of the column values in the specified row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-111">Provides strongly-typed access to each of the column values in the specified row.</span>
          </span>
          <span data-ttu-id="ec7da-112">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> method also supports nullable types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-112">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> method also supports nullable types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec7da-113">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="column" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-113">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="column" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec7da-114">Le <xref:System.Data.DataSet> classe représente **null** valeurs avec le <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe.</span><span class="sxs-lookup"><span data-stu-id="ec7da-114">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span>  <span data-ttu-id="ec7da-115">Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur générerait un <xref:System.InvalidCastException> en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="ec7da-115">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="ec7da-116">En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable.</span><span class="sxs-lookup"><span data-stu-id="ec7da-116">Additionally, <xref:System.Data.DataSet> does not support nullable types.</span></span> <span data-ttu-id="ec7da-117">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables.</span><span class="sxs-lookup"><span data-stu-id="ec7da-117">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span>  <span data-ttu-id="ec7da-118">Si la valeur sous-jacente dans le <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a la valeur de **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-118">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="ec7da-119">Si la valeur de l’objet <xref:System.Data.DataColumn> est <xref:System.DBNull.Value> et `T` est un type référence ou un type nullable, le type de retour sera **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-119">If the value of the specified <xref:System.Data.DataColumn> is <xref:System.DBNull.Value> and `T` is a reference type or nullable type, the return type will be **null**.</span></span> <span data-ttu-id="ec7da-120">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retournera pas <xref:System.DBNull.Value>.</span><span class="sxs-lookup"><span data-stu-id="ec7da-120">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="ec7da-121">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-121">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="ec7da-122">Si la conversion de type est requise, vous devez tout d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ec7da-122">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="ec7da-123">La valeur de colonne doit alors être convertie en un autre type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-123">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ec7da-124">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-124">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ec7da-125">The column specified by <paramref name="column" /> does not occur in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-125">The column specified by <paramref name="column" /> does not occur in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ec7da-126">A **null** value was assigned to a non-nullable type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-126">A **null** value was assigned to a non-nullable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ec7da-127">Un paramètre générique qui spécifie le type de retour de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-127">A generic parameter that specifies the return type of the column.</span>
          </span>
        </typeparam>
        <param name="row">
          <span data-ttu-id="ec7da-128">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-128">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          </span>
        </param>
        <param name="columnIndex">
          <span data-ttu-id="ec7da-129">The column index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-129">The column index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec7da-130">Provides strongly-typed access to each of the column values in the specified row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-130">Provides strongly-typed access to each of the column values in the specified row.</span>
          </span>
          <span data-ttu-id="ec7da-131">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> method also supports nullable types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-131">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> method also supports nullable types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec7da-132">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-132">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec7da-133">Le <xref:System.Data.DataSet> classe représente **null** valeurs avec le <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe.</span><span class="sxs-lookup"><span data-stu-id="ec7da-133">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span>  <span data-ttu-id="ec7da-134">Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur générerait un <xref:System.InvalidCastException> en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="ec7da-134">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="ec7da-135">En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable.</span><span class="sxs-lookup"><span data-stu-id="ec7da-135">Additionally, <xref:System.Data.DataSet> doesn’t support nullable types.</span></span> <span data-ttu-id="ec7da-136">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables.</span><span class="sxs-lookup"><span data-stu-id="ec7da-136">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span>  <span data-ttu-id="ec7da-137">Si la valeur sous-jacente dans le <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a la valeur de **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-137">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="ec7da-138">Si la valeur de l’objet <xref:System.Data.DataColumn> est **null** et `T` est un type référence ou un type nullable, le type de retour est **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-138">If the value of the specified <xref:System.Data.DataColumn> is **null** and `T` is a reference type or nullable type, then the return type will be **null**.</span></span>  <span data-ttu-id="ec7da-139">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retournera pas <xref:System.DBNull.Value>.</span><span class="sxs-lookup"><span data-stu-id="ec7da-139">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="ec7da-140">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-140">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="ec7da-141">Si la conversion de type est requise, vous devez tout d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ec7da-141">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="ec7da-142">La valeur de colonne doit alors être convertie en un autre type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-142">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ec7da-143">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-143">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ec7da-144">The column specified by <paramref name="ordinal" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-144">The column specified by <paramref name="ordinal" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ec7da-145">A **null** value was assigned to a non-nullable type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-145">A **null** value was assigned to a non-nullable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ec7da-146">Un paramètre générique qui spécifie le type de retour de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-146">A generic parameter that specifies the return type of the column.</span>
          </span>
        </typeparam>
        <param name="row">
          <span data-ttu-id="ec7da-147">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-147">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          </span>
        </param>
        <param name="columnName">
          <span data-ttu-id="ec7da-148">The name of the column to return the value of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-148">The name of the column to return the value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec7da-149">Provides strongly-typed access to each of the column values in the specified row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-149">Provides strongly-typed access to each of the column values in the specified row.</span>
          </span>
          <span data-ttu-id="ec7da-150">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> method also supports nullable types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-150">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> method also supports nullable types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec7da-151">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-151">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec7da-152">Le <xref:System.Data.DataSet> classe représente **null** valeurs avec le <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe.</span><span class="sxs-lookup"><span data-stu-id="ec7da-152">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span> <span data-ttu-id="ec7da-153">Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur générerait un <xref:System.InvalidCastException> en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="ec7da-153">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="ec7da-154">En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable.</span><span class="sxs-lookup"><span data-stu-id="ec7da-154">Additionally, <xref:System.Data.DataSet> does not support nullable types.</span></span> <span data-ttu-id="ec7da-155">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables.</span><span class="sxs-lookup"><span data-stu-id="ec7da-155">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span> <span data-ttu-id="ec7da-156">Si la valeur sous-jacente dans le <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a la valeur de **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-156">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="ec7da-157">Si la valeur de l’objet <xref:System.Data.DataColumn> est **null** et `T` est un type référence ou un type nullable, le type de retour sera **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-157">If the value of the specified <xref:System.Data.DataColumn> is **null** and `T` is a reference type or nullable type, the return type will be **null**.</span></span> <span data-ttu-id="ec7da-158">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retournera pas <xref:System.DBNull.Value>.</span><span class="sxs-lookup"><span data-stu-id="ec7da-158">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="ec7da-159">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-159">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="ec7da-160">Si la conversion de type est requise, vous devez tout d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ec7da-160">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="ec7da-161">La valeur de colonne doit alors être convertie en un autre type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-161">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ec7da-162">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-162">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ec7da-163">The column specified by <paramref name="columnName" /> does not occur in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-163">The column specified by <paramref name="columnName" /> does not occur in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ec7da-164">A <see langword="null" /> value was assigned to a non-nullable type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-164">A <see langword="null" /> value was assigned to a non-nullable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ec7da-165">Un paramètre générique qui spécifie le type de retour de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-165">A generic parameter that specifies the return type of the column.</span>
          </span>
        </typeparam>
        <param name="row">
          <span data-ttu-id="ec7da-166">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-166">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          </span>
        </param>
        <param name="column">
          <span data-ttu-id="ec7da-167">The input <see cref="T:System.Data.DataColumn" /> object that specifies the column to return the value of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-167">The input <see cref="T:System.Data.DataColumn" /> object that specifies the column to return the value of.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="ec7da-168">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-168">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec7da-169">Provides strongly-typed access to each of the column values in the specified row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-169">Provides strongly-typed access to each of the column values in the specified row.</span>
          </span>
          <span data-ttu-id="ec7da-170">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> method also supports nullable types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-170">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> method also supports nullable types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec7da-171">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="column" /> and <paramref name="version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-171">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="column" /> and <paramref name="version" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec7da-172">Le <xref:System.Data.DataSet> classe représente **null** valeurs avec le <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe.</span><span class="sxs-lookup"><span data-stu-id="ec7da-172">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span>  <span data-ttu-id="ec7da-173">Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur générerait un <xref:System.InvalidCastException> en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="ec7da-173">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="ec7da-174">En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable.</span><span class="sxs-lookup"><span data-stu-id="ec7da-174">Additionally, <xref:System.Data.DataSet> doesn’t support nullable types.</span></span> <span data-ttu-id="ec7da-175">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables.</span><span class="sxs-lookup"><span data-stu-id="ec7da-175">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span>  <span data-ttu-id="ec7da-176">Si la valeur sous-jacente dans le <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a la valeur de **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-176">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="ec7da-177">Si la valeur de l’objet <xref:System.Data.DataColumn> a la valeur null et `T` est un type référence ou un type nullable, le type de retour est **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-177">If the value of the specified <xref:System.Data.DataColumn> is null and `T` is a reference type or nullable type, then the return type will be **null**.</span></span> <span data-ttu-id="ec7da-178">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retournera pas <xref:System.DBNull.Value>.</span><span class="sxs-lookup"><span data-stu-id="ec7da-178">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="ec7da-179">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-179">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="ec7da-180">Si la conversion de type est requise, vous devez tout d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ec7da-180">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="ec7da-181">La valeur de colonne doit alors être convertie en un autre type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-181">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ec7da-182">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-182">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ec7da-183">The column specified by <paramref name="column" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-183">The column specified by <paramref name="column" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ec7da-184">A **null** value was assigned to a non-nullable type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-184">A **null** value was assigned to a non-nullable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ec7da-185">Un paramètre générique qui spécifie le type de retour de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-185">A generic parameter that specifies the return type of the column.</span>
          </span>
        </typeparam>
        <param name="row">
          <span data-ttu-id="ec7da-186">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-186">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          </span>
        </param>
        <param name="columnIndex">
          <span data-ttu-id="ec7da-187">The zero-based ordinal of the column to return the value of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-187">The zero-based ordinal of the column to return the value of.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="ec7da-188">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-188">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec7da-189">Provides strongly-typed access to each of the column values in the specified row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-189">Provides strongly-typed access to each of the column values in the specified row.</span>
          </span>
          <span data-ttu-id="ec7da-190">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> method also supports nullable types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-190">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> method also supports nullable types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec7da-191">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="ordinal" /> and <paramref name="version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-191">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="ordinal" /> and <paramref name="version" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec7da-192">Le <xref:System.Data.DataSet> classe représente **null** valeurs avec le <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe.</span><span class="sxs-lookup"><span data-stu-id="ec7da-192">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span>  <span data-ttu-id="ec7da-193">Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur générerait un <xref:System.InvalidCastException> en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="ec7da-193">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="ec7da-194">En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable.</span><span class="sxs-lookup"><span data-stu-id="ec7da-194">Additionally, <xref:System.Data.DataSet> doesn’t support nullable types.</span></span> <span data-ttu-id="ec7da-195">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables.</span><span class="sxs-lookup"><span data-stu-id="ec7da-195">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span>  <span data-ttu-id="ec7da-196">Si la valeur sous-jacente dans le <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a la valeur de **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-196">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="ec7da-197">Si la valeur de l’objet <xref:System.Data.DataColumn> a la valeur null et `T` est un type référence ou un type nullable, le type de retour est **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-197">If the value of the specified <xref:System.Data.DataColumn> is null and `T` is a reference type or nullable type, then the return type will be **null**.</span></span> <span data-ttu-id="ec7da-198">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retournera pas <xref:System.DBNull.Value>.</span><span class="sxs-lookup"><span data-stu-id="ec7da-198">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="ec7da-199">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-199">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="ec7da-200">Si la conversion de type est requise, vous devez tout d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ec7da-200">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="ec7da-201">La valeur de colonne doit alors être convertie en un autre type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-201">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ec7da-202">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-202">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ec7da-203">The column specified by <paramref name="ordinal" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-203">The column specified by <paramref name="ordinal" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ec7da-204">A **null** value was assigned to a non-nullable type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-204">A **null** value was assigned to a non-nullable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ec7da-205">Un paramètre générique qui spécifie le type de retour de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-205">A generic parameter that specifies the return type of the column.</span>
          </span>
        </typeparam>
        <param name="row">
          <span data-ttu-id="ec7da-206">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-206">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          </span>
        </param>
        <param name="columnName">
          <span data-ttu-id="ec7da-207">The name of the column to return the value of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-207">The name of the column to return the value of.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="ec7da-208">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-208">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec7da-209">Provides strongly-typed access to each of the column values in the specified row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-209">Provides strongly-typed access to each of the column values in the specified row.</span>
          </span>
          <span data-ttu-id="ec7da-210">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> method also supports nullable types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-210">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> method also supports nullable types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec7da-211">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnName" /> and <paramref name="version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-211">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnName" /> and <paramref name="version" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec7da-212">Le <xref:System.Data.DataSet> classe représente **null** valeurs avec le <xref:System.DBNull.Value> instance de la <xref:System.DBNull> classe.</span><span class="sxs-lookup"><span data-stu-id="ec7da-212">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span>  <span data-ttu-id="ec7da-213">Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression qui accède à une colonne une **null** valeur générerait un <xref:System.InvalidCastException> en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="ec7da-213">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="ec7da-214">En outre, <xref:System.Data.DataSet> ne prend pas en charge les types nullable.</span><span class="sxs-lookup"><span data-stu-id="ec7da-214">Additionally, <xref:System.Data.DataSet> doesn’t support nullable types.</span></span> <span data-ttu-id="ec7da-215">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode prend en charge l’accès aux colonnes en tant que types nullables.</span><span class="sxs-lookup"><span data-stu-id="ec7da-215">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span>  <span data-ttu-id="ec7da-216">Si la valeur sous-jacente dans le <xref:System.Data.DataSet> est <xref:System.DBNull.Value>, le type nullable retourné a la valeur de **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-216">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="ec7da-217">Si la valeur de l’objet <xref:System.Data.DataColumn> a la valeur null et `T` est un type référence ou un type nullable, le type de retour est **null**.</span><span class="sxs-lookup"><span data-stu-id="ec7da-217">If the value of the specified <xref:System.Data.DataColumn> is null and `T` is a reference type or nullable type, then the return type will be **null**.</span></span> <span data-ttu-id="ec7da-218">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode ne retournera pas <xref:System.DBNull.Value>.</span><span class="sxs-lookup"><span data-stu-id="ec7da-218">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="ec7da-219">Le <xref:System.Data.DataRowExtensions.Field%2A> méthode n’effectue pas de conversions de type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-219">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="ec7da-220">Si la conversion de type est requise, vous devez tout d’abord obtenir la valeur de colonne à l’aide de la <xref:System.Data.DataRowExtensions.Field%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ec7da-220">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="ec7da-221">La valeur de colonne doit alors être convertie en un autre type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-221">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ec7da-222">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-222">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ec7da-223">The column specified by <paramref name="columnName" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-223">The column specified by <paramref name="columnName" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ec7da-224">A **null** value was assigned to a non-nullable type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-224">A **null** value was assigned to a non-nullable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetField&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ec7da-225">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-225">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, column As DataColumn, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * System.Data.DataColumn * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, column, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ec7da-226">Un paramètre générique qui spécifie le type de valeur de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-226">A generic parameter that specifies the value type of the column.</span>
          </span>
        </typeparam>
        <param name="row">
          <span data-ttu-id="ec7da-227">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-227">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          </span>
        </param>
        <param name="column">
          <span data-ttu-id="ec7da-228">The input <see cref="T:System.Data.DataColumn" /> specifies which row value to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-228">The input <see cref="T:System.Data.DataColumn" /> specifies which row value to retrieve.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ec7da-229">The new row value for the specified column, of type <c>T</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-229">The new row value for the specified column, of type <c>T</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec7da-230">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-230">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />.</span>
          </span>
          <span data-ttu-id="ec7da-231">The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> method also supports nullable types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-231">The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> method also supports nullable types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec7da-232">Si `value` est **null**, le <xref:System.Data.DataRowExtensions.SetField%2A> méthode convertit le **null** valeur <xref:System.DBNull.Value> dans sous-jacent <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="ec7da-232">If `value` is **null**, the <xref:System.Data.DataRowExtensions.SetField%2A> method converts the **null** value to <xref:System.DBNull.Value> in the underlying <xref:System.Data.DataColumn>.</span></span>  
  
 <span data-ttu-id="ec7da-233">Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode n’effectue pas de conversion de type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-233">The <xref:System.Data.DataRowExtensions.SetField%2A> method does not perform any type conversions.</span></span> <span data-ttu-id="ec7da-234">Toutefois, cela ne signifie pas qu'une conversion de type ne se produira pas.</span><span class="sxs-lookup"><span data-stu-id="ec7da-234">This does not mean, however, that a type conversion will not occur.</span></span> <span data-ttu-id="ec7da-235">Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode expose le [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] comportement de la <xref:System.Data.DataRow> classe.</span><span class="sxs-lookup"><span data-stu-id="ec7da-235">The <xref:System.Data.DataRowExtensions.SetField%2A> method exposes the [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] behavior of the <xref:System.Data.DataRow> class.</span></span> <span data-ttu-id="ec7da-236">Une conversion de type pourrait être exécutée par le <xref:System.Data.DataRow> objet et la valeur convertie seraient enregistrées ensuite à la ligne.</span><span class="sxs-lookup"><span data-stu-id="ec7da-236">A type conversion could be performed by the <xref:System.Data.DataRow> object and the converted value would then be saved to the row.</span></span>  
  
 <span data-ttu-id="ec7da-237">Les exceptions peuvent être transmises à travers la <xref:System.Data.DataRowExtensions.SetField%2A> méthode sous-jacent <xref:System.Data.DataRow> objet.</span><span class="sxs-lookup"><span data-stu-id="ec7da-237">Exceptions can be passed up through the <xref:System.Data.DataRowExtensions.SetField%2A> method from the underlying <xref:System.Data.DataRow> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ec7da-238">The column specified by <paramref name="column" /> cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-238">The column specified by <paramref name="column" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec7da-239">The <paramref name="column" /> is **null**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-239">The <paramref name="column" /> is **null**.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="ec7da-240">Occurs when attempting to set a value on a deleted row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-240">Occurs when attempting to set a value on a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ec7da-241">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-241">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, int columnIndex, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnIndex As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, int columnIndex, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * int * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnIndex, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ec7da-242">Un paramètre générique qui spécifie le type de valeur de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-242">A generic parameter that specifies the value type of the column.</span>
          </span>
        </typeparam>
        <param name="row">
          <span data-ttu-id="ec7da-243">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-243">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          </span>
        </param>
        <param name="columnIndex">
          <span data-ttu-id="ec7da-244">The zero-based ordinal of the column to set the value of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-244">The zero-based ordinal of the column to set the value of.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ec7da-245">The new row value for the specified column, of type <c>T</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-245">The new row value for the specified column, of type <c>T</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec7da-246">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" /> the method is called on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-246">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" /> the method is called on.</span>
          </span>
          <span data-ttu-id="ec7da-247">The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> method also supports nullable types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-247">The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> method also supports nullable types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec7da-248">Si `value` est **null**, le <xref:System.Data.DataRowExtensions.SetField%2A> méthode convertit le **null** valeur <xref:System.DBNull.Value> dans sous-jacent <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="ec7da-248">If `value` is **null**, the <xref:System.Data.DataRowExtensions.SetField%2A> method converts the **null** value to <xref:System.DBNull.Value> in the underlying <xref:System.Data.DataColumn>.</span></span>  
  
 <span data-ttu-id="ec7da-249">Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode n’effectue pas de conversion de type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-249">The <xref:System.Data.DataRowExtensions.SetField%2A> method does not perform any type conversions.</span></span> <span data-ttu-id="ec7da-250">Toutefois, cela ne signifie pas qu'une conversion de type ne se produira pas.</span><span class="sxs-lookup"><span data-stu-id="ec7da-250">This does not mean, however, that a type conversion will not occur.</span></span> <span data-ttu-id="ec7da-251">Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode expose le [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] comportement de la <xref:System.Data.DataRow> classe.</span><span class="sxs-lookup"><span data-stu-id="ec7da-251">The <xref:System.Data.DataRowExtensions.SetField%2A> method exposes the [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] behavior of the <xref:System.Data.DataRow> class.</span></span> <span data-ttu-id="ec7da-252">Une conversion de type pourrait être exécutée par le <xref:System.Data.DataRow> objet et la valeur convertie seraient enregistrées ensuite à la ligne.</span><span class="sxs-lookup"><span data-stu-id="ec7da-252">A type conversion could be performed by the <xref:System.Data.DataRow> object and the converted value would then be saved to the row.</span></span>  
  
 <span data-ttu-id="ec7da-253">Les exceptions peuvent être transmises à travers la <xref:System.Data.DataRowExtensions.SetField%2A> méthode sous-jacent <xref:System.Data.DataRow> objet.</span><span class="sxs-lookup"><span data-stu-id="ec7da-253">Exceptions can be passed up through the <xref:System.Data.DataRowExtensions.SetField%2A> method from the underlying <xref:System.Data.DataRow> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="ec7da-254">Occurs when attempting to set a value on a deleted row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-254">Occurs when attempting to set a value on a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="ec7da-255">The <paramref name="ordinal" /> argument is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-255">The <paramref name="ordinal" /> argument is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ec7da-256">The value type of the underlying column could be not cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-256">The value type of the underlying column could be not cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, string columnName, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, string columnName, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnName As String, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::String ^ columnName, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * string * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ec7da-257">Un paramètre générique qui spécifie le type de valeur de la colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-257">A generic parameter that specifies the value type of the column.</span>
          </span>
        </typeparam>
        <param name="row">
          <span data-ttu-id="ec7da-258">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-258">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span>
          </span>
        </param>
        <param name="columnName">
          <span data-ttu-id="ec7da-259">The name of the column to set the value of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-259">The name of the column to set the value of.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ec7da-260">The new row value for the specified column, of type <c>T</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-260">The new row value for the specified column, of type <c>T</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec7da-261">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-261">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />.</span>
          </span>
          <span data-ttu-id="ec7da-262">The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> method also supports nullable types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-262">The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> method also supports nullable types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec7da-263">Si `value` est **null**, le <xref:System.Data.DataRowExtensions.SetField%2A> méthode convertit le **null** valeur <xref:System.DBNull.Value> dans sous-jacent <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="ec7da-263">If `value` is **null**, the <xref:System.Data.DataRowExtensions.SetField%2A> method converts the **null** value to <xref:System.DBNull.Value> in the underlying <xref:System.Data.DataColumn>.</span></span>  
  
 <span data-ttu-id="ec7da-264">Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode n’effectue pas de conversion de type.</span><span class="sxs-lookup"><span data-stu-id="ec7da-264">The <xref:System.Data.DataRowExtensions.SetField%2A> method does not perform any type conversions.</span></span> <span data-ttu-id="ec7da-265">Toutefois, cela ne signifie pas qu'une conversion de type ne se produira pas.</span><span class="sxs-lookup"><span data-stu-id="ec7da-265">This does not mean, however, that a type conversion will not occur.</span></span> <span data-ttu-id="ec7da-266">Le <xref:System.Data.DataRowExtensions.SetField%2A> méthode expose le [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] comportement de la <xref:System.Data.DataRow> classe.</span><span class="sxs-lookup"><span data-stu-id="ec7da-266">The <xref:System.Data.DataRowExtensions.SetField%2A> method exposes the [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] behavior of the <xref:System.Data.DataRow> class.</span></span> <span data-ttu-id="ec7da-267">Une conversion de type pourrait être exécutée par le <xref:System.Data.DataRow> objet et la valeur convertie seraient enregistrées ensuite à la ligne.</span><span class="sxs-lookup"><span data-stu-id="ec7da-267">A type conversion could be performed by the <xref:System.Data.DataRow> object and the converted value would then be saved to the row.</span></span>  
  
 <span data-ttu-id="ec7da-268">Les exceptions peuvent être transmises à travers la <xref:System.Data.DataRowExtensions.SetField%2A> méthode sous-jacent <xref:System.Data.DataRow> objet.</span><span class="sxs-lookup"><span data-stu-id="ec7da-268">Exceptions can be passed up through the <xref:System.Data.DataRowExtensions.SetField%2A> method from the underlying <xref:System.Data.DataRow> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ec7da-269">The column specified by <paramref name="columnName" /> cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-269">The column specified by <paramref name="columnName" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="ec7da-270">Occurs when attempting to set a value on a deleted row.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-270">Occurs when attempting to set a value on a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ec7da-271">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec7da-271">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>