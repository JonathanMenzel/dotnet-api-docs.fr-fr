<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataTable.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51ca059a55e7219b43068a0a701adfb187f239dc3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ca059a55e7219b43068a0a701adfb187f239dc3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Represents one table of in-memory data.</source>
          <target state="translated">Représente une table de données en mémoire.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is a central object in the ADO.NET library.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> est un objet central dans la bibliothèque ADO.NET.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Other objects that use the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> include the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and the <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>.</source>
          <target state="translated">Autres objets qui utilisent le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> incluent le <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> et <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>When accessing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, note that they are conditionally case sensitive.</source>
          <target state="translated">Lors de l’accès <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objets, notez qu’ils sont en casse dans certaines conditions.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For example, if one <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</source>
          <target state="translated">Par exemple, si un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> est appelé « mydatatable » et un autre nommé « Mydatatable », une chaîne utilisée pour rechercher une des tables est considérée comme respectant la casse.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</source>
          <target state="translated">Cependant, si « mydatatable » existe et n’est pas le cas de « Mydatatable », la chaîne de recherche est considérée comme la casse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can contain two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects that have the same <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> property value but different <ph id="ph4">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> property values.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> peut contenir deux <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> les objets qui ont le même <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> valeur de propriété mais différentes <ph id="ph4">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> les valeurs de propriété.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information about working with <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, see <bpt id="p1">[</bpt>Creating a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’utilisation de <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> , consultez <bpt id="p1">[</bpt>création d’un DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>If you are creating a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> programmatically, you must first define its schema by adding <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph> (accessed through the <ph id="ph4">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph> property).</source>
          <target state="translated">Si vous créez un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> par programme, vous devez d’abord définir son schéma en ajoutant <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> des objets sur le <ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph> (accessible via la <ph id="ph4">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph> propriété).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information about adding <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> objects, see <bpt id="p1">[</bpt>Adding Columns to a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’ajout de <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> , consultez <bpt id="p1">[</bpt>Ajout de colonnes à un DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To add rows to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, you must first use the <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to return a new <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object.</source>
          <target state="translated">Pour ajouter des lignes à un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, vous devez d’abord utiliser le <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> pour retourner une nouvelle méthode <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method returns a row with the schema of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, as it is defined by the table's <ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> méthode retourne une ligne avec le schéma de la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, telle qu’elle est définie par la table <ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The maximum number of rows that a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can store is 16,777,216.</source>
          <target state="translated">Le nombre maximal de lignes qui une <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> pouvez magasin est 16 777 216.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Data to a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Ajout de données à un DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph> objects that can be used to ensure the integrity of the data.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contient également une collection de <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph> les objets qui peuvent être utilisés pour garantir l’intégrité des données.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information, see <bpt id="p1">[</bpt>DataTable Constraints<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>contraintes DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>There are many <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> events that can be used to determine when changes are made to a table.</source>
          <target state="translated">Il existe de nombreux <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> événements qui peuvent être utilisées pour déterminer quand les modifications sont apportées à une table.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>These include <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataTable.RowDeleting&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.DataTable.RowDeleted&gt;</ph>.</source>
          <target state="translated">Il s'agit notamment de <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataTable.RowDeleting&gt;</ph> et <ph id="ph4">&lt;xref:System.Data.DataTable.RowDeleted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information about the events that can be used with a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les événements qui peuvent être utilisés avec un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, consultez <bpt id="p1">[</bpt>gestion des événements de DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created, some of the read/write properties are set to initial values.</source>
          <target state="translated">Lorsqu’une instance de <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> est créée, certaines de la lecture/écriture les propriétés sont définies sur les valeurs initiales.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor topic.</source>
          <target state="translated">Pour obtenir la liste de ces valeurs, consultez le <ph id="ph1">&lt;xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType&gt;</ph> rubrique relative au constructeur.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects inherit from <ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>, and support the <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface for .NET Framework remoting.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objets héritent de <ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>et prennent en charge la <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface pour le .NET Framework remoting.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>These are the only ADO.NET objects that you can use for .NET Framework remoting.</source>
          <target state="translated">Ceux-ci sont les seuls objets ADO.NET que vous pouvez utiliser pour le .NET Framework remoting.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following example creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects and one <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> object, and adds the new objects to a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">L’exemple suivant crée deux <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objets et l’autre <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> de l’objet et ajoute les nouveaux objets à un <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The tables are then displayed in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">Les tables sont ensuite affichées dans un <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This sample demonstrates how to create a DataTable manually with specific schema definitions:</source>
          <target state="translated">Cet exemple montre comment créer un DataTable manuellement avec des définitions de schéma spécifique :</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Create multiple DataTables and define the initial columns.</source>
          <target state="translated">Créer plusieurs tables de données et définir les colonnes initiales.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Create the table constraints.</source>
          <target state="translated">Créer des contraintes de table.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Insert the values and display the tables.</source>
          <target state="translated">Insérez les valeurs et afficher les tables.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Create the expression columns and display the tables.</source>
          <target state="translated">Créer des colonnes d’expression et afficher les tables.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>C# and Visual Basic projects with this code sample can be found on <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](http://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914)</ept>.</source>
          <target state="translated">Les projets c# et Visual Basic avec cet exemple de code se trouvent sur <bpt id="p1">[</bpt>exemples de Code pour développeurs<ept id="p1">](http://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This type is safe for multithreaded read operations.</source>
          <target state="translated">Ce type est sécurisé pour les opérations de lecture multithreads.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>You must synchronize any write operations.</source>
          <target state="translated">Vous devez synchroniser des opérations d’écriture.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class with no arguments.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sans argument.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>The constructor sets initial values for all properties of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object.</source>
          <target state="translated">Le constructeur définit les valeurs initiales de toutes les propriétés de la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>The following table shows the properties and their default values.</source>
          <target state="translated">Le tableau suivant présente les propriétés et leurs valeurs par défaut.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created, the following read/write properties are set to initial values.</source>
          <target state="translated">Lorsqu’une instance de <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> est créée, les propriétés sont définies sur les valeurs initiales en lecture/écriture.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Default value</source>
          <target state="translated">Valeur par défaut</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>CaseSensitive<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>CaseSensitive<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Same as the parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, if it belongs to one.</source>
          <target state="translated">Identique à celui du parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, s’il appartient à un.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Otherwise, <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Sinon, <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>DisplayExpression<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>DisplayExpression<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Empty string ("")</source>
          <target state="translated">Une chaîne vide (« »)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>Locale<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Paramètres régionaux<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Same as the parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object's <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> (returned by the <ph id="ph3">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> property); if no parent exists, the default is the current system <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.</source>
          <target state="translated">Identique à celui du parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> l’objet <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> (retourné par la <ph id="ph3">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> propriété) ; si aucun parent n’existe, la valeur par défaut est le système actuel <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>MinimumCapacity<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>MinimumCapacity<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>50 rows.</source>
          <target state="translated">50 lignes.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>You can change the value for any of these properties through a separate call to the property.</source>
          <target state="translated">Vous pouvez modifier la valeur d’une de ces propriétés via un appel séparé à la propriété.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>, and displays it in a <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">L’exemple suivant crée un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> avec <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> et <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>et l’affiche dans un <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>The name to give the table.</source>
          <target state="translated">Nom à attribuer à la table.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>tableName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string, a default name is given when added to the <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph>.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>tableName<ept id="p1">&lt;/c&gt;</ept> a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou est une chaîne vide, un nom par défaut est attribué lors de son ajout à <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class with the specified table name.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> avec le nom de table spécifié.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and displays it in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et l’affiche dans un <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The data needed to serialize or deserialize an object.</source>
          <target state="translated">Données nécessaires à la sérialisation et à la désérialisation d’un objet.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The source and destination of a given serialized stream.</source>
          <target state="translated">Source et destination d’un flux sérialisé donné.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class with the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> avec <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> constructor is required for <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</source>
          <target state="translated">Cette implémentation de la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> constructeur est requis pour <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>The name to give the table.</source>
          <target state="translated">Nom à attribuer à la table.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>tableName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string, a default name is given when added to the <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph>.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>tableName<ept id="p1">&lt;/c&gt;</ept> a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou est une chaîne vide, un nom par défaut est attribué lors de son ajout à <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>The namespace for the XML representation of the data stored in the <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">Espace de noms de la représentation XML des données stockées dans le <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class using the specified table name and namespace.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> avec le nom de table et l'espace de noms spécifiés.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.AcceptChanges">
          <source>Commits all the changes made to this table since the last time <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">Valide toutes les modifications apportées à cette table depuis le dernier appel à <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>When <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> is called, any <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> object still in edit mode successfully ends its edits.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> est appelé, tout <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objet toujours en mode édition termine correctement ses modifications.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> also changes: all <ph id="ph2">`Added`</ph> and <ph id="ph3">`Modified`</ph> rows become <ph id="ph4">`Unchanged`</ph>, and <ph id="ph5">`Deleted`</ph> rows are removed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> change également : tous les <ph id="ph2">`Added`</ph> et <ph id="ph3">`Modified`</ph> lignes deviennent <ph id="ph4">`Unchanged`</ph>, et <ph id="ph5">`Deleted`</ph> lignes sont supprimées.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> method is generally called on a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> after you attempt to update the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> using the <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> méthode est généralement appelée sur une <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> une fois que vous tentez de mettre à jour le <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> à l’aide de la <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>The following example tests each table for errors.</source>
          <target state="translated">L’exemple suivant teste chaque table d’erreurs.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>If the table's errors can be reconciled (by passing it to an undefined function), <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> is called; otherwise, <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Si des erreurs de la table peuvent être harmonisées (en le passant à une fonction non définie), <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> est appelée ; sinon, <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.BeginInit">
          <source>Begins the initialization of a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">Commence l'initialisation d'un <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> qui est utilisé dans un formulaire ou par un autre composant.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.BeginInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">L'initialisation se produit au moment de l'exécution.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginInit">
          <source>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">L’environnement de conception de Visual Studio .NET utilise cette méthode pour démarrer l’initialisation d’un composant qui est utilisé sur un formulaire ou par un autre composant.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> méthode termine l’initialisation.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">À l’aide de la <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> méthodes empêche le contrôle avant son initialisation complète.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.BeginLoadData">
          <source>Turns off notifications, index maintenance, and constraints while loading data.</source>
          <target state="translated">Désactive les notifications, la gestion d'index et les contraintes lors du chargement de données.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginLoadData">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> conjointement avec <ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.CaseSensitive">
          <source>Indicates whether string comparisons within the table are case-sensitive.</source>
          <target state="translated">Indique si les comparaisons de chaînes au sein de la table respectent la casse.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the comparison is case-sensitive; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la comparaison respecte la casse ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The default is set to the parent <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> object's <ph id="ph2">&lt;see cref="P:System.Data.DataSet.CaseSensitive" /&gt;</ph> property, or <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> was created independently of a <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est celle de la propriété <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> de l'objet <ph id="ph2">&lt;see cref="P:System.Data.DataSet.CaseSensitive" /&gt;</ph> parent, ou <ph id="ph3">&lt;see langword="false" /&gt;</ph> si <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> a été créé indépendamment de <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> property affects string comparisons in sorting, searching, and filtering.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> propriété affecte les comparaisons de chaînes dans le tri, la recherche et le filtrage.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> method twice on a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">L’exemple suivant appelle la <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> méthode deux fois sur un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The first time, the <ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the second, to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">La première fois, le <ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> est définie sur <ph id="ph2">`false`</ph>, le deuxième <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.ChildRelations">
          <source>Gets the collection of child relations for this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Obtient la collection des relations enfants de ce <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> that contains the child relations for the table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> qui contient les relations enfants pour la table.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects exist.</source>
          <target state="translated">Une collection vide est retournée si aucun objet <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> n'existe.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> defines the relationship between two tables.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> définit la relation entre deux tables.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>Typically, two tables are linked through a single field that contains the same data.</source>
          <target state="translated">En règle générale, les deux tables sont liées via un champ unique qui contient les mêmes données.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>For example, a table which contains address data may have a single field containing codes that represent countries/regions.</source>
          <target state="translated">Par exemple, une table qui contient les données d’adresse peut avoir un champ unique contenant des codes qui représentent des pays/régions.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table.</source>
          <target state="translated">Une seconde table qui contient les données de pays/région aura un champ unique qui contient le code qui identifie le pays/région, et c’est ce code qui est inséré dans le champ correspondant dans la première table.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph>, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph>, puis, contient au moins quatre informations : (1) le nom de la première table, (2) le nom de colonne dans la première table, (3) le nom de la seconde table et (4) le nom de la colonne de la seconde table.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.ChildRelations%2A&gt;</ph> property to return each child <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> in a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Data.DataTable.ChildRelations%2A&gt;</ph> propriété pour retourner chaque enfant <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> dans un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>Each relation is then used as an argument in the <ph id="ph1">&lt;xref:System.Data.DataRow.GetChildRows%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> to return an array of rows.</source>
          <target state="translated">Chaque relation est ensuite utilisée en tant qu’argument dans le <ph id="ph1">&lt;xref:System.Data.DataRow.GetChildRows%2A&gt;</ph> méthode de le <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> pour retourner un tableau de lignes.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>The value of each column in the row is then printed.</source>
          <target state="translated">La valeur de chaque colonne dans la ligne s’affiche ensuite.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Clear">
          <source>Clears the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> of all data.</source>
          <target state="translated">Efface toutes les données de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>All rows in all tables are removed.</source>
          <target state="translated">Toutes les lignes de toutes les tables sont supprimées.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.</source>
          <target state="translated">Une exception est générée si la table contient les relations enfants appliquées sont d’empêcher les lignes enfants orphelines.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is bound to an <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>, calling <ph id="ph3">&lt;xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType&gt;</ph> raises the <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> est lié à un <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>, l’appel <ph id="ph3">&lt;xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph4">&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType&gt;</ph> déclenche le <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>To avoid this situation, traverse each table, removing each row one at a time.</source>
          <target state="translated">Pour éviter cette situation, parcourez chaque table et supprimez les lignes une à la fois.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> to create new rows, the rows must be processed before you call <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>.</source>
          <target state="translated">Lorsque vous utilisez <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> pour créer de nouvelles lignes, les lignes doivent être traités avant d’appeler <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>The following example clears the table of all data.</source>
          <target state="translated">L’exemple suivant efface la table de toutes les données.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Clone">
          <source>Clones the structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, including all <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> schemas and constraints.</source>
          <target state="translated">Clone la structure de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, y compris tous les schémas et contraintes <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the same schema as the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Nouveau <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> possédant le même schéma que le <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>If these classes have been derived, the clone will also be of the same derived classes.</source>
          <target state="translated">Si ces classes ont été dérivées, le clone sera également les mêmes classes dérivées.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Clone creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the same structure as the original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, but does not copy any data (the new <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> will not contain any <ph id="ph4">`DataRows`</ph>).</source>
          <target state="translated">Le clone crée un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> avec la même structure que l’original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, mais ne copie ne pas les données (la nouvelle <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> ne contient pas <ph id="ph4">`DataRows`</ph>).</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>To copy both the structure and data into a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, use <ph id="ph2">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph>.</source>
          <target state="translated">Pour copier la structure et les données dans un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, utilisez <ph id="ph2">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>The following sample demonstrates how to update the structure and constraints of the destination table after you execute DataTable.Clone.</source>
          <target state="translated">L’exemple suivant montre comment mettre à jour de la structure et les contraintes de la table de destination après avoir exécuté DataTable.Clone.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>The ClonedDataTable class will return a destination table and includes all the updating events.</source>
          <target state="translated">La classe ClonedDataTable renvoie une table de destination et inclut tous les événements de mise à jour.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>After the clone, structure changes in the source table won’t be reflected in the destination table.</source>
          <target state="translated">Après le clonage, les modifications de la structure de la table source ne sont pas répercutées dans la table de destination.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Specifically, this sample will:</source>
          <target state="translated">Plus précisément, cet exemple est :</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Update the changes of the columns in source table.</source>
          <target state="translated">Mettre à jour les modifications des colonnes dans la table source.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Update the changes of the UniqueConstraint in source table.</source>
          <target state="translated">Mettre à jour les modifications de UniqueConstraint dans la table source.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Update the changes of the ForeignKeyConstraint in source table.</source>
          <target state="translated">Mettre à jour les modifications de la classe ForeignKeyConstraint dans la table source.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>C# and Visual Basic projects with this code sample can be found on <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](http://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&amp;f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable)</ept>.</source>
          <target state="translated">Les projets c# et Visual Basic avec cet exemple de code se trouvent sur <bpt id="p1">[</bpt>exemples de Code pour développeurs<ept id="p1">](http://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&amp;f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>This sample shows how to modify data in a DataTable and update the data source.</source>
          <target state="translated">Cet exemple montre comment modifier des données dans une table de données et de mettre à jour de la source de données.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>First, create a database:</source>
          <target state="translated">Commencez par créer une base de données :</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>You can now compile and run the sample.</source>
          <target state="translated">Vous pouvez maintenant compiler et exécuter l’exemple.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source><bpt id="p1">[</bpt>How to modify data in DataTable and update to the data source<ept id="p1">](http://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4)</ept> has Visual Basic and C# projects of this sample.</source>
          <target state="translated"><bpt id="p1">[</bpt>Comment modifier des données dans la table de données et de mise à jour de la source de données<ept id="p1">](http://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4)</ept> a des projets Visual Basic et c# de cet exemple.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.ColumnChanged">
          <source>Occurs after a value has been changed for the specified <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> in a <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Se produit après la modification d'une valeur du <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> spécifié dans un <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.ColumnChanged">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion des événements de DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.ColumnChanging">
          <source>Occurs when a value is being changed for the specified <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> in a <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Se produit lors de la modification d'une valeur du <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> spécifié dans un <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.ColumnChanging">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion des événements de DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Columns">
          <source>Gets the collection of columns that belong to this table.</source>
          <target state="translated">Obtient la collection des colonnes qui appartiennent à cette table.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataColumnCollection" /&gt;</ph> that contains the collection of <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects for the table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataColumnCollection" /&gt;</ph> qui contient la collection des objets <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> pour la table.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects exist.</source>
          <target state="translated">Une collection vide est retournée si aucun objet <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> n'existe.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> determines the schema of a table by defining the data type of each column.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> détermine le schéma d’une table en définissant le type de données de chaque colonne.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>The following example prints each value of each row in a table using the <ph id="ph1">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant imprime chaque valeur de chaque ligne dans une table à l’aide de la <ph id="ph1">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The expression to compute.</source>
          <target state="translated">Expression à calculer.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The filter to limit the rows that evaluate in the expression.</source>
          <target state="translated">Filtre permettant de limiter le nombre de lignes dont le résultat de l'évaluation est contenu dans l'expression.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>Computes the given expression on the current rows that pass the filter criteria.</source>
          <target state="translated">Calcule l'expression donnée sur les lignes en cours qui passent les critères du filtre.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, set to the result of the computation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> ayant pour valeur le résultat du calcul.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>If the expression evaluates to null, the return value will be <ph id="ph1">&lt;see cref="F:System.DBNull.Value" /&gt;</ph>.</source>
          <target state="translated">Si l'expression prend la valeur Null, la valeur de retour est <ph id="ph1">&lt;see cref="F:System.DBNull.Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The <ph id="ph1">`expression`</ph> parameter requires an aggregate function.</source>
          <target state="translated">Le <ph id="ph1">`expression`</ph> paramètre nécessite une fonction d’agrégation.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>For example, the following is a legal expression:</source>
          <target state="translated">Par exemple, le texte suivant est une expression juridique :</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>But this expression is not:</source>
          <target state="translated">Toutefois, cette expression n’est pas :</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>If you must perform an operation on two or more columns, you should create a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>, set its <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property to an appropriate expression, and use an aggregate expression on the resulting column.</source>
          <target state="translated">Si vous devez effectuer une opération sur deux ou plusieurs colonnes, vous devez créer un <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>, définissez son <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> propriété à une expression appropriée et utilisez une expression d’agrégation sur la colonne résultante.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>In that case, given a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> with the name "total", and the <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property set to this:</source>
          <target state="translated">Dans ce cas, étant donné un <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> avec le nom « total » et le <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> affectée à cette propriété :</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The expression argument for the <ph id="ph1">&lt;xref:System.Data.DataTable.Compute%2A&gt;</ph> method would then be this:</source>
          <target state="translated">L’argument expression pour la <ph id="ph1">&lt;xref:System.Data.DataTable.Compute%2A&gt;</ph> méthode serait alors cela :</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The second parameter, <ph id="ph1">`filter`</ph>, determines which rows are used in the expression.</source>
          <target state="translated">Le deuxième paramètre, <ph id="ph1">`filter`</ph>, détermine les lignes qui sont utilisés dans l’expression.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>For example, if the table contains a date column named "colDate", you could limit the rows with the following expression:</source>
          <target state="translated">Par exemple, si la table contient une colonne de date nommée « colDate », vous pouvez limiter les lignes à l’expression suivante :</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>For rules on creating expressions for both parameters, see the <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Pour plus d’informations sur la création d’expressions pour les deux paramètres, consultez le <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The following example sums the values of a column named "Total", for the salesperson whose identification number is five.</source>
          <target state="translated">L’exemple suivant additionne les valeurs d’une colonne nommée « Total », pour le vendeur dont le numéro d’identification est cinq.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Constraints">
          <source>Gets the collection of constraints maintained by this table.</source>
          <target state="translated">Obtient la collection de contraintes gérée par cette table.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph> that contains the collection of <ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> objects for the table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph> qui contient la collection des objets <ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> pour la table.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> objects exist.</source>
          <target state="translated">Une collection vide est retournée si aucun objet <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> n'existe.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>A <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> restricts the action performed when a value in a column (or columns) is either deleted or updated.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> restreint l’action effectuée lorsqu’une valeur dans une colonne (ou les colonnes) est supprimée ou mise à jour.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>Such a constraint is intended to be used with primary key columns.</source>
          <target state="translated">Une telle contrainte est destinée à être utilisée avec des colonnes de clé primaire.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.</source>
          <target state="translated">Dans une relation parent/enfant entre deux tables, la suppression d’une valeur de la table parente peut affecter les lignes enfants d’une des manières suivantes.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The child rows can also be deleted (a cascading action).</source>
          <target state="translated">L’enfant de lignes peuvent également être supprimé (une action en cascade).</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The values in the child column (or columns) can be set to null values.</source>
          <target state="translated">Les valeurs dans la colonne enfant (ou les colonnes) peuvent être définies aux valeurs null.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The values in the child column (or columns) can be set to default values.</source>
          <target state="translated">Les valeurs dans la colonne enfant (ou les colonnes) peuvent définir les valeurs par défaut.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>An exception can be generated.</source>
          <target state="translated">Une exception peut être générée.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>A <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> becomes active when attempting to set a value in a primary key to a non-unique value.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> devient actif lorsque vous tentez de définir une valeur dans une clé primaire à une valeur non unique.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> to the collection of constraints.</source>
          <target state="translated">L’exemple suivant ajoute une <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> à la collection de contraintes.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>Copies both the structure and data for this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Copie à la fois la structure et les données de ce <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the same structure (table schemas and constraints) and data as this <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Nouveau <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> possédant la même structure (schémas et contraintes de table) et les mêmes données que ce <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>If these classes have been derived, the copy will also be of the same derived classes.</source>
          <target state="translated">Si ces classes ont été dérivées, la copie appartient également aux mêmes classes dérivées.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source><ph id="ph1">&lt;see cref="M:System.Data.DataTable.Copy" /&gt;</ph> creates a new <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the same structure and data as the original <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataTable.Copy" /&gt;</ph> crée un nouveau <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> avec la même structure et les mêmes données que le <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>d'origine.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>To copy the structure to a new <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, but not the data, use <ph id="ph2">&lt;see cref="M:System.Data.DataTable.Clone" /&gt;</ph>.</source>
          <target state="translated">Pour copier la structure dans un nouveau <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sans les données, utilisez <ph id="ph2">&lt;see cref="M:System.Data.DataTable.Clone" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Copy">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph> method to create a copy of the original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph> méthode pour créer une copie de l’original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Copy">
          <source>The namespace name is not retained if it is inherited from a parent <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Le nom de l’espace de noms n’est pas conservé si elle est héritée d’un parent <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateDataReader">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> corresponding to the data within this <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Retourne un <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> correspondant aux données dans ce <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateDataReader">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> containing one result set, corresponding to the source <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> contenant un jeu de résultats, correspondant à l'instance de <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> source.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.CreateDataReader">
          <source>The following console application creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance.</source>
          <target state="translated">L'application console suivante crée une instance de l'objet <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.CreateDataReader">
          <source>The example then passes the filled <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> to a procedure that calls the <ph id="ph2">&lt;xref:System.Data.DataTable.CreateDataReader%2A&gt;</ph> method, which iterates through the results contained within the <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">L’exemple passe ensuite la pleine <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> à une procédure qui appelle la <ph id="ph2">&lt;xref:System.Data.DataTable.CreateDataReader%2A&gt;</ph> méthode qui effectue une itération dans les résultats contenus dans le <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.CreateDataReader">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">L'exemple affiche la sortie suivante dans la fenêtre de console :</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateInstance">
          <source>Creates a new instance of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Crée une instance de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateInstance">
          <source>The new expression.</source>
          <target state="translated">Nouvelle expression.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DataSet">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to which this table belongs.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> auquel cette table appartient.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DataSet">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to which this table belongs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> auquel cette table appartient.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DataSet">
          <source>If a control is data bound to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and the table belongs to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, you can get to the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> through this property.</source>
          <target state="translated">Si un contrôle est lié aux données un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, et la table appartient à un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, vous pouvez accéder à la <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> via cette propriété.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DataSet">
          <source>The following example returns the parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> of a given table through the <ph id="ph2">&lt;xref:System.Data.DataTable.DataSet%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant retourne le parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> d’une table donnée par le biais du <ph id="ph2">&lt;xref:System.Data.DataTable.DataSet%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DefaultView">
          <source>Gets a customized view of the table that may include a filtered view, or a cursor position.</source>
          <target state="translated">Obtient une vue personnalisée de la table qui peut comprendre une vue filtrée ou une position de curseur.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> associé au <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> you can use to sort, filter, and search a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph> propriété retourne un <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> vous pouvez utiliser pour trier, filtrer et rechercher un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The following example sets a property of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object's <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> through the <ph id="ph3">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant définit une propriété de la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> l’objet <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> via la <ph id="ph3">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The example also shows the binding of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> named "Suppliers" that includes a column named "CompanyName."</source>
          <target state="translated">L’exemple illustre également la liaison d’un <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> le contrôle à un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> nommé « Fournisseurs » qui inclut une colonne nommée « CompanyName ».</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DisplayExpression">
          <source>Gets or sets the expression that returns a value used to represent this table in the user interface.</source>
          <target state="translated">Obtient ou définit l'expression qui retourne une valeur utilisée pour représenter cette table dans l'interface utilisateur.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DisplayExpression">
          <source>The <ph id="ph1">&lt;see langword="DisplayExpression" /&gt;</ph> property lets you display the name of this table in a user interface.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see langword="DisplayExpression" /&gt;</ph> vous permet d'afficher le nom de cette table dans une interface utilisateur.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DisplayExpression">
          <source>A display string.</source>
          <target state="translated">Chaîne d'affichage.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.EndInit">
          <source>Ends the initialization of a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">Termine l'initialisation d'un <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> qui est utilisé dans un formulaire ou par un autre composant.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.EndInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">L'initialisation se produit au moment de l'exécution.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndInit">
          <source>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">L’environnement de conception de Visual Studio .NET utilise cette méthode pour terminer l’initialisation d’un composant qui est utilisé sur un formulaire ou par un autre composant.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> method starts the initialization.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> méthode démarre l’initialisation.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">À l’aide de la <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> méthodes empêche le contrôle avant son initialisation complète.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.EndLoadData">
          <source>Turns on notifications, index maintenance, and constraints after loading data.</source>
          <target state="translated">Active les notifications, la gestion d'index et les contraintes après le chargement de données.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndLoadData">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph>.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph> conjointement avec <ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Gets the collection of customized user information.</source>
          <target state="translated">Obtient la collection d'informations utilisateur personnalisées.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.PropertyCollection" /&gt;</ph> that contains custom user information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.PropertyCollection" /&gt;</ph> qui contient les informations utilisateur personnalisées.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph> to add custom information to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph> pour ajouter des informations personnalisées à un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Add information with the <ph id="ph1">`Add`</ph> method.</source>
          <target state="translated">Ajouter des informations avec la <ph id="ph1">`Add`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Retrieve information with the <ph id="ph1">`Item`</ph> method.</source>
          <target state="translated">Récupération des informations avec la <ph id="ph1">`Item`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Extended properties must be of type <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Les propriétés étendues doivent être de type <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Properties that are not of type String are not persisted when the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is written as XML.</source>
          <target state="translated">Les propriétés qui ne sont pas de type String ne sont pas conservées lors de la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> est écrit au format XML.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>The following example adds a timestamp value to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> through the <ph id="ph2">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant ajoute une valeur d’horodatage à la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> via la <ph id="ph2">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="F:System.Data.DataTable.fInitInProgress">
          <source>Checks whether initialization is in progress.</source>
          <target state="translated">Vérifie si l'initialisation est en cours.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="F:System.Data.DataTable.fInitInProgress">
          <source>The initialization occurs at run time.</source>
          <target state="translated">L'initialisation se produit au moment de l'exécution.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> containing all changes made to it since it was last loaded, or since <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">Obtient une copie du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> contenant l'ensemble des modifications qui lui ont été apportées depuis son dernier chargement ou depuis l'appel à <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains all changes made to it since it was loaded or <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was last called.</source>
          <target state="translated">Obtient une copie du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> qui contient l'ensemble des modifications qui lui ont été apportées depuis son chargement ou depuis le dernier appel à <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges">
          <source>A copy of the changes from this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no changes are found.</source>
          <target state="translated">Copie des modifications de ce <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si aucune modification n'est repérée.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges">
          <source>Creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> containing a copy of all rows in the original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that have pending changes.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contenant une copie de toutes les lignes dans l’original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> qui ont les modifications en attente.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges">
          <source>Relationship constraints can cause additional unchanged rows to be added to the new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</source>
          <target state="translated">Les contraintes de relation peuvent entraîner des lignes inchangées supplémentaires à ajouter à la nouvelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> si les lignes inchangées contiennent des clés primaires correspondant aux clés étrangères dans les lignes modifiées.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges">
          <source>The method returns <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic) if there are no rows in the original <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> with pending changes.</source>
          <target state="translated">La méthode retourne <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> en Visual Basic) s’il en existe aucune ligne dans la version d’origine <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> avec des modifications en attente.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> containing all changes made to it since it was last loaded, or since <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called, filtered by <ph id="ph3">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</source>
          <target state="translated">Obtient une copie du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> contenant l'ensemble des modifications qui lui ont été apportées depuis son dernier chargement ou depuis l'appel à <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph>, filtrée par <ph id="ph3">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>A filtered copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that can have actions performed on it, and later be merged back in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using <ph id="ph3">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated">Copie filtrée du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sur lequel des actions peuvent être exécutées, et ensuite refusionnées dans <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide de <ph id="ph3">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>If no rows of the desired <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> are found, the method returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si aucune ligne du <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> souhaité n'est détectée, la méthode retourne <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is used to produce a second <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object that contains only the changes introduced into the original.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> méthode est utilisée pour générer un deuxième <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objet qui contient uniquement les modifications introduites dans la version d’origine.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>Use the <ph id="ph1">`rowStates`</ph> argument to specify the type of changes the new object should include.</source>
          <target state="translated">Utilisez le <ph id="ph1">`rowStates`</ph> argument afin de spécifier le type de l’objet doit inclure des modifications.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>Relationship constraints may cause unchanged parent rows to be included.</source>
          <target state="translated">Les contraintes de relation peuvent causer l’insertion de lignes parentes unchanged.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> instance.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>This method returns an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> instance containing the Web Services Description Language (WSDL) that describes the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> for Web Services.</source>
          <target state="translated">Cette méthode retourne une instance de <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> contenant WSDL (Web Services Description Language), lequel décrit <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> pour les services Web.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> instance.</source>
          <target state="translated">Instance <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetErrors">
          <source>Gets an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that contain errors.</source>
          <target state="translated">Obtient un tableau d'objets <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> qui contiennent des erreurs.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetErrors">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that have errors.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> qui contiennent des erreurs.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>Returns the list of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects that have <ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> set.</source>
          <target state="translated">Retourne la liste des <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objets ayant <ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> définie.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>For example, errors can occur when calling <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> with <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> set to <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">Par exemple, des erreurs peuvent se produire lors de l’appel <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> avec <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> la valeur <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>Do not invoke <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> until you resolve all errors and resubmit the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> for updating.</source>
          <target state="translated">N’appelez pas <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> sur la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> jusqu'à ce que vous résolvez toutes les erreurs et soumettez à nouveau le <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> de mise à jour.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.GetErrors%2A&gt;</ph> method to return an array of <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects that have errors.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Data.DataTable.GetErrors%2A&gt;</ph> méthode pour retourner un tableau de <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> les objets qui contiennent des erreurs.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that holds the serialized data associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> qui contient les données sérialisées associées à <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> qui contient la source et la destination du flux sérialisé associé à <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Remplit un objet d’informations de sérialisation avec les données nécessaires pour sérialiser <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="info" /&gt;</ph> est une référence null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetRowType">
          <source>Gets the row type.</source>
          <target state="translated">Obtient le type de ligne.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetRowType">
          <source>Returns the type of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Retourne le type de <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetSchema">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</source>
          <target state="translated">Pour obtenir une description de ce membre, consultez <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetSchema">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> that describes the XML representation of the object that is produced by the <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> method and consumed by the <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> qui décrit la représentation XML de l'objet qui est généré par la méthode <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> et utilisé par la méthode <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.HasErrors">
          <source>Gets a value indicating whether there are errors in any of the rows in any of the tables of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to which the table belongs.</source>
          <target state="translated">Obtient une valeur indiquant s'il existe des erreurs dans une des lignes d'une table du <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> auquel appartient la table.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if errors exist; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> s'il existe des erreurs ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>As users work on a set of data contained in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, you can mark each change with an error if the change causes some validation failure.</source>
          <target state="translated">Lorsque les utilisateurs travaillent sur un jeu de données contenus dans un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, vous pouvez marquer chaque modification avec une erreur si elle entraîne un échec de validation.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>You can mark an entire <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> with an error message using the <ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> property.</source>
          <target state="translated">Vous pouvez marquer l’intégralité d’un <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> avec un message d’erreur à l’aide du <ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>You can also set errors on each column of the row with the <ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph> method.</source>
          <target state="translated">Vous pouvez également définir des erreurs sur chaque colonne de la ligne avec la <ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>Before updating a data source with a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, it's recommended that you first invoke the <ph id="ph2">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method on the target <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Avant la mise à jour d’une source de données avec un <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, il est recommandé d’appeler d’abord la <ph id="ph2">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> méthode sur la cible <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>The method results in a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that contains only the changes made to the original.</source>
          <target state="translated">La méthode entraîne un <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> qui contient uniquement les modifications apportées à l’original.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>Before sending the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to the data source for updating, check the <ph id="ph2">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> property of each table to see if any errors have been attached to the rows or columns in the rows.</source>
          <target state="translated">Avant d’envoyer le <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> à la source de données de mise à jour, vérifiez la <ph id="ph2">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> propriété de chaque table pour déterminer si des erreurs ont été attachées aux lignes ou colonnes dans les lignes.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>After reconciling each error, clear the errors with the <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> method of the <ph id="ph2">`DataRow`</ph>.</source>
          <target state="translated">Après la réconciliation chaque erreur, désactivez les erreurs relatives à la <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> méthode de la <ph id="ph2">`DataRow`</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> property to check if a table contains errors.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> propriété pour vérifier si une table contient des erreurs.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> to be imported.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> à importer.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>Copies a <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> into a <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, preserving any property settings, as well as original and current values.</source>
          <target state="translated">Copie <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> dans un <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> en préservant tous les paramètres de propriété, ainsi que les valeurs d'origine et actuelles.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> adds a row to the table using the existing table schema, but with default values for the row, and sets the <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> to <ph id="ph3">`Detached`</ph>.</source>
          <target state="translated">Appel de <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> ajoute une ligne à la table à l’aide du schéma de table existant, mais avec les valeurs par défaut pour la ligne et définit les <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> à <ph id="ph3">`Detached`</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.DataTable.ImportRow%2A&gt;</ph> preserves the existing <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> along with other values in the row.</source>
          <target state="translated">Appel de <ph id="ph1">&lt;xref:System.Data.DataTable.ImportRow%2A&gt;</ph> conserve existants <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> ainsi que d’autres valeurs de la ligne.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>If the <ph id="ph1">`DataRow`</ph> that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.</source>
          <target state="translated">Si le <ph id="ph1">`DataRow`</ph> qui lui est passé comme un paramètre est dans un état détaché, il est ignoré, et aucune exception n’est levée.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>The new row will be added to the end of the data table.</source>
          <target state="translated">La nouvelle ligne sera ajoutée à la fin de la table de données.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>If the new row violates a Constraint it won’t be added to the data table.</source>
          <target state="translated">Si la nouvelle ligne viole une contrainte, il ne sera pas ajouté à la table de données.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf.</source>
          <target state="translated">Vous pouvez obtenir l’index de la nouvelle ligne avec DataTable.Rows.Find et DataTable.Rows.IndexOf.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>See <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> for more information.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.Initialized">
          <source>Occurs after the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is initialized.</source>
          <target state="translated">Se produit une fois que le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> est initialisé.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.Initialized">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.DataTable.IsInitialized%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Data.DataTable.IsInitialized%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.IsInitialized">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is initialized.</source>
          <target state="translated">Obtient une valeur qui indique si <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> est initialisé.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.IsInitialized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the component has completed initialization; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour indiquer que le composant a terminé l'initialisation ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.IsInitialized">
          <source>Returns the status of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> while it’s being constructed, for instance by Visual Studio.</source>
          <target state="translated">Retourne l’état de la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> pendant qu’il est en cours de construction, par exemple par Visual Studio.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.IsInitialized">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> method sets it to <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> method sets it to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> méthode lui affecte la valeur <ph id="ph2">`false`</ph> et <ph id="ph3">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> méthode lui affecte la valeur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">Remplit un <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> avec des valeurs issues d'une source de données à l'aide du <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> fourni.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>If the <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> already contains rows, the incoming data from the data source is merged with the existing rows.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> contient déjà des lignes, les données entrantes à partir de la source de données sont fusionnées avec les lignes existantes.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Load`</ph> method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a <ph id="ph2">`DataTable`</ph>).</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode peut être utilisée dans plusieurs scénarios courants, tous centrés sur l’obtention de données à partir d’une source de données spécifiée et en l’ajoutant au conteneur de données actuel (dans ce cas, un <ph id="ph2">`DataTable`</ph>).</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>These scenarios describe standard usage for a <ph id="ph1">`DataTable`</ph>, describing its update and merge behavior.</source>
          <target state="translated">Les scénarios suivants décrivent l’utilisation standard pour un <ph id="ph1">`DataTable`</ph>, décrivant sa mise à jour et le comportement de fusion.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>A <ph id="ph1">`DataTable`</ph> synchronizes or updates with a single primary data source.</source>
          <target state="translated">A <ph id="ph1">`DataTable`</ph> synchronise ou met à jour avec une source de données primaire.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`DataTable`</ph> tracks changes, allowing synchronization with the primary data source.</source>
          <target state="translated">Le <ph id="ph1">`DataTable`</ph> effectue le suivi des modifications, autorisant la synchronisation avec la source de données primaire.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In addition, a <ph id="ph1">`DataTable`</ph> can accept incremental data from one or more secondary data sources.</source>
          <target state="translated">En outre, un <ph id="ph1">`DataTable`</ph> peut accepter des données incrémentielles d’une ou plusieurs sources de données secondaires.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`DataTable`</ph> isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</source>
          <target state="translated">Le <ph id="ph1">`DataTable`</ph> n’est pas responsable du suivi des modifications afin de permettre la synchronisation avec la source de données secondaire.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</source>
          <target state="translated">Étant donné ces deux sources de données hypothétiques, un utilisateur est susceptible de demander un des comportements suivants :</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Initialize <ph id="ph1">`DataTable`</ph> from a primary data source.</source>
          <target state="translated">Initialiser <ph id="ph1">`DataTable`</ph> à partir d’une source de données principale.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In this scenario, the user wants to initialize an empty <ph id="ph1">`DataTable`</ph> with values from the primary data source.</source>
          <target state="translated">Dans ce scénario, l’utilisateur souhaite initialiser vide <ph id="ph1">`DataTable`</ph> avec les valeurs de la source de données primaire.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Later the user intends to propagate changes back to the primary data source.</source>
          <target state="translated">Plus tard, l’utilisateur envisage propager les modifications à la source de données primaire.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Preserve changes and re-synchronize from the primary data source.</source>
          <target state="translated">Conserver les modifications et resynchroniser à partir de la source de données primaire.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In this scenario, the user wants to take the <ph id="ph1">`DataTable`</ph> filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated">Dans ce scénario, l’utilisateur souhaite prendre le <ph id="ph1">`DataTable`</ph> remplie dans le scénario précédent et exécuter une synchronisation incrémentielle avec la source de données principale, en conservant les modifications apportées dans le <ph id="ph2">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Incremental data feed from secondary data sources.</source>
          <target state="translated">Flux de données incrémentielles à partir de sources de données secondaires.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</source>
          <target state="translated">Dans ce scénario, l’utilisateur souhaite fusionner les modifications à partir d’une ou plusieurs sources de données secondaires et propager ces modifications à la source de données primaire.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Load`</ph> method makes all these scenarios possible.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode rend tous ces scénarios possibles.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>All but one of the overloads for this method allows you to specify a load option parameter, indicating how rows already in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> combine with rows being loaded.</source>
          <target state="translated">Alors que les autres des surcharges pour cette méthode vous permet de spécifier un paramètre d’option de chargement, indiquant comment les lignes déjà présentes dans un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> associées aux lignes en cours de chargement.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>(The overload that doesn't allow you to specify the behavior uses the default load option.) The following table describes the three load options provided by the <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.</source>
          <target state="translated">(La surcharge qui ne vous permet de spécifier le comportement utilise l’option de chargement par défaut). Le tableau suivant décrit les trois options de chargement fournies par le <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</source>
          <target state="translated">Dans chaque cas, la description indique le comportement lorsque la clé primaire d’une ligne dans les données entrantes correspond à la clé primaire d’une ligne existante.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Load Option</source>
          <target state="translated">Option de chargement</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source><ph id="ph1">`PreserveChanges`</ph> (default)</source>
          <target state="translated"><ph id="ph1">`PreserveChanges`</ph> (par défaut)</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Updates the original version of the row with the value of the incoming row.</source>
          <target state="translated">Met à jour la version d’origine de la ligne avec la valeur de la ligne entrante.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Updates the current and original versions of the row with the value of the incoming row.</source>
          <target state="translated">Met à jour les versions actuelles et d’origine de la ligne avec la valeur de la ligne entrante.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Updates the current version of the row with the value of the incoming row.</source>
          <target state="translated">Met à jour la version actuelle de la ligne avec la valeur de la ligne entrante.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In general, the <ph id="ph1">`PreserveChanges`</ph> and <ph id="ph2">`OverwriteChanges`</ph> options are intended for scenarios in which the user needs to synchronize the <ph id="ph3">`DataSet`</ph> and its changes with the primary data source.</source>
          <target state="translated">En général, les <ph id="ph1">`PreserveChanges`</ph> et <ph id="ph2">`OverwriteChanges`</ph> options sont destinées aux scénarios dans lesquels l’utilisateur doit synchroniser le <ph id="ph3">`DataSet`</ph> et ses modifications avec la source de données primaire.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Upsert`</ph> option facilitates aggregating changes from one or more secondary data sources.</source>
          <target state="translated">Le <ph id="ph1">`Upsert`</ph> option facilite l’agrégation des modifications à partir d’une ou plusieurs sources de données secondaires.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following example demonstrates several of the issues involved with calling the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre plusieurs des problèmes impliqués par l’appel de la <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>First, the example focuses on schema issues, including inferring a schema from the loaded <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, and then handling incompatible schemas, and schemas with missing or additional columns.</source>
          <target state="translated">Tout d’abord, l’exemple se concentre sur les problèmes de schéma, y compris les déduire un schéma à partir de la charger <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, puis gestion schémas incompatibles et schémas avec des colonnes manquantes ou supplémentaires.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example then focuses on data issues, including handling the various loading options.</source>
          <target state="translated">Puis, l’exemple se concentre sur les problèmes de données, y compris la gestion des différentes options de chargement.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">Cet exemple montre comment utiliser une des versions surchargées de <ph id="ph1">`Load`</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">Pour obtenir des exemples qui peuvent être disponibles, consultez les rubriques de surcharge individuels.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides a result set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> qui fournit un jeu de résultats.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">Remplit un <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> avec des valeurs issues d'une source de données à l'aide du <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> fourni.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> already contains rows, the incoming data from the data source is merged with the existing rows.</source>
          <target state="translated">Si <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> contient déjà des lignes, les données entrantes à partir de la source de données sont fusionnées avec les lignes existantes.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method consumes the first result set from the loaded <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>, and after successful completion, sets the reader's position to the next result set, if any.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> méthode consomme le premier jeu de résultats de la charger <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>et après l’achèvement réussi, définit la position du lecteur sur le jeu de résultats suivant, le cas échéant.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>When converting data, the <ph id="ph1">`Load`</ph> method uses the same conversion rules as the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Lors de la conversion de données, le <ph id="ph1">`Load`</ph> méthode utilise les mêmes règles de conversion que la <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method must take into account three specific issues when loading the data from an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance: schema, data, and event operations.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> méthode doit prendre en compte trois problèmes spécifiques lors du chargement des données à partir d’un <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance : les opérations de schéma, les données et les événements.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>When working with the schema, the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method may encounter conditions as described in the following table.</source>
          <target state="translated">Lorsque vous travaillez avec le schéma, le <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> méthode peut rencontrer des conditions comme décrit dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The schema operations take place for all imported result sets, even those containing no data.</source>
          <target state="translated">Les opérations de schéma avoir lieu pour tous les jeux de résultats importés, y compris celles ne contenant aucune donnée.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Condition</source>
          <target state="translated">Condition</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Behavior</source>
          <target state="translated">Comportement</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has no schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> ne possède aucun schéma.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method infers the schema based on the result set from the imported <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> méthode déduit le schéma basé sur le jeu de résultats de l’importation <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has a schema, but it is incompatible with the loaded schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> a un schéma, mais il n’est pas compatible avec le schéma chargé.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> méthode lève une exception qui correspond à l’erreur particulière qui se produit lorsque vous tentez de charger des données dans le schéma incompatible.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The schemas are compatible, but the loaded result set schema contains columns that do not exist in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Les schémas sont compatibles, mais le schéma du jeu de résultats chargé contient des colonnes qui n’existent pas dans le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method adds the extra columns to <ph id="ph2">`DataTable`</ph>'s schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> méthode ajoute les colonnes supplémentaires à <ph id="ph2">`DataTable`</ph>du schéma.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The method throws an exception if corresponding columns in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and the loaded result set are not value compatible.</source>
          <target state="translated">La méthode lève une exception si correspondant colonnes dans le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et le jeu de résultats chargé ne sont pas des valeurs compatibles.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The method also retrieves constraint information from the result set for all added columns.</source>
          <target state="translated">La méthode récupère également les informations de contrainte à partir du jeu de résultats pour toutes les colonnes ajoutées.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Except for the case of Primary Key constraint, this constraint information is used only if the current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> does not contain any columns at the start of the load operation.</source>
          <target state="translated">Sauf dans le cas de contrainte de clé primaire, les informations de cette contrainte sont utilisées uniquement si le courant <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> ne contient pas de colonnes au début de l’opération de chargement.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Les schémas sont compatibles, mais le schéma du jeu de résultats chargé contient moins de colonnes que le <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If a missing column has a default value defined or the column's data type is nullable, the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method allows the rows to be added, substituting the default or <ph id="ph2">`null`</ph> value for the missing column.</source>
          <target state="translated">Si une colonne manquante a une valeur par défaut définie ou le type de données de la colonne est nullable, la <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> méthode autorise les lignes à ajouter, en remplaçant la valeur par défaut ou <ph id="ph2">`null`</ph> valeur pour la colonne manquante.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If no default value or <ph id="ph1">`null`</ph> can be used, then the <ph id="ph2">`Load`</ph> method throws an exception.</source>
          <target state="translated">Si aucune valeur par défaut ou <ph id="ph1">`null`</ph> peut être utilisé, le <ph id="ph2">`Load`</ph> méthode lève une exception.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If no specific default value has been supplied, the <ph id="ph1">`Load`</ph> method uses the <ph id="ph2">`null`</ph> value as the implied default value.</source>
          <target state="translated">Si aucune valeur par défaut spécifique n’a été fourni, la <ph id="ph1">`Load`</ph> utilise le <ph id="ph2">`null`</ph> valeur que la valeur par défaut implicite.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Before considering the behavior of the <ph id="ph1">`Load`</ph> method in terms of data operations, consider that each row within a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> maintains both the current value and the original value for each column.</source>
          <target state="translated">Avant de considérer le comportement de la <ph id="ph1">`Load`</ph> méthode en termes d’opérations de données, tenez compte que chaque ligne dans un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> conserve la valeur actuelle et la valeur d’origine pour chaque colonne.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>These values may be equivalent, or may be different if the data in the row has been changed since filling the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Ces valeurs peuvent être équivalentes, ou peut être différents si les données dans la ligne a été modifiées depuis le remplissage du <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>For more information, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>état des lignes et des Versions de ligne<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>This version of the <ph id="ph1">`Load`</ph> method attempts to preserve the current values in each row, leaving the original value intact.</source>
          <target state="translated">Cette version de la <ph id="ph1">`Load`</ph> méthode tente de conserver les valeurs actuelles dans chaque ligne, en laissant intactes les valeurs d’origine.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>(If you want finer control over the behavior of incoming data, see <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType&gt;</ph>.) If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</source>
          <target state="translated">(Si vous souhaitez mieux contrôler le comportement des données entrantes, consultez <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType&gt;</ph>.) Si la ligne existante et la ligne entrante contiennent des valeurs de clé primaire correspondantes, la ligne est traitée à l’aide de sa valeur d’état de ligne actuelle, sinon il est traité comme une nouvelle ligne.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In terms of event operations, the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event occurs before each row is changed, and the <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> event occurs after each row has been changed.</source>
          <target state="translated">En termes d’opérations d’événement, le <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> événement se produit avant la modification de chaque ligne et le <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> événement se produit après chaque ligne a été modifiée.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passed to the event handler contains information about the particular action associated with the event.</source>
          <target state="translated">Dans chaque cas, le <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passée au gestionnaire d’événements contient des informations sur l’action particulière associée à l’événement.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>This action value depends on the state of the row before the load operation.</source>
          <target state="translated">Valeur de cette action dépend de l’état de la ligne avant l’opération de chargement.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In each case, both events occur, and the action is the same for each.</source>
          <target state="translated">Dans chaque cas, les deux événements se produisent, et l’action est identique pour chacune.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The action may be applied to either the current or original version of each row, or both, depending on the current row state.</source>
          <target state="translated">L’action peut être appliquée à la version actuelle ou d’origine de chaque ligne, ou les deux, selon l’état actuel de la ligne.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The following table displays behavior for the <ph id="ph1">`Load`</ph> method.</source>
          <target state="translated">Le tableau suivant présente le comportement de la <ph id="ph1">`Load`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</source>
          <target state="translated">La dernière ligne (étiquetée « (absente) ») décrit le comportement pour les lignes entrantes qui ne correspondent à aucune ligne existante.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Each cell in this table describes the current and original value for a field within a row, along with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> for the value after the <ph id="ph2">`Load`</ph> method has completed.</source>
          <target state="translated">Chaque cellule dans cette table décrit la valeur d’origine et actuelle pour un champ dans une ligne, ainsi que les <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> pour la valeur après la <ph id="ph2">`Load`</ph> méthode est terminée.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In this case, the method doesn't allow you to indicate the load option, and uses the default, <ph id="ph1">`PreserveChanges`</ph>.</source>
          <target state="translated">Dans ce cas, la méthode ne permet pas d’indiquer l’option de chargement et utilise la valeur par défaut, <ph id="ph1">`PreserveChanges`</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Existing DataRowState</source>
          <target state="translated">DataRowState existant</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Values after <ph id="ph1">`Load`</ph> method, and event action</source>
          <target state="translated">Valeurs après <ph id="ph1">`Load`</ph> (méthode) et l’action de l’événement</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Added</source>
          <target state="translated">Ajouté</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>modifié &gt;</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Modified</source>
          <target state="translated">Modifiée le</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>modifié &gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Deleted</source>
          <target state="translated">Supprimé</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>non disponible &gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>supprimé &gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Unchanged</source>
          <target state="translated">Inchangé</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>(Not present)</source>
          <target state="translated">(Absent)</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Values in a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> can be constrained through use of properties such as <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated">Les valeurs dans une <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> peut être contraint à l’aide de propriétés telles que <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">`Load`</ph> method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode gère ces colonnes de manière cohérente avec le comportement défini par les propriétés de la colonne.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The read only constraint on a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> is applicable only for changes that occur in memory.</source>
          <target state="translated">La contrainte en lecture seule sur un <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> s’applique uniquement aux modifications qui se produisent dans la mémoire.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">`Load`</ph> method's overwrites the read-only column values, if needed.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> la méthode remplace les valeurs de colonne en lecture seule, si nécessaire.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>To determine which version of the primary key field to use for comparing the current row with an incoming row, the <ph id="ph1">`Load`</ph> method uses the original version of the primary key value within a row, if it exists.</source>
          <target state="translated">Pour déterminer la version du champ clé primaire à utiliser pour comparer la ligne actuelle avec une ligne entrante, la <ph id="ph1">`Load`</ph> méthode utilise la version d’origine de la valeur de clé primaire dans une ligne, si elle existe.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Otherwise, the <ph id="ph1">`Load`</ph> method uses the current version of the primary key field.</source>
          <target state="translated">Dans le cas contraire, la <ph id="ph1">`Load`</ph> méthode utilise la version actuelle du champ clé primaire.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The following example demonstrates several of the issues involved with calling the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre plusieurs des problèmes impliqués par l’appel de la <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>First, the example focuses on schema issues, including inferring a schema from the loaded <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, and then handling incompatible schemas, and schemas with missing or additional columns.</source>
          <target state="translated">Tout d’abord, l’exemple se concentre sur les problèmes de schéma, y compris les déduire un schéma à partir de la charger <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, puis gestion schémas incompatibles et schémas avec des colonnes manquantes ou supplémentaires.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The example then calls the <ph id="ph1">`Load`</ph> method, displaying the data both before and after the load operation.</source>
          <target state="translated">L’exemple appelle ensuite la <ph id="ph1">`Load`</ph> méthode, affichant les données avant et après l’opération de chargement.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides one or more result sets.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> qui fournit un ou plusieurs jeux de résultats.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> are combined with incoming rows that share the same primary key.</source>
          <target state="translated">Valeur issue de l'énumération <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> qui indique comment les lignes déjà présentes dans le <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sont associées aux lignes entrantes qui partagent la même clé primaire.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">Remplit un <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> avec des valeurs issues d'une source de données à l'aide du <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> fourni.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If the <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <ph id="ph2">&lt;paramref name="loadOption" /&gt;</ph> parameter.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> contient déjà des lignes, les données entrantes à partir de la source de données sont fusionnées avec les lignes existantes en fonction de la valeur du paramètre <ph id="ph2">&lt;paramref name="loadOption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method consumes the first result set from the loaded <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>, and after successful completion, sets the reader's position to the next result set, if any.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode consomme le premier jeu de résultats de la charger <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>et après l’achèvement réussi, définit la position du lecteur sur le jeu de résultats suivant, le cas échéant.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>When converting data, the <ph id="ph1">`Load`</ph> method uses the same conversion rules as the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method.</source>
          <target state="translated">Lors de la conversion de données, le <ph id="ph1">`Load`</ph> méthode utilise les mêmes règles de conversion que la <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method must take into account three specific issues when loading the data from an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance: schema, data, and event operations.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode doit prendre en compte trois problèmes spécifiques lors du chargement des données à partir d’un <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance : les opérations de schéma, les données et les événements.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>When working with the schema, the <ph id="ph1">`Load`</ph> method may encounter conditions as described in the following table.</source>
          <target state="translated">Lorsque vous travaillez avec le schéma, le <ph id="ph1">`Load`</ph> méthode peut rencontrer des conditions comme décrit dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The schema operations take place for all imported result sets, even those containing no data.</source>
          <target state="translated">Les opérations de schéma avoir lieu pour tous les jeux de résultats importés, y compris celles ne contenant aucune donnée.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Condition</source>
          <target state="translated">Condition</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Behavior</source>
          <target state="translated">Comportement</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has no schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> ne possède aucun schéma.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method infers the schema based on the result set from the imported <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode déduit le schéma basé sur le jeu de résultats de l’importation <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has a schema, but it is incompatible with the loaded schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> a un schéma, mais il n’est pas compatible avec le schéma chargé.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode lève une exception qui correspond à l’erreur particulière qui se produit lorsque vous tentez de charger des données dans le schéma incompatible.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The schemas are compatible, but the loaded result set schema contains columns that don't exist in the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Les schémas sont compatibles, mais le schéma du jeu de résultats chargé contient des colonnes qui n’existent pas dans le <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method adds the extra columns to <ph id="ph2">`DataTable`</ph>’s schema.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode ajoute les colonnes supplémentaires à <ph id="ph2">`DataTable`</ph>du schéma.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The method throws an exception if corresponding columns in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and the loaded result set are not value compatible.</source>
          <target state="translated">La méthode lève une exception si correspondant colonnes dans le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et le jeu de résultats chargé ne sont pas des valeurs compatibles.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The method also retrieves constraint information from the result set for all added columns.</source>
          <target state="translated">La méthode récupère également les informations de contrainte à partir du jeu de résultats pour toutes les colonnes ajoutées.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Except for the case of Primary Key constraint, this constraint information is used only if the current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> does not contain any columns at the start of the load operation.</source>
          <target state="translated">Sauf dans le cas de contrainte de clé primaire, les informations de cette contrainte sont utilisées uniquement si le courant <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> ne contient pas de colonnes au début de l’opération de chargement.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Les schémas sont compatibles, mais le schéma du jeu de résultats chargé contient moins de colonnes que le <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If a missing column has a default value defined or the column's data type is nullable, the <ph id="ph1">`Load`</ph> method allows the rows to be added, substituting the default or null value for the missing column.</source>
          <target state="translated">Si une colonne manquante a une valeur par défaut définie ou le type de données de la colonne est nullable, la <ph id="ph1">`Load`</ph> méthode autorise les lignes à ajouter, en remplaçant la valeur par défaut ou la valeur null pour la colonne manquante.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If no default value or null can be used, then the <ph id="ph1">`Load`</ph> method throws an exception.</source>
          <target state="translated">Si aucune valeur par défaut ou la valeur null ne peut être utilisé, le <ph id="ph1">`Load`</ph> méthode lève une exception.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If no specific default value has been supplied, the <ph id="ph1">`Load`</ph> method uses the null value as the implied default value.</source>
          <target state="translated">Si aucune valeur par défaut spécifique n’a été fourni, la <ph id="ph1">`Load`</ph> méthode utilise la valeur null comme valeur par défaut implicite.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Before considering the behavior of the <ph id="ph1">`Load`</ph> method in terms of data operations, consider that each row within a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> maintains both the current value and the original value for each column.</source>
          <target state="translated">Avant de considérer le comportement de la <ph id="ph1">`Load`</ph> méthode en termes d’opérations de données, tenez compte que chaque ligne dans un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> conserve la valeur actuelle et la valeur d’origine pour chaque colonne.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>These values may be equivalent, or may be different if the data in the row has been changed since filling the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Ces valeurs peuvent être équivalentes, ou peut être différents si les données dans la ligne a été modifiées depuis le remplissage du <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>See <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept> for more information.</source>
          <target state="translated">Consultez <bpt id="p1">[</bpt>état des lignes et des Versions de ligne<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept> pour plus d’informations.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In this method call, the specified <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter influences the processing of the incoming data.</source>
          <target state="translated">Dans cet appel de méthode spécifié <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> paramètre influence le traitement des données entrantes.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>How should the Load method handle loading rows that have the same primary key as existing rows?</source>
          <target state="translated">Comment la méthode Load doit gérer les lignes de chargement qui ont la même clé primaire que les lignes existantes ?</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Should it modify current values, original values, or both?</source>
          <target state="translated">Doit elle modifie les valeurs actuelles, les valeurs d’origine ou les deux ?</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>These issues, and more, are controlled by the <ph id="ph1">`loadOption`</ph> parameter.</source>
          <target state="translated">Ces problèmes et bien plus encore, sont contrôlés par le <ph id="ph1">`loadOption`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</source>
          <target state="translated">Si la ligne existante et la ligne entrante contiennent des valeurs de clé primaire correspondantes, la ligne est traitée à l’aide de sa valeur d’état de ligne actuelle, sinon il est traité comme une nouvelle ligne.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In terms of event operations, the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event occurs before each row is changed, and the <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> event occurs after each row has been changed.</source>
          <target state="translated">En termes d’opérations d’événement, le <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> événement se produit avant la modification de chaque ligne et le <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> événement se produit après chaque ligne a été modifiée.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passed to the event handler contains information about the particular action associated with the event.</source>
          <target state="translated">Dans chaque cas, le <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passée au gestionnaire d’événements contient des informations sur l’action particulière associée à l’événement.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>This action value varies, depending on the state of the row before the load operation.</source>
          <target state="translated">Valeur de cette action varie, selon l’état de la ligne avant l’opération de chargement.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In each case, both events occur, and the action is the same for each.</source>
          <target state="translated">Dans chaque cas, les deux événements se produisent, et l’action est identique pour chacune.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The action may be applied to either the current or original version of each row, or both, depending on the current row state.</source>
          <target state="translated">L’action peut être appliquée à la version actuelle ou d’origine de chaque ligne, ou les deux, selon l’état actuel de la ligne.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The following table displays behavior for the Load method when called with each of the <ph id="ph1">`LoadOption`</ph> values, and also shows how the values interact with the row state for the row being loaded.</source>
          <target state="translated">Le tableau suivant présente le comportement de la méthode Load lorsqu’elle est appelée avec chacun de la <ph id="ph1">`LoadOption`</ph> de valeurs et montre également comment les valeurs interagissent avec l’état de ligne pour la ligne en cours de chargement.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</source>
          <target state="translated">La dernière ligne (étiquetée « (absente) ») décrit le comportement pour les lignes entrantes qui ne correspondent à aucune ligne existante.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Each cell in this table describes the current and original value for a field within a row, along with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> for the value after the <ph id="ph2">`Load`</ph> method has completed.</source>
          <target state="translated">Chaque cellule dans cette table décrit la valeur d’origine et actuelle pour un champ dans une ligne, ainsi que les <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> pour la valeur après la <ph id="ph2">`Load`</ph> méthode est terminée.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Existing DataRowState</source>
          <target state="translated">DataRowState existant</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Upsert</source>
          <target state="translated">Upsert</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>OverwriteChanges</source>
          <target state="translated">OverwriteChanges</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>PreserveChanges (Default behavior)</source>
          <target state="translated">PreserveChanges (comportement par défaut)</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Added</source>
          <target state="translated">Ajouté</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = -<ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">D’origine = -<ph id="ph1">\&lt;</ph>non disponible &gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>ajouté &gt;</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = modification</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>modifié &gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Modified</source>
          <target state="translated">Modifiée le</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>modifié &gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = modification</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>modifié &gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction =ChangeOriginal</source>
          <target state="translated">RowAction =ChangeOriginal</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>eleted</source>
          <target state="translated">upprimé /</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>(Load does not affect deleted rows)</source>
          <target state="translated">(Charge ne pas les lignes affectent supprimé)</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = ---</source>
          <target state="translated">En cours =---</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>supprimé &gt;</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>(New row is added with the following characteristics)</source>
          <target state="translated">(Nouvelle ligne est ajoutée avec les caractéristiques suivantes)</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>non disponible &gt;</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>ajouté &gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Add</source>
          <target state="translated">RowAction = ajouter</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Undo delete and</source>
          <target state="translated">Annuler la suppression et</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>non disponible &gt;</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>supprimé &gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Unchanged</source>
          <target state="translated">Inchangé</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If new value is the same as the existing value then</source>
          <target state="translated">Si la nouvelle valeur est identique à la valeur existante puis</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Nothing</source>
          <target state="translated">RowAction = Nothing</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Else</source>
          <target state="translated">Else</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>modifié &gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = modification</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Not present)</source>
          <target state="translated">Absent)</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>non disponible &gt;</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>ajouté &gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Add</source>
          <target state="translated">RowAction = ajouter</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Values in a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> can be constrained through use of properties such as <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated">Les valeurs dans une <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> peut être contraint à l’aide de propriétés telles que <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode gère ces colonnes de manière cohérente avec le comportement défini par les propriétés de la colonne.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The read only constraint on a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> is applicable only for changes that occur in memory.</source>
          <target state="translated">La contrainte en lecture seule sur un <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> s’applique uniquement aux modifications qui se produisent dans la mémoire.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method's overwrites the read-only column values, if needed.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> la méthode remplace les valeurs de colonne en lecture seule, si nécessaire.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If you specify the OverwriteChanges or PreserveChanges options when calling the <ph id="ph1">`Load`</ph> method, then the assumption is made that the incoming data is coming from the <ph id="ph2">`DataTable`</ph>'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</source>
          <target state="translated">Si vous spécifiez les options OverwriteChanges ou PreserveChanges lors de l’appel du <ph id="ph1">`Load`</ph> (méthode), puis l’hypothèse est effectuée que les données entrantes provient le <ph id="ph2">`DataTable`</ph>de source de données principale et la table de données effectue le suivi des modifications et peut propager les modifications dans la source de données.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</source>
          <target state="translated">Si vous sélectionnez l’option Upsert, il est supposé que les données proviennent d’une source de données secondaire, telles que les données fournies par un composant de couche intermédiaire, éventuellement modifié par un utilisateur.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In this case, the assumption is that the intent is to aggregate data from one or more data sources in the <ph id="ph1">`DataTable`</ph>, and then perhaps propagate the data back to the primary data source.</source>
          <target state="translated">Dans ce cas, l’hypothèse est que l’objectif est d’agréger des données à partir d’une ou plusieurs sources de données dans le <ph id="ph1">`DataTable`</ph>et puis éventuellement de propager les données à la source de données primaire.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> paramètre est utilisé pour déterminer la version spécifique de la ligne qui doit être utilisé pour la comparaison de clé primaire.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The table below provides the details.</source>
          <target state="translated">Le tableau ci-dessous fournit les détails.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Load option</source>
          <target state="translated">Option de chargement</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>DataRow version used for primary key comparison</source>
          <target state="translated">Version de DataRow utilisée pour la comparaison de clé primaire</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">Version d’origine, si elle existe, la version actuelle dans le cas contraire</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">Version d’origine, si elle existe, la version actuelle dans le cas contraire</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current version, if it exists, otherwise Original version</source>
          <target state="translated">Version actuelle, si elle existe, la version d’origine dans le cas contraire</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The following example demonstrates several of the issues involved with calling the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre plusieurs des problèmes impliqués par l’appel de la <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>First, the example focuses on schema issues, including inferring a schema from the loaded <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, and then handling incompatible schemas, and schemas with missing or additional columns.</source>
          <target state="translated">Tout d’abord, l’exemple se concentre sur les problèmes de schéma, y compris les déduire un schéma à partir de la charger <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, puis gestion schémas incompatibles et schémas avec des colonnes manquantes ou supplémentaires.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The example then focuses on data issues, including handling the various loading options.</source>
          <target state="translated">Puis, l’exemple se concentre sur les problèmes de données, y compris la gestion des différentes options de chargement.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides a result set.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> qui fournit un jeu de résultats.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> are combined with incoming rows that share the same primary key.</source>
          <target state="translated">Valeur issue de l'énumération <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> qui indique comment les lignes déjà présentes dans le <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sont associées aux lignes entrantes qui partagent la même clé primaire.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> delegate to call when an error occurs while loading data.</source>
          <target state="translated">Un délégué <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> à appeler lorsqu'une erreur se produit en chargeant des données.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> using an error-handling delegate.</source>
          <target state="translated">Remplit un <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> avec des valeurs issues d'une source de données à l'aide du <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> fourni et d'un délégué de gestion d'erreur.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method consumes the first result set from the loaded <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>, and after successful completion, sets the reader's position to the next result set, if any.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode consomme le premier jeu de résultats de la charger <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>et après l’achèvement réussi, définit la position du lecteur sur le jeu de résultats suivant, le cas échéant.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>When converting data, the <ph id="ph1">`Load`</ph> method uses the same conversion rules as the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Lors de la conversion de données, le <ph id="ph1">`Load`</ph> méthode utilise les mêmes règles de conversion que la <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method must take into account three specific issues when loading the data from an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance: schema, data, and event operations.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode doit prendre en compte trois problèmes spécifiques lors du chargement des données à partir d’un <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance : les opérations de schéma, les données et les événements.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>When working with the schema, the <ph id="ph1">`Load`</ph> method may encounter conditions as described in the following table.</source>
          <target state="translated">Lorsque vous travaillez avec le schéma, le <ph id="ph1">`Load`</ph> méthode peut rencontrer des conditions comme décrit dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The schema operations take place for all imported result sets, even those containing no data.</source>
          <target state="translated">Les opérations de schéma avoir lieu pour tous les jeux de résultats importés, y compris celles ne contenant aucune donnée.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Condition</source>
          <target state="translated">Condition</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Behavior</source>
          <target state="translated">Comportement</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has no schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> ne possède aucun schéma.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method infers the schema based on the result set from the imported <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode déduit le schéma basé sur le jeu de résultats de l’importation <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has a schema, but it is incompatible with the loaded schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> a un schéma, mais il n’est pas compatible avec le schéma chargé.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode lève une exception qui correspond à l’erreur particulière qui se produit lorsque vous tentez de charger des données dans le schéma incompatible.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The schemas are compatible, but the loaded result set schema contains columns that don't exist in the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Les schémas sont compatibles, mais le schéma du jeu de résultats chargé contient des colonnes qui n’existent pas dans le <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method adds the extra column(s) to <ph id="ph2">`DataTable`</ph>’s schema.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode ajoute les ou les colonnes supplémentaires à <ph id="ph2">`DataTable`</ph>du schéma.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The method throws an exception if corresponding columns in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and the loaded result set are not value compatible.</source>
          <target state="translated">La méthode lève une exception si correspondant colonnes dans le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et le jeu de résultats chargé ne sont pas des valeurs compatibles.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The method also retrieves constraint information from the result set for all added columns.</source>
          <target state="translated">La méthode récupère également les informations de contrainte à partir du jeu de résultats pour toutes les colonnes ajoutées.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Except for the case of Primary Key constraint, this constraint information is used only if the current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> does not contain any columns at the start of the load operation.</source>
          <target state="translated">Sauf dans le cas de contrainte de clé primaire, les informations de cette contrainte sont utilisées uniquement si le courant <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> ne contient pas de colonnes au début de l’opération de chargement.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Les schémas sont compatibles, mais le schéma du jeu de résultats chargé contient moins de colonnes que le <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If a missing column has a default value defined or the column's data type is nullable, the <ph id="ph1">`Load`</ph> method allows the rows to be added, substituting the default or null value for the missing column.</source>
          <target state="translated">Si une colonne manquante a une valeur par défaut définie ou le type de données de la colonne est nullable, la <ph id="ph1">`Load`</ph> méthode autorise les lignes à ajouter, en remplaçant la valeur par défaut ou la valeur null pour la colonne manquante.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If no default value or null can be used, then the <ph id="ph1">`Load`</ph> method throws an exception.</source>
          <target state="translated">Si aucune valeur par défaut ou la valeur null ne peut être utilisé, le <ph id="ph1">`Load`</ph> méthode lève une exception.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If no specific default value has been supplied, the <ph id="ph1">`Load`</ph> method uses the null value as the implied default value.</source>
          <target state="translated">Si aucune valeur par défaut spécifique n’a été fourni, la <ph id="ph1">`Load`</ph> méthode utilise la valeur null comme valeur par défaut implicite.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Before considering the behavior of the <ph id="ph1">`Load`</ph> method in terms of data operations, consider that each row within a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> maintains both the current value and the original value for each column.</source>
          <target state="translated">Avant de considérer le comportement de la <ph id="ph1">`Load`</ph> méthode en termes d’opérations de données, tenez compte que chaque ligne dans un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> conserve la valeur actuelle et la valeur d’origine pour chaque colonne.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>These values may be equivalent, or may be different if the data in the row has been changed since filling the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Ces valeurs peuvent être équivalentes, ou peut être différents si les données dans la ligne a été modifiées depuis le remplissage du <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>See <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept> for more information.</source>
          <target state="translated">Consultez <bpt id="p1">[</bpt>état des lignes et des Versions de ligne<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept> pour plus d’informations.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In this method call, the specified <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter influences the processing of the incoming data.</source>
          <target state="translated">Dans cet appel de méthode spécifié <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> paramètre influence le traitement des données entrantes.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>How should the Load method handle loading rows that have the same primary key as existing rows?</source>
          <target state="translated">Comment la méthode Load doit gérer les lignes de chargement qui ont la même clé primaire que les lignes existantes ?</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Should it modify current values, original values, or both?</source>
          <target state="translated">Doit elle modifie les valeurs actuelles, les valeurs d’origine ou les deux ?</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>These issues, and more, are controlled by the <ph id="ph1">`loadOption`</ph> parameter.</source>
          <target state="translated">Ces problèmes et bien plus encore, sont contrôlés par le <ph id="ph1">`loadOption`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</source>
          <target state="translated">Si la ligne existante et la ligne entrante contiennent des valeurs de clé primaire correspondantes, la ligne est traitée à l’aide de sa valeur d’état de ligne actuelle, sinon il est traité comme une nouvelle ligne.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In terms of event operations, the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event occurs before each row is changed, and the <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> event occurs after each row has been changed.</source>
          <target state="translated">En termes d’opérations d’événement, le <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> événement se produit avant la modification de chaque ligne et le <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> événement se produit après chaque ligne a été modifiée.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passed to the event handler contains information about the particular action associated with the event.</source>
          <target state="translated">Dans chaque cas, le <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passée au gestionnaire d’événements contient des informations sur l’action particulière associée à l’événement.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>This action value varies, depending on the state of the row before the load operation.</source>
          <target state="translated">Valeur de cette action varie, selon l’état de la ligne avant l’opération de chargement.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In each case, both events occur, and the action is the same for each.</source>
          <target state="translated">Dans chaque cas, les deux événements se produisent, et l’action est identique pour chacune.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The action may be applied to either the current or original version of each row, or both, depending on the current row state.</source>
          <target state="translated">L’action peut être appliquée à la version actuelle ou d’origine de chaque ligne, ou les deux, selon l’état actuel de la ligne.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The following table displays behavior for the Load method when called with each of the <ph id="ph1">`LoadOption`</ph> values, and also shows how the values interact with the row state for the row being loaded.</source>
          <target state="translated">Le tableau suivant présente le comportement de la méthode Load lorsqu’elle est appelée avec chacun de la <ph id="ph1">`LoadOption`</ph> de valeurs et montre également comment les valeurs interagissent avec l’état de ligne pour la ligne en cours de chargement.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</source>
          <target state="translated">La dernière ligne (étiquetée « (absente) ») décrit le comportement pour les lignes entrantes qui ne correspondent à aucune ligne existante.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Each cell in this table describes the current and original value for a field within a row, along with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> for the value after the <ph id="ph2">`Load`</ph> method has completed.</source>
          <target state="translated">Chaque cellule dans cette table décrit la valeur d’origine et actuelle pour un champ dans une ligne, ainsi que les <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> pour la valeur après la <ph id="ph2">`Load`</ph> méthode est terminée.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Existing DataRowState</source>
          <target state="translated">DataRowState existant</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Upsert</source>
          <target state="translated">Upsert</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>OverwriteChanges</source>
          <target state="translated">OverwriteChanges</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>PreserveChanges (Default behavior)</source>
          <target state="translated">PreserveChanges (comportement par défaut)</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Added</source>
          <target state="translated">Ajouté</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = -<ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">D’origine = -<ph id="ph1">\&lt;</ph>non disponible &gt;</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>ajouté &gt;</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = modification</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>modifié &gt;</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Modified</source>
          <target state="translated">Modifiée le</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>modifié &gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = modification</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>modifié &gt;</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction =ChangeOriginal</source>
          <target state="translated">RowAction =ChangeOriginal</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>eleted</source>
          <target state="translated">upprimé /</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>(Load does not affect deleted rows)</source>
          <target state="translated">(Charge ne pas les lignes affectent supprimé)</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = ---</source>
          <target state="translated">En cours =---</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>supprimé &gt;</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>(New row is added with the following characteristics)</source>
          <target state="translated">(Nouvelle ligne est ajoutée avec les caractéristiques suivantes)</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>non disponible &gt;</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>ajouté &gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Add</source>
          <target state="translated">RowAction = ajouter</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Undo delete and</source>
          <target state="translated">Annuler la suppression et</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>non disponible &gt;</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>supprimé &gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Unchanged</source>
          <target state="translated">Inchangé</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>existant &gt;</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If new value is the same as the existing value then</source>
          <target state="translated">Si la nouvelle valeur est identique à la valeur existante puis</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Nothing</source>
          <target state="translated">RowAction = Nothing</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Else</source>
          <target state="translated">Else</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>modifié &gt;</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = modification</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Not present)</source>
          <target state="translated">Absent)</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>non disponible &gt;</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>ajouté &gt;</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Add</source>
          <target state="translated">RowAction = ajouter</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">En cours = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">D’origine = <ph id="ph1">\&lt;</ph>entrant &gt;</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">État = <ph id="ph1">\&lt;</ph>inchangée &gt;</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Values in a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> can be constrained through use of properties such as <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated">Les valeurs dans une <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> peut être contraint à l’aide de propriétés telles que <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> méthode gère ces colonnes de manière cohérente avec le comportement défini par les propriétés de la colonne.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The read only constraint on a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> is applicable only for changes that occur in memory.</source>
          <target state="translated">La contrainte en lecture seule sur un <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> s’applique uniquement aux modifications qui se produisent dans la mémoire.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method's overwrites the read-only column values, if needed.</source>
          <target state="translated">Le <ph id="ph1">`Load`</ph> la méthode remplace les valeurs de colonne en lecture seule, si nécessaire.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If you specify the OverwriteChanges or PreserveChanges options when calling the <ph id="ph1">`Load`</ph> method, then the assumption is made that the incoming data is coming from the <ph id="ph2">`DataTable`</ph>'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</source>
          <target state="translated">Si vous spécifiez les options OverwriteChanges ou PreserveChanges lors de l’appel du <ph id="ph1">`Load`</ph> (méthode), puis l’hypothèse est effectuée que les données entrantes provient le <ph id="ph2">`DataTable`</ph>de source de données principale et la table de données effectue le suivi des modifications et peut propager les modifications dans la source de données.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</source>
          <target state="translated">Si vous sélectionnez l’option Upsert, il est supposé que les données proviennent d’une source de données secondaire, telles que les données fournies par un composant de couche intermédiaire, éventuellement modifié par un utilisateur.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In this case, the assumption is that the intent is to aggregate data from one or more data sources in the <ph id="ph1">`DataTable`</ph>, and then perhaps propagate the data back to the primary data source.</source>
          <target state="translated">Dans ce cas, l’hypothèse est que l’objectif est d’agréger des données à partir d’une ou plusieurs sources de données dans le <ph id="ph1">`DataTable`</ph>et puis éventuellement de propager les données à la source de données primaire.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> paramètre est utilisé pour déterminer la version spécifique de la ligne qui doit être utilisé pour la comparaison de clé primaire.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The table below provides the details.</source>
          <target state="translated">Le tableau ci-dessous fournit les détails.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Load option</source>
          <target state="translated">Option de chargement</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>DataRow version used for primary key comparison</source>
          <target state="translated">Version de DataRow utilisée pour la comparaison de clé primaire</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">Version d’origine, si elle existe, la version actuelle dans le cas contraire</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">Version d’origine, si elle existe, la version actuelle dans le cas contraire</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current version, if it exists, otherwise Original version</source>
          <target state="translated">Version actuelle, si elle existe, la version d’origine dans le cas contraire</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`errorHandler`</ph> parameter is a <ph id="ph2">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph> delegate that refers to a procedure that is called when an error occurs while loading data.</source>
          <target state="translated">Le <ph id="ph1">`errorHandler`</ph> paramètre est un <ph id="ph2">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph> délégué qui fait référence à une procédure qui est appelée lorsqu’une erreur se produit lors du chargement des données.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> being filled.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> passés à la procédure fournit les propriétés qui vous permettent de récupérer des informations sur l’erreur qui s’est produite, la ligne actuelle de données, et le <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> remplie.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</source>
          <target state="translated">À l’aide de ce mécanisme de délégué, au lieu d’un bloc try/catch plus simple, vous permet de déterminer l’erreur, gérer la situation et continuer le traitement si vous le souhaitez.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> parameter supplies a <ph id="ph2">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph> property: set this property to <ph id="ph3">`true`</ph> to indicate that you have handled the error and wish to continue processing.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> paramètre fournit une <ph id="ph2">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph> propriété : définissez cette propriété sur <ph id="ph3">`true`</ph> pour indiquer que vous avez géré l’erreur et continuer le traitement.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Set the property to <ph id="ph1">`false`</ph> to indicate that you wish to halt processing.</source>
          <target state="translated">Affectez à la propriété <ph id="ph1">`false`</ph> pour indiquer que vous souhaitez arrêter le traitement.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Be aware that setting the property to <ph id="ph1">`false`</ph> causes the code that triggered the problem to throw an exception.</source>
          <target state="translated">N’oubliez pas que la définition de la propriété <ph id="ph1">`false`</ph> provoque le code qui a déclenché le problème pour lever une exception.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Finds and updates a specific row.</source>
          <target state="translated">Recherche et met à jour une ligne spécifique.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>If no matching row is found, a new row is created using the given values.</source>
          <target state="translated">Si aucune ligne correspondante n'est détectée, une nouvelle ligne est créée à l'aide des valeurs données.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>An array of values used to create the new row.</source>
          <target state="translated">Tableau des valeurs utilisées pour créer la nouvelle ligne.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to accept changes; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour accepter les modifications ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Finds and updates a specific row.</source>
          <target state="translated">Recherche et met à jour une ligne spécifique.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If no matching row is found, a new row is created using the given values.</source>
          <target state="translated">Si aucune ligne correspondante n'est détectée, une nouvelle ligne est créée à l'aide des valeurs données.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Nouvelle <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> method takes an array of values and finds the matching value(s) in the primary key column(s).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> méthode prend un tableau de valeurs et recherche les valeurs correspondantes dans les colonnes clés primaires.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If a column has a default value, pass a null value in the array to set the default value for that column.</source>
          <target state="translated">Si une colonne a une valeur par défaut, passez une valeur null dans le tableau pour définir la valeur par défaut pour cette colonne.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Similarly, if a column has its <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> property set to true, pass a null value in the array to set the automatically generated value for the row.</source>
          <target state="translated">De même, si une colonne a son <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> propriété la valeur true, passez une valeur null dans le tableau pour définir la valeur générée automatiquement pour la ligne.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If the <ph id="ph1">`fAcceptChanges`</ph> parameter is <ph id="ph2">`true`</ph> or not specified, the new data is added and then <ph id="ph3">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> is called to accept all changes in the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>; if the argument is <ph id="ph5">`false`</ph>, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.</source>
          <target state="translated">Si le <ph id="ph1">`fAcceptChanges`</ph> paramètre est <ph id="ph2">`true`</ph> ou ne pas spécifiée, les nouvelles données sont ajoutées, puis <ph id="ph3">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> est appelée pour accepter toutes les modifications dans le <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>; si l’argument est <ph id="ph5">`false`</ph>, qui vient d’être ajouté de lignes sont marquées comme insertions et les modifications apportées à les lignes existantes sont marqués comme des modifications.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Exceptions can also occur during either a <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event.</source>
          <target state="translated">Exceptions peuvent également se produire pendant une <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If an exception occurs, the row is not added to the table.</source>
          <target state="translated">Si une exception se produit, la ligne n’est pas ajoutée à la table.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> conjointement avec <ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> method to attempt to find a row.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> méthode pour tenter de trouver une ligne.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If no such row is found, the values are used to create a new row.</source>
          <target state="translated">Si aucune ligne n’est trouvée, les valeurs sont utilisées pour créer une nouvelle ligne.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The array is larger than the number of columns in the table.</source>
          <target state="translated">Le tableau contient un nombre de colonnes supérieur à celui de la table.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>A value doesn't match its respective column type.</source>
          <target state="translated">Une valeur ne correspond pas à son type de colonne respectif.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Adding the row invalidates a constraint.</source>
          <target state="translated">L'ajout de la ligne rend une contrainte non valide.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Attempting to put a null in a column where <ph id="ph1">&lt;see cref="P:System.Data.DataColumn.AllowDBNull" /&gt;</ph> is false.</source>
          <target state="translated">Tentative d'insertion d'une valeur null dans une colonne dont <ph id="ph1">&lt;see cref="P:System.Data.DataColumn.AllowDBNull" /&gt;</ph> a la valeur false.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>An array of values used to create the new row.</source>
          <target state="translated">Tableau des valeurs utilisées pour créer la nouvelle ligne.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Used to determine how the array values are applied to the corresponding values in an existing row.</source>
          <target state="translated">Utilisé pour déterminer comment les valeurs de tableau sont appliquées aux valeurs correspondantes dans une ligne existante.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Finds and updates a specific row.</source>
          <target state="translated">Recherche et met à jour une ligne spécifique.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>If no matching row is found, a new row is created using the given values.</source>
          <target state="translated">Si aucune ligne correspondante n'est détectée, une nouvelle ligne est créée à l'aide des valeurs données.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Nouvelle <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> method takes an array of values and finds the matching value(s) in the primary key column(s).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> méthode prend un tableau de valeurs et recherche les valeurs correspondantes dans les colonnes clés primaires.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>If a column has a default value, pass a null value in the array to set the default value for that column.</source>
          <target state="translated">Si une colonne a une valeur par défaut, passez une valeur null dans le tableau pour définir la valeur par défaut pour cette colonne.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Similarly, if a column has its <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> property set to true, pass a null value in the array to set the automatically generated value for the row.</source>
          <target state="translated">De même, si une colonne a son <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> propriété la valeur true, passez une valeur null dans le tableau pour définir la valeur générée automatiquement pour la ligne.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>The value of the <ph id="ph1">`loadOption`</ph> parameter is used to determine how the values in the array are applied to an existing row.</source>
          <target state="translated">La valeur de le <ph id="ph1">`loadOption`</ph> paramètre est utilisé pour déterminer comment les valeurs dans le tableau sont appliquées à une ligne existante.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>For example, if <ph id="ph1">`loadOption`</ph> is set to <ph id="ph2">`OverwriteChanges`</ph>, the <ph id="ph3">`Original`</ph> and <ph id="ph4">`Current`</ph> values of each column are replaced with the values in the incoming row and the <ph id="ph5">`RowState`</ph> property is set to <ph id="ph6">`Unchanged`</ph>.</source>
          <target state="translated">Par exemple, si <ph id="ph1">`loadOption`</ph> a la valeur <ph id="ph2">`OverwriteChanges`</ph>, le <ph id="ph3">`Original`</ph> et <ph id="ph4">`Current`</ph> valeurs de chaque colonne sont remplacées par les valeurs de la ligne entrante et la <ph id="ph5">`RowState`</ph> est définie sur <ph id="ph6">`Unchanged`</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Exceptions can also occur during either a <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event.</source>
          <target state="translated">Exceptions peuvent également se produire pendant une <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>If an exception occurs, the row is not added to the table.</source>
          <target state="translated">Si une exception se produit, la ligne n’est pas ajoutée à la table.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> conjointement avec <ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Locale">
          <source>Gets or sets the locale information used to compare strings within the table.</source>
          <target state="translated">Obtient ou définit les paramètres régionaux utilisés pour comparer des chaînes dans la table.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that contains data about the user's machine locale.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> qui contient les données relatives aux paramètres régionaux de l'ordinateur de l'utilisateur.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>The default is the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> object's <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> (returned by the <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Locale" /&gt;</ph> property) to which the <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> belongs; if the table doesn't belong to a <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, the default is the current system <ph id="ph6">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est le <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> de l'objet <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> (retourné par la propriété <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Locale" /&gt;</ph>) auquel appartient <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>. Si la table n'appartient pas à <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, la valeur par défaut est le <ph id="ph6">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> du système en cours.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> represents the software preferences of a particular culture or community.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> représente les préférences logicielles d’une culture particulière ou de la Communauté.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>When used for string comparisons, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> affects sorting, comparisons, and filtering.</source>
          <target state="translated">Lorsqu’il est utilisé pour les comparaisons de chaînes, la <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> affecte le tri, les comparaisons et le filtrage.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>In columns that contain expressions, the <ph id="ph1">&lt;xref:System.StringComparison.InvariantCulture&gt;</ph> is used.</source>
          <target state="translated">Dans les colonnes qui contiennent des expressions, le <ph id="ph1">&lt;xref:System.StringComparison.InvariantCulture&gt;</ph> est utilisé.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>The <ph id="ph1">&lt;xref:System.StringComparison.CurrentCulture&gt;</ph> is ignored.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.StringComparison.CurrentCulture&gt;</ph> est ignoré.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> through the <ph id="ph2">&lt;xref:System.Data.DataTable.Locale%2A&gt;</ph> and prints the ISO language name.</source>
          <target state="translated">L’exemple suivant définit la <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> via la <ph id="ph2">&lt;xref:System.Data.DataTable.Locale%2A&gt;</ph> et imprime le nom de langue ISO.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Fusionnez le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> spécifié avec le <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Merge`</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Le <ph id="ph1">`Merge`</ph> méthode est utilisée pour fusionner deux <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objets qui ont des schémas très similaires.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Une fusion est généralement utilisée dans une application cliente pour incorporer les modifications les plus récentes à partir d’une source de données dans une <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Cela permet à l’application cliente pour avoir une actualisation <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> avec les données les plus récentes à partir de la source de données.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">L’opération de fusion prend en compte uniquement la table d’origine et la table à fusionner.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Child tables are not affected or included.</source>
          <target state="translated">Tables enfants ne sont pas affectées ou inclus.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">Si une table possède une ou plusieurs tables enfants dans le cadre d’une relation, chaque table enfant doit être fusionnée individuellement.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following console application demonstrates the behavior of the <ph id="ph1">`missingSchemaAction`</ph> parameter of the <ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">L’application console suivante montre le comportement de la <ph id="ph1">`missingSchemaAction`</ph> paramètre de la <ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example creates two versions of the same table, modifying the schema for the second version.</source>
          <target state="translated">Cet exemple crée deux versions de la même table, la modification du schéma pour la deuxième version.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The code then attempts to merge the second table into the first.</source>
          <target state="translated">Le code essaie ensuite de fusionner la deuxième table dans la première.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of Merge.</source>
          <target state="translated">Cet exemple montre comment utiliser une des versions surchargées de fusion.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">Pour obtenir des exemples qui peuvent être disponibles, consultez les rubriques de surcharge individuels.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be merged with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à fusionner avec le <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Fusionnez le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> spécifié avec le <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The Merge method is used to merge two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">La méthode Merge est utilisée pour fusionner deux <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objets qui ont des schémas très similaires.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Une fusion est généralement utilisée dans une application cliente pour incorporer les modifications les plus récentes à partir d’une source de données dans une <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Cela permet à l’application cliente pour avoir une actualisation <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> avec les données les plus récentes à partir de la source de données.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">L’opération de fusion prend en compte uniquement la table d’origine et la table à fusionner.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Child tables are not affected or included.</source>
          <target state="translated">Tables enfants ne sont pas affectées ou inclus.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">Si une table possède une ou plusieurs tables enfants dans le cadre d’une relation, chaque table enfant doit être fusionnée individuellement.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`Merge`</ph> méthode est généralement appelée à la fin d’une série de procédures qui impliquent la validation des modifications, l’harmonisation des erreurs, mise à jour de la source de données avec les modifications et enfin l’actualisation existants <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation.</source>
          <target state="translated">Lorsque vous effectuez une fusion, les modifications apportées aux données existantes avant la fusion sont conservées par défaut pendant l’opération de fusion.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">Les développeurs peuvent modifier ce comportement en appelant une des deux autres surcharges pour cette méthode et en spécifiant la valeur false pour la <ph id="ph1">`preserveChanges`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">Dans une application cliente, il est habituel d’avoir un seul bouton l’utilisateur peut cliquer qui rassemble les données modifiées et le valide avant de l’envoyer à un composant de niveau intermédiaire.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">Dans ce scénario, le <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> méthode est appelée en premier.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Cette méthode retourne un deuxième <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimisé pour la validation et la fusion.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Cette seconde <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objet ne contient que les <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> les objets qui ont été modifiés, générant ainsi un sous-ensemble de l’original <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>This subset is generally smaller and thus more efficiently passed back to a middle tier component.</source>
          <target state="translated">Ce sous-ensemble est généralement plus petite et donc être passé plus efficacement à un composant de niveau intermédiaire.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Le composant de couche intermédiaire met ensuite à jour la source de données d’origine avec les modifications apportées par le biais des procédures stockées.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">La couche intermédiaire renvoie alors un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> qui inclut des données d’origine et les données les plus récentes à partir de la source de données (en exécutant à nouveau à la requête d’origine), ou il peut envoyer le sous-ensemble avec toutes les modifications ont été apportées à partir de la source de données.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Par exemple, si la source de données crée automatiquement des valeurs de clé primaire uniques, ces valeurs peuvent être propagées vers l’application cliente.) Dans les deux cas, retourné <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> peuvent être fusionnées dans d’origine de l’application cliente <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> avec la <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph>, is matched to target rows with the same primary key values.</source>
          <target state="translated">Lors de la fusion d’une nouvelle source de <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> dans la cible, toutes les lignes sources avec un <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> valeur <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, ou <ph id="ph5">`Deleted`</ph>, mise en correspondance avec les lignes cibles avec les mêmes valeurs de clé primaires.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Source rows with a <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Source des lignes avec un <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> valeur <ph id="ph2">`Added`</ph> sont mis en correspondance avec les nouvelles lignes cibles avec les mêmes valeurs de clé primaires en tant que les nouvelles lignes sources.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The following console application creates a simple <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and adds data to the table.</source>
          <target state="translated">L’application console suivante crée un simple <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et ajoute à la table de données.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The example then creates a copy of the table, adding rows to the copy.</source>
          <target state="translated">L’exemple crée ensuite une copie de la table, ajouter des lignes à la copie.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Finally, the example calls the <ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method to merge the data in the second table with the data in the first table.</source>
          <target state="translated">Enfin, l’exemple appelle la <ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> méthode pour fusionner les données dans la deuxième table avec les données de la première table.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> to be merged with the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> à fusionner avec le <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, to preserve changes in the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.<ph id="ph4">&lt;see langword="" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour conserver les modifications apportées au <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph> en cours ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.<ph id="ph4">&lt;see langword="" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>, indicating whether to preserve changes in the current <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">Fusionnez le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> spécifié avec le <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph> actuel, en indiquant s'il faut conserver les modifications dans le <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The Merge method is used to merge two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">La méthode Merge est utilisée pour fusionner deux <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objets qui ont des schémas très similaires.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Une fusion est généralement utilisée dans une application cliente pour incorporer les modifications les plus récentes à partir d’une source de données dans une <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Cela permet à l’application cliente pour avoir une actualisation <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> avec les données les plus récentes à partir de la source de données.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">L’opération de fusion prend en compte uniquement la table d’origine et la table à fusionner.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>Child tables are not affected or included.</source>
          <target state="translated">Tables enfants ne sont pas affectées ou inclus.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">Si une table possède une ou plusieurs tables enfants dans le cadre d’une relation, chaque table enfant doit être fusionnée individuellement.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`Merge`</ph> méthode est généralement appelée à la fin d’une série de procédures qui impliquent la validation des modifications, l’harmonisation des erreurs, mise à jour de la source de données avec les modifications et enfin l’actualisation existants <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">Lorsque vous effectuez une fusion, les modifications apportées aux données existantes avant la fusion sont conservées pendant l’opération de fusion à moins que le développeur affecte la valeur false la <ph id="ph1">`preserveChanges`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`true`</ph>, incoming values do not overwrite existing values in the Current row version of the existing row.</source>
          <target state="translated">Si le <ph id="ph1">`preserveChanges`</ph> paramètre est défini sur <ph id="ph2">`true`</ph>, des valeurs entrantes ne remplacent pas les valeurs existantes dans la version actuelle de la ligne de la ligne existante.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`false`</ph>, incoming values do overwrite the existing values in the Current row version of the existing row.</source>
          <target state="translated">Si le <ph id="ph1">`preserveChanges`</ph> paramètre est défini sur <ph id="ph2">`false`</ph>, les valeurs entrantes remplacent les valeurs existantes dans la version actuelle de la ligne de la ligne existante.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>For more information about row versions, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les versions de ligne, consultez <bpt id="p1">[</bpt>état des lignes et des Versions de ligne<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">Dans une application cliente, il est habituel d’avoir un seul bouton l’utilisateur peut cliquer qui rassemble les données modifiées et le valide avant de l’envoyer à un composant de niveau intermédiaire.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">Dans ce scénario, le <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> méthode est appelée en premier.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Cette méthode retourne un deuxième <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimisé pour la validation et la fusion.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Cette seconde <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objet ne contient que les <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> et <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> les objets qui ont été modifiés, générant ainsi un sous-ensemble de l’original <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</source>
          <target state="translated">Ce sous-ensemble est généralement plus petit, et donc ce sous-ensemble est passé plus efficacement à un composant de niveau intermédiaire.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Le composant de couche intermédiaire met ensuite à jour la source de données d’origine avec les modifications apportées par le biais des procédures stockées.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">La couche intermédiaire renvoie alors un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> qui inclut des données d’origine et les données les plus récentes à partir de la source de données (en exécutant à nouveau à la requête d’origine), ou il peut envoyer le sous-ensemble avec toutes les modifications ont été apportées à partir de la source de données.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Par exemple, si la source de données crée automatiquement des valeurs de clé primaire uniques, ces valeurs peuvent être propagées vers l’application cliente.) Dans les deux cas, retourné <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> peuvent être fusionnées dans d’origine de l’application cliente <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> avec la <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Lors de la fusion d’une nouvelle source de <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> dans la cible, toutes les lignes sources avec un <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> valeur <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, ou <ph id="ph5">`Deleted`</ph> sont mis en correspondance avec les lignes cibles ayant les mêmes valeurs de clé primaire.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>Source rows with a <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Source des lignes avec un <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> valeur <ph id="ph2">`Added`</ph> sont mis en correspondance avec les nouvelles lignes cibles avec les mêmes valeurs de clé primaires en tant que les nouvelles lignes sources.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The following console application creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing rows, modifies some of the data in those rows, and attempts to merge data from a different <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">L’application console suivante crée un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contenant des lignes, modifie certaines données dans ces lignes et tente de fusionner des données à partir d’une autre <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The example demonstrates the different behaviors for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">L’exemple montre les différents comportements pour le <ph id="ph1">`preserveChanges`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be merged with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à fusionner avec le <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, to preserve changes in the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour préserver les modifications apportées au <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> en cours ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>, indicating whether to preserve changes and how to handle missing schema in the current <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">Fusionnez le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> spécifié avec le <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph> actuel, en indiquant s'il faut conserver les modifications et comment gérer le schéma manquant dans le <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">`Merge`</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Le <ph id="ph1">`Merge`</ph> méthode est utilisée pour fusionner deux <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objets qui ont des schémas très similaires.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Une fusion est généralement utilisée dans une application cliente pour incorporer les modifications les plus récentes à partir d’une source de données dans une <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Cela permet à l’application cliente pour avoir une actualisation <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> avec les données les plus récentes à partir de la source de données.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">L’opération de fusion prend en compte uniquement la table d’origine et la table à fusionner.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Child tables are not affected or included.</source>
          <target state="translated">Tables enfants ne sont pas affectées ou inclus.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">Si une table possède une ou plusieurs tables enfants dans le cadre d’une relation, chaque table enfant doit être fusionnée individuellement.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`Merge`</ph> méthode est généralement appelée à la fin d’une série de procédures qui impliquent la validation des modifications, l’harmonisation des erreurs, mise à jour de la source de données avec les modifications et enfin l’actualisation existants <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">Lorsque vous effectuez une fusion, les modifications apportées aux données existantes avant la fusion sont conservées pendant l’opération de fusion à moins que le développeur affecte la valeur false la <ph id="ph1">`preserveChanges`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`true`</ph>, incoming values do not overwrite existing values in the Current row version of the existing row.</source>
          <target state="translated">Si le <ph id="ph1">`preserveChanges`</ph> paramètre est défini sur <ph id="ph2">`true`</ph>, des valeurs entrantes ne remplacent pas les valeurs existantes dans la version actuelle de la ligne de la ligne existante.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`false`</ph>, incoming values do overwrite the existing values in the Current row version of the existing row.</source>
          <target state="translated">Si le <ph id="ph1">`preserveChanges`</ph> paramètre est défini sur <ph id="ph2">`false`</ph>, les valeurs entrantes remplacent les valeurs existantes dans la version actuelle de la ligne de la ligne existante.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>For more information about row versions, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les versions de ligne, consultez <bpt id="p1">[</bpt>état des lignes et des Versions de ligne<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">Dans une application cliente, il est habituel d’avoir un seul bouton l’utilisateur peut cliquer qui rassemble les données modifiées et le valide avant de l’envoyer à un composant de niveau intermédiaire.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">Dans ce scénario, le <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> méthode est appelée en premier.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Cette méthode retourne un deuxième <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimisé pour la validation et la fusion.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Cette seconde <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objet ne contient que les <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> et <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> les objets qui ont été modifiés, générant ainsi un sous-ensemble de l’original <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</source>
          <target state="translated">Ce sous-ensemble est généralement plus petit, et donc ce sous-ensemble est passé plus efficacement à un composant de niveau intermédiaire.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Le composant de couche intermédiaire met ensuite à jour la source de données d’origine avec les modifications apportées par le biais des procédures stockées.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">La couche intermédiaire renvoie alors un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> qui inclut des données d’origine et les données les plus récentes à partir de la source de données (en exécutant à nouveau à la requête d’origine), ou il peut envoyer le sous-ensemble avec toutes les modifications ont été apportées à partir de la source de données.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Par exemple, si la source de données crée automatiquement des valeurs de clé primaire uniques, ces valeurs peuvent être propagées vers l’application cliente.) Dans les deux cas, retourné <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> peuvent être fusionnées dans d’origine de l’application cliente <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> avec la <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects are compared, because it is possible that the schemas may have been changed.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> méthode est appelée, les schémas des deux <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objets sont comparées, car il est possible que les schémas peuvent avoir été changées.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Par exemple, dans un scénario d’entreprise-entreprise, nouvelles colonnes a peut-être été ajoutés à un schéma XML par un processus automatisé.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Si la source de <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contient les éléments de schéma (ajouté <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objets) qui sont manquants dans la cible, les éléments de schéma peuvent être ajoutés à la cible en définissant le <ph id="ph3">`missingSchemaAction`</ph> argument <ph id="ph4">`MissingSchemaAction.Add`</ph>.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contains the added schema and data.</source>
          <target state="translated">Dans ce cas, les données fusionné <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contient les données et le schéma ajouté.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Après la fusion des schémas, les données sont fusionnées.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Lors de la fusion d’une nouvelle source de <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> dans la cible, toutes les lignes sources avec un <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> valeur <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, ou <ph id="ph5">`Deleted`</ph> sont mis en correspondance avec les lignes cibles ayant les mêmes valeurs de clé primaire.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Source rows with a <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Source des lignes avec un <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> valeur <ph id="ph2">`Added`</ph> sont mis en correspondance avec les nouvelles lignes cibles avec les mêmes valeurs de clé primaires en tant que les nouvelles lignes sources.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The following console application demonstrates the behavior of the <ph id="ph1">`missingSchemaAction`</ph> parameter of the <ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">L’application console suivante montre le comportement de la <ph id="ph1">`missingSchemaAction`</ph> paramètre de la <ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This example creates two versions of the same table, modifying the schema for the second version.</source>
          <target state="translated">Cet exemple crée deux versions de la même table, la modification du schéma pour la deuxième version.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The code then attempts to merge the second table into the first.</source>
          <target state="translated">Le code essaie ensuite de fusionner la deuxième table dans la première.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>Gets or sets the initial starting size for this table.</source>
          <target state="translated">Obtient ou définit la taille de départ initiale pour cette table.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The initial starting size in rows of this table.</source>
          <target state="translated">Taille de départ initiale des lignes de cette table.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The default is 50.</source>
          <target state="translated">La valeur par défaut est 50.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph> allows the system to create an appropriate set of resources before fetching data.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph> permet au système créer un ensemble approprié de ressources avant de récupérer les données.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>In a situation when performance is critical, setting this property can optimize performance.</source>
          <target state="translated">Dans une situation lorsque les performances sont critiques, définition de cette propriété peut optimiser les performances.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">L’exemple suivant définit la <ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph> d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Namespace">
          <source>Gets or sets the namespace for the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit l'espace de noms de la représentation XML des données stockées dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Namespace">
          <source>The namespace of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">L’espace de noms du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRow">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> with the same schema as the table.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> possédant le même schéma que la table.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRow">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> with the same schema as the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> possédant le même schéma que <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>You must use the <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to create new <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects with the same schema as the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Vous devez utiliser le <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> méthode pour créer de nouveaux <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objets avec le même schéma que la <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>After creating a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, you can add it to the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>, through the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> object's <ph id="ph4">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> property.</source>
          <target state="translated">Après avoir créé un <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, vous pouvez l’ajouter à la <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>, jusqu'à la <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> l’objet <ph id="ph4">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> to create new rows, the rows must be added to or deleted from the data table before you call <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>.</source>
          <target state="translated">Lorsque vous utilisez <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> pour créer de nouvelles lignes, les lignes doivent être ajoutés à ou supprimés de la table de données avant d’appeler <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, adds two <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects that determine the table's schema, and creates several new <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects using the <ph id="ph4">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, ajoute deux <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> les objets qui déterminent le schéma de la table et crée plusieurs nouveaux <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objets à l’aide de la <ph id="ph4">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>Those <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects are then added to the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> using the <ph id="ph3">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">Ceux <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objets sont ensuite ajoutés à la <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> à l’aide de la <ph id="ph3">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowArray(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that describes the size of the array.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui décrit la taille du tableau.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowArray(System.Int32)">
          <source>Returns an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Retourne un tableau de <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowArray(System.Int32)">
          <source>The new array.</source>
          <target state="translated">Nouveau tableau.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowBuilder" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Data.DataRowBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
          <source>Creates a new row from an existing row.</source>
          <target state="translated">Crée une nouvelle ligne à partir d'une ligne existante.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> derived class.</source>
          <target state="translated">Classe dérivée <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanged" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour une vue d’ensemble, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanging" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanging" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour une vue d’ensemble, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour une vue d’ensemble, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> being removed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> en cours de suppression.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that a <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> is being removed.</source>
          <target state="translated">Avertit <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> est en cours de suppression.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanged" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour une vue d’ensemble, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanging" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanging" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour une vue d’ensemble, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleted" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour une vue d’ensemble, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleting" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleting" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour une vue d’ensemble, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableCleared" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableCleared" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> event, which is fired immediately after all rows have been successfully cleared but before the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> method returns control back to the caller.</source>
          <target state="translated">Déclenche la <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> événement, qui est déclenchée immédiatement après toutes les lignes ont été effacées avec succès, mais avant la <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> méthode retourne le contrôle à l’appelant.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour une vue d’ensemble, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableClearing" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableClearing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph> event, which is fired before processing of the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> operation begins.</source>
          <target state="translated">Déclenche la <ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph> événement, qui est déclenché avant le traitement de la <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> début de l’opération.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour une vue d’ensemble, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableNewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableNewRowEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableNewRow" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableNewRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;xref:System.Data.DataTable.TableNewRow&gt;</ph> event, which fires after a new <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> has been created using <ph id="ph3">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>.</source>
          <target state="translated">Déclenche la <ph id="ph1">&lt;xref:System.Data.DataTable.TableNewRow&gt;</ph> événement qui se déclenche après un nouveau <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> a été créé à l’aide de <ph id="ph3">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour une vue d’ensemble, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.ParentRelations">
          <source>Gets the collection of parent relations for this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Obtient la collection des relations parentes de ce <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> that contains the parent relations for the table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> qui contient les relations parentes pour la table.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects exist.</source>
          <target state="translated">Une collection vide est retournée si aucun objet <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> n'existe.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property to return each parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> in a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> propriété pour retourner chaque parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> dans un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>Each relation is then used as an argument in the <ph id="ph1">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> to return an array of rows.</source>
          <target state="translated">Chaque relation est ensuite utilisée en tant qu’argument dans le <ph id="ph1">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> méthode de le <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> pour retourner un tableau de lignes.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>The value of each column in the row is then printed.</source>
          <target state="translated">La valeur de chaque colonne dans la ligne s’affiche ensuite.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Prefix">
          <source>Gets or sets the namespace for the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit l'espace de noms de la représentation XML des données stockées dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Prefix">
          <source>The prefix of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Préfixe de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.PrimaryKey">
          <source>Gets or sets an array of columns that function as primary keys for the data table.</source>
          <target state="translated">Obtient ou définit un tableau de colonnes qui fonctionnent comme des clés primaires pour la table de données.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The primary key of a table must be unique to identify the record in the table.</source>
          <target state="translated">La clé primaire d’une table doit être unique pour identifier l’enregistrement dans la table.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>It's also possible to have a table with a primary key made up of two or more columns.</source>
          <target state="translated">Il est également possible d’avoir une table avec une clé primaire est composée de deux ou plusieurs colonnes.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>This occurs when a single column can't contain enough unique values.</source>
          <target state="translated">Cela se produit lorsqu’une colonne unique ne peut pas contenir suffisamment de valeurs uniques.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>For example, a two column primary key might consist of a "FirstName" and "LastName" column.</source>
          <target state="translated">Par exemple, une clé primaire de deux colonnes peut être constituée d’une colonne « FirstName » et « Nom ».</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>Because primary keys can be made up of more than one column, the <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property consists of an array of <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects.</source>
          <target state="translated">Étant donné que les clés primaires peuvent être composées de plusieurs colonnes, la <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> propriété se compose d’un tableau de <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The first example shows how to return the primary key columns for a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> displayed in a <ph id="ph2">`DataGrid`</ph>.</source>
          <target state="translated">Le premier exemple montre comment retourner les colonnes clés primaires pour un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> affiché dans un <ph id="ph2">`DataGrid`</ph>.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The second example demonstrates how to set the primary key columns for a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Le deuxième exemple montre comment définir les colonnes de clé primaire pour une <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The key is a foreign key.</source>
          <target state="translated">Il s'agit d'une clé étrangère.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Lit le schéma et les données XML dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> (méthode) fournit un moyen de lire soit les données uniquement, ou schéma et les données dans un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à partir d’un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthode lit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that include the <ph id="ph2">`XmlReadMode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Pour lire les données et le schéma, utilisez une de la <ph id="ph1">`ReadXML`</ph> surcharges qui incluent le <ph id="ph2">`XmlReadMode`</ph> paramètre et définissez sa valeur sur <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Pour écrire des données XML, ou le schéma et les données à partir de la <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`WriteXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Pour écrire uniquement le schéma, utilisez la <ph id="ph1">`WriteXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>An object that derives from <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph></source>
          <target state="translated">Objet qui dérive de <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Lit le schéma et les données XML dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide du <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> utilisé pour lire les données.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the supplied <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>.</source>
          <target state="translated">En cours <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et ses descendants sont chargés avec les données à partir de le <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">Le comportement de cette méthode est identique à celui de la <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> méthode, sauf que dans ce cas, les données est chargée uniquement pour la table actuelle et ses descendants.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> (méthode) fournit un moyen de lire soit les données uniquement, ou schéma et les données dans un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à partir d’un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthode lit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Pour écrire des données XML, ou le schéma et les données à partir de la <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`WriteXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Pour écrire uniquement le schéma, utilisez la <ph id="ph1">`WriteXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Si un schéma en ligne est spécifié, le schéma en ligne est utilisé pour étendre la structure relationnelle existante avant le chargement des données.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">S’il existe des conflits (par exemple, la même colonne dans la même table est définie avec différents types de données), une exception est levée.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Si aucun schéma en ligne n’est spécifié, la structure relationnelle est étendue par inférence, si nécessaire, en fonction de la structure du document XML.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Si le schéma ne peut pas être étendu par inférence afin d’exposer toutes les données, une exception est levée.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Le <ph id="ph1">`DataSet`</ph> n’associe pas un élément XML avec ses correspondant <ph id="ph2">`DataColumn`</ph> ou <ph id="ph3">`DataTable`</ph> lorsque les caractères XML reconnus comme (« _ ») sont ignorés dans le XML sérialisé.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Le <ph id="ph1">`DataSet`</ph> lui-même ignore uniquement les caractères XML non conformes dans les noms d’élément XML et peut donc uniquement utiliser les mêmes.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Lors de l’échappement des caractères autorisés dans le nom d’élément XML, l’élément est ignoré lors du traitement.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contenant deux colonnes et dix lignes.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to a memory stream, by invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple écrit le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schéma et les données dans un flux de mémoire, en appelant le <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data.</source>
          <target state="translated">L’exemple crée un deuxième <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et appelle le <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> méthode à remplir avec le schéma et les données.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that will be used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> qui sera utilisé pour lire les données.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Lit le schéma et les données XML dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide du <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> utilisé pour lire les données.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the supplied <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">En cours <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et ses descendants sont chargés avec les données à partir de le <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">Le comportement de cette méthode est identique à celui de la <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> méthode, sauf que dans ce cas, les données est chargée uniquement pour la table actuelle et ses descendants.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> (méthode) fournit un moyen de lire soit les données uniquement, ou schéma et les données dans un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à partir d’un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthode lit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Pour écrire des données XML, ou le schéma et les données à partir de la <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`WriteXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Pour écrire uniquement le schéma, utilisez la <ph id="ph1">`WriteXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Si un schéma en ligne est spécifié, le schéma en ligne est utilisé pour étendre la structure relationnelle existante avant le chargement des données.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">S’il existe des conflits (par exemple, la même colonne dans la même table est définie avec différents types de données), une exception est levée.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Si aucun schéma en ligne n’est spécifié, la structure relationnelle est étendue par inférence, si nécessaire, en fonction de la structure du document XML.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Si le schéma ne peut pas être étendu par inférence afin d’exposer toutes les données, une exception est levée.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Le <ph id="ph1">`DataSet`</ph> n’associe pas un élément XML avec ses correspondant <ph id="ph2">`DataColumn`</ph> ou <ph id="ph3">`DataTable`</ph> lorsque les caractères XML reconnus comme (« _ ») sont ignorés dans le XML sérialisé.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Le <ph id="ph1">`DataSet`</ph> lui-même ignore uniquement les caractères XML non conformes dans les noms d’élément XML et peut donc uniquement utiliser les mêmes.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Lors de l’échappement des caractères autorisés dans le nom d’élément XML, l’élément est ignoré lors du traitement.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contenant deux colonnes et dix lignes.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to a memory stream, by invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple écrit le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schéma et les données dans un flux de mémoire, en appelant le <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data.</source>
          <target state="translated">L’exemple crée un deuxième <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et appelle le <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> méthode à remplir avec le schéma et les données.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The name of the file from which to read the data.</source>
          <target state="translated">Nom du fichier à partir duquel lire les données.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> from the specified file.</source>
          <target state="translated">Lit le schéma et les données XML dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à partir du fichier spécifié.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> utilisé pour lire les données.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the file named in the supplied <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">En cours <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et ses descendants sont chargés avec les données à partir du fichier nommé dans le <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">Le comportement de cette méthode est identique à celui de la <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> méthode, sauf que dans ce cas, les données est chargée uniquement pour la table actuelle et ses descendants.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> (méthode) fournit un moyen de lire soit les données uniquement, ou schéma et les données dans un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à partir d’un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthode lit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Pour écrire des données XML, ou le schéma et les données à partir de la <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`WriteXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Pour écrire uniquement le schéma, utilisez la <ph id="ph1">`WriteXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Si un schéma en ligne est spécifié, le schéma en ligne est utilisé pour étendre la structure relationnelle existante avant le chargement des données.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">S’il existe des conflits (par exemple, la même colonne dans la même table est définie avec différents types de données), une exception est levée.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Si aucun schéma en ligne n’est spécifié, la structure relationnelle est étendue par inférence, si nécessaire, en fonction de la structure du document XML.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Si le schéma ne peut pas être étendu par inférence afin d’exposer toutes les données, une exception est levée.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Le <ph id="ph1">`DataSet`</ph> n’associe pas un élément XML avec ses correspondant <ph id="ph2">`DataColumn`</ph> ou <ph id="ph3">`DataTable`</ph> lorsque les caractères XML reconnus comme (« _ ») sont ignorés dans le XML sérialisé.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Le <ph id="ph1">`DataSet`</ph> lui-même ignore uniquement les caractères XML non conformes dans les noms d’élément XML et peut donc uniquement utiliser les mêmes.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Lors de l’échappement des caractères autorisés dans le nom d’élément XML, l’élément est ignoré lors du traitement.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contenant deux colonnes et dix lignes.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to disk.</source>
          <target state="translated">L’exemple écrit le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schéma et les données sur le disque.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data.</source>
          <target state="translated">L’exemple crée un deuxième <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et appelle le <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> méthode à remplir avec le schéma et les données.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that will be used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> qui sera utilisé pour lire les données.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>Reads XML Schema and Data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Lit le schéma et les données XML dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide du <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> utilisé pour lire les données.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the file named in the supplied <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">En cours <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et ses descendants sont chargés avec les données à partir du fichier nommé dans le <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">Le comportement de cette méthode est identique à celui de la <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> méthode, sauf que dans ce cas, les données est chargée uniquement pour la table actuelle et ses descendants.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> (méthode) fournit un moyen de lire soit les données uniquement, ou schéma et les données dans un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à partir d’un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthode lit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Pour écrire des données XML, ou le schéma et les données à partir de la <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`WriteXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Pour écrire uniquement le schéma, utilisez la <ph id="ph1">`WriteXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Si un schéma en ligne est spécifié, le schéma en ligne est utilisé pour étendre la structure relationnelle existante avant le chargement des données.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">S’il existe des conflits (par exemple, la même colonne dans la même table est définie avec différents types de données), une exception est levée.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Si aucun schéma en ligne n’est spécifié, la structure relationnelle est étendue par inférence, si nécessaire, en fonction de la structure du document XML.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Si le schéma ne peut pas être étendu par inférence afin d’exposer toutes les données, une exception est levée.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Le <ph id="ph1">`DataSet`</ph> n’associe pas un élément XML avec ses correspondant <ph id="ph2">`DataColumn`</ph> ou <ph id="ph3">`DataTable`</ph> lorsque les caractères XML reconnus comme (« _ ») sont ignorés dans le XML sérialisé.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Le <ph id="ph1">`DataSet`</ph> lui-même ignore uniquement les caractères XML non conformes dans les noms d’élément XML et peut donc uniquement utiliser les mêmes.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Lors de l’échappement des caractères autorisés dans le nom d’élément XML, l’élément est ignoré lors du traitement.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contenant deux colonnes et dix lignes.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">L’exemple écrit le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schéma et les données à un <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data from the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> instance.</source>
          <target state="translated">L’exemple crée un deuxième <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et appelle le <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> méthode à remplir avec le schéma et les données à partir de la <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Lit un schéma XML dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Use the <ph id="ph1">`ReadXmlSchema`</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">`ReadXmlSchema`</ph> méthode pour créer le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire un schéma dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">Le schéma XML est interprété en fonction de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`ReadXmlSchema`</ph> méthode est généralement appelée avant la <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> méthode qui est utilisée pour remplir le <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The stream used to read the schema.</source>
          <target state="translated">Flux de données utilisé pour lire le schéma.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified stream.</source>
          <target state="translated">Lit un schéma XML dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide du flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthode pour créer le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire un schéma dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">Le schéma XML est interprété en fonction de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Une altération des données peut se produire si l’être et les types xs : type ne correspondent pas.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>No exception will be thrown.</source>
          <target state="translated">Aucune exception n’est levée.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`ReadXmlSchema`</ph> méthode est généralement appelée avant la <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> méthode qui est utilisée pour remplir le <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">Pour créer une relation imbriquée à l’aide du schéma XML, utilisez des éléments imbriqués implicites.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>You can also configure the nested relation to use explicit column names.</source>
          <target state="translated">Vous pouvez également configurer la relation imbriquée pour utiliser des noms de colonnes explicites.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">Éléments doivent être imbriqués implicitement dans l’ordre pour les tables de données correspondant à participer à une relation imbriquée.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
          <target state="translated">L’application console suivante crée un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>et écrit le schéma pour cette table à un <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema.</source>
          <target state="translated">Ensuite, l’exemple crée un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et lit son schéma à partir du schéma XML enregistré.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> used to read the schema information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> utilisé pour lire les informations de schéma.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Lit un schéma XML dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide du <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthode pour créer le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire un schéma dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">Le schéma XML est interprété en fonction de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Une altération des données peut se produire si l’être et les types xs : type ne correspondent pas.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>No exception will be thrown.</source>
          <target state="translated">Aucune exception n’est levée.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`ReadXmlSchema`</ph> méthode est généralement appelée avant la <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> méthode qui est utilisée pour remplir le <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">Pour créer une relation imbriquée à l’aide du schéma XML, utilisez des éléments imbriqués implicites.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>You can also reconfigure the nested relation to use explicit column names.</source>
          <target state="translated">Vous pouvez également reconfigurer la relation imbriquée pour utiliser des noms de colonnes explicites.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">Éléments doivent être imbriqués implicitement dans l’ordre pour les tables de données correspondant à participer à une relation imbriquée.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
          <target state="translated">L’application console suivante crée un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>et écrit le schéma pour cette table à un <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema, using a <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> (which inherits from <ph id="ph3">&lt;xref:System.IO.TextReader&gt;</ph>) as its source.</source>
          <target state="translated">Ensuite, l’exemple crée un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et lit son schéma à partir du schéma XML enregistré, en utilisant un <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> (qui hérite <ph id="ph3">&lt;xref:System.IO.TextReader&gt;</ph>) comme source.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The name of the file from which to read the schema information.</source>
          <target state="translated">Nom du fichier à partir duquel lire les informations de schéma.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> from the specified file.</source>
          <target state="translated">Lit un schéma XML dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à partir du fichier spécifié.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthode pour créer le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire un schéma dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">Le schéma XML est interprété en fonction de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Une altération des données peut se produire si l’être et les types xs : type ne correspondent pas.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>No exception will be thrown.</source>
          <target state="translated">Aucune exception n’est levée.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">`DataTable`</ph>.</source>
          <target state="translated">Le <ph id="ph1">`ReadXmlSchema`</ph> méthode est généralement appelée avant la <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> méthode qui est utilisée pour remplir le <ph id="ph3">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">Pour créer une relation imbriquée à l’aide du schéma XML, utilisez des éléments imbriqués implicites.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>You can also reconfigure the nested relation to use explicit column names.</source>
          <target state="translated">Vous pouvez également reconfigurer la relation imbriquée pour utiliser des noms de colonnes explicites.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">Éléments doivent être imbriqués implicitement dans l’ordre pour les tables de données correspondant à participer à une relation imbriquée.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a file.</source>
          <target state="translated">L’application console suivante crée un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>et écrit le schéma pour cette table dans un fichier.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema, using the file as its source.</source>
          <target state="translated">Ensuite, l’exemple crée un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et lit son schéma à partir du schéma XML enregistré, en utilisant le fichier comme source.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the schema information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> utilisé pour lire les informations de schéma.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Lit un schéma XML dans le <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide du <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthode pour créer le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire un schéma dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">Le schéma XML est interprété en fonction de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Une altération des données peut se produire si l’être et les types xs : type ne correspondent pas.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>No exception will be thrown.</source>
          <target state="translated">Aucune exception n’est levée.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`ReadXmlSchema`</ph> méthode est généralement appelée avant la <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> méthode qui est utilisée pour remplir le <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The way to create a nested relation using XML schema is to have implicit nested elements.</source>
          <target state="translated">La façon de créer une relation imbriquée à l’aide du schéma XML est d’avoir des éléments imbriqués implicites.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Additionally, the nested relation could be re-wired, to use explicit column names.</source>
          <target state="translated">En outre, la relation imbriquée peut être nouveau reconnectée, afin d’utiliser des noms de colonnes explicites.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">Il est obligatoire pour les éléments implicitement imbriqué pour les tables de données correspondant à participer à une relation imbriquée.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
          <target state="translated">L’application console suivante crée un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>et écrit le schéma pour cette table à un <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema, using a <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> (which inherits from <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>) as its source.</source>
          <target state="translated">Ensuite, l’exemple crée un nouveau <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> et lit son schéma à partir du schéma XML enregistré, en utilisant un <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> (qui hérite <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>) comme source.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
          <source>Reads from an XML stream.</source>
          <target state="translated">Lectures d'un flux de données XML.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.RejectChanges">
          <source>Rolls back all changes that have been made to the table since it was loaded, or the last time <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">Restaure toutes les modifications apportées à la table depuis son chargement ou le dernier appel à <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>When <ph id="ph1">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> is called, any <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects that are still in edit-mode cancel their edits.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> est appelé, tout <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> les objets qui sont toujours en mode édition annulent leurs modifications.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>New rows are removed.</source>
          <target state="translated">Nouvelles lignes sont supprimées.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>Rows with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> set to <ph id="ph2">`Modified`</ph> or <ph id="ph3">`Deleted`</ph> return back to their original state.</source>
          <target state="translated">Les lignes avec le <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> la valeur <ph id="ph2">`Modified`</ph> ou <ph id="ph3">`Deleted`</ph> retrouvent leur état d’origine.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>The following example makes several changes to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, but rejects the changes by invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant apporte plusieurs modifications à un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, mais les refuse en appelant le <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.RemotingFormat">
          <source>Gets or sets the serialization format.</source>
          <target state="translated">Obtient ou définit le format de sérialisation.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.RemotingFormat">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> enumeration specifying either <ph id="ph2">&lt;see langword="Binary" /&gt;</ph> or <ph id="ph3">&lt;see langword="Xml" /&gt;</ph> serialization.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> spécifiant la sérialisation <ph id="ph2">&lt;see langword="Binary" /&gt;</ph> ou <ph id="ph3">&lt;see langword="Xml" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Reset">
          <source>Resets the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to its original state.</source>
          <target state="translated">Rétablit l'état d'origine de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Reset">
          <source>Reset removes all data, indexes, relations, and columns of the table.</source>
          <target state="translated">La réinitialisation supprime toutes les données, relations et colonnes de la table.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Reset">
          <source>If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</source>
          <target state="translated">Si un DataSet inclut un DataTable, la table fera partie du DataSet après sa réinitialisation.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowChanged">
          <source>Occurs after a <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> has been changed successfully.</source>
          <target state="translated">Se produit après la modification réussie de <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowChanged">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion des événements de DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowChanging">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> is changing.</source>
          <target state="translated">Se produit lorsque <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> est en cours de modification.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowChanging">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion des événements de DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowDeleted">
          <source>Occurs after a row in the table has been deleted.</source>
          <target state="translated">Se produit lorsqu'une ligne de la table a été supprimée.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowDeleted">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion des événements de DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowDeleting">
          <source>Occurs before a row in the table is about to be deleted.</source>
          <target state="translated">Se produit avant qu'une ligne de la table soit sur le point d'être supprimée.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowDeleting">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion des événements de DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Rows">
          <source>Gets the collection of rows that belong to this table.</source>
          <target state="translated">Obtient la collection des lignes qui appartiennent à cette table.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph> that contains <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects; otherwise a null value if no <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects exist.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph> qui contient des objets <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, ou une valeur null s'il n'existe aucun objet <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>To create a new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, you must use the <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to return a new object.</source>
          <target state="translated">Pour créer un nouveau <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, vous devez utiliser le <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> méthode pour retourner un nouvel objet.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>Such an object is automatically configured according to the schema defined for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> through its collection of <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects.</source>
          <target state="translated">Un tel objet est automatiquement configuré en fonction du schéma défini pour le <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> via sa collection de <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>After creating a new row and setting the values for each column in the row, add the row to the <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> using the <ph id="ph2">`Add`</ph> method.</source>
          <target state="translated">Après la création d’une nouvelle ligne et en définissant les valeurs de chaque colonne dans la ligne, ajoutez la ligne à la <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> à l’aide de la <ph id="ph2">`Add`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>Each <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> in the collection represents a row of data in the table.</source>
          <target state="translated">Chaque <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> dans la collection représente une ligne de données de la table.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>To commit a change to the value of a column in the row, you must invoke the <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> method.</source>
          <target state="translated">Pour valider une modification à la valeur d’une colonne dans la ligne, vous devez appeler la <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>The following shows two examples of returning and setting rows.</source>
          <target state="translated">Voici deux exemples de retour et la définition des lignes.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>The first example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> property and prints the value of each column for every row.</source>
          <target state="translated">Le premier exemple utilise le <ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> propriété et imprime la valeur de chaque colonne pour chaque ligne.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>The second example uses the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object's <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to create a new <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object with the schema of the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Le deuxième exemple utilise la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> l’objet <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> pour créer une nouvelle méthode <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objet avec le schéma de la <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>After setting the row values, the row is added to the <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> through the <ph id="ph2">`Add`</ph> method.</source>
          <target state="translated">Après avoir défini les valeurs de ligne, la ligne est ajoutée à la <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> via la <ph id="ph2">`Add`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Gets an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Obtient un tableau d'objets <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Obtient un tableau de tous les objets <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select">
          <source>To ensure the proper sort order, specify sort criteria with <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>.</source>
          <target state="translated">Pour garantir l’ordre de tri approprié, spécifiez les critères de tri avec <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select">
          <source>The following example returns an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects through the <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant retourne un tableau de <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objets via la <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">Critères à utiliser pour filtrer les lignes.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">Pour obtenir des exemples sur la manière de filtrer les lignes, consultez la rubrique relative à la <bpt id="p1">[</bpt>syntaxe DataView RowFilter [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that match the filter criteria.</source>
          <target state="translated">Obtient un tableau de tous les objets <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> qui correspondent aux critères de filtre.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>To create the <ph id="ph1">`filterExpression`</ph> argument, use the same rules that apply to the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> class's <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property value for creating filters.</source>
          <target state="translated">Pour créer le <ph id="ph1">`filterExpression`</ph> argument, utiliser les mêmes règles qui s’appliquent à la <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> de classe <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> valeur de propriété pour la création de filtres.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>To ensure the proper sort order, specify sort criteria with <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>.</source>
          <target state="translated">Pour garantir l’ordre de tri approprié, spécifiez les critères de tri avec <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">Si la colonne sur le filtre contient une valeur null, il ne sera pas faire partie du résultat.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>The following example uses a filter expression to return an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">L’exemple suivant utilise une expression de filtre pour retourner un tableau de <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">Critères à utiliser pour filtrer les lignes.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">Pour obtenir des exemples sur la manière de filtrer les lignes, consultez la rubrique relative à la <bpt id="p1">[</bpt>syntaxe DataView RowFilter [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>A string specifying the column and sort direction.</source>
          <target state="translated">Chaîne spécifiant la colonne et le sens du tri.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that match the filter criteria, in the specified sort order.</source>
          <target state="translated">Obtient un tableau de tous les objets <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> qui correspondent aux critères de filtre, dans l'ordre de tri spécifié.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects matching the filter expression.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> correspondant à l'expression de filtre.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>To form the <ph id="ph1">`filterExpression`</ph> argument, use the same rules for creating the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> class's <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property value.</source>
          <target state="translated">Pour former le <ph id="ph1">`filterExpression`</ph> argument, utiliser les mêmes règles pour la création de la <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> la classe <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> valeur de la propriété.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>The <ph id="ph1">`Sort`</ph> argument also uses the same rules for creating class's <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> strings.</source>
          <target state="translated">Le <ph id="ph1">`Sort`</ph> argument utilise également les mêmes règles pour la création de la classe <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> chaînes.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">Si la colonne sur le filtre contient une valeur null, il ne sera pas faire partie du résultat.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>The following example uses a filter expression to return an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">L’exemple suivant utilise une expression de filtre pour retourner un tableau de <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">Critères à utiliser pour filtrer les lignes.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">Pour obtenir des exemples sur la manière de filtrer les lignes, consultez la rubrique relative à la <bpt id="p1">[</bpt>syntaxe DataView RowFilter [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>A string specifying the column and sort direction.</source>
          <target state="translated">Chaîne spécifiant la colonne et le sens du tri.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.DataViewRowState" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Data.DataViewRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that match the filter in the order of the sort that match the specified state.</source>
          <target state="translated">Obtient un tableau de tous les objets <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> qui correspondent au filtre et à l'état spécifié, dans l'ordre de tri.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>To form the <ph id="ph1">`filterExpression`</ph> argument, use the same rules for creating the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> class's <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property value.</source>
          <target state="translated">Pour former le <ph id="ph1">`filterExpression`</ph> argument, utiliser les mêmes règles pour la création de la <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> la classe <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> valeur de la propriété.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>The <ph id="ph1">`Sort`</ph> argument also uses the same rules for creating class's <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> strings.</source>
          <target state="translated">Le <ph id="ph1">`Sort`</ph> argument utilise également les mêmes règles pour la création de la classe <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> chaînes.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">Si la colonne sur le filtre contient une valeur null, il ne sera pas faire partie du résultat.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>The following example uses a filter expression and record state to return an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">L’exemple suivant utilise un état d’expression et un enregistrement de filtre pour retourner un tableau de <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Site">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit un élément <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> pour l'élément <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> pour <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Site">
          <source>Sites bind a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> to a <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">Sites lient un <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> à un <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> et activer la communication entre eux, ainsi que fournir un moyen pour le conteneur de gérer ses composants.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</source>
          <target state="translated">Pour obtenir une description de ce membre, consultez <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is a collection of <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la collection est une collection d'objets <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</source>
          <target state="translated">Pour obtenir une description de ce membre, consultez <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source from the object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> pouvant être lié à une source de données à partir de l'objet.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</source>
          <target state="translated">Pour obtenir une description de ce membre, consultez <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> that describes the XML representation of the object that is produced by the <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> method and consumed by the <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> qui décrit la représentation XML de l'objet qui est généré par la méthode <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> et utilisé par la méthode <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>An XmlReader.</source>
          <target state="translated">Un XmlReader.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</source>
          <target state="translated">Pour obtenir une description de ce membre, consultez <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>An XmlWriter.</source>
          <target state="translated">Un XmlWriter.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph>.</source>
          <target state="translated">Pour obtenir une description de ce membre, consultez <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.TableCleared">
          <source>Occurs after a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is cleared.</source>
          <target state="translated">Se produit une fois <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> effacé.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableCleared">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> event is fired immediately after all rows have been successfully cleared but before the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> method returns control back to the caller.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> événement est déclenché dès que toutes les lignes ont été effacées avec succès, mais avant la <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> méthode retourne le contrôle à l’appelant.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableCleared">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> event is not fired if there are any exceptions during the clear operation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> événement n’est pas déclenché si des exceptions pendant l’opération d’effacement.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.TableClearing">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is cleared.</source>
          <target state="translated">Se produit lorsque <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> est effacé.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableClearing">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph> event is fired before processing of the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> operation begins.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph> événement est déclenché avant le traitement de la <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> début de l’opération.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableClearing">
          <source>This event is always fired when the <ph id="ph1">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> method is invoked, even if the table contains zero rows.</source>
          <target state="translated">Cet événement est toujours déclenché lorsque la <ph id="ph1">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> méthode est appelée, même si la table ne contient aucune ligne.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source>Gets or sets the name of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit le nom de l'objet <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.TableName">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Nom du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.TableName">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> is used to return this table from the parent <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object's <ph id="ph3">&lt;xref:System.Data.DataTableCollection&gt;</ph> (returned by the <ph id="ph4">&lt;xref:System.Data.DataSet.Tables%2A&gt;</ph> property).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> est utilisé pour retourner cette table à partir du parent <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> l’objet <ph id="ph3">&lt;xref:System.Data.DataTableCollection&gt;</ph> (retourné par la <ph id="ph4">&lt;xref:System.Data.DataSet.Tables%2A&gt;</ph> propriété).</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.TableName">
          <source>The following example prints the <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> for each table in a collection of <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects.</source>
          <target state="translated">L’exemple suivant imprime le <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> pour chaque table dans une collection de <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> or empty string ("") is passed in and this table belongs to a collection.</source>
          <target state="translated">Une chaîne vide ("") ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> est passé et cette table appartient à une collection.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source>The table belongs to a collection that already has a table with the same name.</source>
          <target state="translated">La table appartient à une collection qui contient déjà une table portant le même nom.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source>(Comparison is case-sensitive).</source>
          <target state="translated">(La comparaison respecte la casse).</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.TableNewRow">
          <source>Occurs when a new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> is inserted.</source>
          <target state="translated">Se produit lorsqu'un nouveau <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> est inséré.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableNewRow">
          <source>Fires after a new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> has been created using <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>.</source>
          <target state="translated">Se déclenche après un nouveau <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> a été créé à l’aide de <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableNewRow">
          <source>This event is fired before the invoked <ph id="ph1">`NewRow`</ph> method returns.</source>
          <target state="translated">Cet événement est déclenché avant appelé <ph id="ph1">`NewRow`</ph> retourne de la méthode.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableNewRow">
          <source>The new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> instance is detached; it has not been added to the collection.</source>
          <target state="translated">La nouvelle <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> instance est détachée ; il n’a pas été ajouté à la collection.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ToString">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph>, if there is one as a concatenated string.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> et le <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph> éventuels sous la forme d'une chaîne concaténée.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ToString">
          <source>A string consisting of the <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> and the <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph> values.</source>
          <target state="translated">Chaîne constituée des valeurs <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> et <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ToString">
          <source>Gets the <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph> pour le <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ToString">
          <source>The following example returns the <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph> using the <ph id="ph3">&lt;xref:System.Data.DataTable.ToString%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant retourne le <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph> à l’aide de la <ph id="ph3">&lt;xref:System.Data.DataTable.ToString%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML.</source>
          <target state="translated">Écrit le contenu actuel du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> au format XML.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui incluent le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">L’application console suivante crée deux <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, l’ajoute à un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, crée un <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> concernant les deux tables, puis utilise la <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode pour écrire les données contenues dans la table parente à une <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">L’exemple illustre le comportement lors de la définition du <ph id="ph1">`writeHierarchy`</ph> paramètre à chacun de ses valeurs.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of WriteXml.</source>
          <target state="translated">Cet exemple montre comment utiliser une des versions surchargées de WriteXml.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">Pour obtenir des exemples qui peuvent être disponibles, consultez les rubriques de surcharge individuels.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">L'exemple affiche la sortie suivante dans la fenêtre de console :</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">Flux de données dans lequel les données seront écrites.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Écrit le contenu actuel de l’objet <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous forme XML à l’aide de <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui inclut le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write the content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> avec lequel écrire le contenu.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Écrit le contenu actuel de l’objet <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous forme XML à l’aide de <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui inclut le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>The file to which to write the XML data.</source>
          <target state="translated">Fichier dans lequel écrire les données XML.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified file.</source>
          <target state="translated">Écrit le contenu actuel du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> au format XML à l'aide du fichier spécifié.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui inclut le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the contents.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> à l'aide duquel écrire le contenu.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Écrit le contenu actuel de l’objet <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous forme XML à l’aide de <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui incluent le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">Flux de données dans lequel les données seront écrites.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le contenu de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez les données pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Écrit le contenu actuel de l’objet <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous forme XML à l’aide de <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à un document XML.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Le schéma XML est écrite à l’aide de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire les données dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXml`</ph> méthode écrit les données uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire les données pour la table actuelle et tous ses descendants, les tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">Flux de données dans lequel les données seront écrites.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified file using the specified <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Écrit les données en cours, et éventuellement le schéma, de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> dans le fichier spécifié à l'aide du <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Pour écrire le schéma, affectez <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> comme valeur du paramètre <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui inclut le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write the content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> avec lequel écrire le contenu.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le contenu de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez les données pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Écrit le contenu actuel de l’objet <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous forme XML à l’aide de <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui inclut le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXml`</ph> méthode écrit les données uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>To write the data for the current table and all its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire les données pour la table actuelle et tous ses descendants et tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">L’application console suivante crée deux <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, l’ajoute à un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, crée un <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> concernant les deux tables, puis utilise la <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode pour écrire les données contenues dans la table parente à une <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">L’exemple illustre le comportement lors de la définition du <ph id="ph1">`writeHierarchy`</ph> paramètre <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> utilisé pour écrire le document.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Écrit les données en cours, et éventuellement le schéma, de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide des <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Pour écrire le schéma, affectez <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> comme valeur du paramètre <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui inclut le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>The file to which to write the XML data.</source>
          <target state="translated">Fichier dans lequel écrire les données XML.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le contenu de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez les données pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified file.</source>
          <target state="translated">Écrit le contenu actuel du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> au format XML à l'aide du fichier spécifié.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui inclut le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXml`</ph> méthode écrit les données uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire les données pour la table actuelle et tous ses descendants, les tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The name of the file to which the data will be written.</source>
          <target state="translated">Nom du fichier dans lequel les données seront écrites.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified file and <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Écrit les données en cours, et éventuellement le schéma, de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide du fichier et <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Pour écrire le schéma, affectez <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> comme valeur du paramètre <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui incluent le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the contents.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> à l'aide duquel écrire le contenu.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le contenu de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez les données pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Écrit le contenu actuel de l’objet <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous forme XML à l’aide de <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui incluent le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXml`</ph> méthode écrit les données uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To write the data for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire les données pour la table actuelle et son ensemble descendants et tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> utilisé pour écrire le document.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Écrit les données en cours, et éventuellement le schéma, de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide des <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Pour écrire le schéma, affectez <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> comme valeur du paramètre <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui incluent le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">Flux de données dans lequel les données seront écrites.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le contenu de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez les données pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified file using the specified <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Écrit les données en cours, et éventuellement le schéma, de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> dans le fichier spécifié à l'aide du <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Pour écrire le schéma, affectez <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> comme valeur du paramètre <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">`DataTable`</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">`DataTable`</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`XmlWriteMode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui inclut le <ph id="ph1">`XmlWriteMode`</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">Normalement, le <ph id="ph1">`WriteXml`</ph> méthode enregistre les données uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">`DataTable`</ph> into an XML document, whereas the <ph id="ph3">`WriteXmlSchema`</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">`WriteXml`</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">`DataTable`</ph> dans un document XML, alors que le <ph id="ph3">`WriteXmlSchema`</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`XmlWriteMode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui inclut le <ph id="ph1">`XmlWriteMode`</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXml`</ph> méthode écrit les données uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire les données pour la table actuelle et tous ses descendants, les tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> utilisé pour écrire le document.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le contenu de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez les données pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Écrit les données en cours, et éventuellement le schéma, de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide des <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Pour écrire le schéma, affectez <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> comme valeur du paramètre <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui inclut le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">Normalement, le <ph id="ph1">`WriteXml`</ph> méthode enregistre les données uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui inclut le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXml`</ph> méthode écrit les données uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire les données pour la table actuelle et tous ses descendants, les tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">L’application console suivante crée deux <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, l’ajoute à un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, crée un <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> concernant les deux tables, puis utilise la <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode pour écrire les données contenues dans la table parente à une <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">L’exemple illustre le comportement lors de la définition du <ph id="ph1">`writeHierarchy`</ph> paramètre à chacun de ses valeurs.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">L'exemple affiche la sortie suivante dans la fenêtre de console :</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>The name of the file to which the data will be written.</source>
          <target state="translated">Nom du fichier dans lequel les données seront écrites.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le contenu de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez les données pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified file and <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Écrit les données en cours, et éventuellement le schéma, de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide du fichier et <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Pour écrire le schéma, affectez <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> comme valeur du paramètre <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui incluent le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">Normalement, le <ph id="ph1">`WriteXml`</ph> méthode enregistre les données uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>If you want to save the data for the current table and all of schema, the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Si vous souhaitez enregistrer les données pour la table actuelle et l’ensemble du schéma, le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui incluent le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXml`</ph> méthode écrit les données uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and all descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire les données pour la table actuelle et tous les descendants et tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> utilisé pour écrire le document.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le contenu de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez les données pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Écrit les données en cours, et éventuellement le schéma, de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> à l'aide des <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Pour écrire le schéma, affectez <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> comme valeur du paramètre <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> méthode fournit à écrire seulement les données, ou les données et le schéma à partir d’un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> dans un document XML, alors que le <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode écrit uniquement le schéma.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Pour écrire les données et le schéma, utilisez une des surcharges qui incluent le <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> paramètre et définissez sa valeur sur <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Notez que le même a la valeur true pour le <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> méthodes, respectivement.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Pour lire des données XML, ou le schéma et les données dans le <ph id="ph1">`DataTable`</ph>, utilisez le <ph id="ph2">`ReadXml`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Pour lire uniquement le schéma, utilisez la <ph id="ph1">`ReadXmlSchema`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXml`</ph> méthode écrit les données uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire les données pour la table actuelle et son ensemble descendants et tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> sera levée si un type de colonne dans la <ph id="ph2">`DataRow`</ph> en cours de lecture ou d’écriture implémente <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> et n’implémente pas <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema.</source>
          <target state="translated">Écrit la structure de données actuelle du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous la forme d'un schéma XML.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à un document XML.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Le schéma XML est écrite à l’aide de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire les données dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">L’application console suivante crée deux <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, l’ajoute à un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, crée un <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> concernant les deux tables, puis utilise la <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire les données contenues dans la table parente à une <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">L’exemple illustre le comportement lors de la définition du <ph id="ph1">`writeHierarchy`</ph> paramètre à chacun de ses valeurs.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of <ph id="ph1">`WriteXmlSchema`</ph> For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">Cet exemple montre comment utiliser une des versions surchargées de <ph id="ph1">`WriteXmlSchema`</ph> pour obtenir des exemples qui peuvent être disponibles, consultez les rubriques de surcharge individuels.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">L'exemple affiche la sortie suivante dans la fenêtre de console :</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>The stream to which the XML schema will be written.</source>
          <target state="translated">Flux de données dans lequel le schéma XML sera écrit.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified stream.</source>
          <target state="translated">Écrit la structure de données actuelle du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous la forme d'un schéma XML dans le flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à un document XML.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Le schéma XML est écrite à l’aide de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire les données dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> à l'aide duquel effectuer l'écriture.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Écrit la structure de données actuelle du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous la forme d'un schéma XML à l'aide du <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à un document XML.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Le schéma XML est écrite à l’aide de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire les données dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>The name of the file to use.</source>
          <target state="translated">Nom du fichier à utiliser.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified file.</source>
          <target state="translated">Écrit la structure de données actuelle du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous la forme d'un schéma XML dans le fichier spécifié.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à un document XML.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Le schéma XML est écrite à l’aide de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire les données dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> à utiliser.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Écrit la structure de données actuelle du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous la forme d'un schéma XML à l'aide du <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à un document XML.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Le schéma XML est écrite à l’aide de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire les données dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>The stream to which the XML schema will be written.</source>
          <target state="translated">Flux de données dans lequel le schéma XML sera écrit.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le schéma de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified stream.</source>
          <target state="translated">Écrit la structure de données actuelle du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous la forme d'un schéma XML dans le flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à un document XML.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Le schéma XML est écrite à l’aide de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire les données dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXmlSchema`</ph> méthode écrit le schéma uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire le schéma pour la table actuelle et son ensemble descendants et tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> à l'aide duquel effectuer l'écriture.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le schéma de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Écrit la structure de données actuelle du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous la forme d'un schéma XML à l'aide du <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à un document XML.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Le schéma XML est écrite à l’aide de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire les données dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXmlSchema`</ph> méthode écrit le schéma uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire le schéma pour la table actuelle et son ensemble descendants et tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">L’application console suivante crée deux <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, l’ajoute à un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, crée un <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> concernant les deux tables, puis utilise la <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire les données contenues dans la table parente à une <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">L’exemple illustre le comportement lors de la définition du <ph id="ph1">`writeHierarchy`</ph> paramètre à chacun de ses valeurs.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">L'exemple affiche la sortie suivante dans la fenêtre de console :</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>The name of the file to use.</source>
          <target state="translated">Nom du fichier à utiliser.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le schéma de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified file.</source>
          <target state="translated">Écrit la structure de données actuelle du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous la forme d'un schéma XML dans le fichier spécifié.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à un document XML.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Le schéma XML est écrite à l’aide de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire les données dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXmlSchema`</ph> méthode écrit le schéma uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire le schéma pour la table actuelle et son ensemble descendants et tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> utilisé pour écrire le document.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="true" /&gt;</ph>, écrivez le schéma de la table en cours et de tous ses descendants.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">Si <ph id="ph1">&lt;see langword="false" /&gt;</ph> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Écrit la structure de données actuelle du <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> sous la forme d'un schéma XML à l'aide du <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> méthode pour écrire le schéma pour un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> à un document XML.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Le schéma inclut des définitions de table, des relations et des contraintes.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Le schéma XML est écrite à l’aide de la norme XSD.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Pour écrire les données dans un document XML, utilisez la <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">Normalement le <ph id="ph1">`WriteXmlSchema`</ph> méthode écrit le schéma uniquement pour la table actuelle.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour écrire le schéma pour la table actuelle et son ensemble descendants et tables associées, appelez la méthode avec le <ph id="ph1">`writeHierarchy`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>