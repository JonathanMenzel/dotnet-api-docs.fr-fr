<Type Name="IDbTransaction" FullName="System.Data.IDbTransaction">
  <TypeSignature Language="C#" Value="public interface IDbTransaction : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbTransaction implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbTransaction" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbTransaction : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b6e6b-101">Représente une transaction à appliquer à une source de données, et est implémenté par les fournisseurs de données .NET Framework qui accèdent aux bases de données relationnelles.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-101">Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6e6b-102">Le <xref:System.Data.IDbTransaction> interface permet à une classe qui hérite d’implémenter une classe de Transaction, qui représente la transaction à effectuer sur une source de données.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-102">The <xref:System.Data.IDbTransaction> interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source.</span></span> <span data-ttu-id="b6e6b-103">Pour plus d’informations sur les classes Transaction, consultez [Transactions et la concurrence](~/docs/framework/data/adonet/transactions-and-concurrency.md).</span><span class="sxs-lookup"><span data-stu-id="b6e6b-103">For more information about Transaction classes, see [Transactions and Concurrency](~/docs/framework/data/adonet/transactions-and-concurrency.md).</span></span>  
  
 <span data-ttu-id="b6e6b-104">Une application ne crée pas une instance de la <xref:System.Data.IDbTransaction> interface directement, mais crée une instance d’une classe qui hérite de <xref:System.Data.IDbTransaction>.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-104">An application does not create an instance of the <xref:System.Data.IDbTransaction> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbTransaction>.</span></span>  
  
 <span data-ttu-id="b6e6b-105">Les classes qui héritent <xref:System.Data.IDbTransaction> doit implémenter les membres hérités et définissent généralement des membres supplémentaires pour ajouter des fonctionnalités spécifiques au fournisseur.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-105">Classes that inherit <xref:System.Data.IDbTransaction> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="b6e6b-106">Par exemple, le <xref:System.Data.IDbTransaction> interface définit les <xref:System.Data.IDbTransaction.Commit%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b6e6b-106">For example, the <xref:System.Data.IDbTransaction> interface defines the <xref:System.Data.IDbTransaction.Commit%2A> method.</span></span> <span data-ttu-id="b6e6b-107">À son tour, le <xref:System.Data.OleDb.OleDbTransaction> classe hérite de cette propriété et définit également la <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b6e6b-107">In turn, the <xref:System.Data.OleDb.OleDbTransaction> class inherits this property, and also defines the <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6e6b-108">L’exemple suivant crée des instances des classes dérivées, <xref:System.Data.SqlClient.SqlConnection> et <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="b6e6b-109">Il montre également comment utiliser le <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, et <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-109">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="b6e6b-110">Pour promouvoir la cohérence entre les fournisseurs de données .NET Framework, nommez la classe qui hérite sous la forme <paramref name="Prv" /> Transaction où <paramref name="Prv" /> est le préfixe uniforme affecté à toutes les classes dans un espace de noms de fournisseur de données .NET Framework spécifique.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-110">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> Transaction where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="b6e6b-111">Par exemple, <paramref name="Sql" /> est le préfixe de le <see cref="T:System.Data.SqlClient.SqlTransaction" /> classe dans le <see langword="System.Data.SqlClient" /> espace de noms.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-111">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlTransaction" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6e6b-112">Valide la transaction de base de données.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-112">Commits the database transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b6e6b-113">L’exemple suivant crée des instances des classes dérivées, <xref:System.Data.SqlClient.SqlConnection> et un <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-113">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="b6e6b-114">Il montre également comment utiliser le <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, et <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-114">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="b6e6b-115">Une erreur s’est produite lors de la tentative de validation de la transaction.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-115">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b6e6b-116">La transaction a déjà été validée ou annulée.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-116">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="b6e6b-117">- ou -</span><span class="sxs-lookup"><span data-stu-id="b6e6b-117">-or-</span></span>  
  
 <span data-ttu-id="b6e6b-118">La connexion est interrompue.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-118">The connection is broken.</span></span></exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
        <altmember cref="M:System.Data.SqlClient.SqlTransaction.Save(System.String)" />
        <altmember cref="M:System.Data.SqlClient.SqlTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6e6b-119">Spécifie l’objet Connection à associer à la transaction.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-119">Specifies the Connection object to associate with the transaction.</span></span></summary>
        <value><span data-ttu-id="b6e6b-120">L’objet Connection à associer à la transaction.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-120">The Connection object to associate with the transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6e6b-121">Une application peut avoir plusieurs connexions de base de données, chacune avec zéro, une ou plusieurs transactions.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-121">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="b6e6b-122">Cette propriété vous permet de déterminer l’objet de connexion associé à une transaction particulière.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-122">This property enables you to determine the connection object associated with a particular transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6e6b-123">Spécifie <see cref="T:System.Data.IsolationLevel" /> pour cette transaction.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-123">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span></summary>
        <value><span data-ttu-id="b6e6b-124"><see cref="T:System.Data.IsolationLevel" /> pour cette transaction.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-124">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span> <span data-ttu-id="b6e6b-125">La valeur par défaut est <see langword="ReadCommitted" />.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-125">The default is <see langword="ReadCommitted" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6e6b-126">Les transactions parallèles ne sont pas prises en charge.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-126">Parallel transactions are not supported.</span></span> <span data-ttu-id="b6e6b-127">Par conséquent, le <xref:System.Data.IsolationLevel> s’applique à toute la transaction.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-127">Therefore, the <xref:System.Data.IsolationLevel> applies to the entire transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6e6b-128">Annule une transaction à partir d’un état d’attente.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-128">Rolls back a transaction from a pending state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6e6b-129">La transaction ne peut être restaurée à partir d’un état d’attente (après <xref:System.Data.IDbConnection.BeginTransaction%2A> a été appelée, mais avant que <xref:System.Data.IDbTransaction.Commit%2A> est appelée).</span><span class="sxs-lookup"><span data-stu-id="b6e6b-129">The transaction can only be rolled back from a pending state (after <xref:System.Data.IDbConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.IDbTransaction.Commit%2A> is called).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6e6b-130">L’exemple suivant crée des instances des classes dérivées, <xref:System.Data.SqlClient.SqlConnection> et un <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-130">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="b6e6b-131">Il montre également comment utiliser le <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, et <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-131">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="b6e6b-132">Une erreur s’est produite lors de la tentative de validation de la transaction.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-132">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b6e6b-133">La transaction a déjà été validée ou annulée.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-133">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="b6e6b-134">- ou -</span><span class="sxs-lookup"><span data-stu-id="b6e6b-134">-or-</span></span>  
  
 <span data-ttu-id="b6e6b-135">La connexion est interrompue.</span><span class="sxs-lookup"><span data-stu-id="b6e6b-135">The connection is broken.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="b6e6b-136">Lors de la substitution <see cref="M:System.Data.IDbTransaction.Rollback" /> dans une classe dérivée, veillez à appeler la classe de base <see langword="Rollback" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b6e6b-136">When overriding <see cref="M:System.Data.IDbTransaction.Rollback" /> in a derived class, be sure to call the base class's <see langword="Rollback" /> method.</span></span></para>
        </block>
        <altmember cref="M:System.Data.IDbTransaction.Commit" />
        <altmember cref="M:System.Data.IDbConnection.BeginTransaction" />
      </Docs>
    </Member>
  </Members>
</Type>