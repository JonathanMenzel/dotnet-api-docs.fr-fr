<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IsolationLevel.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fcf9de84f8217ebb2ca027402a2cd2578d3bcafc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fcf9de84f8217ebb2ca027402a2cd2578d3bcafc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.IsolationLevel">
          <source>Specifies the transaction locking behavior for the connection.</source>
          <target state="translated">Spécifie le comportement de verrouillage des transactions pour la connexion.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> values are used by a .NET Framework data provider when performing a transaction.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> valeurs sont utilisées par un fournisseur de données .NET Framework lors de l’exécution d’une transaction.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> remains in effect until explicitly changed, but it can be changed at any time.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> reste en vigueur jusqu'à ce qu’explicitement modifié, mais il peut être modifié à tout moment.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The new value is used at execution time, not parse time.</source>
          <target state="translated">La nouvelle valeur est utilisée au moment de l’exécution, pas les temps d’analyse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If changed during a transaction, the expected behavior of the server is to apply the new locking level to all statements remaining.</source>
          <target state="translated">Si modifiée au cours d’une transaction, le comportement attendu du serveur est à appliquer le nouveau niveau de verrouillage pour toutes les instructions restantes.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>This application demonstrates how to use <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> in <ph id="ph2">&lt;xref:System.Data.Common.DbTransaction&gt;</ph>.</source>
          <target state="translated">Cette application montre comment utiliser <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> dans <ph id="ph2">&lt;xref:System.Data.Common.DbTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The sample will demonstrate which of the following behaviors are allowed in the different isolation levels:</source>
          <target state="translated">L’exemple va vous montrer les comportements suivants sont autorisés dans les différents niveaux d’isolation :</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Dirty reads.</source>
          <target state="translated">Lectures de données modifiées.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Non-repeatable reads.</source>
          <target state="translated">Lectures non répétables.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Phantoms.</source>
          <target state="translated">Fantômes.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>This application will execute in the following isolation levels:</source>
          <target state="translated">Cette application s’exécute dans les niveaux d’isolation suivants :</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>ReadUncommitted</source>
          <target state="translated">ReadUncommitted</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>ReadCommitted</source>
          <target state="translated">ReadCommitted</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>RepeatableRead</source>
          <target state="translated">RepeatableRead</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Serializable</source>
          <target state="translated">Sérialisable</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Snapshot</source>
          <target state="translated">Instantané</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The PhantomReadThreads class demonstrates if the specific transaction allows the Phantom Read behavior.</source>
          <target state="translated">La classe PhantomReadThreads montre si la transaction spécifique permet le comportement de la lecture de fantôme.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the threads will operate in the following order:</source>
          <target state="translated">Si la transaction autorise le comportement, les threads fonctionnera dans l’ordre suivant :</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, select the products(All).</source>
          <target state="translated">Dans le premier thread, sélectionnez le products(All).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In the second thread, insert a new product.</source>
          <target state="translated">Dans le deuxième thread, insérez un nouveau produit.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in second thread.</source>
          <target state="translated">Validez la transaction dans un deuxième thread.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Select the products again.</source>
          <target state="translated">Sélectionnez les produits à nouveau.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in first thread.</source>
          <target state="translated">Validez la transaction dans le premier thread.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the two Select operations will get the different results.</source>
          <target state="translated">Si la transaction autorise le comportement, les deux opérations Select obtenez des résultats différents.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The NonrepeatableReadThreads class demonstrates if the specific transaction allows the Nonrepeatable Read behavior.</source>
          <target state="translated">La classe NonrepeatableReadThreads montre si la transaction spécifique permet le comportement de lecture non renouvelable.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the threads will operate in the following order:</source>
          <target state="translated">Si la transaction autorise le comportement, les threads fonctionnera dans l’ordre suivant :</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, select the product(ProductId=1).</source>
          <target state="translated">Dans le premier thread, sélectionnez le product(ProductId=1).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In the second thread, update the Quantity value(ProductId=1).</source>
          <target state="translated">Dans le deuxième thread, mettre à jour la quantité value(ProductId=1).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in second thread.</source>
          <target state="translated">Validez la transaction dans un deuxième thread.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Select the product again.</source>
          <target state="translated">Sélectionnez le produit à nouveau.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in first thread.</source>
          <target state="translated">Validez la transaction dans le premier thread.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the two Select operations will get the different results.</source>
          <target state="translated">Si la transaction autorise le comportement, les deux opérations Select obtenez des résultats différents.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The ExchangeValuesThreads class demonstrates the difference between the Serializable and Snapshot transaction.</source>
          <target state="translated">La classe ExchangeValuesThreads illustre la différence entre les transactions Serializable et Snapshot.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>For the Serializable transaction, threads will operate in the following order:</source>
          <target state="translated">Pour la transaction sérialisable, les threads fonctionnera dans l’ordre suivant :</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, get the Price of product(ProductId=2) and store in the variable.</source>
          <target state="translated">Dans le premier thread, obtenir le prix de product(ProductId=2) et le magasin dans la variable.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</source>
          <target state="translated">Dans le premier thread, vous devez mettre à jour le prix de product(ProductId=1) avec le prix de product(ProductId=2).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in first thread.</source>
          <target state="translated">Validez la transaction dans le premier thread.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In second thread, get the Price of product(ProductId=1) and store in the variable.</source>
          <target state="translated">Dans le deuxième thread, obtenir le prix de product(ProductId=1) et le magasin dans la variable.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</source>
          <target state="translated">Dans le deuxième thread, vous devez mettre à jour le prix de product(ProductId=2) avec le prix de product(ProductId=1).</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in second thread.</source>
          <target state="translated">Validez la transaction dans un deuxième thread.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Now the values of the Price(ProductId=1 and ProductId=2) are as same as the original Price of Product(ProductId=2).</source>
          <target state="translated">Désormais, les valeurs du prix (ProductId = 1 et ProductId = 2) est la même que celle du prix de Product(ProductId=2) d’origine.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>For the Snapshot transaction, threads will operate in the following order:</source>
          <target state="translated">Pour la transaction d’instantané, les threads fonctionnera dans l’ordre suivant :</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, get the Price of product(ProductId=2) and store in the variable;</source>
          <target state="translated">Dans le premier thread, obtenir le prix de product(ProductId=2) et le magasin dans la variable ;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</source>
          <target state="translated">Dans le premier thread, vous devez mettre à jour le prix de product(ProductId=1) avec le prix de product(ProductId=2).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In second thread, get the Price of product(ProductId=1) from the snapshot and store in the variable.</source>
          <target state="translated">Dans le deuxième thread, obtenir le prix de product(ProductId=1) à partir de l’instantané et les stocker dans la variable.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</source>
          <target state="translated">Dans le deuxième thread, vous devez mettre à jour le prix de product(ProductId=2) avec le prix de product(ProductId=1).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in second thread.</source>
          <target state="translated">Validez la transaction dans un deuxième thread.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in first thread.</source>
          <target state="translated">Validez la transaction dans le premier thread.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Now exchange the Price of products(ProductId=1 and ProductId=2).</source>
          <target state="translated">Maintenant échanger le prix des produits (ProductId = 1 et ProductId = 2).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>The DirtyReadThreads class demonstrates if the specific transaction allows the Dirty Read behavior.</source>
          <target state="translated">La classe DirtyReadThreads montre si la transaction spécifique permet le comportement de la lecture de données modifiées.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the threads will operate in the following order:</source>
          <target state="translated">Si la transaction autorise le comportement, les threads fonctionnera dans l’ordre suivant :</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In first thread, begin a transaction and add the Quantity value(ProductId=1).</source>
          <target state="translated">Dans le premier thread, commencer une transaction et ajouter la value(ProductId=1) quantité.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>In the second thread, read the Quantity value and add the value again.</source>
          <target state="translated">Dans le deuxième thread, lire la valeur de la quantité et ajoutez de nouveau la valeur.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Commit the transaction in second thread.</source>
          <target state="translated">Validez la transaction dans un deuxième thread.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>Roll back the transaction in first thread.</source>
          <target state="translated">Restaurer la transaction dans le premier thread.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>If the transaction allows the behavior, the Quantity value will be added twice.</source>
          <target state="translated">Si la transaction autorise le comportement, la valeur de quantité sera ajoutée à deux reprises.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IsolationLevel">
          <source>C# and Visual Basic projects with this code sample can be found on <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](http://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&amp;f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&amp;f%5B0%5D.Type=SearchText&amp;ac=4)</ept>.</source>
          <target state="translated">Les projets c# et Visual Basic avec cet exemple de code se trouvent sur <bpt id="p1">[</bpt>exemples de Code pour développeurs<ept id="p1">](http://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&amp;f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&amp;f%5B0%5D.Type=SearchText&amp;ac=4)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.Chaos">
          <source>The pending changes from more highly isolated transactions cannot be overwritten.</source>
          <target state="translated">Les modifications en attente, provenant des transactions les plus isolées, ne peuvent pas être remplacées.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.ReadCommitted">
          <source>Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.</source>
          <target state="translated">Les verrous partagés sont conservés pendant la lecture des données afin d'éviter tout défaut de lecture, mais les données peuvent être modifiées avant la fin de la transaction, entraînant ainsi des données fantômes ou des lectures qui ne peuvent pas être répétées.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.ReadUncommitted">
          <source>A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.</source>
          <target state="translated">Un défaut de lecture est possible, ce qui signifie qu'aucun verrou partagé n'est émis et qu'aucun verrou exclusif n'est respecté.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.RepeatableRead">
          <source>Locks are placed on all data that is used in a query, preventing other users from updating the data.</source>
          <target state="translated">Des verrous sont placés sur toutes les données utilisées dans une requête afin d’empêcher d’autres utilisateurs de mettre à jour les données.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.RepeatableRead">
          <source>Prevents non-repeatable reads but phantom rows are still possible.</source>
          <target state="translated">Empêche les lectures qui ne peuvent pas être répétées, mais des lignes fantômes peuvent toujours exister.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.Serializable">
          <source>A range lock is placed on the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, preventing other users from updating or inserting rows into the dataset until the transaction is complete.</source>
          <target state="translated">Un verrou de plage est placé sur <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> afin d'empêcher les autres utilisateurs de mettre à jour ou de modifier les lignes du groupe de données avant la fin de la transaction.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.Snapshot">
          <source>Reduces blocking by storing a version of data that one application can read while another is modifying the same data.</source>
          <target state="translated">Réduit le blocage en stockant une version des données qu'une application pourra lire pendant qu'une autre les modifiera.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.Snapshot">
          <source>Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.</source>
          <target state="translated">Indique qu'il n'est pas possible de voir les modifications apportées dans une transaction à partir d'une autre transaction, même si vous réexécutez la requête.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="F:System.Data.IsolationLevel.Unspecified">
          <source>A different isolation level than the one specified is being used, but the level cannot be determined.</source>
          <target state="translated">Un niveau d'isolement différent de celui spécifié est utilisé actuellement, mais il est impossible de le déterminer.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.IsolationLevel.Unspecified">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcTransaction&gt;</ph>, if you do not set <ph id="ph2">&lt;xref:System.Data.IsolationLevel&gt;</ph> or you set <ph id="ph3">&lt;xref:System.Data.IsolationLevel&gt;</ph> to <ph id="ph4">`Unspecified`</ph>, the transaction executes according to the isolation level that is determined by the driver that is being used.</source>
          <target state="translated">Lorsque vous utilisez <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcTransaction&gt;</ph>, si vous ne définissez pas <ph id="ph2">&lt;xref:System.Data.IsolationLevel&gt;</ph> ou configurer <ph id="ph3">&lt;xref:System.Data.IsolationLevel&gt;</ph> à <ph id="ph4">`Unspecified`</ph>, la transaction s’exécute selon le niveau d’isolement est déterminé par le pilote est utilisé.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>