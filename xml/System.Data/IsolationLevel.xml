<Type Name="IsolationLevel" FullName="System.Data.IsolationLevel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3927e5f538dc55d18189c8b487fc273c69d4094d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39981995" /></Metadata><TypeSignature Language="C#" Value="public enum IsolationLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IsolationLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.IsolationLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum IsolationLevel" />
  <TypeSignature Language="C++ CLI" Value="public enum class IsolationLevel" />
  <TypeSignature Language="F#" Value="type IsolationLevel = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="34260-101">Spécifie le comportement de verrouillage des transactions pour la connexion.</span><span class="sxs-lookup"><span data-stu-id="34260-101">Specifies the transaction locking behavior for the connection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34260-102">Le <xref:System.Data.IsolationLevel> valeurs sont utilisées par un fournisseur de données .NET Framework lors de l’exécution d’une transaction.</span><span class="sxs-lookup"><span data-stu-id="34260-102">The <xref:System.Data.IsolationLevel> values are used by a .NET Framework data provider when performing a transaction.</span></span>  
  
 <span data-ttu-id="34260-103">Le <xref:System.Data.IsolationLevel> restera en vigueur jusqu'à ce qu’explicitement modifiée, mais il peut être modifié à tout moment.</span><span class="sxs-lookup"><span data-stu-id="34260-103">The <xref:System.Data.IsolationLevel> remains in effect until explicitly changed, but it can be changed at any time.</span></span> <span data-ttu-id="34260-104">La nouvelle valeur est utilisée au moment de l’exécution, pas les temps d’analyse.</span><span class="sxs-lookup"><span data-stu-id="34260-104">The new value is used at execution time, not parse time.</span></span> <span data-ttu-id="34260-105">Dans ce cas lors d’une transaction, le comportement attendu du serveur consiste à appliquer le nouveau niveau de verrouillage pour toutes les instructions restantes.</span><span class="sxs-lookup"><span data-stu-id="34260-105">If changed during a transaction, the expected behavior of the server is to apply the new locking level to all statements remaining.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34260-106">Cette application montre comment utiliser <xref:System.Data.IsolationLevel> dans <xref:System.Data.Common.DbTransaction>.</span><span class="sxs-lookup"><span data-stu-id="34260-106">This application demonstrates how to use <xref:System.Data.IsolationLevel> in <xref:System.Data.Common.DbTransaction>.</span></span> <span data-ttu-id="34260-107">L’exemple va vous montrer parmi les comportements suivants sont autorisés dans les différents niveaux d’isolation :</span><span class="sxs-lookup"><span data-stu-id="34260-107">The sample will demonstrate which of the following behaviors are allowed in the different isolation levels:</span></span>  
  
-   <span data-ttu-id="34260-108">Lectures erronées.</span><span class="sxs-lookup"><span data-stu-id="34260-108">Dirty reads.</span></span>  
  
-   <span data-ttu-id="34260-109">Lectures non reproductibles.</span><span class="sxs-lookup"><span data-stu-id="34260-109">Non-repeatable reads.</span></span>  
  
-   <span data-ttu-id="34260-110">Fantômes.</span><span class="sxs-lookup"><span data-stu-id="34260-110">Phantoms.</span></span>  
  
 <span data-ttu-id="34260-111">Cette application s’exécute dans les niveaux d’isolation suivants :</span><span class="sxs-lookup"><span data-stu-id="34260-111">This application will execute in the following isolation levels:</span></span>  
  
-   <span data-ttu-id="34260-112">ReadUncommitted</span><span class="sxs-lookup"><span data-stu-id="34260-112">ReadUncommitted</span></span>  
  
-   <span data-ttu-id="34260-113">ReadCommitted</span><span class="sxs-lookup"><span data-stu-id="34260-113">ReadCommitted</span></span>  
  
-   <span data-ttu-id="34260-114">RepeatableRead</span><span class="sxs-lookup"><span data-stu-id="34260-114">RepeatableRead</span></span>  
  
-   <span data-ttu-id="34260-115">Sérialisable</span><span class="sxs-lookup"><span data-stu-id="34260-115">Serializable</span></span>  
  
-   <span data-ttu-id="34260-116">Instantané</span><span class="sxs-lookup"><span data-stu-id="34260-116">Snapshot</span></span>  
  
 <span data-ttu-id="34260-117">La classe PhantomReadThreads montre si la transaction spécifique permet le comportement en lecture fantôme.</span><span class="sxs-lookup"><span data-stu-id="34260-117">The PhantomReadThreads class demonstrates if the specific transaction allows the Phantom Read behavior.</span></span> <span data-ttu-id="34260-118">Si la transaction autorise le comportement, les threads fonctionnera dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="34260-118">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="34260-119">Dans le premier thread, sélectionnez le products(All).</span><span class="sxs-lookup"><span data-stu-id="34260-119">In first thread, select the products(All).</span></span>  
  
-   <span data-ttu-id="34260-120">Dans le deuxième thread, insérez un nouveau produit.</span><span class="sxs-lookup"><span data-stu-id="34260-120">In the second thread, insert a new product.</span></span>  
  
-   <span data-ttu-id="34260-121">Valider la transaction dans le deuxième thread.</span><span class="sxs-lookup"><span data-stu-id="34260-121">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="34260-122">Sélectionnez les produits à nouveau.</span><span class="sxs-lookup"><span data-stu-id="34260-122">Select the products again.</span></span>  
  
-   <span data-ttu-id="34260-123">Valider la transaction dans le premier thread.</span><span class="sxs-lookup"><span data-stu-id="34260-123">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="34260-124">Si la transaction autorise le comportement, les deux opérations Select obtiendra des résultats différents.</span><span class="sxs-lookup"><span data-stu-id="34260-124">If the transaction allows the behavior, the two Select operations will get the different results.</span></span>  
  
 <span data-ttu-id="34260-125">La classe NonrepeatableReadThreads montre si la transaction spécifique autorise le comportement de lecture non renouvelable.</span><span class="sxs-lookup"><span data-stu-id="34260-125">The NonrepeatableReadThreads class demonstrates if the specific transaction allows the Nonrepeatable Read behavior.</span></span> <span data-ttu-id="34260-126">Si la transaction autorise le comportement, les threads fonctionnera dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="34260-126">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="34260-127">Dans le premier thread, sélectionnez le product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="34260-127">In first thread, select the product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="34260-128">Dans le deuxième thread, mettre à jour la quantité value(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="34260-128">In the second thread, update the Quantity value(ProductId=1).</span></span>  
  
-   <span data-ttu-id="34260-129">Valider la transaction dans le deuxième thread.</span><span class="sxs-lookup"><span data-stu-id="34260-129">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="34260-130">Sélectionnez le produit à nouveau.</span><span class="sxs-lookup"><span data-stu-id="34260-130">Select the product again.</span></span>  
  
-   <span data-ttu-id="34260-131">Valider la transaction dans le premier thread.</span><span class="sxs-lookup"><span data-stu-id="34260-131">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="34260-132">Si la transaction autorise le comportement, les deux opérations Select obtiendra des résultats différents.</span><span class="sxs-lookup"><span data-stu-id="34260-132">If the transaction allows the behavior, the two Select operations will get the different results.</span></span>  
  
 <span data-ttu-id="34260-133">La classe ExchangeValuesThreads illustre la différence entre les transactions Serializable et Snapshot.</span><span class="sxs-lookup"><span data-stu-id="34260-133">The ExchangeValuesThreads class demonstrates the difference between the Serializable and Snapshot transaction.</span></span> <span data-ttu-id="34260-134">Pour la transaction sérialisable, les threads fonctionnera dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="34260-134">For the Serializable transaction, threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="34260-135">Dans le premier thread, obtenir le prix de product(ProductId=2) et store dans la variable.</span><span class="sxs-lookup"><span data-stu-id="34260-135">In first thread, get the Price of product(ProductId=2) and store in the variable.</span></span>  
  
-   <span data-ttu-id="34260-136">Dans le premier thread, vous devez mettre à jour le prix de product(ProductId=1) avec le prix de product(ProductId=2).</span><span class="sxs-lookup"><span data-stu-id="34260-136">In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</span></span>  
  
-   <span data-ttu-id="34260-137">Valider la transaction dans le premier thread.</span><span class="sxs-lookup"><span data-stu-id="34260-137">Commit the transaction in first thread.</span></span>  
  
-   <span data-ttu-id="34260-138">Dans le deuxième thread, obtenir le prix de product(ProductId=1) et store dans la variable.</span><span class="sxs-lookup"><span data-stu-id="34260-138">In second thread, get the Price of product(ProductId=1) and store in the variable.</span></span>  
  
-   <span data-ttu-id="34260-139">Dans le deuxième thread, vous devez mettre à jour le prix de product(ProductId=2) avec le prix de product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="34260-139">In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="34260-140">Valider la transaction dans le deuxième thread.</span><span class="sxs-lookup"><span data-stu-id="34260-140">Commit the transaction in second thread.</span></span>  
  
 <span data-ttu-id="34260-141">Désormais les valeurs du prix (ProductId = 1 et ProductId = 2) sont de même que celle du prix de Product(ProductId=2) d’origine.</span><span class="sxs-lookup"><span data-stu-id="34260-141">Now the values of the Price(ProductId=1 and ProductId=2) are as same as the original Price of Product(ProductId=2).</span></span>  
  
 <span data-ttu-id="34260-142">Pour la transaction d’instantané, les threads fonctionnera dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="34260-142">For the Snapshot transaction, threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="34260-143">Dans le premier thread, obtenir le prix de product(ProductId=2) et store dans la variable ;</span><span class="sxs-lookup"><span data-stu-id="34260-143">In first thread, get the Price of product(ProductId=2) and store in the variable;</span></span>  
  
-   <span data-ttu-id="34260-144">Dans le premier thread, vous devez mettre à jour le prix de product(ProductId=1) avec le prix de product(ProductId=2).</span><span class="sxs-lookup"><span data-stu-id="34260-144">In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</span></span>  
  
-   <span data-ttu-id="34260-145">Dans le deuxième thread, obtenir le prix de product(ProductId=1) à partir de l’instantané et les stocker dans la variable.</span><span class="sxs-lookup"><span data-stu-id="34260-145">In second thread, get the Price of product(ProductId=1) from the snapshot and store in the variable.</span></span>  
  
-   <span data-ttu-id="34260-146">Dans le deuxième thread, vous devez mettre à jour le prix de product(ProductId=2) avec le prix de product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="34260-146">In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="34260-147">Valider la transaction dans le deuxième thread.</span><span class="sxs-lookup"><span data-stu-id="34260-147">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="34260-148">Valider la transaction dans le premier thread.</span><span class="sxs-lookup"><span data-stu-id="34260-148">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="34260-149">Désormais échanger le prix des produits (ProductId = 1 et ProductId = 2).</span><span class="sxs-lookup"><span data-stu-id="34260-149">Now exchange the Price of products(ProductId=1 and ProductId=2).</span></span>  
  
 <span data-ttu-id="34260-150">La classe DirtyReadThreads montre si la transaction spécifique autorise le comportement de lecture erronée.</span><span class="sxs-lookup"><span data-stu-id="34260-150">The DirtyReadThreads class demonstrates if the specific transaction allows the Dirty Read behavior.</span></span> <span data-ttu-id="34260-151">Si la transaction autorise le comportement, les threads fonctionnera dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="34260-151">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="34260-152">Dans le premier thread, commencer une transaction et ajoutez le value(ProductId=1) quantité.</span><span class="sxs-lookup"><span data-stu-id="34260-152">In first thread, begin a transaction and add the Quantity value(ProductId=1).</span></span>  
  
-   <span data-ttu-id="34260-153">Dans le deuxième thread, lire la valeur de quantité et ajoutez de nouveau la valeur.</span><span class="sxs-lookup"><span data-stu-id="34260-153">In the second thread, read the Quantity value and add the value again.</span></span>  
  
-   <span data-ttu-id="34260-154">Valider la transaction dans le deuxième thread.</span><span class="sxs-lookup"><span data-stu-id="34260-154">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="34260-155">Restaurer la transaction dans le premier thread.</span><span class="sxs-lookup"><span data-stu-id="34260-155">Roll back the transaction in first thread.</span></span>  
  
 <span data-ttu-id="34260-156">Si la transaction autorise le comportement, la valeur de quantité sera ajoutée à deux reprises.</span><span class="sxs-lookup"><span data-stu-id="34260-156">If the transaction allows the behavior, the Quantity value will be added twice.</span></span>  
  
 <span data-ttu-id="34260-157">Vous trouverez des projets c# et Visual Basic avec cet exemple de code sur [exemples de Code développeur](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4).</span><span class="sxs-lookup"><span data-stu-id="34260-157">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4).</span></span>  
  
 [!code-csharp[system_data_IsolationLevel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/system_data_isolationlevel/cs/source.cs#1)]
 [!code-vb[system_data_IsolationLevel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/system_data_isolationlevel/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Chaos">
      <MemberSignature Language="C#" Value="Chaos" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Chaos = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Chaos" />
      <MemberSignature Language="VB.NET" Value="Chaos" />
      <MemberSignature Language="C++ CLI" Value="Chaos" />
      <MemberSignature Language="F#" Value="Chaos = 16" Usage="System.Data.IsolationLevel.Chaos" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="34260-158">Les modifications en attente, provenant des transactions les plus isolées, ne peuvent pas être remplacées.</span><span class="sxs-lookup"><span data-stu-id="34260-158">The pending changes from more highly isolated transactions cannot be overwritten.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReadCommitted">
      <MemberSignature Language="C#" Value="ReadCommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadCommitted = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadCommitted" />
      <MemberSignature Language="VB.NET" Value="ReadCommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadCommitted" />
      <MemberSignature Language="F#" Value="ReadCommitted = 4096" Usage="System.Data.IsolationLevel.ReadCommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="34260-159">Les verrous partagés sont conservés pendant la lecture des données afin d'éviter tout défaut de lecture, mais les données peuvent être modifiées avant la fin de la transaction, entraînant ainsi des données fantômes ou des lectures qui ne peuvent pas être répétées.</span><span class="sxs-lookup"><span data-stu-id="34260-159">Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReadUncommitted">
      <MemberSignature Language="C#" Value="ReadUncommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadUncommitted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadUncommitted" />
      <MemberSignature Language="VB.NET" Value="ReadUncommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadUncommitted" />
      <MemberSignature Language="F#" Value="ReadUncommitted = 256" Usage="System.Data.IsolationLevel.ReadUncommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="34260-160">Un défaut de lecture est possible, ce qui signifie qu'aucun verrou partagé n'est émis et qu'aucun verrou exclusif n'est respecté.</span><span class="sxs-lookup"><span data-stu-id="34260-160">A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="RepeatableRead">
      <MemberSignature Language="C#" Value="RepeatableRead" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel RepeatableRead = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.RepeatableRead" />
      <MemberSignature Language="VB.NET" Value="RepeatableRead" />
      <MemberSignature Language="C++ CLI" Value="RepeatableRead" />
      <MemberSignature Language="F#" Value="RepeatableRead = 65536" Usage="System.Data.IsolationLevel.RepeatableRead" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="34260-161">Des verrous sont placés sur toutes les données utilisées dans une requête afin d’empêcher d’autres utilisateurs de mettre à jour les données.</span><span class="sxs-lookup"><span data-stu-id="34260-161">Locks are placed on all data that is used in a query, preventing other users from updating the data.</span></span> <span data-ttu-id="34260-162">Empêche les lectures qui ne peuvent pas être répétées, mais des lignes fantômes peuvent toujours exister.</span><span class="sxs-lookup"><span data-stu-id="34260-162">Prevents non-repeatable reads but phantom rows are still possible.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="Serializable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Serializable = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Serializable" />
      <MemberSignature Language="VB.NET" Value="Serializable" />
      <MemberSignature Language="C++ CLI" Value="Serializable" />
      <MemberSignature Language="F#" Value="Serializable = 1048576" Usage="System.Data.IsolationLevel.Serializable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary><span data-ttu-id="34260-163">Un verrou de plage est placé sur <see cref="T:System.Data.DataSet" /> afin d'empêcher les autres utilisateurs de mettre à jour ou de modifier les lignes du groupe de données avant la fin de la transaction.</span><span class="sxs-lookup"><span data-stu-id="34260-163">A range lock is placed on the <see cref="T:System.Data.DataSet" />, preventing other users from updating or inserting rows into the dataset until the transaction is complete.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="Snapshot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Snapshot = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Snapshot" />
      <MemberSignature Language="VB.NET" Value="Snapshot" />
      <MemberSignature Language="C++ CLI" Value="Snapshot" />
      <MemberSignature Language="F#" Value="Snapshot = 16777216" Usage="System.Data.IsolationLevel.Snapshot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary><span data-ttu-id="34260-164">Réduit le blocage en stockant une version des données qu'une application pourra lire pendant qu'une autre les modifiera.</span><span class="sxs-lookup"><span data-stu-id="34260-164">Reduces blocking by storing a version of data that one application can read while another is modifying the same data.</span></span> <span data-ttu-id="34260-165">Indique qu'il n'est pas possible de voir les modifications apportées dans une transaction à partir d'une autre transaction, même si vous réexécutez la requête.</span><span class="sxs-lookup"><span data-stu-id="34260-165">Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unspecified">
      <MemberSignature Language="C#" Value="Unspecified" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Unspecified = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Unspecified" />
      <MemberSignature Language="VB.NET" Value="Unspecified" />
      <MemberSignature Language="C++ CLI" Value="Unspecified" />
      <MemberSignature Language="F#" Value="Unspecified = -1" Usage="System.Data.IsolationLevel.Unspecified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="34260-166">Un niveau d'isolement différent de celui spécifié est utilisé actuellement, mais il est impossible de le déterminer.</span><span class="sxs-lookup"><span data-stu-id="34260-166">A different isolation level than the one specified is being used, but the level cannot be determined.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34260-167">Lorsque vous utilisez <xref:System.Data.Odbc.OdbcTransaction>, si vous ne définissez pas <xref:System.Data.IsolationLevel> ou vous définir <xref:System.Data.IsolationLevel> à `Unspecified`, la transaction s’exécute en fonction du niveau d’isolement qui est déterminé par le pilote est utilisé.</span><span class="sxs-lookup"><span data-stu-id="34260-167">When using <xref:System.Data.Odbc.OdbcTransaction>, if you do not set <xref:System.Data.IsolationLevel> or you set <xref:System.Data.IsolationLevel> to `Unspecified`, the transaction executes according to the isolation level that is determined by the driver that is being used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>