<Type Name="IDataAdapter" FullName="System.Data.IDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ccfe5816dad413d7b60fcc102b5215bd09c9535b" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51903162" /></Metadata><TypeSignature Language="C#" Value="public interface IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDataAdapter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="626ff-101">Permet à un objet d'implémenter DataAdapter et représente un jeu de méthodes ainsi que de propriétés liées au mappage servant à remplir et à mettre à jour <see cref="T:System.Data.DataSet" /> ainsi qu'à mettre à jour une source de données.</span><span class="sxs-lookup"><span data-stu-id="626ff-101">Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a <see cref="T:System.Data.DataSet" /> and update a data source.</span></span>  
  
 <span data-ttu-id="626ff-102">Les instances <see cref="T:System.Data.IDbDataAdapter" /> sont destinées aux sources de données qui sont (ou ressemblent à) des bases de données relationnelles avec des commandes textuelles (comme Transact-SQL) alors que les instances <see cref="T:System.Data.IDataAdapter" /> peuvent utiliser n’importe quel type de source de données.</span><span class="sxs-lookup"><span data-stu-id="626ff-102"><see cref="T:System.Data.IDbDataAdapter" /> instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while <see cref="T:System.Data.IDataAdapter" /> instances could can use any type of data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ff-103">Le <xref:System.Data.IDataAdapter> interface permet à une classe qui hérite d’implémenter une classe DataAdapter, qui représente le pont entre une source de données et un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="626ff-103">The <xref:System.Data.IDataAdapter> interface allows an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="626ff-104">Pour plus d’informations sur les classes DataAdapter, consultez [remplissage d’un DataSet à partir d’un DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span><span class="sxs-lookup"><span data-stu-id="626ff-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span>  
  
 <span data-ttu-id="626ff-105">Une application ne crée pas une instance de la <xref:System.Data.IDataAdapter> interface directement, mais implémente une instance d’une classe qui hérite de <xref:System.Data.IDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="626ff-105">An application does not create an instance of the <xref:System.Data.IDataAdapter> interface directly, but implements an instance of a class that inherits <xref:System.Data.IDataAdapter>.</span></span>  
  
 <span data-ttu-id="626ff-106">Les classes qui héritent <xref:System.Data.IDataAdapter> doit implémenter les membres hérités et elles définissent généralement des membres supplémentaires pour ajouter des fonctionnalités spécifiques au fournisseur.</span><span class="sxs-lookup"><span data-stu-id="626ff-106">Classes that inherit <xref:System.Data.IDataAdapter> must implement the inherited members, and they typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="626ff-107">Par exemple, le <xref:System.Data.IDataAdapter> interface définit un <xref:System.Data.IDataAdapter.Fill%2A> méthode qui prend un <xref:System.Data.DataSet> en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="626ff-107">For example, the <xref:System.Data.IDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataSet> as a parameter.</span></span> <span data-ttu-id="626ff-108">À son tour, le <xref:System.Data.OleDb.OleDbDataAdapter> classe hérite le <xref:System.Data.Common.DbDataAdapter.Fill%2A> (méthode) et définit également deux surcharges supplémentaires de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> méthode qui prend un objet de jeu d’enregistrements ADO en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="626ff-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="626ff-109">L’exemple suivant utilise les classes dérivées, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, et <xref:System.Data.SqlClient.SqlConnection>, pour sélectionner des enregistrements à partir d’une base de données.</span><span class="sxs-lookup"><span data-stu-id="626ff-109">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, and <xref:System.Data.SqlClient.SqlConnection>, to select records from a database.</span></span> <span data-ttu-id="626ff-110">La pleine <xref:System.Data.DataSet> est alors retournée.</span><span class="sxs-lookup"><span data-stu-id="626ff-110">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="626ff-111">Pour ce faire, est passé à la méthode initialisé <xref:System.Data.DataSet>, une chaîne de connexion et une chaîne de requête qui est une instruction Transact-SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="626ff-111">To do this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="626ff-112">Pour promouvoir la cohérence entre les fournisseurs de données .NET Framework, nommez la classe qui hérite sous la forme <paramref name="Prv" /> DataAdapter où <paramref name="Prv" /> est le préfixe uniforme affecté à toutes les classes dans un espace de noms de fournisseur de données .NET Framework spécifique.</span><span class="sxs-lookup"><span data-stu-id="626ff-112">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="626ff-113">Par exemple, <paramref name="Sql" /> est le préfixe de le <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> classe dans le <see langword="System.Data.SqlClient" /> espace de noms.</span><span class="sxs-lookup"><span data-stu-id="626ff-113">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
<span data-ttu-id="626ff-114">Lorsque vous héritez de la <see cref="T:System.Data.IDataAdapter" /> interface, vous devez implémenter les constructeurs suivants :</span><span class="sxs-lookup"><span data-stu-id="626ff-114">When you inherit from the <see cref="T:System.Data.IDataAdapter" /> interface, you should implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="626ff-115">Élément</span><span class="sxs-lookup"><span data-stu-id="626ff-115">Item</span></span> 
 </term><description> <span data-ttu-id="626ff-116">Description </span><span class="sxs-lookup"><span data-stu-id="626ff-116">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="626ff-117">PrvDataAdapter()</span><span class="sxs-lookup"><span data-stu-id="626ff-117">PrvDataAdapter()</span></span> 
 </term><description> <span data-ttu-id="626ff-118">Initialise une nouvelle instance de la classe PrvDataAdapter.</span><span class="sxs-lookup"><span data-stu-id="626ff-118">Initializes a new instance of the PrvDataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="626ff-119">PrvDataAdapter (PrvCommand selectCommand)</span><span class="sxs-lookup"><span data-stu-id="626ff-119">PrvDataAdapter(PrvCommand selectCommand)</span></span> 
 </term><description> <span data-ttu-id="626ff-120">Initialise une nouvelle instance de la classe PrvDataAdapter à l’aide de l’instruction SQL SELECT spécifiée.</span><span class="sxs-lookup"><span data-stu-id="626ff-120">Initializes a new instance of the PrvDataAdapter class by using the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="626ff-121">PrvDataAdapter (selectCommandText de chaîne, chaîne selectConnectionString)</span><span class="sxs-lookup"><span data-stu-id="626ff-121">PrvDataAdapter(string selectCommandText, string selectConnectionString)</span></span> 
 </term><description> <span data-ttu-id="626ff-122">Initialise une nouvelle instance de la classe PrvDataAdapter en utilisant une instruction SQL SELECT et une chaîne de connexion.</span><span class="sxs-lookup"><span data-stu-id="626ff-122">Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="626ff-123">PrvDataAdapter (chaîne selectCommandText, PrvConnection selectConnection)</span><span class="sxs-lookup"><span data-stu-id="626ff-123">PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</span></span> 
 </term><description> <span data-ttu-id="626ff-124">Initialise une nouvelle instance de la classe PrvDataAdapter en utilisant une instruction SQL SELECT et un objet PrvConnection.</span><span class="sxs-lookup"><span data-stu-id="626ff-124">Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a PrvConnection object.</span></span>  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="abstract member Fill : System.Data.DataSet -&gt; int" Usage="iDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="626ff-125"><see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</span><span class="sxs-lookup"><span data-stu-id="626ff-125">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="626ff-126">Ajoute ou met à jour les lignes de <see cref="T:System.Data.DataSet" /> pour correspondre à celles de la source de données à l'aide du nom <see cref="T:System.Data.DataSet" /> et crée un <see cref="T:System.Data.DataTable" /> appelé "Table".</span><span class="sxs-lookup"><span data-stu-id="626ff-126">Adds or updates rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates a <see cref="T:System.Data.DataTable" /> named "Table".</span></span></summary>
        <returns><span data-ttu-id="626ff-127">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="626ff-127">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="626ff-128">Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</span><span class="sxs-lookup"><span data-stu-id="626ff-128">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ff-129"><xref:System.Data.IDataAdapter.Fill%2A> Récupère les lignes à partir de la source de données à l’aide de l’instruction SELECT spécifiée par associé à un <xref:System.Data.IDbDataAdapter.SelectCommand%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="626ff-129"><xref:System.Data.IDataAdapter.Fill%2A> retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="626ff-130">L’objet de connexion associé à l’instruction SELECT doit être valide, mais il ne doit-elle pas être ouverts.</span><span class="sxs-lookup"><span data-stu-id="626ff-130">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="626ff-131">Si la connexion est fermée avant <xref:System.Data.IDataAdapter.Fill%2A> est appelée, elle est ouverte pour récupérer les données, puis fermé.</span><span class="sxs-lookup"><span data-stu-id="626ff-131">If the connection is closed before <xref:System.Data.IDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="626ff-132">Si la connexion est ouverte avant <xref:System.Data.IDataAdapter.Fill%2A> est appelée, elle reste ouverte.</span><span class="sxs-lookup"><span data-stu-id="626ff-132">If the connection is open before <xref:System.Data.IDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="626ff-133">Le <xref:System.Data.IDataAdapter.Fill%2A> opération ajoute ensuite les lignes vers la destination <xref:System.Data.DataTable> des objets dans le <xref:System.Data.DataSet>, en créant le <xref:System.Data.DataTable> objets si elles n’existent pas déjà.</span><span class="sxs-lookup"><span data-stu-id="626ff-133">The <xref:System.Data.IDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="626ff-134">Lors de la création <xref:System.Data.DataTable> objets, le <xref:System.Data.IDataAdapter.Fill%2A> opération crée généralement que des métadonnées de nom de colonne.</span><span class="sxs-lookup"><span data-stu-id="626ff-134">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.IDataAdapter.Fill%2A> operation usually creates only column name metadata.</span></span> <span data-ttu-id="626ff-135">Toutefois, si le <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> propriété est définie sur `AddWithKey`, clés primaires appropriés et les contraintes sont également créés.</span><span class="sxs-lookup"><span data-stu-id="626ff-135">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="626ff-136">Si `SelectCommand` retourne les résultats d'une jointure externe, le `DataAdapter` ne définit pas de valeur <xref:System.Data.DataTable.PrimaryKey%2A> pour le <xref:System.Data.DataTable>obtenu.</span><span class="sxs-lookup"><span data-stu-id="626ff-136">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="626ff-137">Vous devez définir explicitement la clé primaire pour garantir une résolution correcte des lignes en double.</span><span class="sxs-lookup"><span data-stu-id="626ff-137">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="626ff-138">Pour plus d’informations, consultez [définition des clés primaires](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="626ff-138">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="626ff-139">Si le <xref:System.Data.IDataAdapter> rencontre des colonnes dupliquées lors du remplissage d’un <xref:System.Data.DataTable>, il génère des noms pour les colonnes successives, à l’aide du modèle « columnname1 », « columnname2 », « columnname3 » et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="626ff-139">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="626ff-140">Si les données entrantes contiennent des colonnes sans nom, ils sont placés le <xref:System.Data.DataSet> selon le modèle « Column1 », « Column2 » et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="626ff-140">If the incoming data contains unnamed columns, they are put in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="626ff-141">Lorsque plusieurs jeux de résultats est ajoutés à la <xref:System.Data.DataSet>, chaque jeu de résultats est placé dans une table distincte.</span><span class="sxs-lookup"><span data-stu-id="626ff-141">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is put in a separate table.</span></span> <span data-ttu-id="626ff-142">Jeux de résultats supplémentaires sont nommés en ajoutant des valeurs intégrales au nom de table spécifié (par exemple, « Table », « Table1 », « Table2 » et ainsi de suite).</span><span class="sxs-lookup"><span data-stu-id="626ff-142">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="626ff-143">Applications soyez prudent lorsque vous utilisez des noms de colonne et de table afin d’éviter tout conflit avec ces modèles d’affectation de noms.</span><span class="sxs-lookup"><span data-stu-id="626ff-143">Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</span></span>  
  
 <span data-ttu-id="626ff-144">Lorsque l’instruction SELECT qui est utilisée pour remplir le <xref:System.Data.DataSet> retourne plusieurs résultats, par exemple une instruction SQL par lots, si un des résultats contient une erreur, tous les résultats successifs sont ignorés et pas ajoutés à la <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="626ff-144">When the SELECT statement that is used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, if one of the results contains an error, all successive results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="626ff-145">Vous pouvez utiliser la <xref:System.Data.IDataAdapter.Fill%2A> méthode plusieurs fois sur le même <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="626ff-145">You can use the <xref:System.Data.IDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="626ff-146">Si une clé primaire existe, les lignes entrantes sont fusionnées avec les lignes correspondantes qui existent déjà.</span><span class="sxs-lookup"><span data-stu-id="626ff-146">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="626ff-147">Si aucune clé primaire n’existe, les lignes entrantes sont ajoutées à la <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="626ff-147">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="626ff-148">Lors du traitement d’instructions SQL par lots qui retournent plusieurs résultats, l’implémentation de <xref:System.Data.IDataAdapter.Fill%2A> et <xref:System.Data.IDataAdapter.FillSchema%2A> de données .NET Framework fournisseur récupère les informations de schéma pour seulement le premier résultat.</span><span class="sxs-lookup"><span data-stu-id="626ff-148">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.IDataAdapter.Fill%2A> and <xref:System.Data.IDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="abstract member FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="iDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="626ff-149"><see cref="T:System.Data.DataSet" /> à remplir avec le schéma à partir de la source de données.</span><span class="sxs-lookup"><span data-stu-id="626ff-149">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="626ff-150">Une des valeurs de <see cref="T:System.Data.SchemaType" />.</span><span class="sxs-lookup"><span data-stu-id="626ff-150">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="626ff-151">Ajoute un <see cref="T:System.Data.DataTable" /> nommé « Table » au <see cref="T:System.Data.DataSet" /> spécifié et configure le schéma pour qu’il corresponde à celui de la source de données en fonction du <see cref="T:System.Data.SchemaType" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="626ff-151">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="626ff-152">Tableau d'objets <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</span><span class="sxs-lookup"><span data-stu-id="626ff-152">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ff-153">Le <xref:System.Data.IDataAdapter.FillSchema%2A> méthode récupère le schéma de la source de données en utilisant le <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="626ff-153">The <xref:System.Data.IDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="626ff-154">L’objet de connexion associé le <xref:System.Data.IDbDataAdapter.SelectCommand%2A> doit être valide, mais elle ne doit pas être ouvert.</span><span class="sxs-lookup"><span data-stu-id="626ff-154">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="626ff-155">Si la connexion est fermée avant <xref:System.Data.IDataAdapter.FillSchema%2A> est appelée, elle est ouverte pour récupérer les données, puis fermé.</span><span class="sxs-lookup"><span data-stu-id="626ff-155">If the connection is closed before <xref:System.Data.IDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="626ff-156">Si la connexion est ouverte avant <xref:System.Data.IDataAdapter.FillSchema%2A> est appelée, elle reste ouverte.</span><span class="sxs-lookup"><span data-stu-id="626ff-156">If the connection is open before <xref:System.Data.IDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="626ff-157">Un <xref:System.Data.IDataAdapter.FillSchema%2A> opération ajoute une <xref:System.Data.DataTable> vers la destination <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="626ff-157">A <xref:System.Data.IDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="626ff-158">Il ajoute ensuite les colonnes à la <xref:System.Data.DataColumnCollection> de la <xref:System.Data.DataTable> et configure les éléments suivants <xref:System.Data.DataColumn> propriétés si elles existent dans la source de données :</span><span class="sxs-lookup"><span data-stu-id="626ff-158">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable> and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="626ff-159"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="626ff-159"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="626ff-160">Vous devez définir <xref:System.Data.DataColumn.AutoIncrementStep%2A> et <xref:System.Data.DataColumn.AutoIncrementSeed%2A> séparément.</span><span class="sxs-lookup"><span data-stu-id="626ff-160">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="626ff-161"><xref:System.Data.IDataAdapter.FillSchema%2A> configure également le <xref:System.Data.DataTable.PrimaryKey%2A> et <xref:System.Data.DataTable.Constraints%2A> propriétés selon les règles suivantes :</span><span class="sxs-lookup"><span data-stu-id="626ff-161"><xref:System.Data.IDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="626ff-162">Si une ou plusieurs colonnes clés primaires sont retournées par la <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, elles sont utilisées comme colonnes de clé primaire pour la <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="626ff-162">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="626ff-163">Si aucune colonne clé primaire n’est retournés, mais sont des colonnes uniques, les colonnes uniques sont utilisées comme clé primaire si toutes les colonnes uniques sont non nullable.</span><span class="sxs-lookup"><span data-stu-id="626ff-163">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if all the unique columns are non-nullable.</span></span> <span data-ttu-id="626ff-164">Si une des colonnes est nullable, un <xref:System.Data.UniqueConstraint> est ajouté à la <xref:System.Data.ConstraintCollection>, mais le <xref:System.Data.DataTable.PrimaryKey%2A> propriété n’est pas définie.</span><span class="sxs-lookup"><span data-stu-id="626ff-164">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="626ff-165">Si les colonnes clés primaires et des colonnes uniques sont retournées, les colonnes clés primaires sont utilisés en tant que les colonnes clés primaires pour la <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="626ff-165">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="626ff-166">Notez que les clés primaires et des contraintes uniques sont ajoutés à la <xref:System.Data.ConstraintCollection> selon les règles précédentes, mais autre contrainte des types ne sont pas ajoutés.</span><span class="sxs-lookup"><span data-stu-id="626ff-166">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the previous rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="626ff-167">Si un unique clustered index est défini sur une ou plusieurs colonnes dans une table SQL Server et la contrainte de clé primaire est définie sur un ensemble distinct de colonnes, les noms des colonnes dans l’index cluster seront retourné.</span><span class="sxs-lookup"><span data-stu-id="626ff-167">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="626ff-168">Pour renvoyer l’ou les noms des colonnes de clé primaire, utilisez un indicateur de requête avec l’instruction SELECT qui spécifie le nom de l’index de clé primaire.</span><span class="sxs-lookup"><span data-stu-id="626ff-168">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="626ff-169">Pour plus d’informations sur la façon de spécifier des indicateurs de requête, consultez [l’indicateur de requête (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="626ff-169">For more information about how to specify query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="626ff-170">Si le <xref:System.Data.IDataAdapter> rencontre des colonnes dupliquées lors du remplissage d’un <xref:System.Data.DataTable>, il génère des noms pour les colonnes successives, à l’aide du modèle « columnname1 », « columnname2 », « columnname3 » et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="626ff-170">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="626ff-171">Si les données entrantes contiennent des colonnes sans nom, ils sont placés le <xref:System.Data.DataSet> selon le modèle « Column1 », « Column2 » et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="626ff-171">If the incoming data contains unnamed columns, they are put in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="626ff-172">Lorsque plusieurs jeux de résultats est ajoutés à la <xref:System.Data.DataSet>, chaque jeu de résultats est placé dans une table distincte.</span><span class="sxs-lookup"><span data-stu-id="626ff-172">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is put in a separate table.</span></span> <span data-ttu-id="626ff-173">Jeux de résultats supplémentaires sont nommés en ajoutant des valeurs intégrales au nom de table spécifié (par exemple, « Table », « Table1 », « Table2 » et ainsi de suite).</span><span class="sxs-lookup"><span data-stu-id="626ff-173">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="626ff-174">Applications soyez prudent lorsque vous utilisez des noms de colonne et de table afin d’éviter tout conflit avec ces modèles d’affectation de noms.</span><span class="sxs-lookup"><span data-stu-id="626ff-174">Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</span></span>  
  
 <span data-ttu-id="626ff-175"><xref:System.Data.IDataAdapter.FillSchema%2A> ne retourne aucune ligne.</span><span class="sxs-lookup"><span data-stu-id="626ff-175"><xref:System.Data.IDataAdapter.FillSchema%2A> returns no rows.</span></span> <span data-ttu-id="626ff-176">Utilisez le <xref:System.Data.IDataAdapter.Fill%2A> méthode pour ajouter des lignes à un <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="626ff-176">Use the <xref:System.Data.IDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="iDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="626ff-177">Obtient les paramètres définis par l'utilisateur lors de l'exécution d'une instruction SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="626ff-177">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="626ff-178">Tableau d'objets <see cref="T:System.Data.IDataParameter" /> qui contient les paramètres définis par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="626ff-178">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetParameters(String connectiongString) {  
           using (SqlConnection conn = new SqlConnection(connectiongString)) {  
              String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course] where [Year]=@Year and [Credit]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingMappingAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingMappingAction MissingMappingAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingMappingAction MissingMappingAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.MissingMappingAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingMappingAction As MissingMappingAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingMappingAction MissingMappingAction { System::Data::MissingMappingAction get(); void set(System::Data::MissingMappingAction value); };" />
      <MemberSignature Language="F#" Value="member this.MissingMappingAction : System.Data.MissingMappingAction with get, set" Usage="System.Data.IDataAdapter.MissingMappingAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.MissingMappingAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="626ff-179">Indique ou spécifie si les tables ou colonnes source non mappées sont passées avec leurs noms source afin d'être filtrées ou de déclencher une erreur.</span><span class="sxs-lookup"><span data-stu-id="626ff-179">Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.</span></span></summary>
        <value><span data-ttu-id="626ff-180">Une des valeurs de <see cref="T:System.Data.MissingMappingAction" />.</span><span class="sxs-lookup"><span data-stu-id="626ff-180">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</span></span> <span data-ttu-id="626ff-181">La valeur par défaut est <see langword="Passthrough" />.</span><span class="sxs-lookup"><span data-stu-id="626ff-181">The default is <see langword="Passthrough" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ff-182">Le <xref:System.Data.IDataAdapter.TableMappings%2A> propriété fournit le mappage principal entre les enregistrements retournés et <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="626ff-182">The <xref:System.Data.IDataAdapter.TableMappings%2A> property provides the master mapping between the returned records and the <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="626ff-183">La valeur définie ne fait pas partie des valeurs <see cref="T:System.Data.MissingMappingAction" />.</span><span class="sxs-lookup"><span data-stu-id="626ff-183">The value set is not one of the <see cref="T:System.Data.MissingMappingAction" /> values.</span></span></exception>
        <altmember cref="P:System.Data.IDataAdapter.MissingSchemaAction" />
      </Docs>
    </Member>
    <Member MemberName="MissingSchemaAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingSchemaAction MissingSchemaAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.MissingSchemaAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingSchemaAction As MissingSchemaAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingSchemaAction MissingSchemaAction { System::Data::MissingSchemaAction get(); void set(System::Data::MissingSchemaAction value); };" />
      <MemberSignature Language="F#" Value="member this.MissingSchemaAction : System.Data.MissingSchemaAction with get, set" Usage="System.Data.IDataAdapter.MissingSchemaAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.MissingSchemaAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="626ff-184">Indique ou spécifie si les tables et les colonnes source absentes, ainsi que leurs relations, sont ajoutées au schéma du groupe de données, sont ignorées ou déclenchent une erreur.</span><span class="sxs-lookup"><span data-stu-id="626ff-184">Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.</span></span></summary>
        <value><span data-ttu-id="626ff-185">Une des valeurs de <see cref="T:System.Data.MissingSchemaAction" />.</span><span class="sxs-lookup"><span data-stu-id="626ff-185">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span></span> <span data-ttu-id="626ff-186">La valeur par défaut est <see langword="Add" />.</span><span class="sxs-lookup"><span data-stu-id="626ff-186">The default is <see langword="Add" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="626ff-187">La valeur définie ne fait pas partie des valeurs <see cref="T:System.Data.MissingSchemaAction" />.</span><span class="sxs-lookup"><span data-stu-id="626ff-187">The value set is not one of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span></span></exception>
        <altmember cref="P:System.Data.Common.DataAdapter.MissingMappingAction" />
      </Docs>
    </Member>
    <Member MemberName="TableMappings">
      <MemberSignature Language="C#" Value="public System.Data.ITableMappingCollection TableMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ITableMappingCollection TableMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.TableMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableMappings As ITableMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ITableMappingCollection ^ TableMappings { System::Data::ITableMappingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TableMappings : System.Data.ITableMappingCollection" Usage="System.Data.IDataAdapter.TableMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ITableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="626ff-188">Indique la manière dont une table source est mappée à une table du groupe de données.</span><span class="sxs-lookup"><span data-stu-id="626ff-188">Indicates how a source table is mapped to a dataset table.</span></span></summary>
        <value><span data-ttu-id="626ff-189">Collection qui fournit le mappage principal entre les enregistrements retournés et <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="626ff-189">A collection that provides the master mapping between the returned records and the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="626ff-190">La valeur par défaut est une collection vide.</span><span class="sxs-lookup"><span data-stu-id="626ff-190">The default value is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ff-191">Le <xref:System.Data.IDataAdapter> n’utilise les mappages pour la table source nommée « Table ».</span><span class="sxs-lookup"><span data-stu-id="626ff-191">The <xref:System.Data.IDataAdapter> uses only the mappings for the source table named "Table".</span></span> <span data-ttu-id="626ff-192">Sélectionnez tout, les instructions INSERT, DELETE et UPDATE retournant des données doivent utiliser d’affectation de noms cohérente des colonnes.</span><span class="sxs-lookup"><span data-stu-id="626ff-192">All SELECT, INSERT, DELETE, and UPDATE statements returning data must do so using consistent column naming.</span></span> <span data-ttu-id="626ff-193">Les noms de colonne retournés dans les enregistrements doivent être uniques, sinon les colonnes avec des noms dupliqués remplacent les données précédentes.</span><span class="sxs-lookup"><span data-stu-id="626ff-193">The column names returned in the records must be unique, otherwise columns with duplicate names overwrite previous data.</span></span> <span data-ttu-id="626ff-194">Sur <xref:System.Data.IDataAdapter.Update%2A>, seule la table mappée à la table source nommée « Table » les modifications sont rapprochées.</span><span class="sxs-lookup"><span data-stu-id="626ff-194">On <xref:System.Data.IDataAdapter.Update%2A>, only the table mapped to the source table named "Table" will have its changes reconciled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Data.DataSet -&gt; int" Usage="iDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="626ff-195"><see cref="T:System.Data.DataSet" /> utilisé pour mettre à jour la source de données.</span><span class="sxs-lookup"><span data-stu-id="626ff-195">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="626ff-196">Appelle les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans le <see cref="T:System.Data.DataSet" /> spécifié à partir d'un <see cref="T:System.Data.DataTable" /> appelé "Table".</span><span class="sxs-lookup"><span data-stu-id="626ff-196">Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" /> from a <see cref="T:System.Data.DataTable" /> named "Table".</span></span></summary>
        <returns><span data-ttu-id="626ff-197">Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="626ff-197">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ff-198">Lorsqu’une application appelle la <xref:System.Data.IDataAdapter.Update%2A> (méthode), le <xref:System.Data.IDataAdapter> examine le <xref:System.Data.DataRow.RowState%2A> propriété et exécute les instructions INSERT, UPDATE ou DELETE requises manière itérative pour chaque ligne, selon l’ordre des index configurés dans le <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="626ff-198">When an application calls the <xref:System.Data.IDataAdapter.Update%2A> method, the <xref:System.Data.IDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="626ff-199">Par exemple, <xref:System.Data.IDataAdapter.Update%2A> peut s’exécuter une instruction DELETE, suivie d’une instruction INSERT et puis une autre instruction DELETE, en raison de l’ordre des lignes dans le <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="626ff-199">For example, <xref:System.Data.IDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, because of the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="626ff-200">N’oubliez pas que ces instructions ne sont pas exécutées comme un traitement par lots ; chaque ligne est mise à jour individuellement.</span><span class="sxs-lookup"><span data-stu-id="626ff-200">Be aware that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="626ff-201">Une application peut appeler le <xref:System.Data.DataSet.GetChanges%2A> méthode si vous devez contrôler l’ordre des types d’instructions (par exemple, les instructions INSERT avant les mises à jour).</span><span class="sxs-lookup"><span data-stu-id="626ff-201">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method if you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="626ff-202">Pour plus d’informations, consultez [la mise à jour des Sources de données avec des DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="626ff-202">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="626ff-203">Si les instructions INSERT, UPDATE ou DELETE n’ont pas été spécifiées, le <xref:System.Data.Common.DataAdapter.Update%2A> méthode génère une exception.</span><span class="sxs-lookup"><span data-stu-id="626ff-203">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="626ff-204">Toutefois, vous pouvez créer un <xref:System.Data.SqlClient.SqlCommandBuilder> ou <xref:System.Data.OleDb.OleDbCommandBuilder> objet pour générer automatiquement des instructions SQL pour les mises à jour de la table unique si vous définissez le `SelectCommand` propriété d’un fournisseur de données .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="626ff-204">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="626ff-205">Ensuite, les instructions SQL supplémentaires que vous ne définissez pas sont générées par CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="626ff-205">Then, any additional SQL statements that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="626ff-206">Cette logique de génération nécessite des informations de colonne clé dans le <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="626ff-206">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="626ff-207">Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="626ff-207">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="626ff-208">Le <xref:System.Data.Common.DataAdapter.Update%2A> méthode extrait des lignes de la table indiquée dans le premier mappage avant d’effectuer une mise à jour.</span><span class="sxs-lookup"><span data-stu-id="626ff-208">The <xref:System.Data.Common.DataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="626ff-209">Le <xref:System.Data.Common.DataAdapter.Update%2A> puis met à jour la ligne à l’aide de la valeur de la <xref:System.Data.IDbCommand.UpdatedRowSource%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="626ff-209">The <xref:System.Data.Common.DataAdapter.Update%2A> then updates the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="626ff-210">Toutes les lignes supplémentaires renvoyées sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="626ff-210">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="626ff-211">Une fois que les données sont chargées dans le <xref:System.Data.DataSet>, le <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> événement est déclenché, permettant à l’utilisateur d’inspecter le rapprochement <xref:System.Data.DataSet> ligne et tous les paramètres retournés par la commande de sortie.</span><span class="sxs-lookup"><span data-stu-id="626ff-211">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="626ff-212">Une fois une ligne met à jour avec succès, les modifications apportées à cette ligne sont acceptées.</span><span class="sxs-lookup"><span data-stu-id="626ff-212">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="626ff-213">Lorsque vous utilisez <xref:System.Data.IDataAdapter.Update%2A>, l’ordre d’exécution est comme suit :</span><span class="sxs-lookup"><span data-stu-id="626ff-213">When using <xref:System.Data.IDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="626ff-214">Les valeurs dans le <xref:System.Data.DataRow> sont déplacés vers les valeurs de paramètre.</span><span class="sxs-lookup"><span data-stu-id="626ff-214">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="626ff-215">L'événement <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="626ff-215">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="626ff-216">La commande s’exécute.</span><span class="sxs-lookup"><span data-stu-id="626ff-216">The command executes.</span></span>  
  
4.  <span data-ttu-id="626ff-217">Si la commande est définie sur `FirstReturnedRecord`, puis le premier résultat retourné est placé le <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="626ff-217">If the command is set to `FirstReturnedRecord`, then the first returned result is put in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="626ff-218">S’il existe des paramètres de sortie, ils sont placés le <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="626ff-218">If there are output parameters, they are put in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="626ff-219">L'événement <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="626ff-219">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="626ff-220">La méthode <xref:System.Data.DataRow.AcceptChanges%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="626ff-220"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="626ff-221">Chaque commande associée à la <xref:System.Data.IDataAdapter> a généralement une collection de paramètres associée.</span><span class="sxs-lookup"><span data-stu-id="626ff-221">Each command associated with the <xref:System.Data.IDataAdapter> usually has a parameter collection associated with it.</span></span> <span data-ttu-id="626ff-222">Les paramètres sont mappés à la ligne actuelle via la `SourceColumn` et `SourceVersion` propriétés d’un fournisseur de données .NET Framework `Parameter` classe.</span><span class="sxs-lookup"><span data-stu-id="626ff-222">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="626ff-223">`SourceColumn` fait référence à un <xref:System.Data.DataTable> colonne qui le <xref:System.Data.IDataAdapter> références pour obtenir des valeurs de paramètre pour la ligne actuelle.</span><span class="sxs-lookup"><span data-stu-id="626ff-223">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.IDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="626ff-224">`SourceColumn` fait référence au nom de colonne non mappée avant tous les mappages de table ont été appliqués.</span><span class="sxs-lookup"><span data-stu-id="626ff-224">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="626ff-225">Si `SourceColumn` fait référence à une colonne qui n’existe pas, l’action effectuée dépend d’une de ces <xref:System.Data.MissingMappingAction> valeurs.</span><span class="sxs-lookup"><span data-stu-id="626ff-225">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="626ff-226">Valeur d'énumération</span><span class="sxs-lookup"><span data-stu-id="626ff-226">Enumeration Value</span></span>|<span data-ttu-id="626ff-227">Action effectuée</span><span class="sxs-lookup"><span data-stu-id="626ff-227">Action Taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="626ff-228">Utiliser les noms de colonne source et les noms de tables dans le <xref:System.Data.DataSet> si aucun mappage n’est présent.</span><span class="sxs-lookup"><span data-stu-id="626ff-228">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="626ff-229">Un <xref:System.SystemException> est généré.</span><span class="sxs-lookup"><span data-stu-id="626ff-229">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="626ff-230">Lorsque les mappages sont définies explicitement, un mappage absent pour un paramètre d’entrée est généralement dû à une erreur.</span><span class="sxs-lookup"><span data-stu-id="626ff-230">When the mappings are explicitly set, a missing mapping for an input parameter is usually caused by an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="626ff-231">Un <xref:System.SystemException> est généré.</span><span class="sxs-lookup"><span data-stu-id="626ff-231">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="626ff-232">Le `SourceColumn` propriété est également utilisée pour mapper la valeur de sortie ou de paramètres d’entrée/sortie vers l’arrière à la `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="626ff-232">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="626ff-233">Une exception est générée si elle fait référence à une colonne inexistante.</span><span class="sxs-lookup"><span data-stu-id="626ff-233">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="626ff-234">Le `SourceVersion` propriété d’un fournisseur de données .NET Framework `Parameter` classe détermine s’il faut utiliser le `Original`, `Current`, ou `Proposed` version de la valeur de colonne.</span><span class="sxs-lookup"><span data-stu-id="626ff-234">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the `Original`, `Current`, or `Proposed` version of the column value.</span></span> <span data-ttu-id="626ff-235">Cette fonctionnalité est fréquemment utilisée pour inclure les valeurs d’origine dans la clause WHERE d’une instruction UPDATE pour vérifier les violations d’accès concurrentiel optimiste.</span><span class="sxs-lookup"><span data-stu-id="626ff-235">This capability is frequently used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="626ff-236">Si une erreur se produit lors de la mise à jour une ligne, une exception est levée et l’exécution de la mise à jour n’est plus disponible.</span><span class="sxs-lookup"><span data-stu-id="626ff-236">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="626ff-237">Pour continuer l’opération de mise à jour sans générer d’exception lorsqu’une erreur est rencontrée, définissez le <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> propriété `true` avant d’appeler <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="626ff-237">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="626ff-238">Vous pouvez également répondre aux erreurs sur une ligne par ligne dans le `RowUpdated` événements d’un DataAdapter.</span><span class="sxs-lookup"><span data-stu-id="626ff-238">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="626ff-239">Pour continuer l’opération de mise à jour sans générer d’exception dans le `RowUpdated` jeu d’événements, le <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> propriété de la <xref:System.Data.Common.RowUpdatedEventArgs> à <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="626ff-239">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="626ff-240">L’exemple suivant utilise la classe dérivée, <xref:System.Data.OleDb.OleDbDataAdapter>à <xref:System.Data.Common.DataAdapter.Update%2A> la source de données.</span><span class="sxs-lookup"><span data-stu-id="626ff-240">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to <xref:System.Data.Common.DataAdapter.Update%2A> the data source.</span></span> <span data-ttu-id="626ff-241">Cet exemple suppose que vous avez créé un <xref:System.Data.OleDb.OleDbDataAdapter> et un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="626ff-241">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="626ff-242">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</span><span class="sxs-lookup"><span data-stu-id="626ff-242">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>