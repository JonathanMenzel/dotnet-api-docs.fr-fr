<Type Name="EntityKey" FullName="System.Data.EntityKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6911c2007bc269d038d952c3f18397a65154c85" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30399183" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityKey : IEquatable&lt;System.Data.EntityKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityKey extends System.Object implements class System.IEquatable`1&lt;class System.Data.EntityKey&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityKey&#xA;Implements IEquatable(Of EntityKey)" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityKey sealed : IEquatable&lt;System::Data::EntityKey ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Data.EntityKey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ConcatKeyValue()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="02788-101">Fournit une référence durable à un objet qui est une instance d'un type d'entité.</span>
      <span class="sxs-lookup">
        <span data-stu-id="02788-101">Provides a durable reference to an object that is an instance of an entity type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-102">Les objets <xref:System.Data.EntityKey> sont immuables, ce qui signifie qu'ils ne peuvent plus être modifiés une fois construits.</span><span class="sxs-lookup"><span data-stu-id="02788-102">The <xref:System.Data.EntityKey> objects are immutable; that is, after they are constructed they cannot be modified.</span></span>  
  
 <span data-ttu-id="02788-103">Pour plus d’informations, consultez [utilisation des clés d’entité](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span><span class="sxs-lookup"><span data-stu-id="02788-103">For more information, see [Working with Entity Keys](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02788-104">Ces exemples sont basés sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="02788-104">These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="02788-105">Les exemples vous montrent comment créer et utiliser un <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="02788-105">The examples show you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_trygetobjectbykey)]
 [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_trygetobjectbykey)]  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="02788-106">Initialise une nouvelle instance de la classe <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-106">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="02788-107">Initialise une nouvelle instance de la classe <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-107">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of KeyValuePair(Of String, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ entityKeyValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName">
          <span data-ttu-id="02788-108">Objet <see cref="T:System.String" /> qui correspond au nom du jeu d'entités, qualifié par le nom du conteneur d'entités.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-108">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          </span>
        </param>
        <param name="entityKeyValues">
          <span data-ttu-id="02788-109">Collection <see cref="T:System.Collections.Generic.KeyValuePair" /> générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-109">A generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span>
          </span>
          <span data-ttu-id="02788-110">Chaque paire clé/valeur a un nom de propriété comme clé et la valeur de cette propriété comme valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-110">Each key/value pair has a property name as the key and the value of that property as the value.</span>
          </span>
          <span data-ttu-id="02788-111">Il doit y avoir une paire pour chaque propriété qui fait partie de l'objet <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-111">There should be one pair for each property that is part of the <see cref="T:System.Data.EntityKey" />.</span>
          </span>
          <span data-ttu-id="02788-112">L'ordre des paires clé/valeur n'est pas important, mais chaque propriété de clé doit être incluse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-112">The order of the key/value pairs is not important, but each key property should be included.</span>
          </span>
          <span data-ttu-id="02788-113">Les noms de propriétés sont des noms simples qui ne sont pas qualifiés avec un nom de type d'entité ou le nom de schéma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-113">The property names are simple names that are not qualified with an entity type name or the schema name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02788-114">Initialise une nouvelle instance de la classe <see cref="T:System.Data.EntityKey" /> avec un nom de jeu d'entités et une collection <see cref="T:System.Collections.Generic.KeyValuePair" /> générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-114">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and a generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02788-115">Cet exemple est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="02788-115">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="02788-116">L’exemple vous montre comment créer et utiliser un <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="02788-116">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.EntityKeyMember&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of EntityKeyMember))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Data::EntityKeyMember ^&gt; ^ entityKeyValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName">
          <span data-ttu-id="02788-117">Objet <see cref="T:System.String" /> qui correspond au nom du jeu d'entités, qualifié par le nom du conteneur d'entités.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-117">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          </span>
        </param>
        <param name="entityKeyValues">
          <span data-ttu-id="02788-118">Collection <see cref="T:System.Collections.Generic.IEnumerable`1" /> d'objets <see cref="T:System.Data.EntityKeyMember" /> avec lesquels initialiser la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-118">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects with which to initialize the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02788-119">Initialise une nouvelle instance de la classe <see cref="T:System.Data.EntityKey" /> avec un nom de jeu d'entités et une collection <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Data.EntityKeyMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-119">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, string keyName, object keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, string keyName, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, keyName As String, keyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::String ^ keyName, System::Object ^ keyValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName">
          <span data-ttu-id="02788-120">Objet <see cref="T:System.String" /> qui correspond au nom du jeu d'entités, qualifié par le nom du conteneur d'entités.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-120">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          </span>
        </param>
        <param name="keyName">
          <span data-ttu-id="02788-121">Objet <see cref="T:System.String" /> qui correspond au nom de la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-121">A <see cref="T:System.String" /> that is the name of the key.</span>
          </span>
        </param>
        <param name="keyValue">
          <span data-ttu-id="02788-122">Objet <see cref="T:System.Object" /> qui correspond à la valeur de la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-122">An <see cref="T:System.Object" /> that is the key value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02788-123">Initialise une nouvelle instance de la classe <see cref="T:System.Data.EntityKey" /> avec un nom de jeu d'entités et une paire de clés d'entités spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-123">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and specific entity key pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02788-124">Cet exemple est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="02788-124">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="02788-125">L’exemple vous montre comment créer et utiliser un <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="02788-125">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainerName">
      <MemberSignature Language="C#" Value="public string EntityContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntityContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02788-126">Obtient ou définit le nom du conteneur d'entités.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-126">Gets or sets the name of the entity container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02788-127">Valeur <see cref="T:System.String" /> qui correspond au nom du conteneur d'entités pour l'entité à laquelle l'objet <see cref="T:System.Data.EntityKey" /> appartient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-127">A <see cref="T:System.String" /> value that is the name of the entity container for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityKeyValues">
      <MemberSignature Language="C#" Value="public System.Data.EntityKeyMember[] EntityKeyValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.EntityKeyMember[] EntityKeyValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityKeyValues" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityKeyValues As EntityKeyMember()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ EntityKeyValues { cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ get(); void set(cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.EntityKeyMember[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02788-128">Obtient ou définit les valeurs de clés associées à cet objet <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-128">Gets or sets the key values associated with this <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02788-129">
            <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de valeurs de clés pour cet objet <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-129">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of key values for this <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-130">La classe <xref:System.Data.EntityKey> contient une copie des valeurs qui composent la clé logique spécifiée pour ce type d'entité.</span><span class="sxs-lookup"><span data-stu-id="02788-130">The <xref:System.Data.EntityKey> class contains a copy of the values that make up the logical key that is specified for this type of entity.</span></span>  
  
 <span data-ttu-id="02788-131">Les membres de l'objet <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> possèdent chacun un nom de propriété et une valeur dans un objet <xref:System.Collections.Generic.KeyValuePair%602>, où la clé est le nom de propriété et la valeur est la valeur réelle de cette propriété sur l'objet.</span><span class="sxs-lookup"><span data-stu-id="02788-131">The members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> each have a property name and a value in a <xref:System.Collections.Generic.KeyValuePair%602>, where the key is the property name and the value is the actual value of that property on the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityNotValidKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey EntityNotValidKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey EntityNotValidKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.EntityNotValidKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EntityNotValidKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ EntityNotValidKey;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02788-132">
            <see cref="T:System.Data.EntityKey" /> simple qui identifie une entité résultant d’une opération [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) ayant échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-132">A simple <see cref="T:System.Data.EntityKey" /> identifying an entity that resulted from a failed [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-133">Il existe différentes méthodes pour obtenir une entité non valide.</span><span class="sxs-lookup"><span data-stu-id="02788-133">There are various ways to get an invalid entity.</span></span> <span data-ttu-id="02788-134">Le scénario le plus courant est quand une [!INCLUDE[esql](~/includes/esql-md.md)] de requête utilise le [traiter](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) opérateur pour interpréter une instance d’un type polymorphe comme un type particulier et l’instance en question ne correspond pas.</span><span class="sxs-lookup"><span data-stu-id="02788-134">The most common scenario is when an [!INCLUDE[esql](~/includes/esql-md.md)] query uses the [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operator to interpret an instance of a polymorphic type as a particular type, and the instance in question does not match.</span></span> <span data-ttu-id="02788-135">([Traiter](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) est similaire à c# `as` opérateur).</span><span class="sxs-lookup"><span data-stu-id="02788-135">([TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) is similar to the C# `as` operator).</span></span> <span data-ttu-id="02788-136">Dans ce cas, la requête retourne une entité qui n'est pas valide et la clé d'entité de l'entité résultante est définie à la valeur <xref:System.Data.EntityKey.EntityNotValidKey>.</span><span class="sxs-lookup"><span data-stu-id="02788-136">In this case, the query returns an entity that is not valid, and the entity key of the resulting entity is set to <xref:System.Data.EntityKey.EntityNotValidKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02788-137">Obtient ou définit le nom du jeu d'entités.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-137">Gets or sets the name of the entity set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02788-138">Valeur <see cref="T:System.String" /> qui correspond au nom du jeu d'entités pour l'entité à laquelle l'objet <see cref="T:System.Data.EntityKey" /> appartient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-138">A <see cref="T:System.String" /> value that is the name of the entity set for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="02788-139">Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-139">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Data.EntityKey other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Data.EntityKey other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Data::EntityKey ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="02788-140">Objet <see cref="T:System.Data.EntityKey" /> à comparer à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-140">An <see cref="T:System.Data.EntityKey" /> object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02788-141">Retourne une valeur qui indique si cette instance est égale à un objet <see cref="T:System.Data.EntityKey" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-141">Returns a value that indicates whether this instance is equal to a specified <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02788-142">
            <see langword="true" /> si cette instance et l'<paramref name="other" /> ont des valeurs égales ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-142">
              <see langword="true" /> if this instance and <paramref name="other" /> have equal values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-143">Les clés temporaires ont une sémantique de comparaison différente des clés permanentes :</span><span class="sxs-lookup"><span data-stu-id="02788-143">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="02788-144">Les clés temporaires utilisent l'égalité de référence.</span><span class="sxs-lookup"><span data-stu-id="02788-144">Temporary keys use reference equality.</span></span> <span data-ttu-id="02788-145">Autrement dit, deux références à la même instance <xref:System.Data.EntityKey> temporaire exacte sont égales, mais aucune autre instance <xref:System.Data.EntityKey> n'est égale.</span><span class="sxs-lookup"><span data-stu-id="02788-145">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="02788-146">Les clés permanentes déterminent l'égalité en fonction des valeurs des propriétés de clés contenues et des objets <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="02788-146">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="02788-147">Autrement dit, vous pouvez avoir deux instances <xref:System.Data.EntityKey> distinctes égales si leurs jeux d'entités sont identiques et si leurs valeurs de clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="02788-147">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="02788-148">De plus, les clés temporaires n'ont pas de <xref:System.Data.Metadata.Edm.EntitySet> ou de valeurs de clés, alors que les clés permanentes en ont.</span><span class="sxs-lookup"><span data-stu-id="02788-148">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="02788-149">Objet <see cref="T:System.Object" /> à comparer à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-149">An <see cref="T:System.Object" /> to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02788-150">Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-150">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02788-151">
            <see langword="true" /> si cette instance et l'<paramref name="obj" /> ont des valeurs égales ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-151">
              <see langword="true" /> if this instance and <paramref name="obj" /> have equal values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-152">Les clés temporaires ont une sémantique de comparaison différente des clés permanentes :</span><span class="sxs-lookup"><span data-stu-id="02788-152">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="02788-153">Les clés temporaires utilisent l'égalité de référence.</span><span class="sxs-lookup"><span data-stu-id="02788-153">Temporary keys use reference equality.</span></span> <span data-ttu-id="02788-154">Autrement dit, deux références à la même instance <xref:System.Data.EntityKey> temporaire exacte sont égales, mais aucune autre instance <xref:System.Data.EntityKey> n'est égale.</span><span class="sxs-lookup"><span data-stu-id="02788-154">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="02788-155">Les clés permanentes déterminent l'égalité en fonction des valeurs des propriétés de clés contenues et des objets <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="02788-155">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="02788-156">Autrement dit, vous pouvez avoir deux instances <xref:System.Data.EntityKey> distinctes égales si leurs objets <xref:System.Data.Metadata.Edm.EntitySet> sont identiques et si leurs valeurs de clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="02788-156">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their <xref:System.Data.Metadata.Edm.EntitySet> objects are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="02788-157">De plus, les clés temporaires n'ont pas de <xref:System.Data.Metadata.Edm.EntitySet> ou de valeurs de clés, alors que les clés permanentes en ont.</span><span class="sxs-lookup"><span data-stu-id="02788-157">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitySet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntitySet GetEntitySet (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntitySet GetEntitySet(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntitySet ^ GetEntitySet(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace">
          <span data-ttu-id="02788-158">Espace de travail des métadonnées qui contient l'entité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-158">The metadata workspace that contains the entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02788-159">Obtient le jeu d'entités pour cette clé d'entité à partir de l'espace de travail des métadonnées fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-159">Gets the entity set for this entity key from the given metadata workspace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02788-160">
            <see cref="T:System.Data.Metadata.Edm.EntitySet" /> pour la clé d'entité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-160">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> for the entity key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-161">Le jeu d'entités est accessible en fonction du nom de conteneur d'entités et du nom de jeu d'entités de la clé.</span><span class="sxs-lookup"><span data-stu-id="02788-161">The entity set is accessed based on the entity container name and entity set name of the key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="02788-162">Le jeu d'entités est introuvable dans l'espace de travail des métadonnées spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-162">The entity set could not be located in the specified metadata workspace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="02788-163">Sert de fonction de hachage à l'objet <see cref="T:System.Data.EntityKey" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-163">Serves as a hash function for the current <see cref="T:System.Data.EntityKey" /> object.</span>
          </span>
          <span data-ttu-id="02788-164">
            <see cref="M:System.Data.EntityKey.GetHashCode" /> convient à une utilisation dans des algorithmes de hachage et des structures de données comme une table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-164">
              <see cref="M:System.Data.EntityKey.GetHashCode" /> is suitable for hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02788-165">Code de hachage du <see cref="T:System.Data.EntityKey" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-165">A hash code for the current <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporary">
      <MemberSignature Language="C#" Value="public bool IsTemporary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporary" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.IsTemporary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporary { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02788-166">Obtient une valeur qui indique si l'objet <see cref="T:System.Data.EntityKey" /> est temporaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-166">Gets a value that indicates whether the <see cref="T:System.Data.EntityKey" /> is temporary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02788-167">
            <see langword="true" /> si la <see cref="T:System.Data.EntityKey" /> est temporaire ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-167">
              <see langword="true" /> if the <see cref="T:System.Data.EntityKey" /> is temporary; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-168">Lorsqu'une nouvelle entité est créée, [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] définit la clé temporaire et la propriété <xref:System.Data.EntityKey.IsTemporary%2A> sur `true`.</span><span class="sxs-lookup"><span data-stu-id="02788-168">When a new entity is created, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] defines temporary key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `true`.</span></span> <span data-ttu-id="02788-169">Lorsque vous appelez le <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> (méthode), la [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] assigne une clé permanente et définit la <xref:System.Data.EntityKey.IsTemporary%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="02788-169">When you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] assigns a permanent key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02788-170">Les clés temporaires sont construites automatiquement par l'infrastructure ; elles ne peuvent pas être construites directement par un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="02788-170">Temporary keys are constructed automatically by the framework; they cannot be constructed directly by a user.</span></span>  
  
 <span data-ttu-id="02788-171">Les clés temporaires ont une sémantique de comparaison différente des clés permanentes :</span><span class="sxs-lookup"><span data-stu-id="02788-171">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="02788-172">Les clés temporaires utilisent l'égalité de référence.</span><span class="sxs-lookup"><span data-stu-id="02788-172">Temporary keys use reference equality.</span></span> <span data-ttu-id="02788-173">Autrement dit, deux références à la même instance <xref:System.Data.EntityKey> temporaire exacte sont égales, mais aucune autre instance <xref:System.Data.EntityKey> n'est égale.</span><span class="sxs-lookup"><span data-stu-id="02788-173">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="02788-174">Les clés permanentes déterminent l'égalité en fonction des valeurs des propriétés de clés contenues et des objets <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="02788-174">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="02788-175">Autrement dit, vous pouvez avoir deux instances <xref:System.Data.EntityKey> distinctes égales si leurs jeux d'entités sont identiques et si leurs valeurs de clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="02788-175">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="02788-176">De plus, les clés temporaires n'ont pas de <xref:System.Data.Metadata.Edm.EntitySet> ou de valeurs de clés, alors que les clés permanentes en ont.</span><span class="sxs-lookup"><span data-stu-id="02788-176">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="02788-177">Lorsque la méthode <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> est appelée sur l'objet <xref:System.Data.Objects.ObjectStateEntry> d'une entité et que l'entité bascule de l'état <xref:System.Data.EntityState.Added> à l'état <xref:System.Data.EntityState.Unchanged>, l'[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] calcule automatiquement une nouvelle clé permanente pour l'entité et synchronise toutes les références de clés temporaires.</span><span class="sxs-lookup"><span data-stu-id="02788-177">When the <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> method is called on an entity's <xref:System.Data.Objects.ObjectStateEntry> and the entity transitions from the <xref:System.Data.EntityState.Added> state to <xref:System.Data.EntityState.Unchanged> state, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] automatically computes a new permanent key for the entity and synchronizes all temporary key references.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEntitySetKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey NoEntitySetKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey NoEntitySetKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.NoEntitySetKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoEntitySetKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ NoEntitySetKey;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02788-178">Singleton <see cref="T:System.Data.EntityKey" /> par lequel une entité en lecture seule est identifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-178">A singleton <see cref="T:System.Data.EntityKey" /> by which a read-only entity is identified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-179">Une entité en lecture seule identifie une entité qui est valide dans tous les cas, mais qui n'est associée à aucun jeu d'entités réel.</span><span class="sxs-lookup"><span data-stu-id="02788-179">A read-only entity identifies an entity that is valid in every way, except that it is not associated with an actual entity set.</span></span> <span data-ttu-id="02788-180">Cela peut se produire dans le cadre du résultat d'une requête [!INCLUDE[esql](~/includes/esql-md.md)] qui construit et retourne une instance d'entité spécifiée dans le texte de la requête (par opposition à une entité récupérée à partir d'une table de base de données).</span><span class="sxs-lookup"><span data-stu-id="02788-180">This can occur as part of the result of an [!INCLUDE[esql](~/includes/esql-md.md)] query that constructs and returns an entity instance specified within the text of the query (as opposed to an entity that was retrieved from a database table).</span></span> <span data-ttu-id="02788-181">Une entité qui n'a pas de jeu d'entités ne peut pas être rendue persistante dans la base de données tant qu'elle n'a pas été associée à un jeu d'entités.</span><span class="sxs-lookup"><span data-stu-id="02788-181">An entity that does not have an entity set cannot be persisted to the database until it is associated with some entity set.</span></span> <span data-ttu-id="02788-182">Par conséquent, le matérialiseur d'objet traite ce type d'entité comme si l'option de fusion <xref:System.Data.Objects.MergeOption.NoTracking> avait été spécifiée, quelle que soit l'option de fusion réelle spécifiée.</span><span class="sxs-lookup"><span data-stu-id="02788-182">Therefore, the object materializer will treat this kind of entity as if the <xref:System.Data.Objects.MergeOption.NoTracking> merge option was specified, regardless of the actual merge option that was specified.</span></span> <span data-ttu-id="02788-183">Un objet entité sera créé, mais son identité ne sera pas résolue et il ne sera pas ajouté au gestionnaire d'état dans le cadre du processus de matérialisation.</span><span class="sxs-lookup"><span data-stu-id="02788-183">An entity object will be created, but its identity will not be resolved and it will not be added to the state manager as part of the materialization process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="02788-184">Décrit la source et la destination d'un flux sérialisé donné et fournit un contexte supplémentaire défini par l'appelant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-184">Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02788-185">Méthode d'assistance utilisée pour désérialiser un objet <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-185">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-186">La méthode <xref:System.Data.EntityKey.OnDeserialized%2A> est utilisée par Object Services lors de la désérialisation d'un objet <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="02788-186"><xref:System.Data.EntityKey.OnDeserialized%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="02788-187">Pour plus d’informations, consultez [sérialisation d’objets](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="02788-187">For more information, see [Serializing Objects](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializing">
      <MemberSignature Language="C#" Value="public void OnDeserializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserializing</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="02788-188">Décrit la source et la destination d'un flux sérialisé donné et fournit un contexte supplémentaire défini par l'appelant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-188">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02788-189">Méthode d'assistance utilisée pour désérialiser un objet <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-189">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-190">La méthode <xref:System.Data.EntityKey.OnDeserializing%2A> est utilisée par Object Services lors de la désérialisation d'un objet <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="02788-190"><xref:System.Data.EntityKey.OnDeserializing%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="02788-191">Pour plus d’informations, consultez [sérialisation d’objets](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="02788-191">For more information, see [Serializing Objects](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1">
          <span data-ttu-id="02788-192">
            <see cref="T:System.Data.EntityKey" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-192">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <param name="key2">
          <span data-ttu-id="02788-193">
            <see cref="T:System.Data.EntityKey" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-193">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02788-194">Compare deux objets <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-194">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02788-195">
            <see langword="true" /> si les valeurs <paramref name="key1" /> et <paramref name="key2" /> sont égales ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-195">
              <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-196">Les clés temporaires ont une sémantique de comparaison différente des clés permanentes :</span><span class="sxs-lookup"><span data-stu-id="02788-196">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="02788-197">Les clés temporaires utilisent l'égalité de référence.</span><span class="sxs-lookup"><span data-stu-id="02788-197">Temporary keys use reference equality.</span></span> <span data-ttu-id="02788-198">Autrement dit, deux références à la même instance <xref:System.Data.EntityKey> temporaire exacte sont égales, mais aucune autre instance <xref:System.Data.EntityKey> n'est égale.</span><span class="sxs-lookup"><span data-stu-id="02788-198">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="02788-199">Les clés permanentes déterminent l'égalité en fonction des valeurs des propriétés de clés contenues et des objets <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="02788-199">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="02788-200">Autrement dit, vous pouvez avoir deux instances <xref:System.Data.EntityKey> distinctes égales si leurs jeux d'entités sont identiques et si leurs valeurs de clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="02788-200">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="02788-201">De plus, les clés temporaires n'ont pas de <xref:System.Data.Metadata.Edm.EntitySet> ou de valeurs de clés, alors que les clés permanentes en ont.</span><span class="sxs-lookup"><span data-stu-id="02788-201">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="02788-202">La méthode équivalente pour cet opérateur est <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType> </format> </remarks> </Docs> 
     </Member> 
     <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /> <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" /> <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" /> <MemberType> Méthode</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo> <ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue> <Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters> <Docs> <param name="key1">A <see cref="T:System.Data.EntityKey" /> à comparer.</param></span><span class="sxs-lookup"><span data-stu-id="02788-202">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType></format> </remarks> </Docs>
    </Member>
    <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /> <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" /> <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" /> <MemberType>Method</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo> <ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue> <Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters> <Docs> <param name="key1">A <see cref="T:System.Data.EntityKey" /> to compare.</param></span></span>
        <span data-ttu-id="02788-203"><param name="key2">A <see cref="T:System.Data.EntityKey" /> à comparer.</param></span><span class="sxs-lookup"><span data-stu-id="02788-203"><param name="key2">A <see cref="T:System.Data.EntityKey" /> to compare.</param></span></span>
        <span data-ttu-id="02788-204"><summary>Compare deux <see cref="T:System.Data.EntityKey" /> objets.</summary></span><span class="sxs-lookup"><span data-stu-id="02788-204"><summary>Compares two <see cref="T:System.Data.EntityKey" /> objects.</summary></span></span>
        <span data-ttu-id="02788-205"><returns> <see langword="true" /> Si le <paramref name="key1" /> et <paramref name="key2" /> valeurs ne sont pas égaux ; sinon, <see langword="false" />.</returns></span><span class="sxs-lookup"><span data-stu-id="02788-205"><returns> <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</returns></span></span>
        <span data-ttu-id="02788-206"><remarks> <format type="text/markdown"><![CDATA[</span><span class="sxs-lookup"><span data-stu-id="02788-206"><remarks> <format type="text/markdown"><![CDATA[</span></span>  
  
## Remarks  
 <span data-ttu-id="02788-207">Les clés temporaires ont une sémantique de comparaison différente des clés permanentes :</span><span class="sxs-lookup"><span data-stu-id="02788-207">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="02788-208">Les clés temporaires utilisent l'égalité de référence.</span><span class="sxs-lookup"><span data-stu-id="02788-208">Temporary keys use reference equality.</span></span> <span data-ttu-id="02788-209">Autrement dit, deux références à la même instance <xref:System.Data.EntityKey> temporaire exacte sont égales, mais aucune autre instance <xref:System.Data.EntityKey> n'est égale.</span><span class="sxs-lookup"><span data-stu-id="02788-209">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="02788-210">Les clés permanentes déterminent l'égalité en fonction des valeurs des propriétés de clés contenues et des objets <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="02788-210">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="02788-211">Autrement dit, vous pouvez avoir deux instances <xref:System.Data.EntityKey> distinctes égales si leurs jeux d'entités sont identiques et si leurs valeurs de clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="02788-211">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="02788-212">De plus, les clés temporaires n'ont pas de <xref:System.Data.Metadata.Edm.EntitySet> ou de valeurs de clés, alors que les clés ordinaires en ont.</span><span class="sxs-lookup"><span data-stu-id="02788-212">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>  
  
 <span data-ttu-id="02788-213">La méthode équivalente pour cet opérateur est <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="02788-213">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1">
          <span data-ttu-id="02788-214">
            <see cref="T:System.Data.EntityKey" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-214">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <param name="key2">
          <span data-ttu-id="02788-215">
            <see cref="T:System.Data.EntityKey" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-215">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02788-216">Compare deux objets <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-216">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02788-217">
            <see langword="true" /> si les valeurs <paramref name="key1" /> et <paramref name="key2" /> ne sont pas égales ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02788-217">
              <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02788-218">Les clés temporaires ont une sémantique de comparaison différente des clés permanentes :</span><span class="sxs-lookup"><span data-stu-id="02788-218">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="02788-219">Les clés temporaires utilisent l'égalité de référence.</span><span class="sxs-lookup"><span data-stu-id="02788-219">Temporary keys use reference equality.</span></span> <span data-ttu-id="02788-220">Autrement dit, deux références à la même instance <xref:System.Data.EntityKey> temporaire exacte sont égales, mais aucune autre instance <xref:System.Data.EntityKey> n'est égale.</span><span class="sxs-lookup"><span data-stu-id="02788-220">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="02788-221">Les clés permanentes déterminent l'égalité en fonction des valeurs des propriétés de clés contenues et des objets <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="02788-221">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="02788-222">Autrement dit, vous pouvez avoir deux instances <xref:System.Data.EntityKey> distinctes égales si leurs jeux d'entités sont identiques et si leurs valeurs de clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="02788-222">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="02788-223">De plus, les clés temporaires n'ont pas de <xref:System.Data.Metadata.Edm.EntitySet> ou de valeurs de clés, alors que les clés ordinaires en ont.</span><span class="sxs-lookup"><span data-stu-id="02788-223">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>