<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4df85c61e271105b8b72d58482adf6cf486b2c84" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57920025" /></Metadata><TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <TypeSignature Language="F#" Value="type DataRow = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une ligne de données dans un <see cref="T:System.Data.DataTable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataRow> et <xref:System.Data.DataColumn> objets sont les principaux composants d’un <xref:System.Data.DataTable>. Utilisez le <xref:System.Data.DataRow> objet et de ses propriétés et méthodes pour récupérer et évaluer ; insérer, supprimer et mettre à jour les valeurs dans le <xref:System.Data.DataTable>. Le <xref:System.Data.DataRowCollection> représente le texte réel <xref:System.Data.DataRow> des objets dans le <xref:System.Data.DataTable>et le <xref:System.Data.DataColumnCollection> contient le <xref:System.Data.DataColumn> objets qui décrivent le schéma de la <xref:System.Data.DataTable>. Utilisez surchargées <xref:System.Data.DataRow.Item%2A> à renvoyer ou définir la valeur de propriété un <xref:System.Data.DataColumn>.  
  
 Utilisez le <xref:System.Data.DataRow.HasVersion%2A> et <xref:System.Data.DataRow.IsNull%2A> propriétés pour déterminer l’état d’une valeur de ligne particulière et le <xref:System.Data.DataRow.RowState*> propriété afin de déterminer l’état de la ligne par rapport à son parent <xref:System.Data.DataTable>.  
  
 Pour créer un nouveau <xref:System.Data.DataRow>, utilisez le <xref:System.Data.DataTable.NewRow%2A> méthode de la <xref:System.Data.DataTable> objet. Après avoir créé un nouveau <xref:System.Data.DataRow>, utilisez le <xref:System.Data.DataRowCollection.Add%2A> méthode pour ajouter la nouvelle <xref:System.Data.DataRow> à la <xref:System.Data.DataRowCollection>. Enfin, appelez le <xref:System.Data.DataRow.AcceptChanges%2A> méthode de la <xref:System.Data.DataTable> objet pour confirmer l’ajout. Pour plus d’informations sur l’ajout de données à un <xref:System.Data.DataTable>, consultez [Ajout de données à un DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).  
  
 Vous pouvez supprimer un <xref:System.Data.DataRow> à partir de la <xref:System.Data.DataRowCollection> en appelant le <xref:System.Data.DataRowCollection.Remove%2A> méthode de la <xref:System.Data.DataRowCollection>, ou en appelant le <xref:System.Data.DataRow.Delete%2A> méthode de la <xref:System.Data.DataRow> objet. Le <xref:System.Data.DataRowCollection.Remove%2A> méthode supprime la ligne de la collection. En revanche, <xref:System.Data.DataRow.Delete%2A> marques le <xref:System.Data.DataRow> pour la suppression. La suppression réelle se produit lorsque vous appelez <xref:System.Data.DataRow.AcceptChanges%2A> (méthode). En appelant <xref:System.Data.DataRow.Delete%2A>, vous pouvez vérifier par programme les lignes marquées pour suppression avant de les supprimer réellement. Pour plus d’informations, consultez [suppression de DataRow](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md).  
  
   
  
## Examples  
 L’exemple suivant crée un nouveau <xref:System.Data.DataRow> en appelant le <xref:System.Data.DataTable.NewRow%2A> méthode de la <xref:System.Data.DataTable> objet.  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Ce type est sécurisé pour les opérations de lecture multithreads. Vous devez synchroniser des opérations d’écriture.</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">À l’aide de jeux de données dans ADO.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRow : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="new System.Data.DataRow builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">générateur</param>
        <summary>Initialise une nouvelle instance de DataRow. Construit une ligne à partir du générateur. Uniquement pour un usage interne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataRow.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Valide toutes les modifications apportées à cette ligne depuis le dernier appel à <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lors de l’appel <xref:System.Data.DataRow.AcceptChanges%2A>, le <xref:System.Data.DataRow.EndEdit%2A> méthode est implicitement appelée pour mettre fin à toutes les modifications. Si le <xref:System.Data.DataRow.RowState*> de la ligne a été ajouté ou modifié, le <xref:System.Data.DataRow.RowState*> devient Unchanged. Si le <xref:System.Data.DataRow.RowState*> a été supprimé, la ligne est supprimée.  
  
 Pour plus d’informations, consultez la méthode <xref:System.Data.DataRow.BeginEdit%2A>.  
  
 Le <xref:System.Data.DataTable> classe a également un <xref:System.Data.DataTable.AcceptChanges%2A> méthode qui affecte les modifications apportées à la table entière. Pour plus d’informations et un exemple de code qui montre comment accepter ou refuser des modifications apportées aux lignes de données individuelles, consultez [AcceptChanges et RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md).  
  
   
  
## Examples  
 L’exemple suivant crée tout d’abord un <xref:System.Data.DataTable> avec une colonne, puis crée un seul <xref:System.Data.DataRow>. Comme le <xref:System.Data.DataRow> est créé, ajouté, modifié et supprimé, son <xref:System.Data.DataRow.RowState*> est imprimé.  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">À l’aide de jeux de données dans ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="dataRow.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Commence une opération de modification d'un objet <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Data.DataRow.BeginEdit%2A> méthode permettant de placer un <xref:System.Data.DataRow> en mode édition. Dans ce mode, les événements sont temporairement suspendues, lui permettre d’apporter des modifications à plusieurs lignes sans déclencher des règles de validation. Par exemple, si vous devez vous assurer que la valeur de la colonne de montant total est égale aux valeurs de débit et les colonnes d’une ligne de crédit, vous pouvez placer chaque ligne en mode édition pour suspendre la validation des valeurs jusqu'à ce que l’utilisateur tente de valider les valeurs.  
  
 Le <xref:System.Data.DataRow.BeginEdit%2A> méthode est appelée implicitement quand l’utilisateur modifie la valeur d’un contrôle lié aux données ; le <xref:System.Data.DataRow.EndEdit%2A> méthode est appelée implicitement lorsque vous appelez le <xref:System.Data.DataTable.AcceptChanges%2A> méthode pour le <xref:System.Data.DataTable> objet. En mode édition, le <xref:System.Data.DataRow> stocke des représentations de la valeur d’origine et de la nouvelle valeur proposée. Par conséquent, tant que le <xref:System.Data.DataRow.EndEdit%2A> méthode n’a pas été appelée, vous pouvez récupérer la version d’origine ou proposée en passant `DataRowVersion.Original` ou `DataRowVersion.Proposed` pour le `version` paramètre de la <xref:System.Data.DataRow.Item%2A> propriété. Vous pouvez également annuler les modifications à ce stade en appelant le <xref:System.Data.DataRow.CancelEdit%2A> (méthode).  
  
 Pour voir si la ligne contient une valeur d’origine ou proposée, appelez le <xref:System.Data.DataRow.HasVersion%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Data.DataRow.BeginEdit%2A> méthode suspend temporairement <xref:System.Data.DataTable.RowChanging> événements, mais le `delete` n’est pas le cas de l’opération.  
  
   
  
## Examples  
 L’exemple crée un simple <xref:System.Data.DataTable> avec un <xref:System.Data.DataColumn> et cinq <xref:System.Data.DataRow> objets et un <xref:System.Data.UniqueConstraint>. Un <xref:System.Data.DataTable.RowChanged> Gestionnaire d’événements est également ajouté à surveiller lors du change de la valeur de la ligne. Après avoir appelé <xref:System.Data.DataRow.BeginEdit%2A> sur les lignes existantes, la contrainte et l’événement sont temporairement désactivés et les valeurs d’origine et proposées sont imprimées. Le <xref:System.Data.DataRow.BeginEdit%2A> est à nouveau appelé pour définir les deux lignes à la même valeur. Lorsque <xref:System.Data.DataRow.EndEdit%2A> est appelée, le <xref:System.Data.UniqueConstraint> est appliquée sur les valeurs identiques.  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">La méthode a été appelée au sein de l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">La méthode a été appelée sur une ligne supprimée.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">À l’aide de jeux de données dans ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="dataRow.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule la modification de la ligne en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la méthode <xref:System.Data.DataRow.BeginEdit%2A>.  
  
   
  
## Examples  
 L’exemple suivant modifie la valeur d’une colonne dans la dernière ligne d’un <xref:System.Windows.Forms.DataGrid> contrôle. L’exemple utilise le <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, méthodes permettant de modifier la valeur de colonne et de valider la modification apportée à la ligne.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">La méthode a été appelée au sein de l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">À l’aide de jeux de données dans ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberSignature Language="F#" Value="member this.ClearErrors : unit -&gt; unit" Usage="dataRow.ClearErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface les erreurs pour la ligne. Cela inclut <see cref="P:System.Data.DataRow.RowError" /> et les erreurs définies avec <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Data.DataRow.SetColumnError%2A> et <xref:System.Data.DataRow.GetColumnError%2A> pour définir et retourner des erreurs pour des colonnes.  
  
 Définir le <xref:System.Data.DataRow.RowError%2A> propriété à définir une erreur qui s’applique à la ligne entière.  
  
 Pour déterminer si des erreurs existent pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.HasErrors%2A> (méthode). Par conséquent, vous pouvez utiliser la <xref:System.Data.DataRow.GetColumnsInError%2A> méthode pour récupérer toutes les colonnes avec des erreurs.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.HasErrors%2A> pour rechercher des erreurs. Si la ligne comporte des erreurs, le <xref:System.Data.DataRow.GetColumnsInError%2A> méthode retourne le tableau de colonnes comportant des erreurs qui peuvent ensuite être résolus. Le <xref:System.Data.DataRow.ClearErrors%2A> méthode est ensuite appelée pour effacer toutes les erreurs.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">À l’aide de jeux de données dans ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="dataRow.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Data.DataRow.RowState*> de la ligne est ajoutée, le <xref:System.Data.DataRow.RowState*> devient `Detached` et la ligne est supprimée de la table lorsque vous appelez <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
 Le <xref:System.Data.DataRow.RowState*> devient `Deleted` après avoir utilisé le <xref:System.Data.DataRow.Delete%2A> méthode sur un existant <xref:System.Data.DataRow>. Il reste `Deleted` jusqu'à ce que vous appeliez <xref:System.Data.DataRow.AcceptChanges%2A>. À ce stade, le <xref:System.Data.DataRow> est supprimé de la table.  
  
 <xref:System.Data.DataRow.Delete%2A> ne doit pas être appelée dans une boucle foreach pendant l’itération via une <xref:System.Data.DataRowCollection> objet. <xref:System.Data.DataRow.Delete%2A> Modifie l’état de la collection.  
  
 Une ligne supprimée peut être restaurée en appelant <xref:System.Data.DataRow.RejectChanges%2A>.  
  
> [!NOTE]
>  Le <xref:System.Data.DataRow.BeginEdit%2A> méthode suspend temporairement <xref:System.Data.DataTable.RowChanging> les événements, mais l’opération de suppression est pas le cas.  
  
   
  
## Examples  
 L’exemple suivant crée un simple <xref:System.Data.DataTable> avec deux colonnes et dix lignes. Après la suppression de plusieurs <xref:System.Data.DataRow> éléments avec le <xref:System.Data.DataRow.Delete%2A> (méthode), une des lignes est annulée en appelant <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><see cref="T:System.Data.DataRow" /> a déjà été supprimé.</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">À l’aide de jeux de données dans ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="dataRow.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Termine la modification de la ligne en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous définissez la propriété, une exception est générée si une exception se produit dans le <xref:System.Data.DataTable.RowChanging> événement.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.EndEdit%2A> méthode à la fin de la modification d’un <xref:System.Data.DataRow> valeur si la fonction de validation retourne la valeur true.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">La méthode a été appelée au sein de l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <exception cref="T:System.Data.ConstraintException">La modification a interrompu une contrainte.</exception>
        <exception cref="T:System.Data.ReadOnlyException">La ligne appartient à la table et la modification a tenté de changer la valeur d'une colonne en lecture seule.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">La modification a tenté d'insérer une valeur null dans une colonne dont <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur false.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">À l’aide de jeux de données dans ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient les lignes enfants de <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> à utiliser.</param>
        <summary>Obtient les lignes enfants de ce <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
        <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> objets retourné par la <xref:System.Data.DataTable.ChildRelations%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.GetChildRows%2A> pour retourner les enfants <xref:System.Data.DataRow> objets pour chaque enfant <xref:System.Data.DataRelation> dans un <xref:System.Data.DataTable>. La valeur de chaque colonne dans la ligne s’affiche ensuite.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
        <exception cref="T:System.ArgumentNullException">La relation est <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La ligne ne possède pas cette version des données.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">À l’aide de jeux de données dans ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> du <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
        <summary>Obtient les lignes enfants de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> objets retourné par la <xref:System.Data.DataTable.ChildRelations%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> à utiliser.</param>
        <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
        <summary>Obtient les lignes enfants de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> et du <see cref="T:System.Data.DataRowVersion" /> spécifiés.</summary>
        <returns>Tableau d'objets <see cref="T:System.Data.DataRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> objets retourné par la <xref:System.Data.DataTable.ChildRelations%2A> propriété.  
  
 Utilisez le <xref:System.Data.DataRow.HasVersion%2A> propriété afin de déterminer si le <xref:System.Data.DataRowVersion> souhaité existe.  
  
 Si <xref:System.Data.DataRowVersion.Default> est spécifié, la version qui est utilisée dépend de la <xref:System.Data.DataRow.RowState*> de la ligne sur laquelle `GetChildRows` est appelé. Si la ligne sur laquelle `GetChildRows` est appelée a une `RowState` de `Modified`, `New`, ou `Unchanged`, le <xref:System.Data.DataRowVersion.Current> version de la ligne est utilisée pour extraire les lignes enfants associées avec les valeurs correspondantes dans leur version actuelle. Si la ligne sur laquelle `GetChildRows` est appelée a une `RowState` de `Deleted`, le <xref:System.Data.DataRowVersion.Original> version de la ligne est utilisée pour extraire les lignes enfants associées avec les valeurs correspondantes dans leurs versions d’origine.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.GetChildRows%2A> pour retourner les enfants <xref:System.Data.DataRow> objets pour chaque enfant <xref:System.Data.DataRelation> dans un <xref:System.Data.DataTable>. La valeur de chaque colonne avec la version spécifiée dans la ligne s’affiche ensuite.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">À l’aide de jeux de données dans ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> du <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
        <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
        <summary>Obtient les lignes enfants de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" /> et de <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> objets retourné par la <xref:System.Data.DataTable.ChildRelations%2A> propriété.  
  
 Utilisez le <xref:System.Data.DataRow.HasVersion%2A> propriété afin de déterminer si le <xref:System.Data.DataRowVersion> souhaité existe.  
  
 Si <xref:System.Data.DataRowVersion.Default> est spécifié, la version qui est utilisée dépend de la <xref:System.Data.DataRow.RowState*> de la ligne sur laquelle `GetChildRows` est appelé. Si la ligne sur laquelle `GetChildRows` est appelée a une `RowState` de `Modified`, `New`, ou `Unchanged`, le <xref:System.Data.DataRowVersion.Current> version de la ligne est utilisée pour extraire les lignes enfants associées avec les valeurs correspondantes dans leur version actuelle. Si la ligne sur laquelle `GetChildRows` est appelée a une `RowState` de `Deleted`, le <xref:System.Data.DataRowVersion.Original> version de la ligne est utilisée pour extraire les lignes enfants associées avec les valeurs correspondantes dans leurs versions d’origine.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient la description d'erreur d'une colonne.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : System.Data.DataColumn -&gt; string" Usage="dataRow.GetColumnError column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" /></param>
        <summary>Obtient la description d'erreur du <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
        <returns>Texte de description de l'erreur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Data.DataRow.SetColumnError%2A> méthode pour définir les erreurs de la colonne.  
  
 Pour déterminer si des erreurs existent pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.HasErrors%2A> (méthode). Par conséquent, vous pouvez utiliser la <xref:System.Data.DataRow.GetColumnsInError%2A> méthode pour récupérer toutes les colonnes avec des erreurs. Vous pouvez également le <xref:System.Data.DataTable.GetErrors%2A> méthode de la <xref:System.Data.DataTable> retourne toutes les lignes avec des erreurs.  
  
 Pour effacer toutes les erreurs pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.ClearErrors%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant définit une description d’erreur spécifié <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : int -&gt; string" Usage="dataRow.GetColumnError columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Index de base zéro de la colonne.</param>
        <summary>Obtient la description d'erreur de la colonne spécifiée par l'index.</summary>
        <returns>Texte de description de l'erreur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Data.DataRow.SetColumnError%2A> méthode pour définir les erreurs de la colonne.  
  
 Pour déterminer si des erreurs existent pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.HasErrors%2A> (méthode). Par conséquent, vous pouvez utiliser la <xref:System.Data.DataRow.GetColumnsInError%2A> méthode pour récupérer toutes les colonnes avec des erreurs.  
  
 Pour effacer toutes les erreurs pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.ClearErrors%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant définit une description d’erreur spécifié <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">L'argument <paramref name="columnIndex" /> est hors limites.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : string -&gt; string" Usage="dataRow.GetColumnError columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nom de la colonne.</param>
        <summary>Obtient la description d'erreur d'une colonne, spécifiée par son nom.</summary>
        <returns>Texte de description de l'erreur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Data.DataRow.SetColumnError%2A> méthode pour définir les erreurs de la colonne.  
  
 Pour déterminer si des erreurs existent pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.HasErrors%2A> (méthode). Par conséquent, vous pouvez utiliser la <xref:System.Data.DataRow.GetColumnsInError%2A> méthode pour récupérer toutes les colonnes avec des erreurs.  
  
 Pour effacer toutes les erreurs pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.ClearErrors%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant définit une description d’erreur spécifié <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberSignature Language="F#" Value="member this.GetColumnsInError : unit -&gt; System.Data.DataColumn[]" Usage="dataRow.GetColumnsInError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient un tableau de colonnes contenant des erreurs.</summary>
        <returns>Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui contiennent des erreurs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.DataRow.GetColumnsInError%2A> vous permet de réduire le nombre de <xref:System.Data.DataColumn> les objets qui doivent être traités pour les erreurs en retournant uniquement les colonnes qui contiennent une erreur. Erreurs peuvent être définies à des colonnes individuelles avec la <xref:System.Data.DataRow.SetColumnError%2A> (méthode). Pour réduire encore le nombre de traitement, examinez la <xref:System.Data.DataRow.HasErrors%2A> propriété de la <xref:System.Data.DataRow> classe pour déterminer si un <xref:System.Data.DataRow> comporte des erreurs avant d’appeler <xref:System.Data.DataRow.GetColumnsInError%2A>.  
  
 Utilisez le <xref:System.Data.DataRow.ClearErrors%2A> méthode pour effacer toutes les erreurs sur la ligne. Cela inclut <xref:System.Data.DataRow.RowError%2A>.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.HasErrors%2A> pour rechercher des erreurs. Si la ligne comporte des erreurs, le <xref:System.Data.DataRow.GetColumnsInError%2A> méthode retourne le tableau de colonnes comportant des erreurs qui peuvent ensuite être résolus. Le <xref:System.Data.DataRow.ClearErrors%2A> méthode est ensuite appelée pour effacer toutes les erreurs.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient la ligne parente de <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> à utiliser.</param>
        <summary>Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
        <returns><see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un <xref:System.Data.DataSet>, la collection de tous les parents <xref:System.Data.DataRelation> objets pour le jeu de données est retourné par la <xref:System.Data.DataRow.GetParentRows%2A> (méthode).  
  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> les objets retournés par le <xref:System.Data.DataTable.ParentRelations%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.GetParentRow%2A> pour retourner les enfants <xref:System.Data.DataRow> objets pour chaque enfant <xref:System.Data.DataRelation> dans un <xref:System.Data.DataTable>. La valeur de chaque colonne dans la ligne s’affiche ensuite.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> n'appartient pas à <see cref="T:System.Data.DataTable" />.  
  
ou

La ligne est <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Une ligne enfant a plusieurs parents.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Cette ligne n'appartient pas à la table enfant de l'objet <see cref="T:System.Data.DataRelation" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à une table.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" />.</summary>
        <returns><see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un <xref:System.Data.DataSet>, la collection de tous les parents <xref:System.Data.DataRelation> objets pour le jeu de données est retourné par la <xref:System.Data.DataRow.GetParentRows%2A> (méthode).  
  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> les objets retournés par le <xref:System.Data.DataTable.ParentRelations%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.GetParentRow%2A> pour imprimer une valeur à partir de chaque ligne parente de chaque <xref:System.Data.DataRow> dans un <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
        <exception cref="T:System.Data.DataException">Une ligne enfant a plusieurs parents.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> à utiliser.</param>
        <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir.</param>
        <summary>Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> et du <see cref="T:System.Data.DataRowVersion" /> spécifiés.</summary>
        <returns><see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un <xref:System.Data.DataSet>, la collection de tous les parents <xref:System.Data.DataRelation> objets pour le jeu de données est retourné par la <xref:System.Data.DataRow.GetParentRows%2A> (méthode).  
  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> les objets retournés par le <xref:System.Data.DataTable.ParentRelations%2A> propriété.  
  
 Utilisez le <xref:System.Data.DataRow.HasVersion%2A> propriété afin de déterminer si le <xref:System.Data.DataRowVersion> souhaité existe.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.GetParentRow%2A> pour retourner les enfants <xref:System.Data.DataRow> objets pour chaque enfant <xref:System.Data.DataRelation> dans un <xref:System.Data.DataTable>. La valeur de chaque colonne dans la ligne s’affiche ensuite.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La ligne est <see langword="null" />.  
  
ou

<paramref name="relation" /> n'appartient pas aux relations parentes de cette table.</exception>
        <exception cref="T:System.Data.DataException">Une ligne enfant a plusieurs parents.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">La table enfant de la relation n'est pas la table à laquelle appartient la ligne.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à une table.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La ligne ne possède pas cette version des données.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Une des valeurs de <see cref="T:System.Data.DataRowVersion" />.</param>
        <summary>Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" /> et de <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns><see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un <xref:System.Data.DataSet>, la collection de tous les parents <xref:System.Data.DataRelation> objets pour le jeu de données est retourné par la <xref:System.Data.DataRow.GetParentRows%2A> (méthode).  
  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> les objets retournés par le <xref:System.Data.DataTable.ParentRelations%2A> propriété.  
  
 Utilisez le <xref:System.Data.DataRow.HasVersion%2A> propriété afin de déterminer si le <xref:System.Data.DataRowVersion> souhaité existe.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.GetParentRow%2A> pour imprimer une valeur à partir de chaque ligne parente de chaque <xref:System.Data.DataRow> dans un <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Une ligne enfant a plusieurs parents.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient les lignes parentes de <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> à utiliser.</param>
        <summary>Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
        <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un <xref:System.Data.DataSet>, la collection de tous les parents <xref:System.Data.DataRelation> objets pour le jeu de données est retourné par la <xref:System.Data.DataRow.GetParentRows%2A> (méthode).  
  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> les objets retournés par le <xref:System.Data.DataTable.ParentRelations%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.GetParentRows%2A> pour retourner les enfants <xref:System.Data.DataRow> objets pour chaque enfant <xref:System.Data.DataRelation> dans un <xref:System.Data.DataTable>. La valeur de chaque colonne dans la ligne s’affiche ensuite.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.DataRelation" /> n'appartient pas au <see cref="T:System.Data.DataSet" /> de cette ligne.</exception>
        <exception cref="T:System.ArgumentNullException">La ligne est <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">La table enfant de la relation n'est pas la table à laquelle appartient la ligne.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un <xref:System.Data.DataSet>, la collection de tous les parents <xref:System.Data.DataRelation> objets pour le jeu de données est retourné par la <xref:System.Data.DataRow.GetParentRows%2A> (méthode).  
  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> les objets retournés par le <xref:System.Data.DataTable.ParentRelations%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> à utiliser.</param>
        <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir.</param>
        <summary>Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> et du <see cref="T:System.Data.DataRowVersion" /> spécifiés.</summary>
        <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un <xref:System.Data.DataSet>, la collection de tous les parents <xref:System.Data.DataRelation> objets pour le jeu de données est retourné par la <xref:System.Data.DataRow.GetParentRows%2A> (méthode).  
  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> les objets retournés par le <xref:System.Data.DataTable.ParentRelations%2A> propriété.  
  
 Utilisez le <xref:System.Data.DataRow.HasVersion%2A> propriété afin de déterminer si le <xref:System.Data.DataRowVersion> souhaité existe.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.GetParentRows%2A> pour retourner les enfants <xref:System.Data.DataRow> objets pour chaque enfant <xref:System.Data.DataRelation> dans un <xref:System.Data.DataTable>. La valeur de chaque colonne dans la ligne s’affiche ensuite.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.DataRelation" /> n'appartient pas au <see cref="T:System.Data.DataSet" /> de cette ligne.</exception>
        <exception cref="T:System.ArgumentNullException">La ligne est <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">La table enfant de la relation n'est pas la table à laquelle appartient la ligne.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
        <summary>Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" /> et de <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un <xref:System.Data.DataSet>, la collection de tous les parents <xref:System.Data.DataRelation> objets pour le jeu de données est retourné par la <xref:System.Data.DataRow.GetParentRows%2A> (méthode).  
  
 Le <xref:System.Data.DataTable> contient également une collection de <xref:System.Data.DataRelation> les objets retournés par le <xref:System.Data.DataTable.ParentRelations%2A> propriété.  
  
 Utilisez le <xref:System.Data.DataRow.HasVersion%2A> propriété afin de déterminer si le <xref:System.Data.DataRowVersion> souhaité existe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataRow.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique s'il existe des erreurs dans une ligne.</summary>
        <value><see langword="true" /> si la ligne contient une erreur ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasErrors` Retourne `true` le cas échéant <xref:System.Data.DataColumn> objet dans la ligne contient une erreur, ou si le <xref:System.Data.DataRow.RowError%2A> propriété de la <xref:System.Data.DataRow> n’est pas une chaîne vide.  
  
 Lors de la validation des données, vous pouvez définir une erreur sur n’importe quelle colonne dans une ligne. Lorsqu’une colonne de ce type est affiché dans le <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> contrôler, est marqué avec un point d’exclamation rouge pour signaler à l’utilisateur que la colonne est erroné.  
  
 Utilisez <xref:System.Data.DataRow.SetColumnError%2A> pour définir une erreur sur n’importe quelle colonne.  
  
 Utilisez le <xref:System.Data.DataRow.GetColumnError%2A> et `GetColumnsInError` méthodes pour retourner les colonnes avec des erreurs.  
  
 Le <xref:System.Data.DataRow.ClearErrors%2A> méthode efface toutes les erreurs pour la ligne.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.HasErrors%2A> pour rechercher des erreurs. Si la ligne comporte des erreurs, le <xref:System.Data.DataRow.GetColumnsInError%2A> méthode retourne le tableau de colonnes comportant des erreurs qui peuvent ensuite être résolus. Le <xref:System.Data.DataRow.ClearErrors%2A> méthode est ensuite appelée pour effacer toutes les erreurs.  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.HasVersion : System.Data.DataRowVersion -&gt; bool" Usage="dataRow.HasVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne.</param>
        <summary>Obtient une valeur qui indique si une version spécifiée existe.</summary>
        <returns><see langword="true" /> si la version existe ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la méthode <xref:System.Data.DataRow.BeginEdit%2A>.  
  
   
  
## Examples  
 L’exemple suivant utilise la <xref:System.Data.DataRow.HasVersion%2A> méthode pour déterminer si la valeur actuelle d’une colonne et la valeur proposée sont identiques. Dans ce cas, la modification est annulée. Sinon, le <xref:System.Data.DataRow.AcceptChanges%2A> méthode est appelée pour mettre fin à la modification.  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient une valeur qui indique si la colonne spécifiée contient une valeur null.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn -&gt; bool" Usage="dataRow.IsNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" /></param>
        <summary>Obtient une valeur qui indique si le <see cref="T:System.Data.DataColumn" /> spécifié contient une valeur null.</summary>
        <returns><see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant imprime chaque colonne de chaque ligne dans chaque table d’un <xref:System.Data.DataSet>. Si la ligne est définie sur une valeur null, la valeur n’est pas imprimée.  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.IsNull : int -&gt; bool" Usage="dataRow.IsNull columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Index de base zéro de la colonne.</param>
        <summary>Obtient une valeur qui indique si la colonne à l'index spécifié contient une valeur null.</summary>
        <returns><see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant modifie la valeur d’une colonne à une valeur null et utilise ensuite la <xref:System.Data.DataRow.IsNull%2A> méthode pour déterminer si la valeur est null.  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Aucune colonne ne correspond à l'index spécifié par <paramref name="columnIndex" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IsNull : string -&gt; bool" Usage="dataRow.IsNull columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nom de la colonne.</param>
        <summary>Obtient une valeur qui indique si la colonne nommée contient une valeur null.</summary>
        <returns><see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant modifie la valeur d’une colonne à une valeur null et utilise ensuite la <xref:System.Data.DataRow.IsNull%2A> méthode pour déterminer si la valeur est null.  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="columnName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn * System.Data.DataRowVersion -&gt; bool" Usage="dataRow.IsNull (column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" /></param>
        <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
        <summary>Obtient une valeur qui indique si le <see cref="T:System.Data.DataColumn" /> et le <see cref="T:System.Data.DataRowVersion" /> spécifiés contiennent une valeur null.</summary>
        <returns><see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <paramref name="version" /> demandé.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient ou définit les données stockées dans une colonne spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" /> qui contient les données.</param>
        <summary>Obtient ou définit les données stockées dans le <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
        <value>Objet <see cref="T:System.Object" /> qui contient les données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous définissez la propriété, une exception est générée si une exception se produit dans le <xref:System.Data.DataTable.ColumnChanging> événement.  
  
 S’il s’agit d’une modification immédiate, consultez <xref:System.Data.DataRow.EndEdit%2A> pour les exceptions qui peuvent être générées.  
  
   
  
## Examples  
 Les exemples suivants illustrent l’utilisation de la <xref:System.Data.DataRow.Item%2A> propriété pour obtenir et définir la valeur d’un index de colonne spécifique. Le premier exemple obtient la valeur de la première colonne dans n’importe quelle ligne qu’un utilisateur clique dans un <xref:System.Windows.Forms.DataGrid> contrôle. La seconde définit une valeur passée en tant qu’argument à la méthode.  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La colonne n'appartient pas à cette table.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> a la valeur null.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative de définition d'une valeur sur une ligne supprimée a été effectuée.</exception>
        <exception cref="T:System.InvalidCastException">Les types de données de la valeur et de la colonne ne correspondent pas.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Index de base zéro de la colonne.</param>
        <summary>Obtient ou définit les données stockées dans la colonne spécifiée par l'index.</summary>
        <value>Objet <see cref="T:System.Object" /> qui contient les données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous définissez la propriété, une exception est générée si une exception se produit dans le <xref:System.Data.DataTable.ColumnChanging> événement.  
  
 S’il s’agit d’une modification, consultez <xref:System.Data.DataRow.EndEdit%2A> pour les exceptions qui peuvent être générées.  
  
   
  
## Examples  
 Les exemples suivants illustrent l’utilisation de la <xref:System.Data.DataRow.Item%2A> propriété pour obtenir et définir la valeur d’un index de colonne spécifique. Le premier exemple obtient la valeur de la première colonne dans n’importe quelle ligne qu’un utilisateur clique dans un <xref:System.Windows.Forms.DataGrid> contrôle.  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
        <exception cref="T:System.IndexOutOfRangeException">L'argument <paramref name="columnIndex" /> est hors limites.</exception>
        <exception cref="T:System.InvalidCastException">Se produit lorsque vous définissez la valeur et que le <see cref="T:System.Type" /> de la nouvelle valeur ne correspond pas à <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nom de la colonne.</param>
        <summary>Obtient ou définit les données stockées dans la colonne spécifiée par son nom.</summary>
        <value>Objet <see cref="T:System.Object" /> qui contient les données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous définissez la propriété, une exception est générée si une exception se produit dans le <xref:System.Data.DataTable.ColumnChanging> événement.  
  
 S’il s’agit d’une modification immédiate, consultez <xref:System.Data.DataRow.EndEdit%2A> pour les exceptions qui peuvent être générées.  
  
   
  
## Examples  
 Les exemples suivants illustrent l’utilisation de la <xref:System.Data.DataRow.Item%2A> propriété pour obtenir et définir la valeur d’un index de colonne spécifique. Le premier exemple obtient la valeur de la première colonne dans n’importe quelle ligne qu’un utilisateur clique dans un <xref:System.Windows.Forms.DataGrid> contrôle. La seconde définit une valeur passée en tant qu’argument à la méthode.  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
        <exception cref="T:System.InvalidCastException">Se produit lorsque vous définissez une valeur et que son <see cref="T:System.Type" /> ne correspond pas à <see cref="P:System.Data.DataColumn.DataType" />.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Se produit lorsque vous tentez d'insérer une valeur NULL dans une colonne où <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" /> qui contient des informations sur la colonne.</param>
        <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne souhaitée. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
        <summary>Obtient la version spécifiée des données stockées dans le <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
        <value>Objet <see cref="T:System.Object" /> qui contient les données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `version` ne doit pas être confondu avec le <xref:System.Data.DataRow.RowState*> propriété. Le `version` argument décrit l’état des données contenues par la colonne par rapport à la valeur d’origine de la colonne.  
  
 Lorsque vous définissez la propriété, une exception est générée si une exception se produit dans le <xref:System.Data.DataTable.ColumnChanging> événement.  
  
 S’il s’agit d’une modification immédiate, consultez <xref:System.Data.DataRow.EndEdit%2A> pour les exceptions qui peuvent être générées.  
  
   
  
## Examples  
 L’exemple suivant obtient la valeur actuelle d’une cellule sélectionnée dans la <xref:System.Windows.Forms.DataGrid> contrôle.  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La colonne n'appartient pas à la table.</exception>
        <exception cref="T:System.ArgumentNullException">L'argument <paramref name="column" /> contient une valeur null.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La ligne ne possède pas cette version des données.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Index de base zéro de la colonne.</param>
        <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne souhaitée. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
        <summary>Obtient les données stockées dans la colonne, spécifiées par l'index et la version des données à récupérer.</summary>
        <value>Objet <see cref="T:System.Object" /> qui contient les données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez uniquement créer ou mettre à jour une ligne après avoir appelé la <xref:System.Data.DataRow.BeginEdit%2A> méthode ; de même, la <xref:System.Data.DataRow.EndEdit%2A> méthode doit être appelée pour valider la modification. Après avoir appelé la <xref:System.Data.DataRow.EndEdit%2A> (méthode), et avant d’appeler le <xref:System.Data.DataRow.AcceptChanges%2A> (méthode), représentations internes de la version d’origine et nouvelles valeur proposée sont stockées. Par conséquent, jusqu'à ce que vous appeliez la <xref:System.Data.DataRow.AcceptChanges%2A>, vous pouvez utiliser la `version` argument pour spécifier la version de la valeur d’une colonne vous avez besoin, soit le `DataRowVersion.Original` ou `DataRowVersion.Proposed`. Toutefois, dès que vous appelez le <xref:System.Data.DataRow.AcceptChanges%2A> méthode, la version de la colonne revient à `DataRowVersion.Original`. Si la ligne est nouvelle, vous pouvez également passer `DataRowVersion.Default` pour le paramètre afin de récupérer la valeur par défaut de la colonne. Lors du passage `DataRowVersion.Current`, la propriété retourne actuel de valeur, quel que soit sa version.  
  
> [!NOTE]
>  Le <xref:System.Data.DataRow.BeginEdit%2A> méthode est appelée implicitement lorsque vous modifiez la valeur d’un contrôle lié aux données ou lorsqu’un <xref:System.Data.DataRow> objet est ajouté à la <xref:System.Data.DataRowCollection>; le <xref:System.Data.DataRow.EndEdit%2A> méthode est appelée implicitement lorsque vous appelez les méthodes suivantes : le <xref:System.Data.DataRow.AcceptChanges%2A> méthode de la <xref:System.Data.DataRow> objet, le <xref:System.Data.DataTable.AcceptChanges%2A> méthode de la <xref:System.Data.DataTable> objet, ou le <xref:System.Data.DataRow.CancelEdit%2A> (méthode).  
  
 En revanche, le <xref:System.Data.DataRowVersion> énumération `Current` retourne la version des données après la <xref:System.Data.DataRow.EndEdit%2A> méthode a été appelée.  
  
 Le `version` argument ne doit pas être confondu avec le <xref:System.Data.DataRow.RowState*> propriété. Le `version` argument décrit l’état des données contenues par la colonne par rapport à la valeur d’origine de la colonne. Le <xref:System.Data.DataRow.RowState*> propriété décrit l’état de la ligne entière par rapport à son parent <xref:System.Data.DataTable>.  
  
 Lorsque vous définissez la propriété, une exception est générée si une exception se produit dans le <xref:System.Data.DataTable.ColumnChanging> événement.  
  
 S’il s’agit d’une modification immédiate, consultez <xref:System.Data.DataRow.EndEdit%2A> pour les exceptions qui peuvent être générées.  
  
   
  
## Examples  
 L’exemple suivant obtient la valeur actuelle d’une colonne via la <xref:System.Data.DataRow.Item%2A> propriété de la <xref:System.Data.DataRow> objet.  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">L'argument <paramref name="columnIndex" /> est hors limites.</exception>
        <exception cref="T:System.InvalidCastException">Les types de données de la valeur et de la colonne ne correspondent pas.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La ligne ne possède pas cette version des données.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative de définition d'une valeur sur une ligne supprimée a été effectuée.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">Nom de la colonne.</param>
        <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne souhaitée. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
        <summary>Obtient la version spécifiée des données stockées dans la colonne nommée.</summary>
        <value>Objet <see cref="T:System.Object" /> qui contient les données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La version ne doit pas être confondue avec le <xref:System.Data.DataRow.RowState*> propriété. Le `version` argument décrit l’état des données contenues par la colonne par rapport à la valeur d’origine de la colonne. Le <xref:System.Data.DataRow.RowState*> propriété décrit l’état de la ligne entière par rapport à son parent <xref:System.Data.DataTable>.  
  
 Lorsque vous définissez la propriété, une exception est générée si une exception se produit dans le <xref:System.Data.DataTable.ColumnChanging> événement.  
  
 S’il s’agit d’une modification immédiate, consultez <xref:System.Data.DataRow.EndEdit%2A> pour les exceptions qui peuvent être générées.  
  
   
  
## Examples  
 L’exemple suivant obtient la version actuelle des données dans une cellule sélectionnée d’un <xref:System.Windows.Forms.DataGrid> contrôle.  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
        <exception cref="T:System.InvalidCastException">Les types de données de la valeur et de la colonne ne correspondent pas.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La ligne ne possède pas cette version des données.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">La ligne a été supprimée.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemArray : obj[] with get, set" Usage="System.Data.DataRow.ItemArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit toutes les valeurs de cette ligne à l'aide d'un tableau.</summary>
        <value>Tableau de type <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette propriété pour définir ou obtenir les valeurs pour cette ligne dans un tableau. Si vous utilisez cette propriété pour définir des valeurs, le tableau doit avoir la même taille et classement en tant que la collection de colonnes. En passant `null` dans le <xref:System.Data.DataRow.ItemArray%2A> indique qu’aucune valeur n’a été spécifiée.  
  
 Les utilisateurs peuvent générer des exceptions dans le <xref:System.Data.DataTable.ColumnChanging> événement ou la <xref:System.Data.DataTable.RowChanging> événement.  
  
   
  
## Examples  
 Les exemples suivants montrent comment obtenir et définir des valeurs à l’aide de la <xref:System.Data.DataRow.ItemArray%2A> propriété.  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le tableau contient un nombre de colonnes supérieur à celui de la table.</exception>
        <exception cref="T:System.InvalidCastException">Une valeur du tableau ne correspond pas à son <see cref="P:System.Data.DataColumn.DataType" /> dans son <see cref="T:System.Data.DataColumn" /> respectif.</exception>
        <exception cref="T:System.Data.ConstraintException">Une modification a interrompu une contrainte.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Une modification a tenté de changer la valeur d'une colonne en lecture seule.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Une modification a tenté d'insérer une valeur null dans une colonne où le <see cref="P:System.Data.DataColumn.AllowDBNull" /> de l'objet <see cref="T:System.Data.DataColumn" /> est <see langword="false" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">La ligne a été supprimée.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataRow.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Refuse toutes les modifications apportées à la ligne depuis le dernier appel à <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous appelez le <xref:System.Data.DataRow.RejectChanges%2A> (méthode), le <xref:System.Data.DataRow.CancelEdit%2A> méthode est implicitement appelée pour annuler les modifications éventuelles. Si <xref:System.Data.DataRow.RowState*> est supprimée ou modifiée, la ligne revient à ses valeurs précédentes, et <xref:System.Data.DataRow.RowState*> devient non modifié. Si le <xref:System.Data.DataRow.RowState*> est ajouté, la ligne est supprimée.  
  
   
  
## Examples  
 L’exemple suivant crée un simple <xref:System.Data.DataTable> comportant 2 colonnes et 10 lignes. Une fois plusieurs <xref:System.Data.DataRow> sont supprimés avec le <xref:System.Data.DataRow.Delete%2A> (méthode), une des lignes est annulée en appelant <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowError : string with get, set" Usage="System.Data.DataRow.RowError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la description d'erreur personnalisée pour une ligne.</summary>
        <value>Texte décrivant une erreur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilise le <xref:System.Data.DataRow.HasErrors%2A> propriété d’abord déterminer si un <xref:System.Data.DataRow> contient des erreurs.  
  
   
  
## Examples  
 L’exemple suivant définit le texte d’erreur pour dix lignes d’une table affichée dans un <xref:System.Windows.Forms.DataGrid> contrôle.  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberSignature Language="F#" Value="member this.RowState : System.Data.DataRowState" Usage="System.Data.DataRow.RowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'état actuel de la ligne par rapport à sa relation avec <see cref="T:System.Data.DataRowCollection" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Data.DataRowState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Data.DataRow.RowState*> dépend de deux facteurs : le type d’opération a été exécutée sur la ligne et si <xref:System.Data.DataRow.AcceptChanges%2A> a été appelé sur le <xref:System.Data.DataRow>.  
  
   
  
## Examples  
 L’exemple suivant crée tout d’abord un <xref:System.Data.DataTable> avec une colonne, puis crée un seul <xref:System.Data.DataRow>. Comme le <xref:System.Data.DataRow> est créé, ajouté, modifié et supprimé, son <xref:System.Data.DataRow.RowState*> est imprimé.  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberSignature Language="F#" Value="member this.SetAdded : unit -&gt; unit" Usage="dataRow.SetAdded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Modifie le <see cref="P:System.Data.DataRow.RowState" /> d'un <see cref="T:System.Data.DataRow" /> en <see langword="Added" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modifie le <xref:System.Data.DataRow.RowState*> d'un <xref:System.Data.DataRow> en `Added`. Si la ligne actuelle n’est pas dans une une `Unchanged` ou un `Added` d’état, elle lève une <xref:System.InvalidOperationException> avec le message qui `SetAdded` peut uniquement être appelée sur un `DataRow` instance où la `RowState` est `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit la description d'erreur d'une colonne.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : System.Data.DataColumn * string -&gt; unit" Usage="dataRow.SetColumnError (column, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" /> pour lequel définir la description d'erreur.</param>
        <param name="error">Description de l'erreur.</param>
        <summary>Définit la description d'erreur d'une colonne, spécifiée en tant que <see cref="T:System.Data.DataColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour examiner la description de l’erreur, utilisez le <xref:System.Data.DataRow.GetColumnError%2A> (méthode).  
  
 Pour déterminer si des erreurs existent pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.HasErrors%2A> propriété. Par conséquent, vous pouvez utiliser la <xref:System.Data.DataRow.GetColumnsInError%2A> méthode pour récupérer toutes les colonnes avec des erreurs.  
  
 Si `null` ou une chaîne vide est passée dans en tant que le `error` paramètre, le <xref:System.Data.DataRow> se comporte comme si aucune erreur n’a été définie et le <xref:System.Data.DataRow.HasErrors%2A> propriété retournera la valeur false.  
  
 Pour définir une description d’erreur personnalisée sur la ligne entière, utilisez le <xref:System.Data.DataRow.RowError%2A> propriété.  
  
 Pour déterminer si des erreurs existent pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.HasErrors%2A> (méthode).  
  
 Pour effacer toutes les erreurs pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.ClearErrors%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant définit une description d’erreur spécifié <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : int * string -&gt; unit" Usage="dataRow.SetColumnError (columnIndex, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Index de base zéro de la colonne.</param>
        <param name="error">Description de l'erreur.</param>
        <summary>Définit la description d'erreur d'une colonne spécifiée par l'index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode est utilisée pour définir des descriptions d’erreurs personnalisées sur les colonnes spécifiées. Vous pouvez utiliser la <xref:System.Windows.Forms.ErrorProvider> contrôle pour afficher le texte de l’erreur.  
  
 Pour examiner la description de l’erreur, utilisez le <xref:System.Data.DataRow.GetColumnError%2A> (méthode).  
  
 Pour déterminer si des erreurs existent pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.HasErrors%2A> propriété. Par conséquent, vous pouvez utiliser la <xref:System.Data.DataRow.GetColumnsInError%2A> méthode pour récupérer toutes les colonnes avec des erreurs.  
  
 Si `null` ou une chaîne vide est passée dans en tant que le `error` paramètre, le <xref:System.Data.DataRow> se comporte comme si aucune erreur n’a été définie et le <xref:System.Data.DataRow.HasErrors%2A> propriété retournera la valeur false.  
  
 Pour définir une description d’erreur personnalisée sur la ligne entière, utilisez le <xref:System.Data.DataRow.RowError%2A> propriété.  
  
 Pour effacer toutes les erreurs pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.ClearErrors%2A> (méthode).  
  
 Pour définir le texte d’erreur qui s’applique à une ligne entière, définissez le <xref:System.Data.DataRow.RowError%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant définit une description d’erreur spécifié <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">L'argument <paramref name="columnIndex" /> est hors limites</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : string * string -&gt; unit" Usage="dataRow.SetColumnError (columnName, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nom de la colonne.</param>
        <param name="error">Description de l'erreur.</param>
        <summary>Définit la description d'erreur d'une colonne spécifiée par son nom.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom d’une colonne est défini avec la <xref:System.Data.DataColumn.ColumnName%2A> propriété de la <xref:System.Data.DataColumn> classe.  
  
 Pour examiner la description de l’erreur, utilisez le <xref:System.Data.DataRow.GetColumnError%2A> (méthode).  
  
 Pour déterminer si des erreurs existent pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.HasErrors%2A> propriété. Par conséquent, vous pouvez utiliser la <xref:System.Data.DataRow.GetColumnsInError%2A> méthode pour récupérer toutes les colonnes avec des erreurs.  
  
 Si `null` ou une chaîne vide est passée dans en tant que le `error` paramètre, le <xref:System.Data.DataRow> se comporte comme si aucune erreur n’a été définie et le <xref:System.Data.DataRow.HasErrors%2A> propriété retournera la valeur false.  
  
 Pour définir une description d’erreur personnalisée sur la ligne entière, utilisez le <xref:System.Data.DataRow.RowError%2A> propriété.  
  
 Pour déterminer si des erreurs existent pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.HasErrors%2A> (méthode).  
  
 Pour effacer toutes les erreurs pour la collection de colonnes, utilisez le <xref:System.Data.DataRow.ClearErrors%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant définit une description d’erreur spécifié <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberSignature Language="F#" Value="member this.SetModified : unit -&gt; unit" Usage="dataRow.SetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Modifie le <see cref="P:System.Data.DataRow.RowState" /> d'un <see cref="T:System.Data.DataRow" /> en <see langword="Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modifie le <xref:System.Data.DataRow.RowState*> d'un <xref:System.Data.DataRow> en `Modified`. Si la ligne actuelle n’est pas dans une une `Unchanged` ou un `Added` d’état, elle lève une <xref:System.InvalidOperationException> avec le message qui `SetModified` peut uniquement être appelée sur un `DataRow` instance où la `RowState` est `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.SetNull : System.Data.DataColumn -&gt; unit" Usage="dataRow.SetNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" /></param>
        <summary>Affecte une valeur null au <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Data.DataRow.IsNull%2A> méthode pour déterminer si une colonne contient une valeur null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit la ligne parente de <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow -&gt; unit" Usage="dataRow.SetParentRow parentRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nouveau <see cref="T:System.Data.DataRow" /> parent.</param>
        <summary>Définit la ligne parente de <see cref="T:System.Data.DataRow" /> avec le nouveau <see cref="T:System.Data.DataRow" /> parent spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow * System.Data.DataRelation -&gt; unit" Usage="dataRow.SetParentRow (parentRow, relation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nouveau <see cref="T:System.Data.DataRow" /> parent.</param>
        <param name="relation">Relation <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
        <summary>Définit la ligne parente de <see cref="T:System.Data.DataRow" /> avec les nouveaux <see cref="T:System.Data.DataRow" /> et <see cref="T:System.Data.DataRelation" /> parents spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant définit la ligne parente d’une ligne enfant spécifique.  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Une des lignes n'appartient pas à une table</exception>
        <exception cref="T:System.ArgumentNullException">Une des lignes est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La relation n'appartient pas au <see cref="T:System.Data.DataRelationCollection" /> de l'objet <see cref="T:System.Data.DataSet" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Le <see cref="T:System.Data.DataTable" /> enfant de la relation ne correspond pas à la table à laquelle appartient cette ligne.</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataRow.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Data.DataTable" /> pour lequel cette ligne possède un schéma.</summary>
        <value><see cref="T:System.Data.DataTable" /> auquel cette ligne appartient.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Data.DataRow> n’appartient pas nécessairement à la collection de lignes d’une table. Ce comportement se produit lorsque le <xref:System.Data.DataRow> a été créé mais ne pas ajouté à la <xref:System.Data.DataRowCollection>. Si le <xref:System.Data.DataRow.RowState*> retourne de la propriété `DataRowState.Detached`, la ligne n’est pas dans n’importe quelle collection.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.DataRow.Table%2A> propriété pour retourner une référence à la collection de colonnes de la <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>