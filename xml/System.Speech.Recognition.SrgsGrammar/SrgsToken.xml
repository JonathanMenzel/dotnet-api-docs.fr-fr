<Type Name="SrgsToken" FullName="System.Speech.Recognition.SrgsGrammar.SrgsToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa77b77f058f82ea6c785de084d18f4dbb88a9e2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30528523" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SrgsToken : System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsToken extends System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsToken&#xA;Inherits SrgsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsToken : System::Speech::Recognition::SrgsGrammar::SrgsElement" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.SrgsGrammar.SrgsElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un mot ou une expression courte qui peut être identifiée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 À l’aide des membres de la <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> (classe), vous pouvez spécifier trois formes d’un mot : le <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> formulaire, le <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> formulaire et personnalisée <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> pour word.  
  
 Si plusieurs mots sont stockés dans un seul <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> de l’objet, chacun est traité comme un jeton différent en interne et dans le résultat.  
  
 Cette classe représente le `token` élément défini par le World Wide Web Consortium (W3C) [spécification de grammaire de reconnaissance vocale (SRGS) Version 1.0.](http://go.microsoft.com/fwlink/?LinkId=201761). Pour plus d’informations sur la SRGS `token` élément et les détails de la prise en charge par System.Speech, consultez [jeton élément](http://msdn.microsoft.com/library/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsToken (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsToken(System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte de la nouvelle instance de classe <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> et spécifie le texte à reconnaître.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crée un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> dont l’objet <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> est définie initialement sur la valeur de le `text` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="text" /> est vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public string Display { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Display" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
      <MemberSignature Language="VB.NET" Value="Public Property Display As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Display { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le formulaire d'affichage du texte à énoncer.</summary>
        <value>Représentation du jeton tel qu'il doit être affiché.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bien qu’ils représentent généralement la même valeur, le <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> formulaire peut être différent de celui du <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> forment un mot ou une phrase dans un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. Par exemple, le formulaire d’affichage peut être un acronyme, tels que « USA », tandis que le contenu qui est énoncée et auquel le <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> s’applique, est « États-Unis ».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Une tentative est effectuée pour attribuer à <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" /> la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Tentative d'assignation d'une chaîne vide à <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Pronunciation">
      <MemberSignature Language="C#" Value="public string Pronunciation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pronunciation" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
      <MemberSignature Language="VB.NET" Value="Public Property Pronunciation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pronunciation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne qui définit la prononciation du jeton.</summary>
        <value>Retourne une chaîne contenant les téléphones de l'alphabet phonétique spécifié dans <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Téléphones sont des lettres ou des symboles qui décrivent les sons de reconnaissance vocale. System.Speech prend en charge trois phonétique alphabets permettant de spécifier la prononciation personnalisée : la valeur de téléphone universel (UPS), le jeu d’API Speech (SAPI) téléphone et l’Alphabet phonétique International (IPA). Les téléphones spécifiés dans <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> doit correspondre à l’alphabet phonétique spécifié dans <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>. Consultez [lexiques et phonétique Alphabets](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) pour plus d’informations.  
  
 Les téléphones spécifiés dans <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> indiquer comment le contenu de <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> doit être prononcé pour la reconnaissance réussie.  Le moteur de reconnaissance vocale utilise la prononciation spécifiée dans <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> pour faire correspondre les entrées vocales et retourne la chaîne contenue par <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> dans le résultat de la reconnaissance.  
  
 Si le téléphone n’est pas délimitées par un espace ou la chaîne spécifiée contient un téléphone non reconnu, le moteur de reconnaissance ne reconnaît pas la prononciation spécifiée comme une prononciation valide du mot contenu par <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.  
  
 Prononciation spécifiée dans <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> sont prioritaires sur prononciation spécifiée dans les lexiques associées à une grammaire ou un moteur de reconnaissance. En outre, la prononciation dans le <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> propriété s’applique uniquement à l’occurrence du mot ou une expression contenu par <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.  
  
   
  
## Examples  
 La grammaire dans l’exemple suivant contient les mots argot et est également un mot rare : « whatchamacallit ». Ajout d’une prononciation inline personnalisé, à l’aide la <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> propriété de la <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> classe peut améliorer la précision de la reconnaissance du mot « whatchamacallit », ainsi que pour l’expression entière qui le contient. L’exemple utilise des téléphones à partir de la Microsoft Universal téléphone défini (UPS) pour définir la prononciation personnalisée.  
  
```  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an instance of the in-process recognizer.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine(new System.Globalization.CultureInfo("en-US")))  
      {  
  
        // Build the SrgsOneOf objects with alternative choices for the slang phrase.  
        SrgsOneOf gimme = new SrgsOneOf(  
          new string[] { "give me", "gimme", "hand me", "ha'me" });  
        SrgsOneOf the = new SrgsOneOf(new string[] { "the", "duh" });  
  
        // Build the one-of element that contains the pronunciation.  
        SrgsItem thing = new SrgsItem("thingamajig");  
        SrgsItem whatcha = new SrgsItem();  
        SrgsToken callit = new SrgsToken("whatchamacallit");  
        callit.Pronunciation = "W AE T CH AE M AE K AA L IH T";  
        whatcha.Add(callit);  
        SrgsOneOf what = new SrgsOneOf(new SrgsItem[] {thing, whatcha});  
  
        // Create the rule from the SrgsOneOf objects.  
        SrgsRule slangRule = new SrgsRule("slang", gimme, the, what);  
  
        // Build an SrgsDocument object from the rule and set the phonetic alphabet.  
        SrgsDocument tokenPron = new SrgsDocument(slangRule);  
        tokenPron.PhoneticAlphabet = SrgsPhoneticAlphabet.Ups;  
  
        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  
        Grammar g_Slang = new Grammar(tokenPron);  
        g_Slang.Name = ("Slang Pronunciation");  
        recognizer.LoadGrammarAsync(g_Slang);  
  
        // Configure recognizer input.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Start asynchronous recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Recognized phrase: " + e.Result.Text);  
      Console.WriteLine("Confidence: " + e.Result.Confidence);  
      Console.WriteLine("  Word summary: ");  
      foreach (RecognizedWordUnit word in e.Result.Words)  
      {  
        Console.WriteLine(  
          "    Lexical form ({1})" +  
          " Pronunciation ({0})" +  
          " Confidence ({2})",  
          word.Pronunciation, word.LexicalForm, word.Confidence);  
      }  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Une tentative est effectuée pour attribuer à <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" /> la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Tentative d'assignation d'une chaîne vide à <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la forme écrite du mot qui doit être énoncé.</summary>
        <value>Texte contenu dans l'instance de classe <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bien qu’ils représentent généralement la même valeur, le <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> formulaire peut être différent de celui du <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> forment un mot ou une phrase dans un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>. Par exemple, le <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> formulaire peut être un acronyme, tels que « USA », tandis que le contenu qui est énoncée et auquel le <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> s’applique, est « États-Unis ».  
  
 La valeur par défaut pour le <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> propriété est une chaîne vide : « ».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Une tentative est effectuée pour attribuer à <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" /> la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Tentative d'assignation d'une chaîne vide à <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />.</exception>
        <exception cref="T:System.ArgumentException">Tentative d'assignation d'une chaîne qui contient un guillemet (") à <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>