<Type Name="List&lt;T&gt;" FullName="System.Collections.Generic.List&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="649dc28c23dbde95771a5a23c8feb6e1086637c4" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33683960" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class List&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit List`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.List`1" />
  <TypeSignature Language="VB.NET" Value="Public Class List(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class List : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="f3f44-101">Type d'éléments de la liste.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3f44-101">The type of elements in the list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="f3f44-102">Représente une liste fortement typée d'objets accessibles par index.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3f44-102">Represents a strongly typed list of objects that can be accessed by index.</span>
      </span>
      <span data-ttu-id="f3f44-103">Fournit des méthodes de recherche, de tri et de manipulation de listes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3f44-103">Provides methods to search, sort, and manipulate lists.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-104">Le <xref:System.Collections.Generic.List%601> classe est l’équivalent générique de la <xref:System.Collections.ArrayList> classe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-104">The <xref:System.Collections.Generic.List%601> class is the generic equivalent of the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="f3f44-105">Il implémente la <xref:System.Collections.Generic.IList%601> requis de l’interface générique à l’aide d’un tableau dont la taille est augmentée de manière dynamique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-105">It implements the <xref:System.Collections.Generic.IList%601> generic interface by using an array whose size is dynamically increased as required.</span></span>  
  
 <span data-ttu-id="f3f44-106">Vous pouvez ajouter des éléments à un <xref:System.Collections.Generic.List%601> à l’aide de la <xref:System.Collections.Generic.List%601.Add%2A> ou <xref:System.Collections.Generic.List%601.AddRange%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="f3f44-106">You can add items to a <xref:System.Collections.Generic.List%601> by using the <xref:System.Collections.Generic.List%601.Add%2A> or <xref:System.Collections.Generic.List%601.AddRange%2A> methods.</span></span>  
  
 <span data-ttu-id="f3f44-107">La <xref:System.Collections.Generic.List%601> classe utilise un comparateur d’égalité et un comparateur de classement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-107">The <xref:System.Collections.Generic.List%601> class uses both an equality comparer and an ordering comparer.</span></span>  
  
-   <span data-ttu-id="f3f44-108">Les méthodes telles que <xref:System.Collections.Generic.List%601.Contains%2A>, <xref:System.Collections.Generic.List%601.IndexOf%2A>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A>, et <xref:System.Collections.Generic.Dictionary%602.Remove%2A> utilisent un comparateur d’égalité pour les éléments de liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-108">Methods such as <xref:System.Collections.Generic.List%601.Contains%2A>, <xref:System.Collections.Generic.List%601.IndexOf%2A>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A>, and <xref:System.Collections.Generic.Dictionary%602.Remove%2A> use an equality comparer for the list elements.</span></span> <span data-ttu-id="f3f44-109">Le comparateur d’égalité par défaut pour le type `T` est déterminé comme suit.</span><span class="sxs-lookup"><span data-stu-id="f3f44-109">The default equality comparer for type `T` is determined as follows.</span></span> <span data-ttu-id="f3f44-110">Si type `T` implémente la <xref:System.IEquatable%601> interface générique, le comparateur d’égalité est la <xref:System.IEquatable%601.Equals%28%600%29> méthode de cette interface ; sinon, le comparateur d’égalité par défaut est <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-110">If type `T` implements the <xref:System.IEquatable%601> generic interface, then the equality comparer is the <xref:System.IEquatable%601.Equals%28%600%29> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="f3f44-111">Les méthodes telles que <xref:System.Collections.Generic.List%601.BinarySearch%2A> et <xref:System.Collections.Generic.List%601.Sort%2A> utilisent un comparateur de classement pour les éléments de liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-111">Methods such as <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> use an ordering comparer for the list elements.</span></span> <span data-ttu-id="f3f44-112">Le comparateur par défaut pour le type `T` est déterminé comme suit.</span><span class="sxs-lookup"><span data-stu-id="f3f44-112">The default comparer for type `T` is determined as follows.</span></span>  <span data-ttu-id="f3f44-113">Si type `T` implémente la <xref:System.IComparable%601> interface générique, le comparateur par défaut est la <xref:System.IComparable%601.CompareTo%28%600%29> méthode de cette interface ; sinon, si type `T` implémente non générique <xref:System.IComparable> interface, puis la valeur par défaut comparateur est le <xref:System.IComparable.CompareTo%28System.Object%29> méthode de cette interface.</span><span class="sxs-lookup"><span data-stu-id="f3f44-113">If type `T` implements the <xref:System.IComparable%601> generic interface, then the default comparer is the <xref:System.IComparable%601.CompareTo%28%600%29> method of that interface; otherwise, if type `T` implements the nongeneric <xref:System.IComparable> interface, then the default comparer is the <xref:System.IComparable.CompareTo%28System.Object%29> method of that interface.</span></span> <span data-ttu-id="f3f44-114">Si type `T` n’implémente aucune interface, il n’existe aucun comparateur par défaut et un délégué de comparateur de comparaison doit être fourni explicitement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-114">If type `T` implements neither interface, then there is no default comparer, and a comparer or comparison delegate must be provided explicitly.</span></span>  
  
 <span data-ttu-id="f3f44-115">Le <xref:System.Collections.Generic.List%601> n’est pas garanti d’être triées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-115">The <xref:System.Collections.Generic.List%601> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="f3f44-116">Vous devez trier les <xref:System.Collections.Generic.List%601> avant d’effectuer des opérations (telles que <xref:System.Collections.Generic.List%601.BinarySearch%2A>) qui nécessitent la <xref:System.Collections.Generic.List%601> à trier.</span><span class="sxs-lookup"><span data-stu-id="f3f44-116">You must sort the <xref:System.Collections.Generic.List%601> before performing operations (such as <xref:System.Collections.Generic.List%601.BinarySearch%2A>) that require the <xref:System.Collections.Generic.List%601> to be sorted.</span></span>  
  
 <span data-ttu-id="f3f44-117">Éléments de cette collection est accessible à l’aide d’un index d’entiers.</span><span class="sxs-lookup"><span data-stu-id="f3f44-117">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="f3f44-118">Index de cette collection sont de base zéro.</span><span class="sxs-lookup"><span data-stu-id="f3f44-118">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="f3f44-119">Pour les très volumineux <xref:System.Collections.Generic.List%601> des objets, vous pouvez augmenter la capacité maximale de 2 milliards des éléments sur un système 64 bits en définissant le `enabled` attribut de l’élément de configuration `true` dans l’environnement d’exécution.</span><span class="sxs-lookup"><span data-stu-id="f3f44-119">For very large <xref:System.Collections.Generic.List%601> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="f3f44-120"><xref:System.Collections.Generic.List%601> accepte `null` comme une valeur valide pour la référence de types et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="f3f44-120"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="f3f44-121">Pour obtenir une version immuable de le <xref:System.Collections.Generic.List%601> de classe, consultez <xref:System.Collections.Immutable.ImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-121">For an immutable version of the <xref:System.Collections.Generic.List%601> class, see <xref:System.Collections.Immutable.ImmutableList%601>.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="f3f44-122">Considérations sur les performances</span><span class="sxs-lookup"><span data-stu-id="f3f44-122">Performance Considerations</span></span>  
 <span data-ttu-id="f3f44-123">Afin de décider s’il faut utiliser le <xref:System.Collections.Generic.List%601> ou <xref:System.Collections.ArrayList> (classe), qui ont des fonctionnalités similaires, n’oubliez pas que la <xref:System.Collections.Generic.List%601> classe exécute mieux dans la plupart des cas et est de type sécurisé.</span><span class="sxs-lookup"><span data-stu-id="f3f44-123">In deciding whether to use the <xref:System.Collections.Generic.List%601> or <xref:System.Collections.ArrayList> class, both of which have similar functionality, remember that the <xref:System.Collections.Generic.List%601> class performs better in most cases and is type safe.</span></span> <span data-ttu-id="f3f44-124">Si un type référence est utilisé pour le type `T` de la <xref:System.Collections.Generic.List%601> (classe), le comportement des deux classes est identique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-124">If a reference type is used for type `T` of the <xref:System.Collections.Generic.List%601> class, the behavior of the two classes is identical.</span></span> <span data-ttu-id="f3f44-125">Toutefois, si un type valeur est utilisé pour le type `T`, vous devez tenir compte des problèmes d’implémentation et boxing.</span><span class="sxs-lookup"><span data-stu-id="f3f44-125">However, if a value type is used for type `T`, you need to consider implementation and boxing issues.</span></span>  
  
 <span data-ttu-id="f3f44-126">Si un type valeur est utilisé pour le type `T`, le compilateur génère une implémentation de la <xref:System.Collections.Generic.List%601> classe spécifiquement pour ce type de valeur.</span><span class="sxs-lookup"><span data-stu-id="f3f44-126">If a value type is used for type `T`, the compiler generates an implementation of the <xref:System.Collections.Generic.List%601> class specifically for that value type.</span></span> <span data-ttu-id="f3f44-127">Cela signifie que d’un élément de liste d’un <xref:System.Collections.Generic.List%601> objet n’a pas à être convertie (boxed) avant que l’élément peut être utilisé, et après la création des éléments de liste environ 500 la mémoire économisée sans boxing des éléments de liste est supérieure à la mémoire utilisée pour générer l’implémentation de classe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-127">That means a list element of a <xref:System.Collections.Generic.List%601> object does not have to be boxed before the element can be used, and after about 500 list elements are created the memory saved not boxing list elements is greater than the memory used to generate the class implementation.</span></span>  
  
 <span data-ttu-id="f3f44-128">Vérifiez le type de valeur utilisé pour le type `T` implémente la <xref:System.IEquatable%601> interface générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-128">Make certain the value type used for type `T` implements the <xref:System.IEquatable%601> generic interface.</span></span> <span data-ttu-id="f3f44-129">Si non, les méthodes telles que <xref:System.Collections.Generic.List%601.Contains%2A> doit appeler le <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> (méthode), qui procède à l’élément de liste affecté.</span><span class="sxs-lookup"><span data-stu-id="f3f44-129">If not, methods such as <xref:System.Collections.Generic.List%601.Contains%2A> must call the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, which boxes the affected list element.</span></span> <span data-ttu-id="f3f44-130">Si le type de valeur implémente la <xref:System.IComparable> interface et que vous possédez le code source, implémentez également le <xref:System.IComparable%601> interface générique pour éviter le <xref:System.Collections.Generic.List%601.BinarySearch%2A> et <xref:System.Collections.Generic.List%601.Sort%2A> méthodes de boxing des éléments de liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-130">If the value type implements the <xref:System.IComparable> interface and you own the source code, also implement the <xref:System.IComparable%601> generic interface to prevent the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods from boxing list elements.</span></span> <span data-ttu-id="f3f44-131">Si vous ne possédez pas le code source, passez un <xref:System.Collections.Generic.IComparer%601> de l’objet à la <xref:System.Collections.Generic.List%601.BinarySearch%2A> et <xref:System.Collections.Generic.List%601.Sort%2A> méthodes</span><span class="sxs-lookup"><span data-stu-id="f3f44-131">If you do not own the source code, pass an <xref:System.Collections.Generic.IComparer%601> object to the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods</span></span>  
  
 <span data-ttu-id="f3f44-132">Il est à votre avantage d’utiliser l’implémentation spécifique au type de la <xref:System.Collections.Generic.List%601> classe au lieu d’utiliser la <xref:System.Collections.ArrayList> classe ou écrire vous-même une collection de wrappers fortement typés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-132">It is to your advantage to use the type-specific implementation of the <xref:System.Collections.Generic.List%601> class instead of using the <xref:System.Collections.ArrayList> class or writing a strongly typed wrapper collection yourself.</span></span> <span data-ttu-id="f3f44-133">La raison est votre implémentation doit faire ce que le .NET Framework n’existe pour vous, et le common language runtime peut partager code Microsoft intermediate language et les métadonnées, qui ne peut pas de votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-133">The reason is your implementation must do what the .NET Framework does for you already, and the common language runtime can share Microsoft intermediate language code and metadata, which your implementation cannot.</span></span>  
  
## <a name="f-considerations"></a><span data-ttu-id="f3f44-134">Considérations relatives à la F #</span><span class="sxs-lookup"><span data-stu-id="f3f44-134">F# Considerations</span></span>  
 <span data-ttu-id="f3f44-135">La <xref:System.Collections.Generic.List%601> classe est rarement utilisée dans le code F #.</span><span class="sxs-lookup"><span data-stu-id="f3f44-135">The <xref:System.Collections.Generic.List%601> class is used infrequently in F# code.</span></span>  <span data-ttu-id="f3f44-136">Au lieu de cela, [répertorie](http://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), qui sont des listes immuables, liée unique, sont généralement préférée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-136">Instead, [Lists](http://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), which are immutable, singly-linked lists, are typically preferred.</span></span> <span data-ttu-id="f3f44-137">Une liste de F # fournit une série chronologique, immuable de valeurs et est pris en charge pour une utilisation dans le développement de style fonctionnel.</span><span class="sxs-lookup"><span data-stu-id="f3f44-137">An F# List provides an ordered, immutable series of values, and is supported for use in functional-style development.</span></span> <span data-ttu-id="f3f44-138">Lorsqu’il est utilisé à partir de F #, le <xref:System.Collections.Generic.List%601> classe est généralement désigné par le [ResizeArray\<' t >](https://msdn.microsoft.com/library/ee353447.aspx) pour éviter les conflits avec F # répertorie abréviation de type</span><span class="sxs-lookup"><span data-stu-id="f3f44-138">When used from F#, the <xref:System.Collections.Generic.List%601> class is typically referred to by the  [ResizeArray\<'T>](https://msdn.microsoft.com/library/ee353447.aspx) type abbreviation to avoid naming conflicts with F# Lists</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-139">L’exemple suivant montre comment ajouter, supprimer et insérer un objet métier simple dans un <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-139">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="f3f44-140">L’exemple suivant illustre plusieurs propriétés et méthodes de la <xref:System.Collections.Generic.List%601> classe générique de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-140">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class of type string.</span></span> <span data-ttu-id="f3f44-141">(Pour obtenir un exemple d’un <xref:System.Collections.Generic.List%601> de types complexes, consultez la <xref:System.Collections.Generic.List%601.Contains%2A> méthode.)</span><span class="sxs-lookup"><span data-stu-id="f3f44-141">(For an example of a <xref:System.Collections.Generic.List%601> of complex types, see the <xref:System.Collections.Generic.List%601.Contains%2A> method.)</span></span>  
  
 <span data-ttu-id="f3f44-142">Le constructeur par défaut est utilisé pour créer une liste de chaînes avec la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="f3f44-142">The default constructor is used to create a list of strings with the default capacity.</span></span> <span data-ttu-id="f3f44-143">Le <xref:System.Collections.Generic.List%601.Capacity%2A> propriété s’affiche, puis la <xref:System.Collections.Generic.List%601.Add%2A> méthode est utilisée pour ajouter plusieurs éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-143">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="f3f44-144">Les éléments sont répertoriés et la <xref:System.Collections.Generic.List%601.Capacity%2A> propriété s’affiche à nouveau, avec le <xref:System.Collections.Generic.List%601.Count%2A> propriété, pour indiquer que la capacité a été augmentée en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="f3f44-144">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="f3f44-145">Le <xref:System.Collections.Generic.List%601.Contains%2A> méthode est utilisée pour tester la présence d’un élément dans la liste, le <xref:System.Collections.Generic.List%601.Insert%2A> méthode est utilisée pour insérer un nouvel élément au milieu de la liste, et le contenu de la liste s’affiche à nouveau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-145">The <xref:System.Collections.Generic.List%601.Contains%2A> method is used to test for the presence of an item in the list, the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert a new item in the middle of the list, and the contents of the list are displayed again.</span></span>  
  
 <span data-ttu-id="f3f44-146">La valeur par défaut <xref:System.Collections.Generic.List%601.Item%2A> (l’indexeur en c#) de propriété est utilisée pour récupérer un élément, le <xref:System.Collections.Generic.List%601.Remove%2A> méthode est utilisée pour supprimer la première instance de l’élément dupliqué ajouté précédemment, et le contenu s’affiche à nouveau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-146">The default <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) is used to retrieve an item, the <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item added earlier, and the contents are displayed again.</span></span> <span data-ttu-id="f3f44-147">Le <xref:System.Collections.Generic.List%601.Remove%2A> méthode supprime toujours la première instance qu’elle rencontre.</span><span class="sxs-lookup"><span data-stu-id="f3f44-147">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 <span data-ttu-id="f3f44-148">Le <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode permet de réduire la capacité à correspondre au nombre et le <xref:System.Collections.Generic.List%601.Capacity%2A> et <xref:System.Collections.Generic.List%601.Count%2A> propriétés sont affichées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-148">The <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="f3f44-149">Si la capacité inutilisée avait été inférieure à 10 % de la capacité totale, la liste n’aurait pas été redimensionnée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-149">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span>  
  
 <span data-ttu-id="f3f44-150">Enfin, le <xref:System.Collections.Generic.List%601.Clear%2A> méthode est utilisée pour supprimer tous les éléments dans la liste et le <xref:System.Collections.Generic.List%601.Capacity%2A> et <xref:System.Collections.Generic.List%601.Count%2A> propriétés sont affichées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-150">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="f3f44-151">Statique public (<see langword="Shared" /> en Visual Basic) de ce type sont thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3f44-151">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="f3f44-152">Il n'est pas garanti que les membres d'instance soient thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3f44-152">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="f3f44-153">Il est possible d’effectuer plusieurs opérations de lecture sur un <see cref="T:System.Collections.Generic.List`1" />, mais les problèmes qui peuvent se produire si la collection est modifiée alors qu’il est lu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3f44-153">It is safe to perform multiple read operations on a <see cref="T:System.Collections.Generic.List`1" />, but issues can occur if the collection is modified while it’s being read.</span>
      </span>
      <span data-ttu-id="f3f44-154">Pour garantir la sécurité des threads, de verrouiller la collection pendant une lecture ou de l’opération d’écriture.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3f44-154">To ensure thread safety, lock the collection during a read or write operation.</span>
      </span>
      <span data-ttu-id="f3f44-155">Pour activer une collection accessible par plusieurs threads pour la lecture et en écriture, vous devez implémenter votre propre synchronisation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3f44-155">To enable a collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
      <span data-ttu-id="f3f44-156">Pour les collections de synchronisation intégrée, consultez les classes dans le <see cref="N:System.Collections.Concurrent" /> espace de noms.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3f44-156">For collections with built-in synchronization, see the classes in the <see cref="N:System.Collections.Concurrent" /> namespace.</span>
      </span>
      <span data-ttu-id="f3f44-157">Pour une alternative thread-safe, consultez la <see cref="T:System.Collections.Immutable.ImmutableList`1" /> classe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3f44-157">For an inherently thread–safe alternative, see the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Immutable.ImmutableList`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-158">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-158">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-159">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.List`1" /> qui est vide et possède la capacité initiale par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-159">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-160">La capacité d’un <xref:System.Collections.Generic.List%601> est le nombre d’éléments qui le <xref:System.Collections.Generic.List%601> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="f3f44-160">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="f3f44-161">Lorsque des éléments sont ajoutés à un <xref:System.Collections.Generic.List%601>, la capacité est automatiquement augmentée si nécessaire, en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-161">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f3f44-162">Si la taille de la collection peut être estimée à l’aide de la <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructeur et la spécification de la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-162">If the size of the collection can be estimated, using the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor and specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-163">La capacité peut être diminuée en appelant le <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode ou en définissant le <xref:System.Collections.Generic.List%601.Capacity%2A> propriété explicitement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-163">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="f3f44-164">Réduction de la capacité réalloue la mémoire et copie tous les éléments dans le <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-164">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-165">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-165">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-166">L’exemple suivant montre le constructeur par défaut de la <xref:System.Collections.Generic.List%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-166">The following example demonstrates the default constructor of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="f3f44-167">Le constructeur par défaut crée une liste avec la capacité par défaut, comme indiqué en affichant la <xref:System.Collections.Generic.List%601.Capacity%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f3f44-167">The default constructor creates a list with the default capacity, as demonstrated by displaying the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
 <span data-ttu-id="f3f44-168">L’exemple ajoute, insère et supprime les éléments en indiquant comment la capacité change à mesure que ces méthodes sont utilisées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-168">The example adds, inserts, and removes items, showing how the capacity changes as these methods are used.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="f3f44-169">Collection dont les éléments sont copiés dans la nouvelle liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-169">The collection whose elements are copied to the new list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-170">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.List`1" /> qui contient des éléments copiés à partir de la collection spécifiée et qui possède une capacité suffisante pour accepter le nombre d'éléments copiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-170">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-171">Les éléments sont copiés dans le <xref:System.Collections.Generic.List%601> dans le même ordre qu’ils sont lus par l’énumérateur de la collection.</span><span class="sxs-lookup"><span data-stu-id="f3f44-171">The elements are copied onto the <xref:System.Collections.Generic.List%601> in the same order they are read by the enumerator of the collection.</span></span>  
  
 <span data-ttu-id="f3f44-172">Ce constructeur est un O (*n*) opération, où *n* est le nombre d’éléments dans `collection`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-172">This constructor is an O(*n*) operation, where *n* is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-173">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.%23ctor%2A> constructeur et diverses méthodes de la <xref:System.Collections.Generic.List%601> classe qui agissent sur les plages.</span><span class="sxs-lookup"><span data-stu-id="f3f44-173">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%2A> constructor and various methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f3f44-174">Un tableau de chaînes est créé et passé au constructeur, remplissage de la liste avec les éléments du tableau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-174">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="f3f44-175">Le <xref:System.Collections.Generic.List%601.Capacity%2A> propriété est ensuite affichée, pour indiquer que la capacité initiale est exactement ce qui est nécessaire pour contenir les éléments d’entrée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-175">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is then displayed, to show that the initial capacity is exactly what is required to hold the input elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-176">
            <paramref name="collection" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-176">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="f3f44-177">Nombre d'éléments que la nouvelle liste peut initialement stocker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-177">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-178">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.List`1" /> qui est vide et a la capacité initiale spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-178">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-179">La capacité d’un <xref:System.Collections.Generic.List%601> est le nombre d’éléments qui le <xref:System.Collections.Generic.List%601> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="f3f44-179">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="f3f44-180">Lorsque des éléments sont ajoutés à un <xref:System.Collections.Generic.List%601>, la capacité est automatiquement augmentée si nécessaire, en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-180">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f3f44-181">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite d’avoir à effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-181">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-182">La capacité peut être diminuée en appelant le <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode ou en définissant le <xref:System.Collections.Generic.List%601.Capacity%2A> propriété explicitement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-182">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="f3f44-183">Réduction de la capacité réalloue la mémoire et copie tous les éléments dans le <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-183">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-184">Ce constructeur est un O (*n*) opération, où *n* est `capacity`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-184">This constructor is an O(*n*) operation, where *n* is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-185">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructeur.</span><span class="sxs-lookup"><span data-stu-id="f3f44-185">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="f3f44-186">A <xref:System.Collections.Generic.List%601> de chaînes avec une capacité de 4 est créé, parce que la dernière taille de la liste doit être exactement de 4.</span><span class="sxs-lookup"><span data-stu-id="f3f44-186">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="f3f44-187">La liste est remplie avec quatre chaînes, et une copie en lecture seule est créée à l’aide de la <xref:System.Collections.Generic.List%601.AsReadOnly%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-187">The list is populated with four strings, and a read-only copy is created by using the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-188">
            <paramref name="capacity" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-188">
              <paramref name="capacity" /> is less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-189">Objet à ajouter à la fin de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-189">The object to be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-190">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-190">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-191">Ajoute un objet à la fin de la <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-191">Adds an object to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-192"><xref:System.Collections.Generic.List%601> accepte `null` comme une valeur valide pour la référence de types et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="f3f44-192"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="f3f44-193">Si <xref:System.Collections.Generic.List%601.Count%2A> est déjà égale à <xref:System.Collections.Generic.List%601.Capacity%2A>, la capacité de le <xref:System.Collections.Generic.List%601> est augmentée en réallouant automatiquement le tableau interne, et les éléments existants sont copiés dans le nouveau tableau avant le nouvel élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="f3f44-193">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="f3f44-194">Si <xref:System.Collections.Generic.List%601.Count%2A> est inférieure à <xref:System.Collections.Generic.List%601.Capacity%2A>, cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-194">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="f3f44-195">Si la capacité doit être augmentée pour intégrer le nouvel élément, cette méthode devient un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-195">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-196">L’exemple suivant montre comment ajouter, supprimer et insérer un objet métier simple dans un <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-196">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="f3f44-197">L’exemple suivant illustre plusieurs propriétés et méthodes de la <xref:System.Collections.Generic.List%601> classe générique, y compris le <xref:System.Collections.Generic.List%601.Add%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-197">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class, including the <xref:System.Collections.Generic.List%601.Add%2A> method.</span></span> <span data-ttu-id="f3f44-198">Le constructeur par défaut est utilisé pour créer une liste de chaînes avec une capacité de 0.</span><span class="sxs-lookup"><span data-stu-id="f3f44-198">The default constructor is used to create a list of strings with a capacity of 0.</span></span> <span data-ttu-id="f3f44-199">Le <xref:System.Collections.Generic.List%601.Capacity%2A> propriété s’affiche, puis la <xref:System.Collections.Generic.List%601.Add%2A> méthode est utilisée pour ajouter plusieurs éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-199">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed, and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="f3f44-200">Les éléments sont répertoriés et la <xref:System.Collections.Generic.List%601.Capacity%2A> propriété s’affiche à nouveau, avec le <xref:System.Collections.Generic.List%601.Count%2A> propriété, pour indiquer que la capacité a été augmentée en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="f3f44-200">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="f3f44-201">Autres propriétés et méthodes permettent de rechercher, insérer et supprimer des éléments de la liste et enfin pour effacer la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-201">Other properties and methods are used to search for, insert, and remove elements from the list, and finally to clear the list.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="f3f44-202">Collection dont les éléments devraient être ajoutés à la fin de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-202">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-203">La collection elle-même ne peut pas avoir la valeur <see langword="null" />, mais elle peut contenir des éléments qui sont <see langword="null" />, si le type <c>T</c> est un type référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-203">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <c>T</c> is a reference type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-204">Ajoute les éléments de la collection spécifiée à la fin de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-204">Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-205">L’ordre des éléments dans la collection est conservé dans le <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-205">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-206">Si la nouvelle <xref:System.Collections.Generic.List%601.Count%2A> (actuel <xref:System.Collections.Generic.List%601.Count%2A> plus la taille de la collection) sera supérieur à <xref:System.Collections.Generic.List%601.Capacity%2A>, le capacité de le <xref:System.Collections.Generic.List%601> est augmentée en réallouant automatiquement le tableau interne pour prendre en compte les nouveaux éléments et la éléments existants sont copiés dans le nouveau tableau avant que les nouveaux éléments sont ajoutés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-206">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="f3f44-207">Si le <xref:System.Collections.Generic.List%601> peut prendre en charge les nouveaux éléments sans augmenter la <xref:System.Collections.Generic.List%601.Capacity%2A>, cette méthode est un O (*n*) opération, où *n* est le nombre d’éléments à ajouter.</span><span class="sxs-lookup"><span data-stu-id="f3f44-207">If the <xref:System.Collections.Generic.List%601> can accommodate the new elements without increasing the <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(*n*) operation, where *n* is the number of elements to be added.</span></span> <span data-ttu-id="f3f44-208">Si la capacité doit être augmentée pour intégrer les nouveaux éléments, cette méthode devient un O (*n* + *m*) opération, où *n* est le nombre d’éléments doit être ajouté et *m* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-208">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(*n* + *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-209">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.AddRange%2A> (méthode) et diverses autres méthodes de la <xref:System.Collections.Generic.List%601> classe qui agissent sur les plages.</span><span class="sxs-lookup"><span data-stu-id="f3f44-209">The following example demonstrates the <xref:System.Collections.Generic.List%601.AddRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f3f44-210">Un tableau de chaînes est créé et passé au constructeur, remplissage de la liste avec les éléments du tableau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-210">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="f3f44-211">Le <xref:System.Collections.Generic.List%601.AddRange%2A> méthode est appelée, avec la liste en tant que son argument.</span><span class="sxs-lookup"><span data-stu-id="f3f44-211">The <xref:System.Collections.Generic.List%601.AddRange%2A> method is called, with the list as its argument.</span></span> <span data-ttu-id="f3f44-212">Le résultat est que les éléments actuels de la liste sont ajoutés à la fin de la liste, la duplication de tous les éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-212">The result is that the current elements of the list are added to the end of the list, duplicating all the elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-213">
            <paramref name="collection" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-213">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AsReadOnly">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!T&gt; AsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function AsReadOnly () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-214">Retourne un wrapper <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> en lecture seule pour la collection actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-214">Returns a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the current collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-215">Objet qui joue le rôle de wrapper en lecture seule autour du <see cref="T:System.Collections.Generic.List`1" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-215">An object that acts as a read-only wrapper around the current <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-216">Pour empêcher les modifications apportées à la <xref:System.Collections.Generic.List%601> d’objet, exposer uniquement via ce wrapper.</span><span class="sxs-lookup"><span data-stu-id="f3f44-216">To prevent any modifications to the <xref:System.Collections.Generic.List%601> object, expose it only through this wrapper.</span></span> <span data-ttu-id="f3f44-217">A <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> objet n’expose pas de méthodes qui modifient la collection.</span><span class="sxs-lookup"><span data-stu-id="f3f44-217">A  <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object does not expose methods that modify the collection.</span></span> <span data-ttu-id="f3f44-218">Toutefois, si des modifications sont apportées à sous-jacent <xref:System.Collections.Generic.List%601> de l’objet, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="f3f44-218">However, if changes are made to the underlying <xref:System.Collections.Generic.List%601> object, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f3f44-219">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-219">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-220">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.AsReadOnly%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-220">The following example demonstrates the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span> <span data-ttu-id="f3f44-221">A <xref:System.Collections.Generic.List%601> de chaînes avec une capacité de 4 est créé, parce que la dernière taille de la liste doit être exactement de 4.</span><span class="sxs-lookup"><span data-stu-id="f3f44-221">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="f3f44-222">La liste est remplie avec quatre chaînes et le <xref:System.Collections.Generic.List%601.AsReadOnly%2A> méthode permet d’obtenir en lecture seule <xref:System.Collections.Generic.IList%601> implémentation d’interface générique qui encapsule la liste d’origine.</span><span class="sxs-lookup"><span data-stu-id="f3f44-222">The list is populated with four strings, and the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method is used to get a read-only <xref:System.Collections.Generic.IList%601> generic interface implementation that wraps the original list.</span></span>  
  
 <span data-ttu-id="f3f44-223">Un élément de la liste d’origine est défini à « Coelophysis » à l’aide de la <xref:System.Collections.Generic.List%601.Item%2A> propriété (l’indexeur en c#) et le contenu de la liste en lecture seule s’affichent de nouveau pour montrer qu’il s’agit simplement d’un wrapper pour la liste d’origine.</span><span class="sxs-lookup"><span data-stu-id="f3f44-223">An element of the original list is set to "Coelophysis" using the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#), and the contents of the read-only list are displayed again to demonstrate that it is just a wrapper for the original list.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-224">Utilise un algorithme de recherche binaire pour trouver un élément spécifique dans le <see cref="T:System.Collections.Generic.List`1" /> trié ou une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-224">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-225">Objet à trouver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-225">The object to locate.</span>
          </span>
          <span data-ttu-id="f3f44-226">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-226">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-227">Recherche un élément utilisant le comparateur par défaut dans le <see cref="T:System.Collections.Generic.List`1" /> entièrement trié et retourne l'index de base zéro de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-227">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the default comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-228">Index de base zéro de <paramref name="item" /> dans le <see cref="T:System.Collections.Generic.List`1" /> trié, si <paramref name="item" /> existe ; sinon, un nombre négatif qui est le complément de bits de l'index de l'élément suivant supérieur à <paramref name="item" /> ou, s'il n'existe aucun élément supérieur, le complément de bits de <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-228">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-229">Cette méthode utilise le comparateur par défaut <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> pour le type `T` pour déterminer l’ordre des éléments de liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-229">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="f3f44-230">Le <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> propriété vérifie si le type `T` implémente la <xref:System.IComparable%601> interface générique et utilise cette implémentation, si elle est disponible.</span><span class="sxs-lookup"><span data-stu-id="f3f44-230">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f3f44-231">Si ce n’est pas le cas, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> vérifie si le type `T` implémente la <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f3f44-231">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f3f44-232">Si type `T` n’implémente pas l’interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-232">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f3f44-233">Le <xref:System.Collections.Generic.List%601> doivent déjà être triés en fonction de l’implémentation du comparateur ; sinon, le résultat est incorrect.</span><span class="sxs-lookup"><span data-stu-id="f3f44-233">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="f3f44-234">Comparaison `null` avec toute référence le type est autorisée et ne génère pas d’exception lors de l’utilisation du <xref:System.IComparable%601> interface générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-234">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="f3f44-235">Lors du tri, `null` est considéré comme étant inférieure à n’importe quel autre objet.</span><span class="sxs-lookup"><span data-stu-id="f3f44-235">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="f3f44-236">Si le <xref:System.Collections.Generic.List%601> contient plus d’un élément avec la même valeur, la méthode retourne uniquement une des occurrences, il peut retourner l’une des occurrences, pas nécessairement la première condition.</span><span class="sxs-lookup"><span data-stu-id="f3f44-236">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="f3f44-237">Si le <xref:System.Collections.Generic.List%601> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="f3f44-237">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="f3f44-238">Vous pouvez appliquer l’opération de bits (~) à cet entier négatif pour obtenir l’index du premier élément supérieur à la valeur de recherche.</span><span class="sxs-lookup"><span data-stu-id="f3f44-238">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="f3f44-239">Lors de l’insertion de la valeur dans la <xref:System.Collections.Generic.List%601>, cet index doit être utilisé en tant que le point d’insertion pour conserver l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="f3f44-239">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="f3f44-240">Cette méthode est un O (journal *n*) opération, où *n* est le nombre d’éléments dans la plage.</span><span class="sxs-lookup"><span data-stu-id="f3f44-240">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-241">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Sort> surcharge de méthode et la <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="f3f44-241">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="f3f44-242">A <xref:System.Collections.Generic.List%601> de chaînes est créé et rempli avec quatre chaînes, dans aucun ordre particulier.</span><span class="sxs-lookup"><span data-stu-id="f3f44-242">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="f3f44-243">La liste est affichée, triée et affiche de nouveau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-243">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="f3f44-244">Le <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> surcharge de méthode est ensuite utilisée pour rechercher des deux chaînes qui ne sont pas dans la liste, et le <xref:System.Collections.Generic.List%601.Insert%2A> méthode est utilisée pour les insérer.</span><span class="sxs-lookup"><span data-stu-id="f3f44-244">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="f3f44-245">La valeur de retour de la <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> méthode est un nombre négative dans chaque cas, étant donné que les chaînes ne sont pas dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-245">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="f3f44-246">En prenant le complément de bits (le ~ (opérateur) en c# et Visual C++, `Xor` -1 en Visual Basic) de ce nombre négatif génère l’index du premier élément dans la liste qui est supérieure à la chaîne de recherche et l’insertion à cet emplacement conserve le tri commande.</span><span class="sxs-lookup"><span data-stu-id="f3f44-246">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="f3f44-247">La deuxième chaîne de recherche est supérieure à n’importe quel élément dans la liste, par conséquent, la position d’insertion est à la fin de la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-247">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3f44-248">Le comparateur par défaut <see cref="P:System.Collections.Generic.Comparer`1.Default" /> ne peut pas trouver une implémentation de l’interface générique <see cref="T:System.IComparable`1" /> ou de l’interface <see cref="T:System.IComparable" /> pour le type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-248">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-249">Objet à trouver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-249">The object to locate.</span>
          </span>
          <span data-ttu-id="f3f44-250">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-250">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f3f44-251">Implémentation de <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-251">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="f3f44-252">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-252">-or-</span>
          </span>
          <span data-ttu-id="f3f44-253">
            <see langword="null" /> pour utiliser le comparateur par défaut <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-253">
              <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-254">Recherche un élément utilisant le comparateur spécifié dans le <see cref="T:System.Collections.Generic.List`1" /> entièrement trié et retourne l'index de base zéro de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-254">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-255">Index de base zéro de <paramref name="item" /> dans le <see cref="T:System.Collections.Generic.List`1" /> trié, si <paramref name="item" /> existe ; sinon, un nombre négatif qui est le complément de bits de l'index de l'élément suivant supérieur à <paramref name="item" /> ou, s'il n'existe aucun élément supérieur, le complément de bits de <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-255">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-256">Le comparateur personnalise la façon dont les éléments sont comparés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-256">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="f3f44-257">Par exemple, vous pouvez utiliser un <xref:System.Collections.CaseInsensitiveComparer> instance en tant que comparateur pour effectuer des recherches de chaîne pas la casse.</span><span class="sxs-lookup"><span data-stu-id="f3f44-257">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="f3f44-258">Si `comparer` est fourni, les éléments de la <xref:System.Collections.Generic.List%601> sont comparées à la valeur spécifiée à l’aide de la <xref:System.Collections.Generic.IComparer%601> implémentation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-258">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="f3f44-259">Si `comparer` est `null`, le comparateur par défaut <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> vérifie si le type `T` implémente la <xref:System.IComparable%601> interface générique et utilise cette implémentation, si elle est disponible.</span><span class="sxs-lookup"><span data-stu-id="f3f44-259">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f3f44-260">Si ce n’est pas le cas, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> vérifie si le type `T` implémente la <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f3f44-260">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f3f44-261">Si type `T` n’implémente pas l’interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> lève <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-261">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f3f44-262">Le <xref:System.Collections.Generic.List%601> doivent déjà être triés en fonction de l’implémentation du comparateur ; sinon, le résultat est incorrect.</span><span class="sxs-lookup"><span data-stu-id="f3f44-262">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="f3f44-263">Comparaison `null` avec toute référence le type est autorisée et ne génère pas d’exception lors de l’utilisation du <xref:System.IComparable%601> interface générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-263">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="f3f44-264">Lors du tri, `null` est considéré comme étant inférieure à n’importe quel autre objet.</span><span class="sxs-lookup"><span data-stu-id="f3f44-264">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="f3f44-265">Si le <xref:System.Collections.Generic.List%601> contient plus d’un élément avec la même valeur, la méthode retourne uniquement une des occurrences, il peut retourner l’une des occurrences, pas nécessairement la première condition.</span><span class="sxs-lookup"><span data-stu-id="f3f44-265">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="f3f44-266">Si le <xref:System.Collections.Generic.List%601> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="f3f44-266">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="f3f44-267">Vous pouvez appliquer l’opération de bits (~) à cet entier négatif pour obtenir l’index du premier élément supérieur à la valeur de recherche.</span><span class="sxs-lookup"><span data-stu-id="f3f44-267">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="f3f44-268">Lors de l’insertion de la valeur dans la <xref:System.Collections.Generic.List%601>, cet index doit être utilisé en tant que le point d’insertion pour conserver l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="f3f44-268">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="f3f44-269">Cette méthode est un O (journal *n*) opération, où *n* est le nombre d’éléments dans la plage.</span><span class="sxs-lookup"><span data-stu-id="f3f44-269">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-270">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode et la <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="f3f44-270">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="f3f44-271">L’exemple définit un autre comparateur pour les chaînes nommées DinoCompare, qui implémente le `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-271">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="f3f44-272">Le comparateur fonctionne comme suit : en premier lieu, les comparateurs sont testés pour `null`, et une référence null est traitée comme inférieure à une valeur non null.</span><span class="sxs-lookup"><span data-stu-id="f3f44-272">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="f3f44-273">En second lieu, les longueurs de chaîne sont comparées, et la plus longue chaîne est jugée supérieure.</span><span class="sxs-lookup"><span data-stu-id="f3f44-273">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="f3f44-274">Troisièmement, si les longueurs sont égales, la comparaison de chaînes ordinaire est utilisé.</span><span class="sxs-lookup"><span data-stu-id="f3f44-274">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="f3f44-275">A <xref:System.Collections.Generic.List%601> de chaînes est créé et rempli avec quatre chaînes, dans aucun ordre particulier.</span><span class="sxs-lookup"><span data-stu-id="f3f44-275">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="f3f44-276">La liste est affichée, triée à l’aide de l’autre comparateur et s’affichent à nouveau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-276">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="f3f44-277">Le <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode est ensuite utilisée pour rechercher de nombreuses chaînes qui ne figurent pas dans la liste, par le biais de l’autre comparateur.</span><span class="sxs-lookup"><span data-stu-id="f3f44-277">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="f3f44-278">Le <xref:System.Collections.Generic.List%601.Insert%2A> méthode est utilisée pour insérer les chaînes.</span><span class="sxs-lookup"><span data-stu-id="f3f44-278">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="f3f44-279">Ces deux méthodes sont situés dans la fonction nommée `SearchAndInsert`, ainsi que du code pour prendre le complément de bits (le ~ opérateur en c# et Visual C++, `Xor` -1 en Visual Basic) du nombre négatif retourné par <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> et l’utiliser comme un index pour Insérer la nouvelle chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-279">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3f44-280">
            <paramref name="comparer" /> est <see langword="null" />, et le comparateur par défaut <see cref="P:System.Collections.Generic.Comparer`1.Default" /> ne peut pas trouver une implémentation de l’interface générique <see cref="T:System.IComparable`1" /> ou de l’interface <see cref="T:System.IComparable" /> pour le type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-280">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (int index, int count, T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(int32 index, int32 count, !T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (index As Integer, count As Integer, item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(int index, int count, T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-281">Index de début de base zéro de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-281">The zero-based starting index of the range to search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3f44-282">Longueur de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-282">The length of the range to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="f3f44-283">Objet à trouver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-283">The object to locate.</span>
          </span>
          <span data-ttu-id="f3f44-284">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-284">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f3f44-285">Implémentation de <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser pendant la comparaison d'éléments, ou <see langword="null" /> pour utiliser le comparateur par défaut <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-285">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-286">Recherche un élément utilisant le comparateur spécifié dans une plage d'éléments du <see cref="T:System.Collections.Generic.List`1" /> trié et retourne l'index de base zéro de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-286">Searches a range of elements in the sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-287">Index de base zéro de <paramref name="item" /> dans le <see cref="T:System.Collections.Generic.List`1" /> trié, si <paramref name="item" /> existe ; sinon, un nombre négatif qui est le complément de bits de l'index de l'élément suivant supérieur à <paramref name="item" /> ou, s'il n'existe aucun élément supérieur, le complément de bits de <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-287">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-288">Le comparateur personnalise la façon dont les éléments sont comparés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-288">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="f3f44-289">Par exemple, vous pouvez utiliser un <xref:System.Collections.CaseInsensitiveComparer> instance en tant que comparateur pour effectuer des recherches de chaîne pas la casse.</span><span class="sxs-lookup"><span data-stu-id="f3f44-289">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="f3f44-290">Si `comparer` est fourni, les éléments de la <xref:System.Collections.Generic.List%601> sont comparées à la valeur spécifiée à l’aide de la <xref:System.Collections.Generic.IComparer%601> implémentation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-290">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="f3f44-291">Si `comparer` est `null`, le comparateur par défaut <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> vérifie si le type `T` implémente la <xref:System.IComparable%601> interface générique et utilise cette implémentation, si elle est disponible.</span><span class="sxs-lookup"><span data-stu-id="f3f44-291">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f3f44-292">Si ce n’est pas le cas, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> vérifie si le type `T` implémente la <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f3f44-292">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f3f44-293">Si type `T` n’implémente pas l’interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> lève <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-293">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f3f44-294">Le <xref:System.Collections.Generic.List%601> doivent déjà être triés en fonction de l’implémentation du comparateur ; sinon, le résultat est incorrect.</span><span class="sxs-lookup"><span data-stu-id="f3f44-294">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="f3f44-295">Comparaison `null` avec toute référence le type est autorisée et ne génère pas d’exception lors de l’utilisation du <xref:System.IComparable%601> interface générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-295">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="f3f44-296">Lors du tri, `null` est considéré comme étant inférieure à n’importe quel autre objet.</span><span class="sxs-lookup"><span data-stu-id="f3f44-296">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="f3f44-297">Si le <xref:System.Collections.Generic.List%601> contient plus d’un élément avec la même valeur, la méthode retourne uniquement une des occurrences, il peut retourner l’une des occurrences, pas nécessairement la première condition.</span><span class="sxs-lookup"><span data-stu-id="f3f44-297">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="f3f44-298">Si le <xref:System.Collections.Generic.List%601> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="f3f44-298">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="f3f44-299">Vous pouvez appliquer l’opération de bits (~) à cet entier négatif pour obtenir l’index du premier élément supérieur à la valeur de recherche.</span><span class="sxs-lookup"><span data-stu-id="f3f44-299">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="f3f44-300">Lors de l’insertion de la valeur dans la <xref:System.Collections.Generic.List%601>, cet index doit être utilisé en tant que le point d’insertion pour conserver l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="f3f44-300">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="f3f44-301">Cette méthode est un O (journal *n*) opération, où *n* est le nombre d’éléments dans la plage.</span><span class="sxs-lookup"><span data-stu-id="f3f44-301">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-302">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode et la <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="f3f44-302">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="f3f44-303">L’exemple définit un autre comparateur pour les chaînes nommées DinoCompare, qui implémente le `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-303">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="f3f44-304">Le comparateur fonctionne comme suit : en premier lieu, les comparateurs sont testés pour `null`, et une référence null est traitée comme inférieure à une valeur non null.</span><span class="sxs-lookup"><span data-stu-id="f3f44-304">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="f3f44-305">En second lieu, les longueurs de chaîne sont comparées, et la plus longue chaîne est jugée supérieure.</span><span class="sxs-lookup"><span data-stu-id="f3f44-305">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="f3f44-306">Troisièmement, si les longueurs sont égales, la comparaison de chaînes ordinaire est utilisé.</span><span class="sxs-lookup"><span data-stu-id="f3f44-306">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="f3f44-307">A <xref:System.Collections.Generic.List%601> de chaînes est créé et rempli avec les noms de cinq dinosaures et trois dinosaures carnivores.</span><span class="sxs-lookup"><span data-stu-id="f3f44-307">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="f3f44-308">Dans chacun des deux groupes, les noms ne sont pas dans l’ordre de tri particulier.</span><span class="sxs-lookup"><span data-stu-id="f3f44-308">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="f3f44-309">La liste est affichée, la plage d’herbivores est triée à l’aide de l’autre comparateur, et la liste s’affiche de nouveau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-309">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="f3f44-310">Le <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode est ensuite utilisée pour rechercher uniquement la plage d’herbivores correspondant à « Brachiosaure ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-310">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="f3f44-311">La chaîne est introuvable et le complément de bits (le ~ opérateur en c# et Visual C++, `Xor` -1 en Visual Basic) du nombre négatif retourné par la <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> méthode est utilisée en tant qu’index pour insérer la nouvelle chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-311">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-312">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-312">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-313">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-313">-or-</span>
          </span>
          <span data-ttu-id="f3f44-314">
            <paramref name="count" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-314">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-315">
            <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-315">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3f44-316">
            <paramref name="comparer" /> est <see langword="null" />, et le comparateur par défaut <see cref="P:System.Collections.Generic.Comparer`1.Default" /> ne peut pas trouver une implémentation de l’interface générique <see cref="T:System.IComparable`1" /> ou de l’interface <see cref="T:System.IComparable" /> pour le type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-316">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-317">Obtient ou définit le nombre total des éléments que la structure de données interne peut contenir sans redimensionnement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-317">Gets or sets the total number of elements the internal data structure can hold without resizing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3f44-318">Nombre d'éléments que <see cref="T:System.Collections.Generic.List`1" /> peut contenir avant que le redimensionnement soit nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-318">The number of elements that the <see cref="T:System.Collections.Generic.List`1" /> can contain before resizing is required.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-319"><xref:System.Collections.Generic.List%601.Capacity%2A> est le nombre d’éléments qui le <xref:System.Collections.Generic.List%601> peut stocker avant que le redimensionnement soit nécessaire, alors que <xref:System.Collections.Generic.List%601.Count%2A> est le nombre d’éléments réellement contenus dans le <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-319"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required, whereas <xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-320"><xref:System.Collections.Generic.List%601.Capacity%2A> est toujours supérieur ou égal à <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-320"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="f3f44-321">Si <xref:System.Collections.Generic.List%601.Count%2A> dépasse <xref:System.Collections.Generic.List%601.Capacity%2A> lors de l’ajout d’éléments, la capacité est augmentée en réallouant automatiquement le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-321">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="f3f44-322">Si la capacité est beaucoup plus important que le nombre et que vous souhaitez réduire la mémoire utilisée par le <xref:System.Collections.Generic.List%601>, vous pouvez réduire la capacité en appelant le <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode ou en définissant le <xref:System.Collections.Generic.List%601.Capacity%2A> propriété explicitement à une valeur inférieure.</span><span class="sxs-lookup"><span data-stu-id="f3f44-322">If the capacity is significantly larger than the count and you want to reduce the memory used by the <xref:System.Collections.Generic.List%601>,  you can  decrease capacity by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly to a lower value.</span></span> <span data-ttu-id="f3f44-323">Lorsque la valeur de <xref:System.Collections.Generic.List%601.Capacity%2A> est défini explicitement, le tableau interne est aussi réalloué pour prendre en compte la capacité spécifiée et tous les éléments sont copiés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-323">When the value of <xref:System.Collections.Generic.List%601.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity, and all the elements are copied.</span></span>  
  
 <span data-ttu-id="f3f44-324">La récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est un O (*n*) opération, où *n* est la nouvelle capacité.</span><span class="sxs-lookup"><span data-stu-id="f3f44-324">Retrieving the value of this property is an O(1) operation; setting the property is an O(*n*) operation, where *n* is the new capacity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-325">L’exemple suivant montre comment vérifier la capacité et le nombre d’un <xref:System.Collections.Generic.List%601> qui contient un objet métier simple et illustre l’utilisation de la <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode pour supprimer une capacité supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="f3f44-325">The following example demonstrates how to check the capacity and count of a <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="f3f44-326">L’exemple suivant montre le <xref:System.Collections.Generic.List%601.Capacity%2A> propriété à différents points dans la durée de vie d’une liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-326">The following example shows the <xref:System.Collections.Generic.List%601.Capacity%2A> property at several points in the life of a list.</span></span> <span data-ttu-id="f3f44-327">Le constructeur par défaut est utilisé pour créer une liste de chaînes avec une capacité de 0 et le <xref:System.Collections.Generic.List%601.Capacity%2A> propriété est affichée à titre d’illustration.</span><span class="sxs-lookup"><span data-stu-id="f3f44-327">The default constructor is used to create a list of strings with a capacity of 0, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed to demonstrate this.</span></span> <span data-ttu-id="f3f44-328">Après le <xref:System.Collections.Generic.List%601.Add%2A> méthode a été utilisée pour ajouter plusieurs éléments, les éléments sont répertoriés, puis le <xref:System.Collections.Generic.List%601.Capacity%2A> propriété s’affiche à nouveau, avec le <xref:System.Collections.Generic.List%601.Count%2A> propriété, pour indiquer que la capacité a été augmentée en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="f3f44-328">After the <xref:System.Collections.Generic.List%601.Add%2A> method has been used to add several items, the items are listed, and then the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="f3f44-329">Le <xref:System.Collections.Generic.List%601.Capacity%2A> propriété s’affiche à nouveau une fois la <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode permet de réduire la capacité à correspondre au nombre.</span><span class="sxs-lookup"><span data-stu-id="f3f44-329">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count.</span></span> <span data-ttu-id="f3f44-330">Enfin, le <xref:System.Collections.Generic.List%601.Clear%2A> méthode est utilisée pour supprimer tous les éléments dans la liste et le <xref:System.Collections.Generic.List%601.Capacity%2A> et <xref:System.Collections.Generic.List%601.Count%2A> propriétés s’affichent à nouveau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-330">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed again.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-331">La valeur affectée à <see cref="P:System.Collections.Generic.List`1.Capacity" /> est inférieure à <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-331">
              <see cref="P:System.Collections.Generic.List`1.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="f3f44-332">Il n’y a pas assez de mémoire disponible sur le système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-332">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-333">Supprime tous les éléments de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-333">Removes all elements from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-334"><xref:System.Collections.Generic.List%601.Count%2A> a la valeur 0, et les références à d’autres objets à partir d’éléments de la collection sont également libérées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-334"><xref:System.Collections.Generic.List%601.Count%2A> is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="f3f44-335"><xref:System.Collections.Generic.List%601.Capacity%2A> reste inchangé.</span><span class="sxs-lookup"><span data-stu-id="f3f44-335"><xref:System.Collections.Generic.List%601.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="f3f44-336">Pour rétablir la capacité de la <xref:System.Collections.Generic.List%601>, appelez le <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode ou un ensemble le <xref:System.Collections.Generic.List%601.Capacity%2A> propriété directement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-336">To reset the capacity of the <xref:System.Collections.Generic.List%601>, call the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or set the <xref:System.Collections.Generic.List%601.Capacity%2A> property directly.</span></span> <span data-ttu-id="f3f44-337">Réduction de la capacité réalloue la mémoire et copie tous les éléments dans le <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-337">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span> <span data-ttu-id="f3f44-338">La suppression vide <xref:System.Collections.Generic.List%601> définit la capacité de la <xref:System.Collections.Generic.List%601> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="f3f44-338">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="f3f44-339">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-339">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-340">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Clear%2A> (méthode) et diverses autres propriétés et méthodes de la <xref:System.Collections.Generic.List%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-340">The following example demonstrates the <xref:System.Collections.Generic.List%601.Clear%2A> method and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="f3f44-341">Le <xref:System.Collections.Generic.List%601.Clear%2A> méthode est utilisée à la fin du programme, pour supprimer tous les éléments dans la liste et le <xref:System.Collections.Generic.List%601.Capacity%2A> et <xref:System.Collections.Generic.List%601.Count%2A> propriétés sont ensuite affichées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-341">The <xref:System.Collections.Generic.List%601.Clear%2A> method is used at the end of the program, to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are then displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.TrimExcess" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-342">Objet à rechercher dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-342">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-343">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-343">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-344">Détermine si le <see cref="T:System.Collections.Generic.List`1" /> contient un élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-344">Determines whether an element is in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-345">
            <see langword="true" /> si <paramref name="item" /> existe dans <see cref="T:System.Collections.Generic.List`1" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-345">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.List`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-346">Cette méthode détermine l’égalité à l’aide du comparateur d’égalité par défaut, comme défini par l’implémentation de l’objet de la <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> méthode pour `T` (le type de valeurs dans la liste).</span><span class="sxs-lookup"><span data-stu-id="f3f44-346">This method determines equality by using the default equality comparer, as defined by the object's implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method for `T` (the type of values in the list).</span></span>  
  
 <span data-ttu-id="f3f44-347">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-347">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-348">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Contains%2A> et <xref:System.Collections.Generic.List%601.Exists%2A> méthodes sur un <xref:System.Collections.Generic.List%601> qui contient un objet métier simple qui implémente <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-348">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="f3f44-349">L’exemple suivant contient une liste d’objets complexes de type `Cube`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-349">The following example contains a list of complex objects of type `Cube`.</span></span> <span data-ttu-id="f3f44-350">Le `Cube` la classe implémente le <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> méthode afin que les deux cubes sont considérées comme égales si leurs dimensions sont les mêmes.</span><span class="sxs-lookup"><span data-stu-id="f3f44-350">The `Cube` class implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method so that two cubes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="f3f44-351">Dans cet exemple, le <xref:System.Collections.Generic.List%601.Contains%2A> méthode retourne `true`, car un cube qui possède les dimensions spécifiées est déjà dans la collection.</span><span class="sxs-lookup"><span data-stu-id="f3f44-351">In this example, the <xref:System.Collections.Generic.List%601.Contains%2A> method returns `true`, because a cube that has the specified dimensions is already in the collection.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.contains/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.contains/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;TOutput&gt; ConvertAll&lt;TOutput&gt; (Converter&lt;T,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!!TOutput&gt; ConvertAll&lt;TOutput&gt;(class System.Converter`2&lt;!T, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertAll(Of TOutput) (converter As Converter(Of T, TOutput)) As List(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA; System::Collections::Generic::List&lt;TOutput&gt; ^ ConvertAll(Converter&lt;T, TOutput&gt; ^ converter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="converter" Type="System.Converter&lt;T,TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="f3f44-352">Type des éléments du tableau cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-352">The type of the elements of the target array.</span>
          </span>
        </typeparam>
        <param name="converter">
          <span data-ttu-id="f3f44-353">Délégué <see cref="T:System.Converter`2" /> qui convertit chaque élément d'un type vers un autre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-353">A <see cref="T:System.Converter`2" /> delegate that converts each element from one type to another type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-354">Convertit les éléments du <see cref="T:System.Collections.Generic.List`1" /> actuel dans un autre type et retourne une liste qui contient les éléments convertis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-354">Converts the elements in the current <see cref="T:System.Collections.Generic.List`1" /> to another type, and returns a list containing the converted elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-355">
            <see cref="T:System.Collections.Generic.List`1" /> du type cible contenant les éléments convertis du <see cref="T:System.Collections.Generic.List`1" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-355">A <see cref="T:System.Collections.Generic.List`1" /> of the target type containing the converted elements from the current <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-356">Le <xref:System.Converter%602> est un délégué à une méthode qui convertit un objet en type cible.</span><span class="sxs-lookup"><span data-stu-id="f3f44-356">The <xref:System.Converter%602> is a delegate to a method that converts an object to the target type.</span></span>  <span data-ttu-id="f3f44-357">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Converter%602> délégué et les éléments convertis sont enregistrés dans le nouveau <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-357">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Converter%602> delegate, and the converted elements are saved in the new <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-358">En cours <xref:System.Collections.Generic.List%601> demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-358">The current <xref:System.Collections.Generic.List%601> remains unchanged.</span></span>  
  
 <span data-ttu-id="f3f44-359">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-359">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-360">L’exemple suivant définit une méthode nommée `PointFToPoint` qui convertit un <xref:System.Drawing.PointF> structure un <xref:System.Drawing.Point> structure.</span><span class="sxs-lookup"><span data-stu-id="f3f44-360">The following example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="f3f44-361">L’exemple crée ensuite un <xref:System.Collections.Generic.List%601> de <xref:System.Drawing.PointF> structures, crée un `Converter\<PointF, Point>` déléguer (`Converter(Of PointF, Point)` en Visual Basic) pour représenter le `PointFToPoint` (méthode) et passe le délégué à la <xref:System.Collections.Generic.List%601.ConvertAll%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-361">The example then creates a <xref:System.Collections.Generic.List%601> of <xref:System.Drawing.PointF> structures, creates a `Converter\<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Collections.Generic.List%601.ConvertAll%2A> method.</span></span> <span data-ttu-id="f3f44-362">Le <xref:System.Collections.Generic.List%601.ConvertAll%2A> méthode passe chaque élément de la liste d’entrée à la `PointFToPoint` (méthode) et met les éléments convertis dans une nouvelle liste de <xref:System.Drawing.Point> structures.</span><span class="sxs-lookup"><span data-stu-id="f3f44-362">The <xref:System.Collections.Generic.List%601.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="f3f44-363">Les deux listes sont affichées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-363">Both lists are displayed.</span></span>  
  
 [!code-cpp[List\`1_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[List\`1_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_ConvertAll/cs/source.cs#1)]
 [!code-vb[List\`1_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-364">
            <paramref name="converter" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-364">
              <paramref name="converter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Converter`2" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-365">Copie <see cref="T:System.Collections.Generic.List`1" /> ou une partie de celui-ci dans un tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-365">Copies the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it to an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="f3f44-366">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-366">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-367">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-367">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-368">Copie l'ensemble du <see cref="T:System.Collections.Generic.List`1" /> dans un tableau compatible unidimensionnel en partant du début du tableau cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-368">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the beginning of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-369">Cette méthode utilise <xref:System.Array.Copy%2A?displayProperty=nameWithType> pour copier les éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-369">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="f3f44-370">Les éléments sont copiés dans le <xref:System.Array> dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-370">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-371">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-371">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-372">L’exemple suivant illustre les trois surcharges de la <xref:System.Collections.Generic.List%601.CopyTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-372">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="f3f44-373">A <xref:System.Collections.Generic.List%601> de chaînes est créé et rempli avec 5 chaînes.</span><span class="sxs-lookup"><span data-stu-id="f3f44-373">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="f3f44-374">Un tableau de chaînes vide de 15 éléments est créé et le <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> surcharge de méthode est utilisée pour copier tous les éléments de la liste dans le tableau en commençant au premier élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-374">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="f3f44-375">Le <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> surcharge de méthode est utilisée pour copier tous les éléments de la liste vers le tableau en commençant à l’index 6 du tableau (laissant vide index 5).</span><span class="sxs-lookup"><span data-stu-id="f3f44-375">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="f3f44-376">Enfin, le <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour copier 3 éléments à partir de la liste, en commençant par l’index 2, dans le tableau en commençant à l’index 12 (laissant l’index 11 vide).</span><span class="sxs-lookup"><span data-stu-id="f3f44-376">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="f3f44-377">Le contenu du tableau est ensuite affiché.</span><span class="sxs-lookup"><span data-stu-id="f3f44-377">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-378">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-378">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-379">Le nombre d’éléments du <see cref="T:System.Collections.Generic.List`1" /> source est supérieur au nombre d’éléments que la destination <paramref name="array" /> peut contenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-379">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="f3f44-380">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-380">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-381">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-381">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="f3f44-382">Index de base zéro dans un <c>tableau</c> auquel commencer la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-382">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-383">Copie l'ensemble du <see cref="T:System.Collections.Generic.List`1" /> dans un tableau compatible unidimensionnel en partant de l'index spécifié du tableau cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-383">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-384">Cette méthode utilise <xref:System.Array.Copy%2A?displayProperty=nameWithType> pour copier les éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-384">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="f3f44-385">Les éléments sont copiés dans le <xref:System.Array> dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-385">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-386">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-386">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-387">L’exemple suivant illustre les trois surcharges de la <xref:System.Collections.Generic.List%601.CopyTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-387">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="f3f44-388">A <xref:System.Collections.Generic.List%601> de chaînes est créé et rempli avec 5 chaînes.</span><span class="sxs-lookup"><span data-stu-id="f3f44-388">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="f3f44-389">Un tableau de chaînes vide de 15 éléments est créé et le <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> surcharge de méthode est utilisée pour copier tous les éléments de la liste dans le tableau en commençant au premier élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-389">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="f3f44-390">Le <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> surcharge de méthode est utilisée pour copier tous les éléments de la liste vers le tableau en commençant à l’index 6 du tableau (laissant vide index 5).</span><span class="sxs-lookup"><span data-stu-id="f3f44-390">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="f3f44-391">Enfin, le <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour copier 3 éléments à partir de la liste, en commençant par l’index 2, dans le tableau en commençant à l’index 12 (laissant l’index 11 vide).</span><span class="sxs-lookup"><span data-stu-id="f3f44-391">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="f3f44-392">Le contenu du tableau est ensuite affiché.</span><span class="sxs-lookup"><span data-stu-id="f3f44-392">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-393">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-393">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-394">
            <paramref name="arrayIndex" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-394">
              <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-395">Le nombre d’éléments dans le <see cref="T:System.Collections.Generic.List`1" /> source est supérieur à la quantité d’espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-395">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int index, T[] array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 index, !T[] array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (index As Integer, array As T(), arrayIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int index, cli::array &lt;T&gt; ^ array, int arrayIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-396">Index de base zéro dans le <see cref="T:System.Collections.Generic.List`1" /> source au niveau duquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-396">The zero-based index in the source <see cref="T:System.Collections.Generic.List`1" /> at which copying begins.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="f3f44-397">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-397">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-398">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-398">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="f3f44-399">Index de base zéro dans un <c>tableau</c> auquel commencer la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-399">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3f44-400">Nombre d'éléments à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-400">The number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-401">Copie une plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> dans un tableau compatible unidimensionnel en partant de l'index spécifié du tableau cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-401">Copies a range of elements from the <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-402">Cette méthode utilise <xref:System.Array.Copy%2A?displayProperty=nameWithType> pour copier les éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-402">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="f3f44-403">Les éléments sont copiés dans le <xref:System.Array> dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-403">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-404">Cette méthode est un O (*n*) opération, où *n* est `count`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-404">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-405">L’exemple suivant illustre les trois surcharges de la <xref:System.Collections.Generic.List%601.CopyTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-405">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="f3f44-406">A <xref:System.Collections.Generic.List%601> de chaînes est créé et rempli avec 5 chaînes.</span><span class="sxs-lookup"><span data-stu-id="f3f44-406">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="f3f44-407">Un tableau de chaînes vide de 15 éléments est créé et le <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> surcharge de méthode est utilisée pour copier tous les éléments de la liste dans le tableau en commençant au premier élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-407">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="f3f44-408">Le <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> surcharge de méthode est utilisée pour copier tous les éléments de la liste vers le tableau en commençant à l’index 6 du tableau (laissant vide index 5).</span><span class="sxs-lookup"><span data-stu-id="f3f44-408">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="f3f44-409">Enfin, le <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour copier 3 éléments à partir de la liste, en commençant par l’index 2, dans le tableau en commençant à l’index 12 (laissant l’index 11 vide).</span><span class="sxs-lookup"><span data-stu-id="f3f44-409">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="f3f44-410">Le contenu du tableau est ensuite affiché.</span><span class="sxs-lookup"><span data-stu-id="f3f44-410">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-411">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-411">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-412">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-412">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-413">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-413">-or-</span>
          </span>
          <span data-ttu-id="f3f44-414">
            <paramref name="arrayIndex" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-414">
              <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-415">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-415">-or-</span>
          </span>
          <span data-ttu-id="f3f44-416">
            <paramref name="count" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-416">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-417">
            <paramref name="index" /> est égal ou supérieur au <see cref="P:System.Collections.Generic.List`1.Count" /> de la source <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-417">
              <paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.Generic.List`1.Count" /> of the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-418">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-418">-or-</span>
          </span>
          <span data-ttu-id="f3f44-419">Le nombre d’éléments entre <paramref name="index" /> et la fin du <see cref="T:System.Collections.Generic.List`1" /> source est supérieur à l’espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-419">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-420">Obtient le nombre d'éléments contenus dans le <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-420">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3f44-421">Nombre d'éléments contenus dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-421">The number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-422"><xref:System.Collections.Generic.List%601.Capacity%2A> est le nombre d’éléments qui le <xref:System.Collections.Generic.List%601> peut stocker avant que le redimensionnement soit nécessaire.</span><span class="sxs-lookup"><span data-stu-id="f3f44-422"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required.</span></span> <span data-ttu-id="f3f44-423"><xref:System.Collections.Generic.List%601.Count%2A> est le nombre d’éléments réellement contenus dans le <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-423"><xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-424"><xref:System.Collections.Generic.List%601.Capacity%2A> est toujours supérieur ou égal à <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-424"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="f3f44-425">Si <xref:System.Collections.Generic.List%601.Count%2A> dépasse <xref:System.Collections.Generic.List%601.Capacity%2A> lors de l’ajout d’éléments, la capacité est augmentée en réallouant automatiquement le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-425">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="f3f44-426">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-426">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-427">L’exemple suivant montre comment vérifier la capacité et le nombre d’un <xref:System.Collections.Generic.List%601> qui contient un objet métier simple et illustre l’utilisation de la <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode pour supprimer une capacité supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="f3f44-427">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="f3f44-428">L’exemple suivant affiche la valeur de la <xref:System.Collections.Generic.List%601.Count%2A> propriété à différents points dans la durée de vie d’une liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-428">The following example shows the value of the <xref:System.Collections.Generic.List%601.Count%2A> property at various points in the life of a list.</span></span> <span data-ttu-id="f3f44-429">Une fois que la liste a été créée et remplie et ses éléments affichés, la <xref:System.Collections.Generic.List%601.Capacity%2A> et <xref:System.Collections.Generic.List%601.Count%2A> propriétés sont affichées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-429">After the list has been created and populated and its elements displayed, the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="f3f44-430">Ces propriétés sont affichées après le <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode a été appelée et après le contenu de la liste est effacé.</span><span class="sxs-lookup"><span data-stu-id="f3f44-430">These properties are displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method has been called, and again after the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f3f44-431">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions des éléments à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-431">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-432">Détermine si <see cref="T:System.Collections.Generic.List`1" /> contient des éléments qui correspondent aux conditions définies par le prédicat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-432">Determines whether the <see cref="T:System.Collections.Generic.List`1" /> contains elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-433">
            <see langword="true" /> si <see cref="T:System.Collections.Generic.List`1" /> contient un ou plusieurs éléments qui correspondent aux conditions définies par le prédicat spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-433">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.List`1" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-434">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-434">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-435">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> délégué et le traitement s’arrête lorsqu’une correspondance est trouvée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-435">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="f3f44-436">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-436">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-437">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Contains%2A> et <xref:System.Collections.Generic.List%601.Exists%2A> méthodes sur un <xref:System.Collections.Generic.List%601> qui contient un objet métier simple qui implémente <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-437">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="f3f44-438">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Exists%2A> (méthode) et plusieurs autres méthodes qui utilisent la <xref:System.Predicate%601> délégué générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-438">The following example demonstrates the <xref:System.Collections.Generic.List%601.Exists%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="f3f44-439">A <xref:System.Collections.Generic.List%601> de chaînes est créé, contenant 8 noms dinosaure deux (aux emplacements 1 et 5) se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-439">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="f3f44-440">L’exemple définit également une méthode de prédicat de recherche nommée `EndsWithSaurus`, qui accepte un paramètre de chaîne et retourne une valeur Boolean qui indique si la chaîne d’entrée se termine par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-440">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="f3f44-441">Le <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, et <xref:System.Collections.Generic.List%601.FindAll%2A> méthodes sont utilisées pour rechercher la liste avec la méthode de prédicat de recherche, puis le <xref:System.Collections.Generic.List%601.RemoveAll%2A> méthode est utilisée pour supprimer toutes les entrées se terminant par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-441">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method, and then the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span>  
  
 <span data-ttu-id="f3f44-442">Enfin, le <xref:System.Collections.Generic.List%601.Exists%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-442">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method is called.</span></span> <span data-ttu-id="f3f44-443">Il parcourt la liste à partir du début, chaque élément en passant à la `EndsWithSaurus` (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-443">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="f3f44-444">La recherche s’arrête et la méthode retourne `true` si le `EndsWithSaurus` retourne de la méthode `true` pour n’importe quel élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-444">The search stops and the method returns `true` if the `EndsWithSaurus` method returns `true` for any element.</span></span> <span data-ttu-id="f3f44-445">Le <xref:System.Collections.Generic.List%601.Exists%2A> méthode retourne `false` , car tous ces éléments ont été supprimés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-445">The <xref:System.Collections.Generic.List%601.Exists%2A> method returns `false` because all such elements have been removed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3f44-446">En c# et Visual Basic, il n’est pas nécessaire de créer le `Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-446">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="f3f44-447">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-447">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-448">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-448">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public T Find (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Find(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Find(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f3f44-449">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-449">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-450">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne la première occurrence dans le <see cref="T:System.Collections.Generic.List`1" /> entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-450">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-451">Premier élément qui correspond aux conditions définies par le prédicat spécifié, s'il est trouvé ; sinon, valeur par défaut du type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-451">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-452">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-452">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-453">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> délégué, en avançant vers le <xref:System.Collections.Generic.List%601>, en commençant par le premier élément et se terminant par le dernier élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-453">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving forward in the <xref:System.Collections.Generic.List%601>, starting with the first element and ending with the last element.</span></span>  <span data-ttu-id="f3f44-454">Le traitement est arrêté lorsqu’une correspondance est trouvée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-454">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f3f44-455">Lorsque vous recherchez une liste contenant des types valeur, assurez-vous que la valeur par défaut pour le type ne satisfait pas le prédicat de recherche.</span><span class="sxs-lookup"><span data-stu-id="f3f44-455">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="f3f44-456">Dans le cas contraire, il n’existe aucun moyen de faire la distinction entre une valeur par défaut indiquant qu’aucune correspondance n’a été trouvé et un élément de liste qui a la valeur par défaut pour le type.</span><span class="sxs-lookup"><span data-stu-id="f3f44-456">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="f3f44-457">Si la valeur par défaut satisfait le prédicat de recherche, utilisez la <xref:System.Collections.Generic.List%601.FindIndex%2A> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="f3f44-457">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="f3f44-458">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-458">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-459">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Find%2A> méthode sur un <xref:System.Collections.Generic.List%601> qui contient un objet complexe simple.</span><span class="sxs-lookup"><span data-stu-id="f3f44-459">The following example demonstrates the <xref:System.Collections.Generic.List%601.Find%2A> method on a <xref:System.Collections.Generic.List%601> that contains a simple complex object.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="f3f44-460">L’exemple suivant illustre les méthodes de recherche pour la <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-460">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="f3f44-461">L’exemple de la <xref:System.Collections.Generic.List%601> classe contient `book` les objets de classe `Book`, en utilisant les données à partir de la [exemple de fichier XML : livres (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="f3f44-461">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="f3f44-462">Le `FillList` méthode dans l’exemple utilise [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) pour analyser les valeurs à partir du XML dans les valeurs de propriété de la `book` objets.</span><span class="sxs-lookup"><span data-stu-id="f3f44-462">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="f3f44-463">Le tableau suivant décrit les exemples fournis pour les méthodes de recherche.</span><span class="sxs-lookup"><span data-stu-id="f3f44-463">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="f3f44-464">Méthode</span><span class="sxs-lookup"><span data-stu-id="f3f44-464">Method</span></span>|<span data-ttu-id="f3f44-465">Exemple</span><span class="sxs-lookup"><span data-stu-id="f3f44-465">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-466">Recherche un livre par un ID à l’aide de la `IDToFind` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-466">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f3f44-467">Exemple c# utilise un délégué anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-467">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-468">Rechercher tous les livres dont `Genre` propriété est « Ordinateur » à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-468">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-469">Recherche le dernier livre dans la collection ayant une date de publication avant 2001, à l’aide de la `PubBefore2001` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-469">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f3f44-470">Exemple c# utilise un délégué anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-470">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-471">Recherche l’index du premier livre d’ordinateur à l’aide du `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-471">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-472">Recherche l’index du dernier ordinateur livre en utilisant la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-472">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-473">Recherche l’index du premier livre de l’ordinateur dans la seconde moitié de la collection, à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-473">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-474">Recherche l’index du dernier ordinateur livre dans la seconde moitié de la collection, à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-474">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-475">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-475">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; FindAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; FindAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll (match As Predicate(Of T)) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ FindAll(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f3f44-476">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions des éléments à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-476">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-477">Récupère tous les éléments qui correspondent aux conditions définies par le prédicat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-477">Retrieves all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-478">
            <see cref="T:System.Collections.Generic.List`1" /> contenant tous les éléments qui correspondent aux conditions définies par le prédicat spécifié, le cas échéant ; sinon, <see cref="T:System.Collections.Generic.List`1" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-478">A <see cref="T:System.Collections.Generic.List`1" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-479">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-479">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-480">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> délégué et les éléments qui correspondent aux conditions sont enregistrés dans le texte retourné <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-480">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are saved in the returned <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-481">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-481">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-482">L’exemple suivant illustre les méthodes de recherche pour la <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-482">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="f3f44-483">L’exemple de la <xref:System.Collections.Generic.List%601> classe contient `book` les objets de classe `Book`, en utilisant les données à partir de la [exemple de fichier XML : livres (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="f3f44-483">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="f3f44-484">Le `FillList` méthode dans l’exemple utilise [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) pour analyser les valeurs à partir du XML dans les valeurs de propriété de la `book` objets.</span><span class="sxs-lookup"><span data-stu-id="f3f44-484">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="f3f44-485">Le tableau suivant décrit les exemples fournis pour les méthodes de recherche.</span><span class="sxs-lookup"><span data-stu-id="f3f44-485">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="f3f44-486">Méthode</span><span class="sxs-lookup"><span data-stu-id="f3f44-486">Method</span></span>|<span data-ttu-id="f3f44-487">Exemple</span><span class="sxs-lookup"><span data-stu-id="f3f44-487">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-488">Recherche un livre par un ID à l’aide de la `IDToFind` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-488">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f3f44-489">Exemple c# utilise un délégué anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-489">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-490">Rechercher tous les livres dont `Genre` propriété est « Ordinateur » à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-490">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-491">Recherche le dernier livre dans la collection ayant une date de publication avant 2001, à l’aide de la `PubBefore2001` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-491">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f3f44-492">Exemple c# utilise un délégué anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-492">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-493">Recherche l’index du premier livre d’ordinateur à l’aide du `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-493">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-494">Recherche l’index du dernier ordinateur livre en utilisant la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-494">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-495">Recherche l’index du premier livre de l’ordinateur dans la seconde moitié de la collection, à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-495">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-496">Recherche l’index du dernier ordinateur livre dans la seconde moitié de la collection, à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-496">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-497">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-497">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-498">Recherche un élément qui correspond aux conditions définies par un prédicat spécifié et retourne l'index de base zéro de la première occurrence trouvée dans le <see cref="T:System.Collections.Generic.List`1" /> ou une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-498">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
          <span data-ttu-id="f3f44-499">Cette méthode retourne -1 si un élément correspondant aux conditions est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-499">This method returns -1 if an item that matches the conditions is not found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f3f44-500">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-500">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-501">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la première occurrence trouvée dans le <see cref="T:System.Collections.Generic.List`1" /> entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-501">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-502">Index de base zéro de la première occurrence d'un élément qui répond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-502">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-503">Le <xref:System.Collections.Generic.List%601> recherche est effectuée vers l’avant à partir du premier élément au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-503">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="f3f44-504">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-504">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-505">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> déléguer.</span><span class="sxs-lookup"><span data-stu-id="f3f44-505">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="f3f44-506">Le délégué a la signature :</span><span class="sxs-lookup"><span data-stu-id="f3f44-506">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="f3f44-507">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-507">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-508">L’exemple suivant définit un `Employee` classe contenant deux champs, `Name` et `Id`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-508">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="f3f44-509">Il définit également une `EmployeeSearch` classe avec une méthode unique, `StartsWith`, qui indique si le `Employee.Name` champ commence par une sous-chaîne spécifiée qui est fournie à la `EmployeeSearch` constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-509">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="f3f44-510">Notez la signature de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="f3f44-510">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="f3f44-511">correspond à la signature du délégué qui peut être passé à la <xref:System.Collections.Generic.List%601.FindIndex%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-511">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="f3f44-512">L’exemple instancie un `List<Employee>` d’objet, ajoute un nombre de `Employee` objets à elle, puis appelle la <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> méthode à deux reprises pour rechercher la collection entière, la première fois pour la première `Employee` dont l’objet `Name` champ commence par « J » et la deuxième fois pour la première `Employee` dont l’objet `Name` champ commence par « Ju ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-512">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the entire collection , the first time for the first `Employee` object whose `Name` field begins with "J", and the second time for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex2.cs#2)]
 [!code-vb[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-513">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-513">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="f3f44-514">Index de début de base zéro de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-514">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="f3f44-515">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-515">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-516">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la première occurrence trouvée dans la plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> qui s'étend de l'index spécifié au dernier élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-516">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-517">Index de base zéro de la première occurrence d'un élément qui répond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-517">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-518">Le <xref:System.Collections.Generic.List%601> recherche est effectuée vers l’avant `startIndex` et jusqu’au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-518">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="f3f44-519">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-519">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-520">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> déléguer.</span><span class="sxs-lookup"><span data-stu-id="f3f44-520">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="f3f44-521">Le délégué a la signature :</span><span class="sxs-lookup"><span data-stu-id="f3f44-521">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="f3f44-522">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est le nombre d’éléments à partir de `startIndex` à la fin de la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-522">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `startIndex` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-523">L’exemple suivant définit un `Employee` classe contenant deux champs, `Name` et `Id`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-523">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="f3f44-524">Il définit également une `EmployeeSearch` classe avec une méthode unique, `StartsWith`, qui indique si le `Employee.Name` champ commence par une sous-chaîne spécifiée qui est fournie à la `EmployeeSearch` constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-524">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="f3f44-525">Notez la signature de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="f3f44-525">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="f3f44-526">correspond à la signature du délégué qui peut être passé à la <xref:System.Collections.Generic.List%601.FindIndex%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-526">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="f3f44-527">L’exemple instancie un `List<Employee>` d’objet, ajoute un nombre de `Employee` objets à elle, puis appelle la <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> méthode à deux reprises pour rechercher dans la collection, en commençant par son membre cinquième (autrement dit, le membre à l’index 4).</span><span class="sxs-lookup"><span data-stu-id="f3f44-527">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the collection starting with its fifth member (that is, the member at index 4).</span></span> <span data-ttu-id="f3f44-528">La première fois, il recherche la première `Employee` dont l’objet `Name` champ commence par « J » ; la deuxième fois, il recherche la première `Employee` dont l’objet `Name` champ commence par « Ju ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-528">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex3.cs#3)]
 [!code-vb[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-529">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-529">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-530">
            <paramref name="startIndex" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-530">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="f3f44-531">Index de début de base zéro de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-531">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3f44-532">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-532">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="f3f44-533">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-533">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-534">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la première occurrence trouvée dans la plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> qui commence à l'index spécifié et contient le nombre d'éléments spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-534">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-535">Index de base zéro de la première occurrence d'un élément qui répond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-535">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-536">Le <xref:System.Collections.Generic.List%601> recherche est effectuée vers l’avant `startIndex` et se terminant à `startIndex` plus `count` -1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="f3f44-536">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="f3f44-537">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-537">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-538">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> déléguer.</span><span class="sxs-lookup"><span data-stu-id="f3f44-538">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="f3f44-539">Le délégué a la signature :</span><span class="sxs-lookup"><span data-stu-id="f3f44-539">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="f3f44-540">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est `count`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-540">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-541">L’exemple suivant définit un `Employee` classe contenant deux champs, `Name` et `Id`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-541">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="f3f44-542">Il définit également une `EmployeeSearch` classe avec une méthode unique, `StartsWith`, qui indique si le `Employee.Name` champ commence par une sous-chaîne spécifiée qui est fournie à la `EmployeeSearch` constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-542">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="f3f44-543">Notez la signature de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="f3f44-543">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="f3f44-544">correspond à la signature du délégué qui peut être passé à la <xref:System.Collections.Generic.List%601.FindIndex%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-544">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="f3f44-545">L’exemple instancie un `List<Employee>` d’objet, ajoute un nombre de `Employee` objets à elle, puis appelle la <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> à deux reprises pour rechercher la collection entière (méthode) (autrement dit, les membres de l’index 0 à l’index <xref:System.Collections.Generic.List%601.Count%2A> - 1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-545">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the entire collection (that is, the members from index 0 to index <xref:System.Collections.Generic.List%601.Count%2A> - 1).</span></span> <span data-ttu-id="f3f44-546">La première fois, il recherche la première `Employee` dont l’objet `Name` champ commence par « J » ; la deuxième fois, il recherche la première `Employee` dont l’objet `Name` champ commence par « Ju ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-546">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex1.cs#1)]
 [!code-vb[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-547">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-547">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-548">
            <paramref name="startIndex" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-548">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-549">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-549">-or-</span>
          </span>
          <span data-ttu-id="f3f44-550">
            <paramref name="count" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-550">
              <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-551">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-551">-or-</span>
          </span>
          <span data-ttu-id="f3f44-552">
            <paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas une section valide dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-552">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLast">
      <MemberSignature Language="C#" Value="public T FindLast (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T FindLast(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLast (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T FindLast(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f3f44-553">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-553">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-554">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne la dernière occurrence dans le <see cref="T:System.Collections.Generic.List`1" /> entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-554">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-555">Dernier élément qui correspond aux conditions définies par le prédicat spécifié, s'il est trouvé ; sinon, valeur par défaut du type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-555">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-556">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-556">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-557">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> délégué, le déplacement vers l’arrière le <xref:System.Collections.Generic.List%601>, en commençant par le dernier élément et se terminant par le premier élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-557">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving backward in the <xref:System.Collections.Generic.List%601>, starting with the last element and ending with the first element.</span></span>  <span data-ttu-id="f3f44-558">Le traitement est arrêté lorsqu’une correspondance est trouvée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-558">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f3f44-559">Lorsque vous recherchez une liste contenant des types valeur, assurez-vous que la valeur par défaut pour le type ne satisfait pas le prédicat de recherche.</span><span class="sxs-lookup"><span data-stu-id="f3f44-559">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="f3f44-560">Dans le cas contraire, il n’existe aucun moyen de faire la distinction entre une valeur par défaut indiquant qu’aucune correspondance n’a été trouvé et un élément de liste qui a la valeur par défaut pour le type.</span><span class="sxs-lookup"><span data-stu-id="f3f44-560">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="f3f44-561">Si la valeur par défaut satisfait le prédicat de recherche, utilisez la <xref:System.Collections.Generic.List%601.FindLastIndex%2A> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="f3f44-561">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindLastIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="f3f44-562">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-562">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-563">L’exemple suivant illustre les méthodes de recherche pour la <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-563">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="f3f44-564">L’exemple de la <xref:System.Collections.Generic.List%601> classe contient `book` les objets de classe `Book`, en utilisant les données à partir de la [exemple de fichier XML : livres (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="f3f44-564">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="f3f44-565">Le `FillList` méthode dans l’exemple utilise [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) pour analyser les valeurs à partir du XML dans les valeurs de propriété de la `book` objets.</span><span class="sxs-lookup"><span data-stu-id="f3f44-565">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="f3f44-566">Le tableau suivant décrit les exemples fournis pour les méthodes de recherche.</span><span class="sxs-lookup"><span data-stu-id="f3f44-566">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="f3f44-567">Méthode</span><span class="sxs-lookup"><span data-stu-id="f3f44-567">Method</span></span>|<span data-ttu-id="f3f44-568">Exemple</span><span class="sxs-lookup"><span data-stu-id="f3f44-568">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-569">Recherche un livre par un ID à l’aide de la `IDToFind` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-569">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f3f44-570">Exemple c# utilise un délégué anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-570">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-571">Rechercher tous les livres dont `Genre` propriété est « Ordinateur » à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-571">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-572">Recherche le dernier livre dans la collection ayant une date de publication avant 2001, à l’aide de la `PubBefore2001` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-572">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f3f44-573">Exemple c# utilise un délégué anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-573">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-574">Recherche l’index du premier livre d’ordinateur à l’aide du `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-574">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-575">Recherche l’index du dernier ordinateur livre en utilisant la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-575">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-576">Recherche l’index du premier livre de l’ordinateur dans la seconde moitié de la collection, à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-576">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-577">Recherche l’index du dernier ordinateur livre dans la seconde moitié de la collection, à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-577">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-578">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-578">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindLastIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-579">Recherche un élément qui correspond aux conditions définies par un prédicat spécifié et retourne l'index de base zéro de la dernière occurrence trouvée dans <see cref="T:System.Collections.Generic.List`1" /> ou une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-579">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f3f44-580">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-580">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-581">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la dernière occurrence trouvée dans le <see cref="T:System.Collections.Generic.List`1" /> entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-581">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-582">Index de base zéro de la dernière occurrence d'un élément qui correspond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-582">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-583">Le <xref:System.Collections.Generic.List%601> recherche est effectuée vers l’arrière à partir du dernier élément du premier élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-583">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="f3f44-584">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-584">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-585">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> déléguer.</span><span class="sxs-lookup"><span data-stu-id="f3f44-585">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="f3f44-586">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-586">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-587">L’exemple suivant illustre les méthodes de recherche pour la <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-587">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="f3f44-588">L’exemple de la <xref:System.Collections.Generic.List%601> classe contient `book` les objets de classe `Book`, en utilisant les données à partir de la [exemple de fichier XML : livres (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="f3f44-588">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="f3f44-589">Le `FillList` méthode dans l’exemple utilise [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) pour analyser les valeurs à partir du XML dans les valeurs de propriété de la `book` objets.</span><span class="sxs-lookup"><span data-stu-id="f3f44-589">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="f3f44-590">Le tableau suivant décrit les exemples fournis pour les méthodes de recherche.</span><span class="sxs-lookup"><span data-stu-id="f3f44-590">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="f3f44-591">Méthode</span><span class="sxs-lookup"><span data-stu-id="f3f44-591">Method</span></span>|<span data-ttu-id="f3f44-592">Exemple</span><span class="sxs-lookup"><span data-stu-id="f3f44-592">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-593">Recherche un livre par un ID à l’aide de la `IDToFind` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-593">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f3f44-594">Exemple c# utilise un délégué anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-594">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-595">Rechercher tous les livres dont `Genre` propriété est « Ordinateur » à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-595">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-596">Recherche le dernier livre dans la collection ayant une date de publication avant 2001, à l’aide de la `PubBefore2001` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-596">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f3f44-597">Exemple c# utilise un délégué anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-597">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-598">Recherche l’index du premier livre d’ordinateur à l’aide du `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-598">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-599">Recherche l’index du dernier ordinateur livre en utilisant la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-599">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-600">Recherche l’index du premier livre de l’ordinateur dans la seconde moitié de la collection, à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-600">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-601">Recherche l’index du dernier ordinateur livre dans la seconde moitié de la collection, à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-601">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-602">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-602">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="f3f44-603">Index de début de base zéro de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-603">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="f3f44-604">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-604">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-605">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la dernière occurrence trouvée dans la plage d'éléments du <see cref="T:System.Collections.Generic.List`1" /> qui s'étend du premier élément à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-605">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-606">Index de base zéro de la dernière occurrence d'un élément qui correspond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-606">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-607">Le <xref:System.Collections.Generic.List%601> est effectuée vers l’arrière commençant à `startIndex` et jusqu’au premier élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-607">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="f3f44-608">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-608">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-609">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> déléguer.</span><span class="sxs-lookup"><span data-stu-id="f3f44-609">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="f3f44-610">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est le nombre d’éléments à partir du début de la <xref:System.Collections.Generic.List%601> à `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-610">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `startIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-611">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-611">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-612">
            <paramref name="startIndex" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-612">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="f3f44-613">Index de début de base zéro de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-613">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3f44-614">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-614">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="f3f44-615">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions de l'élément à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-615">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-616">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l'index de base zéro de la dernière occurrence trouvée dans la plage d'éléments du <see cref="T:System.Collections.Generic.List`1" /> qui contient le nombre d'éléments spécifié et se termine à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-616">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-617">Index de base zéro de la dernière occurrence d'un élément qui correspond aux conditions définies par <paramref name="match" />, si cette occurrence est trouvée ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-617">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-618">Le <xref:System.Collections.Generic.List%601> est effectuée vers l’arrière commençant à `startIndex` et se terminant à `startIndex` moins `count` + 1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="f3f44-618">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="f3f44-619">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-619">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-620">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> déléguer.</span><span class="sxs-lookup"><span data-stu-id="f3f44-620">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="f3f44-621">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est `count`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-621">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-622">L’exemple suivant illustre les méthodes de recherche pour la <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-622">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="f3f44-623">L’exemple de la <xref:System.Collections.Generic.List%601> classe contient `book` les objets de classe `Book`, en utilisant les données à partir de la [exemple de fichier XML : livres (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="f3f44-623">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="f3f44-624">Le `FillList` méthode dans l’exemple utilise [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) pour analyser les valeurs à partir du XML dans les valeurs de propriété de la `book` objets.</span><span class="sxs-lookup"><span data-stu-id="f3f44-624">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="f3f44-625">Le tableau suivant décrit les exemples fournis pour les méthodes de recherche.</span><span class="sxs-lookup"><span data-stu-id="f3f44-625">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="f3f44-626">Méthode</span><span class="sxs-lookup"><span data-stu-id="f3f44-626">Method</span></span>|<span data-ttu-id="f3f44-627">Exemple</span><span class="sxs-lookup"><span data-stu-id="f3f44-627">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-628">Recherche un livre par un ID à l’aide de la `IDToFind` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-628">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f3f44-629">Exemple c# utilise un délégué anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-629">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-630">Rechercher tous les livres dont `Genre` propriété est « Ordinateur » à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-630">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-631">Recherche le dernier livre dans la collection ayant une date de publication avant 2001, à l’aide de la `PubBefore2001` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-631">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f3f44-632">Exemple c# utilise un délégué anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-632">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-633">Recherche l’index du premier livre d’ordinateur à l’aide du `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-633">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-634">Recherche l’index du dernier ordinateur livre en utilisant la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-634">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-635">Recherche l’index du premier livre de l’ordinateur dans la seconde moitié de la collection, à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-635">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f3f44-636">Recherche l’index du dernier ordinateur livre dans la seconde moitié de la collection, à l’aide de la `FindComputer` délégué de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f3f44-636">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-637">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-637">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-638">
            <paramref name="startIndex" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-638">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-639">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-639">-or-</span>
          </span>
          <span data-ttu-id="f3f44-640">
            <paramref name="count" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-640">
              <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-641">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-641">-or-</span>
          </span>
          <span data-ttu-id="f3f44-642">
            <paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas une section valide dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-642">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public void ForEach (Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach(class System.Action`1&lt;!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForEach (action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForEach(Action&lt;T&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="f3f44-643">Délégué <see cref="T:System.Action`1" /> à exécuter sur chaque élément de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-643">The <see cref="T:System.Action`1" /> delegate to perform on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-644">Exécute l'action spécifiée sur chaque élément de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-644">Performs the specified action on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-645">Le <xref:System.Action%601> est un délégué à une méthode qui effectue une action sur l’objet passé.</span><span class="sxs-lookup"><span data-stu-id="f3f44-645">The <xref:System.Action%601> is a delegate to a method that performs an action on the object passed to it.</span></span>  <span data-ttu-id="f3f44-646">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Action%601> déléguer.</span><span class="sxs-lookup"><span data-stu-id="f3f44-646">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Action%601> delegate.</span></span>  
  
 <span data-ttu-id="f3f44-647">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-647">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="f3f44-648">Modification de la collection sous-jacente dans le corps de la <xref:System.Action%601> délégué n’est pas prise en charge et provoque un comportement non défini.</span><span class="sxs-lookup"><span data-stu-id="f3f44-648">Modifying the underlying collection in the body of the <xref:System.Action%601> delegate is not supported and causes undefined behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-649">L’exemple suivant illustre l’utilisation de la <xref:System.Action%601> délégué pour imprimer le contenu d’un <xref:System.Collections.Generic.List%601> objet.</span><span class="sxs-lookup"><span data-stu-id="f3f44-649">The following example demonstrates the use of the <xref:System.Action%601> delegate to print the contents of a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="f3f44-650">Dans cet exemple la `Print` méthode est utilisée pour afficher le contenu de la liste dans la console.</span><span class="sxs-lookup"><span data-stu-id="f3f44-650">In this example the `Print` method is used to display the contents of the list to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3f44-651">En plus de l’affichage du contenu à l’aide de la `Print` méthode, l’exemple c# illustre l’utilisation de pour afficher les résultats dans la console.</span><span class="sxs-lookup"><span data-stu-id="f3f44-651">In addition to displaying the contents using the `Print` method, the C# example demonstrates the use of  to display the results to the console.</span></span>  
  
 [!code-csharp[System.Action_PrintExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action_PrintExample/cs/action.cs#01)]
 [!code-vb[System.Action_PrintExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action_PrintExample/vb/action.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-652">
            <paramref name="action" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-652">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3f44-653">Un élément a été modifié dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-653">An element in the collection has been modified.</span>
          </span>
        </exception>
        <altmember cref="T:System.Action`1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.List`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As List(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-654">Retourne un énumérateur qui itère au sein de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-654">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-655">
            <see cref="T:System.Collections.Generic.List`1.Enumerator" /> pour l'objet <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-655">A <see cref="T:System.Collections.Generic.List`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-656">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="f3f44-656">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="f3f44-657">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-657">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f3f44-658">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="f3f44-658">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f3f44-659">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="f3f44-659">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f3f44-660">À cette position, la <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> propriété n’est pas définie.</span><span class="sxs-lookup"><span data-stu-id="f3f44-660">At this position, the <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="f3f44-661">Par conséquent, vous devez appeler la <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> méthode pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-661">Therefore, you must call the <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f3f44-662">Le <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> propriété retourne le même objet jusqu'à ce que <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-662">The <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="f3f44-663"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-663"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f3f44-664">Si <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-664">If <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f3f44-665">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-665">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f3f44-666">Si le dernier appel à <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="f3f44-666">If the last call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f3f44-667">Vous ne pouvez pas attribuer de nouveau <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> au premier élément de la collection ; vous devez créer une nouvelle instance de l'énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="f3f44-667">You cannot set <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="f3f44-668">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-668">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f3f44-669">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="f3f44-669">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="f3f44-670">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-670">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f3f44-671">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="f3f44-671">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f3f44-672">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-672">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f3f44-673">Les implémentations par défaut de collections dans l'espace de noms <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-673">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f3f44-674">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-674">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.List`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRange (index As Integer, count As Integer) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ GetRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-675">Index de base zéro <see cref="T:System.Collections.Generic.List`1" /> où débute la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-675">The zero-based <see cref="T:System.Collections.Generic.List`1" /> index at which the range starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3f44-676">Nombre d'éléments dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-676">The number of elements in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-677">Crée une copie superficielle d'une plage d'éléments de la source <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-677">Creates a shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-678">Copie superficielle d'une plage d'éléments de la source <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-678">A shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-679">Une copie superficielle d’une collection de types de référence, ou un sous-ensemble de cette collection, contient uniquement les références aux éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="f3f44-679">A shallow copy of a collection of reference types, or a subset of that collection, contains only the references to the elements of the collection.</span></span> <span data-ttu-id="f3f44-680">Les objets eux-mêmes ne sont pas copiés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-680">The objects themselves are not copied.</span></span> <span data-ttu-id="f3f44-681">Les références dans la nouvelle liste désignent les mêmes objets que les références dans la liste d’origine.</span><span class="sxs-lookup"><span data-stu-id="f3f44-681">The references in the new list point to the same objects as the references in the original list.</span></span>  
  
 <span data-ttu-id="f3f44-682">Une copie superficielle d’une collection de types valeur, ou un sous-ensemble de cette collection, contient les éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="f3f44-682">A shallow copy of a collection of value types, or a subset of that collection, contains the elements of the collection.</span></span> <span data-ttu-id="f3f44-683">Toutefois, si les éléments de la collection contiennent des références à d’autres objets, ces objets ne sont pas copiés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-683">However, if the elements of the collection contain references to other objects, those objects are not copied.</span></span> <span data-ttu-id="f3f44-684">Les références dans les éléments de la nouvelle collection désignent les mêmes objets que les références dans les éléments de la collection d’origine.</span><span class="sxs-lookup"><span data-stu-id="f3f44-684">The references in the elements of the new collection point to the same objects as the references in the elements of the original collection.</span></span>  
  
 <span data-ttu-id="f3f44-685">En revanche, une copie complète d’une collection copie les éléments et tous les éléments référencés directement ou indirectement par les éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-685">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="f3f44-686">Cette méthode est un O (*n*) opération, où *n* est `count`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-686">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-687">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.GetRange%2A> (méthode) et autres méthodes de la <xref:System.Collections.Generic.List%601> classe qui agissent sur les plages.</span><span class="sxs-lookup"><span data-stu-id="f3f44-687">The following example demonstrates the <xref:System.Collections.Generic.List%601.GetRange%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f3f44-688">À la fin de l’exemple, le <xref:System.Collections.Generic.List%601.GetRange%2A> méthode est utilisée pour obtenir les trois éléments dans la liste, en commençant à la position d’index 2.</span><span class="sxs-lookup"><span data-stu-id="f3f44-688">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="f3f44-689">Le <xref:System.Collections.Generic.List%601.ToArray%2A> méthode est appelée sur résultant <xref:System.Collections.Generic.List%601>, création d’un tableau de trois éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-689">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="f3f44-690">Les éléments du tableau sont affichés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-690">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-691">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-691">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-692">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-692">-or-</span>
          </span>
          <span data-ttu-id="f3f44-693">
            <paramref name="count" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-693">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-694">
            <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide d'éléments dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-694">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-695">Retourne l'index de base zéro de la première occurrence d'une valeur trouvée dans <see cref="T:System.Collections.Generic.List`1" /> ou dans une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-695">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-696">Objet à rechercher dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-696">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-697">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-697">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-698">Recherche l'objet spécifié et retourne l'index de base zéro de la première occurrence trouvée dans l'ensemble du <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-698">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-699">Index de base zéro de la première occurrence d'<paramref name="item" /> dans l'ensemble de <see cref="T:System.Collections.Generic.List`1" />, s'il existe ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-699">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-700">Le <xref:System.Collections.Generic.List%601> recherche est effectuée vers l’avant à partir du premier élément au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-700">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="f3f44-701">Cette méthode détermine l’égalité en utilisant le comparateur d’égalité par défaut <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour `T`, le type de valeurs dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-701">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f3f44-702">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-702">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-703">L’exemple suivant illustre les trois surcharges de la <xref:System.Collections.Generic.List%601.IndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-703">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="f3f44-704">A <xref:System.Collections.Generic.List%601> de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="f3f44-704">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f3f44-705">Le <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> surcharge de méthode de recherche dans la liste à partir du début et de la première occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-705">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="f3f44-706">Le <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher la liste en commençant par l’emplacement d’index 3 et en continuant à la fin de la liste et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-706">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f3f44-707">Enfin, le <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de deux entrées, en commençant à l’emplacement d’index deux ; elle retourne – 1, car il n’existe aucune instance de la chaîne de recherche dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="f3f44-707">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-708">Objet à rechercher dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-708">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-709">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-709">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f3f44-710">Index de début de base zéro de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-710">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="f3f44-711">0 (zéro) est valide dans une liste vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-711">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-712">Recherche l'objet spécifié et retourne l'index de base zéro de la première occurrence trouvée dans la plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> qui s'étend de l'index spécifié au dernier élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-712">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-713">Index de base zéro de la première occurrence de <paramref name="item" /> trouvée dans la plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> qui s'étend de <paramref name="index" /> au dernier élément, le cas échéant ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-713">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from <paramref name="index" /> to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-714">Le <xref:System.Collections.Generic.List%601> recherche est effectuée vers l’avant `index` et jusqu’au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-714">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at the last element.</span></span>  
  
 <span data-ttu-id="f3f44-715">Cette méthode détermine l’égalité en utilisant le comparateur d’égalité par défaut <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour `T`, le type de valeurs dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-715">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f3f44-716">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est le nombre d’éléments à partir de `index` à la fin de la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-716">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `index` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-717">L’exemple suivant illustre les trois surcharges de la <xref:System.Collections.Generic.List%601.IndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-717">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="f3f44-718">A <xref:System.Collections.Generic.List%601> de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="f3f44-718">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f3f44-719">Le <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> surcharge de méthode de recherche dans la liste à partir du début et de la première occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-719">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="f3f44-720">Le <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher la liste en commençant par l’emplacement d’index 3 et en continuant à la fin de la liste et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-720">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f3f44-721">Enfin, le <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de deux entrées, en commençant à l’emplacement d’index deux ; elle retourne – 1, car il n’existe aucune instance de la chaîne de recherche dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="f3f44-721">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-722">
            <paramref name="index" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-722">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-723">Objet à rechercher dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-723">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-724">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-724">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f3f44-725">Index de début de base zéro de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-725">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="f3f44-726">0 (zéro) est valide dans une liste vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-726">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3f44-727">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-727">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-728">Recherche l'objet spécifié et retourne l'index de base zéro de la première occurrence trouvée dans la plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> qui commence à l'index spécifié et qui contient le nombre d'éléments spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-728">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-729">Index de base zéro de la première occurrence de <paramref name="item" /> trouvée dans la plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> qui commence à <paramref name="index" /> et contient le nombre <paramref name="count" /> d'éléments, le cas échéant ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-729">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at <paramref name="index" /> and contains <paramref name="count" /> number of elements, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-730">Le <xref:System.Collections.Generic.List%601> recherche est effectuée vers l’avant `index` et se terminant à `index` plus `count` -1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="f3f44-730">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at `index` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="f3f44-731">Cette méthode détermine l’égalité en utilisant le comparateur d’égalité par défaut <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour `T`, le type de valeurs dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-731">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f3f44-732">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est `count`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-732">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-733">L’exemple suivant illustre les trois surcharges de la <xref:System.Collections.Generic.List%601.IndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-733">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="f3f44-734">A <xref:System.Collections.Generic.List%601> de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="f3f44-734">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f3f44-735">Le <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> surcharge de méthode de recherche dans la liste à partir du début et de la première occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-735">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="f3f44-736">Le <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher la liste en commençant par l’emplacement d’index 3 et en continuant à la fin de la liste et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-736">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f3f44-737">Enfin, le <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de deux entrées, en commençant à l’emplacement d’index deux ; elle retourne – 1, car il n’existe aucune instance de la chaîne de recherche dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="f3f44-737">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-738">
            <paramref name="index" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-738">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-739">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-739">-or-</span>
          </span>
          <span data-ttu-id="f3f44-740">
            <paramref name="count" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-740">
              <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-741">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-741">-or-</span>
          </span>
          <span data-ttu-id="f3f44-742">
            <paramref name="index" /> et <paramref name="count" /> ne spécifient pas une section valide dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-742">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-743">Index de base zéro auquel <c>l’élément</c> doit être inséré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-743">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="f3f44-744">Objet à insérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-744">The object to insert.</span>
          </span>
          <span data-ttu-id="f3f44-745">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-745">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-746">Insère un élément dans la classe <see cref="T:System.Collections.Generic.List`1" /> au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-746">Inserts an element into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-747"><xref:System.Collections.Generic.List%601> accepte `null` comme une valeur valide pour la référence de types et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="f3f44-747"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="f3f44-748">Si <xref:System.Collections.Generic.List%601.Count%2A> est déjà égale à <xref:System.Collections.Generic.List%601.Capacity%2A>, la capacité de le <xref:System.Collections.Generic.List%601> est augmentée en réallouant automatiquement le tableau interne, et les éléments existants sont copiés dans le nouveau tableau avant le nouvel élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="f3f44-748">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="f3f44-749">Si `index` est égal à <xref:System.Collections.Generic.List%601.Count%2A>, `item` est ajouté à la fin de <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-749">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, `item` is added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-750">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-750">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-751">L’exemple suivant montre comment ajouter, supprimer et insérer un objet métier simple dans un <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-751">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="f3f44-752">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Insert%2A> (méthode), ainsi que de nombreuses autres propriétés et méthodes de la <xref:System.Collections.Generic.List%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-752">The following example demonstrates the <xref:System.Collections.Generic.List%601.Insert%2A> method, along with various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="f3f44-753">Une fois que la liste est créée, les éléments sont ajoutés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-753">After the list is created, elements are added.</span></span> <span data-ttu-id="f3f44-754">Le <xref:System.Collections.Generic.List%601.Insert%2A> méthode est utilisée pour insérer un élément dans le milieu de la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-754">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert an item into the middle of the list.</span></span> <span data-ttu-id="f3f44-755">L’élément inséré est un doublon, qui est supprimé ultérieurement à l’aide de la <xref:System.Collections.Generic.List%601.Remove%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-755">The item inserted is a duplicate, which is later removed using the <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-756">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-756">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-757">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-757">-or-</span>
          </span>
          <span data-ttu-id="f3f44-758">
            <paramref name="index" /> est supérieur à <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-758">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public void InsertRange (int index, System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertRange(int32 index, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertRange (index As Integer, collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertRange(int index, System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-759">Index de base zéro au niveau duquel les nouveaux éléments devraient être insérés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-759">The zero-based index at which the new elements should be inserted.</span>
          </span>
        </param>
        <param name="collection">
          <span data-ttu-id="f3f44-760">Collection dont les éléments doivent être insérés dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-760">The collection whose elements should be inserted into the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-761">La collection elle-même ne peut pas avoir la valeur <see langword="null" />, mais elle peut contenir des éléments qui sont <see langword="null" />, si le type <c>T</c> est un type référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-761">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <c>T</c> is a reference type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-762">Insère les éléments d'une collection dans <see cref="T:System.Collections.Generic.List`1" /> au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-762">Inserts the elements of a collection into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-763"><xref:System.Collections.Generic.List%601> accepte `null` comme une valeur valide pour la référence de types et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="f3f44-763"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="f3f44-764">Si la nouvelle <xref:System.Collections.Generic.List%601.Count%2A> (actuel <xref:System.Collections.Generic.List%601.Count%2A> plus la taille de la collection) sera supérieur à <xref:System.Collections.Generic.List%601.Capacity%2A>, le capacité de le <xref:System.Collections.Generic.List%601> est augmentée en réallouant automatiquement le tableau interne pour prendre en compte les nouveaux éléments et la éléments existants sont copiés dans le nouveau tableau avant que les nouveaux éléments sont ajoutés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-764">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="f3f44-765">Si `index` est égal à <xref:System.Collections.Generic.List%601.Count%2A>, les éléments sont ajoutés à la fin de <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-765">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, the elements are added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-766">L’ordre des éléments dans la collection est conservé dans le <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-766">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-767">Cette méthode est un O (*n* \* *m*) opération, où *n* est le nombre d’éléments à ajouter et *m* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-767">This method is an O(*n* \* *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-768">L’exemple suivant montre comment <xref:System.Collections.Generic.List%601.InsertRange%2A> (méthode) et diverses autres méthodes de la <xref:System.Collections.Generic.List%601> classe qui agissent sur les plages.</span><span class="sxs-lookup"><span data-stu-id="f3f44-768">The following example demonstrates <xref:System.Collections.Generic.List%601.InsertRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f3f44-769">Une fois que la liste a été créée et remplie avec les noms de plusieurs pacifiques plant dinosaures, le <xref:System.Collections.Generic.List%601.InsertRange%2A> méthode est utilisée pour insérer un tableau de trois dinosaures féroces dans la liste, en commençant à l’emplacement d’index 3.</span><span class="sxs-lookup"><span data-stu-id="f3f44-769">After the list has been created and populated with the names of several peaceful plant-eating dinosaurs, the <xref:System.Collections.Generic.List%601.InsertRange%2A> method is used to insert an array of three ferocious meat-eating dinosaurs into the list, beginning at index location 3.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-770">
            <paramref name="collection" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-770">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-771">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-771">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-772">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-772">-or-</span>
          </span>
          <span data-ttu-id="f3f44-773">
            <paramref name="index" /> est supérieur à <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-773">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-774">Index de base zéro de l'élément à obtenir ou à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-774">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-775">Obtient ou définit l'élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-775">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3f44-776">Élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-776">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-777"><xref:System.Collections.Generic.List%601> accepte `null` comme une valeur valide pour la référence de types et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="f3f44-777"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="f3f44-778">Cette propriété permet d'accéder à un élément spécifique de la collection à l'aide de la syntaxe suivante : `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-778">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="f3f44-779">La récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est également une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-779">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-780">L’exemple de cette section montre la <xref:System.Collections.Generic.List%601.Item%2A> propriété (l’indexeur en c#) et diverses autres propriétés et méthodes de la <xref:System.Collections.Generic.List%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-780">The example in this section demonstrates the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="f3f44-781">Une fois que la liste a été créée et remplie à l’aide de la <xref:System.Collections.Generic.List%601.Add%2A> (méthode), un élément est récupéré et affiché à l’aide de la <xref:System.Collections.Generic.List%601.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f3f44-781">After the list has been created and populated using the <xref:System.Collections.Generic.List%601.Add%2A> method, an element is retrieved and displayed using the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="f3f44-782">(Pour obtenir un exemple qui utilise le <xref:System.Collections.Generic.List%601.Item%2A> propriété pour définir la valeur d’un élément de liste, voir <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.)</span><span class="sxs-lookup"><span data-stu-id="f3f44-782">(For an example that uses the <xref:System.Collections.Generic.List%601.Item%2A> property to set the value of a list element, see <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3f44-783">Visual Basic, c# et C++ tous ont la syntaxe permettant d’accéder à la <xref:System.Collections.Generic.List%601.Item%2A> propriété sans utiliser son nom.</span><span class="sxs-lookup"><span data-stu-id="f3f44-783">Visual Basic, C#, and C++ all have syntax for accessing the <xref:System.Collections.Generic.List%601.Item%2A> property without using its name.</span></span> <span data-ttu-id="f3f44-784">Au lieu de cela, la variable contenant le <xref:System.Collections.Generic.List%601> est utilisée comme s’il s’agissait d’un tableau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-784">Instead, the variable containing the <xref:System.Collections.Generic.List%601> is used as if it were an array.</span></span>  
  
 <span data-ttu-id="f3f44-785">Le langage c# utilise le mot clé pour définir les indexeurs au lieu d’implémenter la <xref:System.Collections.Generic.List%601.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f3f44-785">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="f3f44-786">Visual Basic implémente <xref:System.Collections.Generic.List%601.Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-786">Visual Basic implements <xref:System.Collections.Generic.List%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 [!code-csharp[List`1_Class#2](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#2)]
 [!code-vb[List`1_Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#2)]  
[!code-csharp[List`1_Class#3](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#3)]
[!code-vb[List`1_Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-787">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-787">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-788">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-788">-or-</span>
          </span>
          <span data-ttu-id="f3f44-789">
            <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-789">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-790">Retourne l'index de base zéro de la dernière occurrence d'une valeur trouvée dans <see cref="T:System.Collections.Generic.List`1" /> ou une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-790">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-791">Objet à rechercher dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-791">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-792">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-792">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-793">Recherche l'objet spécifié et retourne l'index de base zéro de la dernière occurrence trouvée dans l'ensemble de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-793">Searches for the specified object and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-794">Index de base zéro de la dernière occurrence de <paramref name="item" /> trouvée dans l'ensemble de <see cref="T:System.Collections.Generic.List`1" />, le cas échéant ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-794">The zero-based index of the last occurrence of <paramref name="item" /> within the entire the <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-795">Le <xref:System.Collections.Generic.List%601> recherche est effectuée vers l’arrière à partir du dernier élément du premier élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-795">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="f3f44-796">Cette méthode détermine l’égalité en utilisant le comparateur d’égalité par défaut <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour `T`, le type de valeurs dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-796">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f3f44-797">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-797">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-798">L’exemple suivant illustre les trois surcharges de la <xref:System.Collections.Generic.List%601.LastIndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-798">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="f3f44-799">A <xref:System.Collections.Generic.List%601> de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="f3f44-799">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f3f44-800">Le <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> surcharge de méthode recherche toute la liste à partir de la fin et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-800">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f3f44-801">Le <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher la liste en commençant à la position d’index 3 et en remontant vers le début de la liste, afin qu’il recherche la première occurrence de la chaîne dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-801">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="f3f44-802">Enfin, le <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de quatre entrées, en commençant à l’emplacement d’index 4 et en poursuivant vers le bas (autrement dit, il recherche les éléments aux emplacements 4, 3, 2 et 1) ; cette recherche retourne -1, car il n’existe aucune instance de la recherche chaîne dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="f3f44-802">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-803">Objet à rechercher dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-803">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-804">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-804">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f3f44-805">Index de début de base zéro de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-805">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-806">Recherche l'objet spécifié et retourne l'index de base zéro de la dernière occurrence trouvée dans la plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> qui s'étend du premier élément à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-806">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-807">Index de base zéro de la dernière occurrence de <paramref name="item" /> trouvée dans la plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> qui s'étend du premier élément à <paramref name="index" />, le cas échéant ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-807">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to <paramref name="index" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-808">Le <xref:System.Collections.Generic.List%601> est effectuée vers l’arrière commençant à `index` et jusqu’au premier élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-808">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at the first element.</span></span>  
  
 <span data-ttu-id="f3f44-809">Cette méthode détermine l’égalité en utilisant le comparateur d’égalité par défaut <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour `T`, le type de valeurs dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-809">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f3f44-810">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est le nombre d’éléments à partir du début de la <xref:System.Collections.Generic.List%601> à `index`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-810">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `index`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-811">L’exemple suivant illustre les trois surcharges de la <xref:System.Collections.Generic.List%601.LastIndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-811">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="f3f44-812">A <xref:System.Collections.Generic.List%601> de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="f3f44-812">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f3f44-813">Le <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> surcharge de méthode recherche toute la liste à partir de la fin et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-813">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f3f44-814">Le <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher la liste en commençant à la position d’index 3 et en remontant vers le début de la liste, afin qu’il recherche la première occurrence de la chaîne dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-814">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="f3f44-815">Enfin, le <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de quatre entrées, en commençant à l’emplacement d’index 4 et en poursuivant vers le bas (autrement dit, il recherche les éléments aux emplacements 4, 3, 2 et 1) ; cette recherche retourne -1, car il n’existe aucune instance de la recherche chaîne dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="f3f44-815">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-816">
            <paramref name="index" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-816">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-817">Objet à rechercher dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-817">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-818">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-818">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f3f44-819">Index de début de base zéro de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-819">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3f44-820">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-820">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-821">Recherche l'objet spécifié et retourne l'index de base zéro de la dernière occurrence trouvée dans la plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> qui contient le nombre spécifié d'éléments et se termine à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-821">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-822">Index de base zéro de la dernière occurrence de <paramref name="item" /> trouvée dans la plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> qui contient le nombre d'éléments <paramref name="count" /> et se termine à <paramref name="index" />, le cas échéant ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-822">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="index" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-823">Le <xref:System.Collections.Generic.List%601> est effectuée vers l’arrière commençant à `index` et se terminant à `index` moins `count` + 1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="f3f44-823">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at `index` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="f3f44-824">Cette méthode détermine l’égalité en utilisant le comparateur d’égalité par défaut <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour `T`, le type de valeurs dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-824">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f3f44-825">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est `count`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-825">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-826">L’exemple suivant illustre les trois surcharges de la <xref:System.Collections.Generic.List%601.LastIndexOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-826">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="f3f44-827">A <xref:System.Collections.Generic.List%601> de chaînes est créé, avec une entrée qui apparaît deux fois, à l’emplacement d’index 0 et l’emplacement d’index 5.</span><span class="sxs-lookup"><span data-stu-id="f3f44-827">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f3f44-828">Le <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> surcharge de méthode recherche toute la liste à partir de la fin et la deuxième occurrence de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-828">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f3f44-829">Le <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher la liste en commençant à la position d’index 3 et en remontant vers le début de la liste, afin qu’il recherche la première occurrence de la chaîne dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-829">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="f3f44-830">Enfin, le <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour rechercher une plage de 4 entrées, en commençant à l’emplacement d’index 4 et en poursuivant vers le bas (autrement dit, il recherche les éléments aux emplacements 4, 3, 2 et 1) ; cette recherche retourne -1, car il n’existe aucune instance de la recherche chaîne dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="f3f44-830">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of 4 entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-831">
            <paramref name="index" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-831">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-832">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-832">-or-</span>
          </span>
          <span data-ttu-id="f3f44-833">
            <paramref name="count" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-833">
              <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-834">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-834">-or-</span>
          </span>
          <span data-ttu-id="f3f44-835">
            <paramref name="index" /> et <paramref name="count" /> ne spécifient pas une section valide dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-835">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-836">Objet à supprimer de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-836">The object to remove from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-837">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-837">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-838">Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-838">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-839">
            <see langword="true" /> si <paramref name="item" /> est bien supprimé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-839">
              <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f3f44-840">Cette méthode retourne également <see langword="false" /> si <paramref name="item" /> est introuvable dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-840">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-841">Si type `T` implémente la <xref:System.IEquatable%601> est d’interface générique, le comparateur d’égalité le <xref:System.IEquatable%601.Equals%2A> méthode de cette interface ; sinon, le comparateur d’égalité par défaut est <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-841">If type `T` implements the <xref:System.IEquatable%601> generic interface, the equality comparer is the <xref:System.IEquatable%601.Equals%2A> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f3f44-842">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-842">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-843">L’exemple suivant montre comment ajouter, supprimer et insérer un objet métier simple dans un <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-843">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="f3f44-844">L’exemple suivant montre comment <xref:System.Collections.Generic.List%601.Remove%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-844">The following example demonstrates <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span> <span data-ttu-id="f3f44-845">Plusieurs propriétés et méthodes de la <xref:System.Collections.Generic.List%601> classe générique sont utilisées pour ajouter, d’insérer et de recherche dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-845">Several properties and methods of the <xref:System.Collections.Generic.List%601> generic class are used to add, insert, and search the list.</span></span> <span data-ttu-id="f3f44-846">Une fois ces opérations, la liste contient un doublon.</span><span class="sxs-lookup"><span data-stu-id="f3f44-846">After these operations, the list contains a duplicate.</span></span> <span data-ttu-id="f3f44-847">Le <xref:System.Collections.Generic.List%601.Remove%2A> méthode est utilisée pour supprimer la première instance de l’élément en double, et le contenu est affiché.</span><span class="sxs-lookup"><span data-stu-id="f3f44-847">The <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item, and the contents are displayed.</span></span> <span data-ttu-id="f3f44-848">Le <xref:System.Collections.Generic.List%601.Remove%2A> méthode supprime toujours la première instance qu’elle rencontre.</span><span class="sxs-lookup"><span data-stu-id="f3f44-848">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public int RemoveAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RemoveAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAll (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RemoveAll(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f3f44-849">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions des éléments à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-849">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-850">Supprime tous les éléments qui correspondent aux conditions définies par le prédicat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-850">Removes all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-851">Nombre d'éléments supprimés de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-851">The number of elements removed from the <see cref="T:System.Collections.Generic.List`1" /> .</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-852">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-852">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-853">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> délégué et les éléments qui correspondent aux conditions sont supprimés de la <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-853">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are removed from the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f3f44-854">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-854">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-855">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.RemoveAll%2A> (méthode) et plusieurs autres méthodes qui utilisent la <xref:System.Predicate%601> délégué générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-855">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="f3f44-856">A <xref:System.Collections.Generic.List%601> de chaînes est créé, contenant 8 noms dinosaure deux (aux emplacements 1 et 5) se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-856">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="f3f44-857">L’exemple définit également une méthode de prédicat de recherche nommée `EndsWithSaurus`, qui accepte un paramètre de chaîne et retourne une valeur Boolean qui indique si la chaîne d’entrée se termine par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-857">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="f3f44-858">Le <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, et <xref:System.Collections.Generic.List%601.FindAll%2A> méthodes sont utilisées pour rechercher la liste avec la méthode de prédicat de recherche.</span><span class="sxs-lookup"><span data-stu-id="f3f44-858">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method.</span></span>  
  
 <span data-ttu-id="f3f44-859">Le <xref:System.Collections.Generic.List%601.RemoveAll%2A> méthode est utilisée pour supprimer toutes les entrées se terminant par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-859">The <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span> <span data-ttu-id="f3f44-860">Il parcourt la liste à partir du début, chaque élément en passant à la `EndsWithSaurus` (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-860">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="f3f44-861">L’élément est supprimé si le `EndsWithSaurus` méthode renvoie `true`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-861">The element is removed if the `EndsWithSaurus` method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3f44-862">En c# et Visual Basic, il n’est pas nécessaire de créer le `Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-862">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="f3f44-863">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-863">These languages infer the correct delegate from context, and create it automatically.</span></span>  
  
 <span data-ttu-id="f3f44-864">Enfin, le <xref:System.Collections.Generic.List%601.Exists%2A> méthode vérifie qu’il n’y a pas de chaînes dans la liste qui se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-864">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method verifies that there are no strings in the list that end with "saurus".</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-865">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-865">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-866">Index de base zéro de l'élément à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-866">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-867">Supprime l'élément au niveau de l'index spécifié de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-867">Removes the element at the specified index of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-868">Lorsque vous appelez <xref:System.Collections.Generic.List%601.RemoveAt%2A> pour supprimer un élément, les éléments restants dans la liste sont renumérotés pour remplacer l’élément supprimé.</span><span class="sxs-lookup"><span data-stu-id="f3f44-868">When you call <xref:System.Collections.Generic.List%601.RemoveAt%2A> to remove an item, the remaining items in the list are renumbered to replace the removed item.</span></span> <span data-ttu-id="f3f44-869">Par exemple, si vous supprimez l’élément à l’index 3, l’élément au niveau de l’index 4 est déplacé vers la position 3.</span><span class="sxs-lookup"><span data-stu-id="f3f44-869">For example, if you remove the item at index 3, the item at index 4 is moved to the 3 position.</span></span> <span data-ttu-id="f3f44-870">En outre, le nombre d’éléments dans la liste (telle que représentée par le <xref:System.Collections.Generic.List%601.Count%2A> propriété) est décrémentée de 1.</span><span class="sxs-lookup"><span data-stu-id="f3f44-870">In addition, the number of items in the list (as represented by the <xref:System.Collections.Generic.List%601.Count%2A> property) is reduced by 1.</span></span>  
  
 <span data-ttu-id="f3f44-871">Cette méthode est un O (*n*) opération, où *n* est (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span><span class="sxs-lookup"><span data-stu-id="f3f44-871">This method is an O(*n*) operation, where *n* is (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-872">L’exemple suivant montre comment ajouter, supprimer et insérer un objet métier simple dans un <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-872">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-873">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-873">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-874">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-874">-or-</span>
          </span>
          <span data-ttu-id="f3f44-875">
            <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-875">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-876">Index de début de base zéro de la plage d'éléments à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-876">The zero-based starting index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3f44-877">Nombre d'éléments à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-877">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-878">Supprime une plage d'éléments de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-878">Removes a range of elements from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-879">Les éléments sont supprimés et tous les éléments qui suivent dans le <xref:System.Collections.Generic.List%601> ont leurs index réduits par `count`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-879">The items are removed and all the elements following them in the <xref:System.Collections.Generic.List%601> have their indexes reduced by `count`.</span></span>  
  
 <span data-ttu-id="f3f44-880">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-880">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-881">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.RemoveRange%2A> (méthode) et diverses autres méthodes de la <xref:System.Collections.Generic.List%601> classe qui agissent sur les plages.</span><span class="sxs-lookup"><span data-stu-id="f3f44-881">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f3f44-882">Une fois que la liste a été créée et modifiée, le <xref:System.Collections.Generic.List%601.RemoveRange%2A> méthode est utilisée pour supprimer les deux éléments dans la liste, en commençant à l’emplacement d’index 2.</span><span class="sxs-lookup"><span data-stu-id="f3f44-882">After the list has been created and modified, the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method is used to remove two elements from the list, beginning at index location 2.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-883">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-883">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-884">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-884">-or-</span>
          </span>
          <span data-ttu-id="f3f44-885">
            <paramref name="count" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-885">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-886">
            <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide d'éléments dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-886">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-887">Inverse l'ordre des éléments dans <see cref="T:System.Collections.Generic.List`1" /> ou une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-887">Reverses the order of the elements in the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-888">Inverse l'ordre des éléments dans l'ensemble de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-888">Reverses the order of the elements in the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-889">Cette méthode utilise <xref:System.Array.Reverse%2A?displayProperty=nameWithType> pour inverser l’ordre des éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-889">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="f3f44-890">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-890">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-891">L’exemple suivant illustre les deux surcharges de la <xref:System.Collections.Generic.List%601.Reverse%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-891">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="f3f44-892">L’exemple crée un <xref:System.Collections.Generic.List%601> de chaînes et ajoute six chaînes.</span><span class="sxs-lookup"><span data-stu-id="f3f44-892">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="f3f44-893">Le <xref:System.Collections.Generic.List%601.Reverse> surcharge de méthode est utilisée pour inverser la liste, puis le <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour inverser le milieu de la liste, en commençant par l’élément 1 et en englobant quatre éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-893">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-894">Index de début de base zéro de la plage à inverser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-894">The zero-based starting index of the range to reverse.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3f44-895">Nombre d'éléments à inverser dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-895">The number of elements in the range to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-896">Inverse l'ordre des éléments dans la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-896">Reverses the order of the elements in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-897">Cette méthode utilise <xref:System.Array.Reverse%2A?displayProperty=nameWithType> pour inverser l’ordre des éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-897">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="f3f44-898">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-898">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-899">L’exemple suivant illustre les deux surcharges de la <xref:System.Collections.Generic.List%601.Reverse%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-899">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="f3f44-900">L’exemple crée un <xref:System.Collections.Generic.List%601> de chaînes et ajoute six chaînes.</span><span class="sxs-lookup"><span data-stu-id="f3f44-900">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="f3f44-901">Le <xref:System.Collections.Generic.List%601.Reverse> surcharge de méthode est utilisée pour inverser la liste, puis le <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> surcharge de méthode est utilisée pour inverser le milieu de la liste, en commençant par l’élément 1 et en englobant quatre éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-901">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-902">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-902">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-903">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-903">-or-</span>
          </span>
          <span data-ttu-id="f3f44-904">
            <paramref name="count" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-904">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-905">
            <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide d'éléments dans <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-905">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-906">Trie les éléments dans <see cref="T:System.Collections.Generic.List`1" /> ou une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-906">Sorts the elements in the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overloaded-method-syntax"></a><span data-ttu-id="f3f44-907">Syntaxe de la méthode surchargée</span><span class="sxs-lookup"><span data-stu-id="f3f44-907">Overloaded method syntax</span></span>  
 <span data-ttu-id="f3f44-908">Le <xref:System.Collections.Generic.List%601.Sort%2A> méthodes vous permettent de trier avec le comparateur par défaut pour le type d’objet dans la liste, ou spécifier une méthode de tri du client.</span><span class="sxs-lookup"><span data-stu-id="f3f44-908">The  <xref:System.Collections.Generic.List%601.Sort%2A> methods enable you to sort with the default comparer for the object type in the list, or specify a customer sort method.</span></span>  
  
 <span data-ttu-id="f3f44-909">[Liste\<T >. Sort()](xref:System.Collections.Generic.List`1.Sort*) trie les éléments dans l’intégralité de la liste à l’aide du comparateur par défaut du type d’objet conservées dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-909">[List\<T>.Sort()](xref:System.Collections.Generic.List`1.Sort*) Sorts the elements in the entire list using the default comparer of the object type held in the list.</span></span>  
  
 <span data-ttu-id="f3f44-910">[Liste\<T >. Tri M (comparaison\<T > comparaison)](xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29) trie les éléments dans l’intégralité de la liste à l’aide du comparateur spécifié.</span><span class="sxs-lookup"><span data-stu-id="f3f44-910">[List\<T>.Sort M(Comparison\<T> comparison)](xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29) Sorts the elements in the entire list using the specified comparer.</span></span>  
  
 <span data-ttu-id="f3f44-911">[Liste\<T >. Sort (IComparer\<T > comparateur)](xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29) trie les éléments dans l’intégralité de la liste à l’aide du <xref:System.Comparison%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-911">[List\<T>.Sort(IComparer\<T> comparer)](xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29) Sorts the elements in the entire list using the specified <xref:System.Comparison%601?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f3f44-912">[Liste\<T >. Tri (Int32 index, Int32, nombre, IComparer\<T > comparateur)](xref:System.Collections.Generic.List%601.Sort%28System.Int32,System.Int32,System.Collections.Generic.IComparer%7B%600%7D%29) trie les éléments dans une plage d’éléments de liste à l’aide du comparateur spécifié.</span><span class="sxs-lookup"><span data-stu-id="f3f44-912">[List\<T>.Sort(Int32 index, Int32 count, IComparer\<T> comparer)](xref:System.Collections.Generic.List%601.Sort%28System.Int32,System.Int32,System.Collections.Generic.IComparer%7B%600%7D%29) Sorts the elements in a range of elements in list using the specified comparer.</span></span>  
  
## <a name="parameters"></a><span data-ttu-id="f3f44-913">Paramètres</span><span class="sxs-lookup"><span data-stu-id="f3f44-913">Parameters</span></span>  
  
|<span data-ttu-id="f3f44-914">Paramètre</span><span class="sxs-lookup"><span data-stu-id="f3f44-914">Parameter</span></span>|<span data-ttu-id="f3f44-915">Type</span><span class="sxs-lookup"><span data-stu-id="f3f44-915">Type</span></span>|<span data-ttu-id="f3f44-916">Description </span><span class="sxs-lookup"><span data-stu-id="f3f44-916">Description</span></span>|  
|---------------|----------|-----------------|  
|`comparison`|<xref:System.Comparison%601>|<span data-ttu-id="f3f44-917">La méthode du délégué à utiliser lors de la comparaison d’éléments</span><span class="sxs-lookup"><span data-stu-id="f3f44-917">The delegate method to use when comparing elements</span></span>|  
|<span data-ttu-id="f3f44-918">comparateur</span><span class="sxs-lookup"><span data-stu-id="f3f44-918">comparer</span></span>|<xref:System.Collections.Generic.IComparer%601>|<span data-ttu-id="f3f44-919">Le <xref:System.Collections.Generic.IComparer%601> implémentation à utiliser lors de la comparaison d’éléments, ou null pour utiliser le comparateur par défaut <xref:System.Collections.Generic.Comparer%601.Default>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-919">The <xref:System.Collections.Generic.IComparer%601> implementation to use when comparing elements, or null to use the default comparer <xref:System.Collections.Generic.Comparer%601.Default>.</span></span>|  
|`index`|<xref:System.Int32>|<span data-ttu-id="f3f44-920">Index de début de base zéro de la plage à trier.</span><span class="sxs-lookup"><span data-stu-id="f3f44-920">The zero-based starting index of the range to sort.</span></span>|  
|`count`|<xref:System.Int32>|<span data-ttu-id="f3f44-921">Longueur de la plage à trier.</span><span class="sxs-lookup"><span data-stu-id="f3f44-921">The length of the range to sort.</span></span>|  
  
## <a name="exceptions"></a><span data-ttu-id="f3f44-922">Exceptions</span><span class="sxs-lookup"><span data-stu-id="f3f44-922">Exceptions</span></span>  
  
|<span data-ttu-id="f3f44-923">Exception</span><span class="sxs-lookup"><span data-stu-id="f3f44-923">Exception</span></span>|<span data-ttu-id="f3f44-924">Condition</span><span class="sxs-lookup"><span data-stu-id="f3f44-924">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="f3f44-925">`comparer` n’est pas spécifié ou `null`et le comparateur par défaut <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> ne peut pas trouver une implémentation de la <xref:System.IComparable%601?displayProperty=nameWithType> interface générique ou <xref:System.IComparable?displayProperty=nameWithType> interface pour le type T.</span><span class="sxs-lookup"><span data-stu-id="f3f44-925">`comparer` is not specified or `null`, and the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> cannot find implementation of the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface or the <xref:System.IComparable?displayProperty=nameWithType> interface for type T.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="f3f44-926">`comparison` est `null`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-926">`comparison` is `null`.</span></span>|  
|<xref:System.ArgumentException>|<span data-ttu-id="f3f44-927">L’implémentation de `comparison` ou `comparer` a provoqué une erreur pendant le tri.</span><span class="sxs-lookup"><span data-stu-id="f3f44-927">The implementation of `comparison` or `comparer` caused an error during the sort.</span></span> <span data-ttu-id="f3f44-928">Par exemple, `comparison` peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span><span class="sxs-lookup"><span data-stu-id="f3f44-928">For example, `comparison` might not return 0 when comparing an item with itself.</span></span><br /><br /> <span data-ttu-id="f3f44-929">- ou -</span><span class="sxs-lookup"><span data-stu-id="f3f44-929">-or-</span></span><br /><br /> <span data-ttu-id="f3f44-930">`index` et `count` ne spécifient pas une plage valide dans le <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-930">`index` and `count` do not specify a valid range in the <xref:System.Collections.Generic.List%601>.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="f3f44-931">`index` est inférieur à 0 ou `count` est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="f3f44-931">`index` is less than 0 or `count` is less than 0.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-932">Trie les éléments dans l'ensemble de <see cref="T:System.Collections.Generic.List`1" /> à l'aide du comparateur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-932">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the default comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-933">Cette méthode utilise le comparateur par défaut <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> pour le type `T` pour déterminer l’ordre des éléments de liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-933">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="f3f44-934">Le <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> propriété vérifie si le type `T` implémente la <xref:System.IComparable%601> interface générique et utilise cette implémentation, si elle est disponible.</span><span class="sxs-lookup"><span data-stu-id="f3f44-934">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f3f44-935">Si ce n’est pas le cas, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> vérifie si le type `T` implémente la <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f3f44-935">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f3f44-936">Si type `T` n’implémente pas l’interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-936">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f3f44-937">Cette méthode utilise le <xref:System.Array.Sort%2A?displayProperty=nameWithType> méthode qui applique le tri approfondie comme suit :</span><span class="sxs-lookup"><span data-stu-id="f3f44-937">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="f3f44-938">Si la taille de la partition est inférieur à 16 éléments, il utilise un algorithme de tri d’insertion.</span><span class="sxs-lookup"><span data-stu-id="f3f44-938">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="f3f44-939">Si le nombre de partitions dépasse 2 journal *n*, où *n* correspond à la plage du tableau d’entrée, il utilise un algorithme Heapsort.</span><span class="sxs-lookup"><span data-stu-id="f3f44-939">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="f3f44-940">Sinon, il utilise un algorithme de tri rapide.</span><span class="sxs-lookup"><span data-stu-id="f3f44-940">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="f3f44-941">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-941">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="f3f44-942">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="f3f44-942">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="f3f44-943">En moyenne, cette méthode est un O (*n* journal *n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>; dans le pire des cas il s’agit d’un O (*n* <sup>2</sup>) opération.</span><span class="sxs-lookup"><span data-stu-id="f3f44-943">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-944">L’exemple suivant ajoute des noms à un `List<String>` object, affiche la liste dans un ordre non trié, appelle le <xref:System.Collections.Generic.List%601.Sort%2A> (méthode), puis affiche la liste triée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-944">The following example adds some names to a `List<String>` object, displays the list in unsorted order, calls the <xref:System.Collections.Generic.List%601.Sort%2A> method, and then displays the sorted list.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/Sort1.cs#2)]
 [!code-vb[System.Collections.Generic.List.Sort#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/Sort1.vb#2)]  
  
 <span data-ttu-id="f3f44-945">Le code suivant illustre la <xref:System.Collections.Generic.List%601.Sort> et <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> des surcharges de méthode sur un objet métier simple.</span><span class="sxs-lookup"><span data-stu-id="f3f44-945">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort> and <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overloads on a simple business object.</span></span> <span data-ttu-id="f3f44-946">Appel de la <xref:System.Collections.Generic.List%601.Sort> méthode entraîne l’utilisation du comparateur par défaut pour le type de composant et le <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> méthode est implémentée à l’aide d’une méthode anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-946">Calling the <xref:System.Collections.Generic.List%601.Sort> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method is implemented by using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="f3f44-947">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Sort> surcharge de méthode et la <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="f3f44-947">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="f3f44-948">A <xref:System.Collections.Generic.List%601> de chaînes est créé et rempli avec quatre chaînes, dans aucun ordre particulier.</span><span class="sxs-lookup"><span data-stu-id="f3f44-948">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="f3f44-949">La liste est affichée, triée et affiche de nouveau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-949">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="f3f44-950">Le <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> surcharge de méthode est ensuite utilisée pour rechercher des deux chaînes qui ne sont pas dans la liste, et le <xref:System.Collections.Generic.List%601.Insert%2A> méthode est utilisée pour les insérer.</span><span class="sxs-lookup"><span data-stu-id="f3f44-950">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="f3f44-951">La valeur de retour de la <xref:System.Collections.Generic.List%601.BinarySearch%2A> méthode est un nombre négative dans chaque cas, étant donné que les chaînes ne sont pas dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-951">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%2A> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="f3f44-952">En prenant le complément de bits (le ~ (opérateur) en c# et Visual C++, `Xor` -1 en Visual Basic) de ce nombre négatif génère l’index du premier élément dans la liste qui est supérieure à la chaîne de recherche et l’insertion à cet emplacement conserve le tri commande.</span><span class="sxs-lookup"><span data-stu-id="f3f44-952">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="f3f44-953">La deuxième chaîne de recherche est supérieure à n’importe quel élément dans la liste, par conséquent, la position d’insertion est à la fin de la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-953">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3f44-954">Le comparateur par défaut <see cref="P:System.Collections.Generic.Comparer`1.Default" /> ne peut pas trouver une implémentation de l’interface générique <see cref="T:System.IComparable`1" /> ou de l’interface <see cref="T:System.IComparable" /> pour le type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-954">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="f3f44-955">Implémentation de <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser pendant la comparaison d'éléments, ou <see langword="null" /> pour utiliser le comparateur par défaut <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-955">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-956">Trie les éléments dans l'ensemble de <see cref="T:System.Collections.Generic.List`1" /> à l'aide du comparateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-956">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-957">Si `comparer` est fourni, les éléments de la <xref:System.Collections.Generic.List%601> sont triés à l’aide de la <xref:System.Collections.Generic.IComparer%601> implémentation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-957">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="f3f44-958">Si `comparer` est `null`, le comparateur par défaut <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> vérifie si le type `T` implémente la <xref:System.IComparable%601> interface générique et utilise cette implémentation, si elle est disponible.</span><span class="sxs-lookup"><span data-stu-id="f3f44-958">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f3f44-959">Si ce n’est pas le cas, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> vérifie si le type `T` implémente la <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f3f44-959">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f3f44-960">Si type `T` n’implémente pas l’interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-960">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f3f44-961">Cette méthode utilise le <xref:System.Array.Sort%2A?displayProperty=nameWithType> méthode qui applique le tri approfondie comme suit :</span><span class="sxs-lookup"><span data-stu-id="f3f44-961">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="f3f44-962">Si la taille de la partition est inférieur à 16 éléments, il utilise un algorithme de tri d’insertion.</span><span class="sxs-lookup"><span data-stu-id="f3f44-962">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="f3f44-963">Si le nombre de partitions dépasse 2 journal *n*, où *n* correspond à la plage du tableau d’entrée, il utilise un algorithme Heapsort.</span><span class="sxs-lookup"><span data-stu-id="f3f44-963">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="f3f44-964">Sinon, il utilise un algorithme de tri rapide.</span><span class="sxs-lookup"><span data-stu-id="f3f44-964">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="f3f44-965">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-965">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="f3f44-966">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="f3f44-966">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="f3f44-967">En moyenne, cette méthode est un O (*n* journal *n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>; dans le pire des cas il s’agit d’un O (*n* <sup>2</sup>) opération.</span><span class="sxs-lookup"><span data-stu-id="f3f44-967">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-968">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode et la <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="f3f44-968">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="f3f44-969">L’exemple définit un autre comparateur pour les chaînes nommées DinoCompare, qui implémente le `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-969">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="f3f44-970">Le comparateur fonctionne comme suit : en premier lieu, les comparateurs sont testés pour `null`, et une référence null est traitée comme inférieure à une valeur non null.</span><span class="sxs-lookup"><span data-stu-id="f3f44-970">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="f3f44-971">En second lieu, les longueurs de chaîne sont comparées, et la plus longue chaîne est jugée supérieure.</span><span class="sxs-lookup"><span data-stu-id="f3f44-971">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="f3f44-972">Troisièmement, si les longueurs sont égales, la comparaison de chaînes ordinaire est utilisé.</span><span class="sxs-lookup"><span data-stu-id="f3f44-972">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="f3f44-973">A <xref:System.Collections.Generic.List%601> de chaînes est créé et rempli avec quatre chaînes, dans aucun ordre particulier.</span><span class="sxs-lookup"><span data-stu-id="f3f44-973">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="f3f44-974">La liste est affichée, triée à l’aide de l’autre comparateur et s’affichent à nouveau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-974">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="f3f44-975">Le <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode est ensuite utilisée pour rechercher de nombreuses chaînes qui ne figurent pas dans la liste, par le biais de l’autre comparateur.</span><span class="sxs-lookup"><span data-stu-id="f3f44-975">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="f3f44-976">Le <xref:System.Collections.Generic.List%601.Insert%2A> méthode est utilisée pour insérer les chaînes.</span><span class="sxs-lookup"><span data-stu-id="f3f44-976">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="f3f44-977">Ces deux méthodes sont situés dans la fonction nommée `SearchAndInsert`, ainsi que du code pour prendre le complément de bits (le ~ opérateur en c# et Visual C++, `Xor` -1 en Visual Basic) du nombre négatif retourné par <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> et l’utiliser comme un index pour Insérer la nouvelle chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-977">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3f44-978">
            <paramref name="comparer" /> a la valeur <see langword="null" />, et le comparateur par défaut <see cref="P:System.Collections.Generic.Comparer`1.Default" /> ne peut pas trouver d’implémentation de l’interface générique <see cref="T:System.IComparable`1" /> ou de l’interface <see cref="T:System.IComparable" /> pour le type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-978">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-979">L’implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-979">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="f3f44-980">Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-980">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="f3f44-981">
            <see cref="T:System.Comparison`1" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-981">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-982">Trie les éléments dans l'ensemble de <see cref="T:System.Collections.Generic.List`1" /> à l'aide du <see cref="T:System.Comparison`1" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-982">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified <see cref="T:System.Comparison`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-983">Si `comparison` est fourni, les éléments de la <xref:System.Collections.Generic.List%601> sont triés à l’aide de la méthode représentée par le délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-983">If `comparison` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the method represented by the delegate.</span></span>  
  
 <span data-ttu-id="f3f44-984">Si `comparison` est `null`, un <xref:System.ArgumentNullException> est levée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-984">If `comparison` is `null`, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="f3f44-985">Cette méthode utilise <xref:System.Array.Sort%2A?displayProperty=nameWithType>, auquel s’applique le tri approfondie comme suit :</span><span class="sxs-lookup"><span data-stu-id="f3f44-985">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="f3f44-986">Si la taille de la partition est inférieur à 16 éléments, il utilise un algorithme de tri d’insertion</span><span class="sxs-lookup"><span data-stu-id="f3f44-986">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="f3f44-987">Si le nombre de partitions dépasse 2 journal *n*, où *n* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-987">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="f3f44-988">Sinon, il utilise un algorithme de tri rapide.</span><span class="sxs-lookup"><span data-stu-id="f3f44-988">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="f3f44-989">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-989">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="f3f44-990">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="f3f44-990">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="f3f44-991">En moyenne, cette méthode est un O (*n* journal *n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>; dans le pire des cas il s’agit d’un O (*n* <sup>2</sup>) opération.</span><span class="sxs-lookup"><span data-stu-id="f3f44-991">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-992">Le code suivant illustre la <xref:System.Collections.Generic.List%601.Sort%2A> et <xref:System.Collections.Generic.List%601.Sort%2A> des surcharges de méthode sur un objet métier simple.</span><span class="sxs-lookup"><span data-stu-id="f3f44-992">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> method overloads on a simple business object.</span></span> <span data-ttu-id="f3f44-993">Appel de la <xref:System.Collections.Generic.List%601.Sort%2A> méthode entraîne l’utilisation du comparateur par défaut pour le type de composant et le <xref:System.Collections.Generic.List%601.Sort%2A> méthode est implémentée à l’aide d’une méthode anonyme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-993">Calling the <xref:System.Collections.Generic.List%601.Sort%2A> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%2A> method is implemented using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="f3f44-994">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="f3f44-994">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="f3f44-995">L’exemple définit une autre méthode de comparaison des chaînes, nommée `CompareDinosByLength`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-995">The example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="f3f44-996">Cette méthode fonctionne comme suit : en premier lieu, les comparateurs sont testés pour `null`, et une référence null est traitée comme inférieure à une valeur non null.</span><span class="sxs-lookup"><span data-stu-id="f3f44-996">This method works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="f3f44-997">En second lieu, les longueurs de chaîne sont comparées, et la plus longue chaîne est jugée supérieure.</span><span class="sxs-lookup"><span data-stu-id="f3f44-997">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="f3f44-998">Troisièmement, si les longueurs sont égales, la comparaison de chaînes ordinaire est utilisé.</span><span class="sxs-lookup"><span data-stu-id="f3f44-998">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="f3f44-999">A <xref:System.Collections.Generic.List%601> de chaînes est créé et rempli avec quatre chaînes, dans aucun ordre particulier.</span><span class="sxs-lookup"><span data-stu-id="f3f44-999">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="f3f44-1000">La liste inclut également une chaîne vide et une référence null.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1000">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="f3f44-1001">La liste est affichée, trié à l’aide un <xref:System.Comparison%601> délégué générique représentant le `CompareDinosByLength` (méthode) et affiche à nouveau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1001">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-1002">
            <paramref name="comparison" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1002">
              <paramref name="comparison" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-1003">L’implémentation de <paramref name="comparison" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1003">The implementation of <paramref name="comparison" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="f3f44-1004">Par exemple, <paramref name="comparison" /> peut ne pas retourner 0 pendant la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1004">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <altmember cref="T:System.Comparison`1" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (int index, int count, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(int32 index, int32 count, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (index As Integer, count As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(int index, int count, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-1005">Index de début de base zéro de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1005">The zero-based starting index of the range to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f3f44-1006">Longueur de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1006">The length of the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f3f44-1007">Implémentation de <see cref="T:System.Collections.Generic.IComparer`1" /> à utiliser pendant la comparaison d'éléments, ou <see langword="null" /> pour utiliser le comparateur par défaut <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1007">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-1008">Trie les éléments dans une plage d'éléments de <see cref="T:System.Collections.Generic.List`1" /> à l'aide du comparateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1008">Sorts the elements in a range of elements in <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1009">Si `comparer` est fourni, les éléments de la <xref:System.Collections.Generic.List%601> sont triés à l’aide de la <xref:System.Collections.Generic.IComparer%601> implémentation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1009">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="f3f44-1010">Si `comparer` est `null`, le comparateur par défaut <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> vérifie si le type `T` implémente la <xref:System.IComparable%601> interface générique et utilise cette implémentation, si elle est disponible.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1010">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f3f44-1011">Si ce n’est pas le cas, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> vérifie si le type `T` implémente la <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1011">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f3f44-1012">Si type `T` n’implémente pas l’interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1012">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f3f44-1013">Cette méthode utilise <xref:System.Array.Sort%2A?displayProperty=nameWithType>, auquel s’applique le tri approfondie comme suit :</span><span class="sxs-lookup"><span data-stu-id="f3f44-1013">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="f3f44-1014">Si la taille de la partition est inférieur à 16 éléments, il utilise un algorithme de tri d’insertion</span><span class="sxs-lookup"><span data-stu-id="f3f44-1014">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="f3f44-1015">Si le nombre de partitions dépasse 2 journal *n*, où *n* correspond à la plage du tableau d’entrée, il utilise un [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithme.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1015">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="f3f44-1016">Sinon, il utilise un algorithme de tri rapide.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1016">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="f3f44-1017">Cette implémentation effectue un tri instable ; Autrement dit, si deux éléments sont égaux, leur ordre n’est pas conservée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1017">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="f3f44-1018">En revanche, un tri stable conserve l’ordre des éléments qui sont identiques.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1018">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="f3f44-1019">En moyenne, cette méthode est un O (*n* journal *n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>; dans le pire des cas il s’agit d’un O (*n* <sup>2</sup>) opération.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1019">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-1020">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode et la <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1020">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="f3f44-1021">L’exemple définit un autre comparateur pour les chaînes nommées DinoCompare, qui implémente le `IComparer<string>` (`IComparer(Of String)` en Visual Basic, `IComparer<String^>` dans Visual C++) interface générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1021">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="f3f44-1022">Le comparateur fonctionne comme suit : en premier lieu, les comparateurs sont testés pour `null`, et une référence null est traitée comme inférieure à une valeur non null.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1022">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="f3f44-1023">En second lieu, les longueurs de chaîne sont comparées, et la plus longue chaîne est jugée supérieure.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1023">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="f3f44-1024">Troisièmement, si les longueurs sont égales, la comparaison de chaînes ordinaire est utilisé.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1024">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="f3f44-1025">A <xref:System.Collections.Generic.List%601> de chaînes est créé et rempli avec les noms de cinq dinosaures et trois dinosaures carnivores.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1025">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="f3f44-1026">Dans chacun des deux groupes, les noms ne sont pas dans l’ordre de tri particulier.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1026">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="f3f44-1027">La liste est affichée, la plage d’herbivores est triée à l’aide de l’autre comparateur, et la liste s’affiche de nouveau.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1027">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="f3f44-1028">Le <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> surcharge de méthode est ensuite utilisée pour rechercher uniquement la plage d’herbivores correspondant à « Brachiosaure ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-1028">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="f3f44-1029">La chaîne est introuvable et le complément de bits (le ~ opérateur en c# et Visual C++, `Xor` -1 en Visual Basic) du nombre négatif retourné par la <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> méthode est utilisée en tant qu’index pour insérer la nouvelle chaîne.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1029">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-1030">
            <paramref name="index" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1030">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f3f44-1031">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1031">-or-</span>
          </span>
          <span data-ttu-id="f3f44-1032">
            <paramref name="count" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1032">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-1033">
            <paramref name="index" /> et <paramref name="count" /> ne spécifient pas une plage valide dans le <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1033">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f3f44-1034">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1034">-or-</span>
          </span>
          <span data-ttu-id="f3f44-1035">L’implémentation de <paramref name="comparer" /> a provoqué une erreur pendant le tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1035">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="f3f44-1036">Par exemple, <paramref name="comparer" /> peut ne pas retourner 0 lors de la comparaison d’un élément à lui-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1036">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3f44-1037">
            <paramref name="comparer" /> a la valeur <see langword="null" />, et le comparateur par défaut <see cref="P:System.Collections.Generic.Comparer`1.Default" /> ne peut pas trouver d’implémentation de l’interface générique <see cref="T:System.IComparable`1" /> ou de l’interface <see cref="T:System.IComparable" /> pour le type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1037">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-1038">Obtient une valeur indiquant si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1038">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3f44-1039">
            <see langword="true" /> si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1039">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f3f44-1040">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.List`1" />, cette propriété retourne toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1040">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1041">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1041">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="f3f44-1042">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection ; Par conséquent, si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1042">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f3f44-1043">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1043">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-1044">Retourne un énumérateur qui itère au sein d'une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1044">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-1045">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> qui peut être utilisé pour itérer au sein de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1045">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1046">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1046">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="f3f44-1047">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1047">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f3f44-1048">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1048">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f3f44-1049">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1049">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f3f44-1050">À cette position, la <xref:System.Collections.Generic.IEnumerator%601.Current%2A> propriété n’est pas définie.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1050">At this position, the <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property is undefined.</span></span> <span data-ttu-id="f3f44-1051">Par conséquent, vous devez appeler la <xref:System.Collections.IEnumerator.MoveNext%2A> méthode pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1051">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="f3f44-1052">Le <xref:System.Collections.Generic.IEnumerator%601.Current%2A> propriété retourne le même objet jusqu'à ce que <xref:System.Collections.IEnumerator.MoveNext%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1052">The <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="f3f44-1053"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1053"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f3f44-1054">Si <xref:System.Collections.IEnumerator.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1054">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f3f44-1055">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1055">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f3f44-1056">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1056">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="f3f44-1057">Vous ne pouvez pas attribuer de nouveau <xref:System.Collections.Generic.IEnumerator%601.Current%2A> au premier élément de la collection ; vous devez créer une nouvelle instance de l'énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1057">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="f3f44-1058">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1058">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f3f44-1059">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1059">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="f3f44-1060">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1060">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f3f44-1061">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1061">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f3f44-1062">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1062">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f3f44-1063">Les implémentations par défaut de collections dans l'espace de noms <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1063">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f3f44-1064">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1064">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="f3f44-1065">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1065">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="f3f44-1066">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1066">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="f3f44-1067">Index de base zéro dans un <c>tableau</c> auquel commencer la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1067">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-1068">Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, à partir d'un index particulier de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1068">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f3f44-1069">Si le type de la source de <xref:System.Collections.ICollection> ne peut pas être casté automatiquement au type de la destination `array`, les implémentations non génériques de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> lever <xref:System.InvalidCastException>, alors que les implémentations génériques lèvent <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1069">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="f3f44-1070">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1070">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-1071">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1071">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-1072">
            <paramref name="arrayIndex" /> est inférieur à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1072">
              <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-1073">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1073">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="f3f44-1074">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1074">-or-</span>
          </span>
          <span data-ttu-id="f3f44-1075">
            <paramref name="array" /> n’a pas d’indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1075">
              <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="f3f44-1076">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1076">-or-</span>
          </span>
          <span data-ttu-id="f3f44-1077">Le nombre d’éléments dans le <see cref="T:System.Collections.ICollection" /> source est supérieur à la quantité d’espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1077">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="f3f44-1078">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1078">-or-</span>
          </span>
          <span data-ttu-id="f3f44-1079">Le type du <see cref="T:System.Collections.ICollection" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1079">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-1080">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1080">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3f44-1081">
            <see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1081">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f3f44-1082">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.List`1" />, cette propriété retourne toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1082">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1083">Les implémentations par défaut de collections dans l'espace de noms <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1083">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f3f44-1084">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1084">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f3f44-1085">Dans les rares cas où l’énumération gère avec accès en écriture, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1085">In the rare case where enumeration contends with write accesses, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f3f44-1086">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1086">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f3f44-1087"><xref:System.Collections.ICollection.SyncRoot%2A> Retourne un objet qui peut être utilisé pour synchroniser l’accès à la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1087"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="f3f44-1088">La synchronisation est effective uniquement si tous les threads de verrouillent de cet objet avant d’accéder à la collection.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1088">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="f3f44-1089">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1089">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-1090">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1090">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3f44-1091">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1091">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="f3f44-1092">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.List`1" />, cette propriété retourne toujours l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1092">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1093">Les implémentations par défaut de collections dans l'espace de noms <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1093">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f3f44-1094">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1094">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f3f44-1095">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1095">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f3f44-1096">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1096">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f3f44-1097"><xref:System.Collections.ICollection.SyncRoot%2A> Retourne un objet qui peut être utilisé pour synchroniser l’accès à la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1097"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="f3f44-1098">La synchronisation est effective uniquement si tous les threads de verrouillent de cet objet avant d’accéder à la collection.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1098">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="f3f44-1099">Le code suivant illustre l’utilisation de la <xref:System.Collections.ICollection.SyncRoot%2A> propriété pour c#, C++ et Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1099">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="f3f44-1100">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1100">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-1101">Retourne un énumérateur qui itère au sein d'une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1101">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-1102">
            <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1102">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1103">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1103">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="f3f44-1104">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1104">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f3f44-1105">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1105">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f3f44-1106">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1106">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f3f44-1107"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1107"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="f3f44-1108">À cette position, la <xref:System.Collections.IEnumerator.Current%2A> propriété n’est pas définie.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1108">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="f3f44-1109">Par conséquent, vous devez appeler la <xref:System.Collections.IEnumerator.MoveNext%2A> méthode pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1109">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f3f44-1110">Le <xref:System.Collections.IEnumerator.Current%2A> propriété retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1110">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="f3f44-1111"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f3f44-1112">Si <xref:System.Collections.IEnumerator.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f3f44-1113">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f3f44-1114">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.IEnumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f3f44-1115">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1115">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="f3f44-1116">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1116">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f3f44-1117">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1117">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="f3f44-1118">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1118">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f3f44-1119">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1119">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f3f44-1120">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1120">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f3f44-1121">Les implémentations par défaut de collections dans l'espace de noms <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1121">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f3f44-1122">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1122">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-1123">
            <see cref="T:System.Object" /> à ajouter à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1123">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-1124">Ajoute un élément à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1124">Adds an item to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-1125">Position à laquelle le nouvel élément est inséré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1125">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1126">Si <xref:System.Collections.Generic.List%601.Count%2A> est inférieure à <xref:System.Collections.Generic.List%601.Capacity%2A>, cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1126">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="f3f44-1127">Si la capacité doit être augmentée pour intégrer le nouvel élément, cette méthode devient un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1127">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-1128">
            <paramref name="item" /> a un type qui ne peut pas être assigné à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1128">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-1129">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1129">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-1130">Détermine si <see cref="T:System.Collections.IList" /> contient une valeur spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1130">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-1131">
            <see langword="true" /> si <paramref name="item" /> existe dans <see cref="T:System.Collections.IList" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1131">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1132">Cette méthode détermine l’égalité en utilisant le comparateur d’égalité par défaut <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour `T`, le type de valeurs dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1132">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f3f44-1133">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1133">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-1134">Objet à rechercher dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1134">The object to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-1135">Détermine l'index d'un élément spécifique d'<see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1135">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-1136">Index de <paramref name="item" /> s'il figure dans la liste ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1136">The index of <paramref name="item" /> if found in the list; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1137">Cette méthode détermine l’égalité en utilisant le comparateur d’égalité par défaut <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour `T`, le type de valeurs dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1137">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f3f44-1138">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1138">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-1139">
            <paramref name="item" /> a un type qui ne peut pas être assigné à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1139">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-1140">Index de base zéro auquel <c>l’élément</c> doit être inséré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1140">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="f3f44-1141">Objet à insérer dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1141">The object to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-1142">Insère un élément dans <see cref="T:System.Collections.IList" /> à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1142">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1143">Si `index` est égal au nombre d'éléments dans <xref:System.Collections.IList>, `item` est ajouté à la fin.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1143">If `index` equals the number of items in the <xref:System.Collections.IList>, then `item` is appended to the end.</span></span>  
  
 <span data-ttu-id="f3f44-1144">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1144">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-1145">
            <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1145">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-1146">
            <paramref name="item" /> a un type qui ne peut pas être assigné à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1146">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-1147">Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1147">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3f44-1148">
            <see langword="true" /> si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1148">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f3f44-1149">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.List`1" />, cette propriété retourne toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1149">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1150">Une collection de taille fixe ne permet pas l’ajout ou la suppression d’éléments après sa création, mais permet la modification des éléments existants.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1150">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="f3f44-1151">Une collection de taille fixe est simplement une collection avec un wrapper qui empêche l’ajout et suppression d’éléments. Par conséquent, si des modifications sont apportées à la collection sous-jacente, y compris l’ajout ou la suppression d’éléments, la collection de taille fixe reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1151">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f3f44-1152">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1152">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-1153">Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1153">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3f44-1154">
            <see langword="true" /> si <see cref="T:System.Collections.IList" /> est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1154">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f3f44-1155">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.List`1" />, cette propriété retourne toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1155">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1156">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1156">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="f3f44-1157">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection ; Par conséquent, si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1157">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f3f44-1158">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1158">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f3f44-1159">Index de base zéro de l'élément à obtenir ou à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1159">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-1160">Obtient ou définit l'élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1160">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3f44-1161">Élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1161">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1162">Le langage c# utilise le [cela](~/docs/csharp/language-reference/keywords/this.md) (mot clé) pour définir les indexeurs au lieu d’implémenter la <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1162">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="f3f44-1163">Visual Basic implémente <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1163">Visual Basic implements <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="f3f44-1164">La récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est également une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1164">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3f44-1165">
            <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1165">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-1166">La propriété est définie et <paramref name="value" /> a un type qui ne peut pas être assigné à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1166">The property is set and <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f3f44-1167">Objet à supprimer de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1167">The object to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-1168">Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1168">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1169">Cette méthode détermine l’égalité en utilisant le comparateur d’égalité par défaut <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour `T`, le type de valeurs dans la liste.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1169">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f3f44-1170">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1170">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3f44-1171">
            <paramref name="item" /> a un type qui ne peut pas être assigné à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1171">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-1172">Copie les éléments de <see cref="T:System.Collections.Generic.List`1" /> dans un nouveau tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1172">Copies the elements of the <see cref="T:System.Collections.Generic.List`1" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-1173">Tableau contenant les copies des éléments de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1173">An array containing copies of the elements of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1174">Les éléments sont copiés à l’aide de <xref:System.Array.Copy%2A?displayProperty=nameWithType>, qui est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1174">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="f3f44-1175">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1175">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-1176">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.ToArray%2A> (méthode) et autres méthodes de la <xref:System.Collections.Generic.List%601> classe qui agissent sur les plages.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1176">The following example demonstrates the <xref:System.Collections.Generic.List%601.ToArray%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f3f44-1177">À la fin de l’exemple, le <xref:System.Collections.Generic.List%601.GetRange%2A> méthode est utilisée pour obtenir les trois éléments dans la liste, en commençant à la position d’index 2.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1177">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="f3f44-1178">Le <xref:System.Collections.Generic.List%601.ToArray%2A> méthode est appelée sur résultant <xref:System.Collections.Generic.List%601>, création d’un tableau de trois éléments.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1178">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="f3f44-1179">Les éléments du tableau sont affichés.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1179">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3f44-1180">Définit la capacité en fonction du nombre effectif d'éléments situés dans <see cref="T:System.Collections.Generic.List`1" />, si ce nombre est inférieur à une valeur de seuil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1180">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.List`1" />, if that number is less than a threshold value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1181">Cette méthode peut être utilisée pour réduire la surcharge de mémoire d’une collection si aucun nouvel élément ne doit être ajouté à la collection.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1181">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="f3f44-1182">Le coût de réallocation et de copie d’un grand <xref:System.Collections.Generic.List%601> peut être considérable, toutefois, pour que le <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode ne fait rien si la liste est à plus de 90 pour cent de la capacité.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1182">The cost of reallocating and copying a large <xref:System.Collections.Generic.List%601> can be considerable, however, so the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="f3f44-1183">Cela évite de supporter un coût de réallocation élevé pour un gain relativement petit.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1183">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3f44-1184">Le seuil actuel de 90 pour cent peut-être changer dans les futures versions.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1184">The current threshold of 90 percent might change in future releases.</span></span>  
  
 <span data-ttu-id="f3f44-1185">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1185">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="f3f44-1186">Pour réinitialiser un <xref:System.Collections.Generic.List%601> à son état initial, appelez le <xref:System.Collections.Generic.List%601.Clear%2A> méthode avant d’appeler le <xref:System.Collections.Generic.List%601.TrimExcess%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1186">To reset a <xref:System.Collections.Generic.List%601> to its initial state, call the <xref:System.Collections.Generic.List%601.Clear%2A> method before calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="f3f44-1187">La suppression vide <xref:System.Collections.Generic.List%601> définit la capacité de la <xref:System.Collections.Generic.List%601> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1187">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="f3f44-1188">La capacité peut également être définie à l’aide de la <xref:System.Collections.Generic.List%601.Capacity%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1188">The capacity can also be set using the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-1189">L’exemple suivant montre comment vérifier la capacité et le nombre d’un <xref:System.Collections.Generic.List%601> qui contient un objet métier simple et illustre l’utilisation de la <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode pour supprimer une capacité supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1189">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="f3f44-1190">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.TrimExcess%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1190">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="f3f44-1191">Plusieurs propriétés et méthodes de la <xref:System.Collections.Generic.List%601> classe sont utilisés pour ajouter, insérer et supprimer des éléments à partir d’une liste de chaînes.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1191">Several properties and methods of the <xref:System.Collections.Generic.List%601> class are used to add, insert, and remove items from a list of strings.</span></span> <span data-ttu-id="f3f44-1192">Le <xref:System.Collections.Generic.List%601.TrimExcess%2A> méthode permet de réduire la capacité à correspondre au nombre et le <xref:System.Collections.Generic.List%601.Capacity%2A> et <xref:System.Collections.Generic.List%601.Count%2A> propriétés sont affichées.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1192">Then the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="f3f44-1193">Si la capacité inutilisée avait été inférieure à 10 % de la capacité totale, la liste n’aurait pas été redimensionnée.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1193">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span> <span data-ttu-id="f3f44-1194">Enfin, le contenu de la liste est effacé.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1194">Finally, the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.Clear" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TrueForAll">
      <MemberSignature Language="C#" Value="public bool TrueForAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrueForAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrueForAll (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrueForAll(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f3f44-1195">Délégué <see cref="T:System.Predicate`1" /> qui définit les conditions à vérifier par rapport aux éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1195">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions to check against the elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3f44-1196">Détermine si chaque élément de <see cref="T:System.Collections.Generic.List`1" /> correspond aux conditions définies par le prédicat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1196">Determines whether every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3f44-1197">
            <see langword="true" /> si chaque élément de <see cref="T:System.Collections.Generic.List`1" /> correspond aux conditions définies par le prédicat spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1197">
              <see langword="true" /> if every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f3f44-1198">Si la liste ne comporte pas d'éléments, la valeur de retour est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1198">If the list has no elements, the return value is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3f44-1199">Le <xref:System.Predicate%601> est un délégué à une méthode qui retourne `true` si l’objet passé à elle correspond aux conditions définies dans ce délégué.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1199">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f3f44-1200">Les éléments d’actuel <xref:System.Collections.Generic.List%601> sont passés individuellement à la <xref:System.Predicate%601> délégué et le traitement s’arrête lorsque le délégué retourne `false` pour n’importe quel élément.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1200">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when the delegate returns `false` for any element.</span></span> <span data-ttu-id="f3f44-1201">Les éléments sont traités dans l’ordre, et tous les appels sont effectués sur un seul thread.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1201">The elements are processed in order, and all calls are made on a single thread.</span></span>  
  
 <span data-ttu-id="f3f44-1202">Cette méthode est un O (*n*) opération, où *n* est <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1202">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3f44-1203">L’exemple suivant illustre la <xref:System.Collections.Generic.List%601.TrueForAll%2A> (méthode) et plusieurs autres méthodes qui utilisent <xref:System.Predicate%601> délégué générique.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1203">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrueForAll%2A> method and several other methods that use <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="f3f44-1204">A <xref:System.Collections.Generic.List%601> de chaînes est créé, contenant 8 noms dinosaure deux (aux emplacements 1 et 5) se terminent par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-1204">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="f3f44-1205">L’exemple définit également une méthode de prédicat de recherche nommée `EndsWithSaurus`, qui accepte un paramètre de chaîne et retourne une valeur Boolean qui indique si la chaîne d’entrée se termine par « saurus ».</span><span class="sxs-lookup"><span data-stu-id="f3f44-1205">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="f3f44-1206">Le <xref:System.Collections.Generic.List%601.TrueForAll%2A> méthode parcourt la liste à partir du début, chaque élément en passant à la `EndsWithSaurus` (méthode).</span><span class="sxs-lookup"><span data-stu-id="f3f44-1206">The <xref:System.Collections.Generic.List%601.TrueForAll%2A> method traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="f3f44-1207">La recherche s’arrête lorsque la `EndsWithSaurus` méthode renvoie `false`.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1207">The search stops when the `EndsWithSaurus` method returns `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3f44-1208">En c# et Visual Basic, il n’est pas nécessaire de créer le `Predicate<string>` déléguer (`Predicate(Of String)` en Visual Basic) explicitement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1208">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="f3f44-1209">Ces langages déduisent le délégué approprié à partir du contexte et créer automatiquement.</span><span class="sxs-lookup"><span data-stu-id="f3f44-1209">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3f44-1210">
            <paramref name="match" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3f44-1210">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
  </Members>
</Type>