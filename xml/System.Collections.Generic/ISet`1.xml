<Type Name="ISet&lt;T&gt;" FullName="System.Collections.Generic.ISet&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d48509a2905d9f0dbd9b3a16a998d5811a429054" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISet&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISet`1&lt;T&gt; implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.ISet`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISet(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class ISet : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="cc8da-101">Type d'éléments de l'ensemble.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc8da-101">The type of elements in the set.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="cc8da-102">Fournit l’interface de base pour l’abstraction des ensembles.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc8da-102">Provides the base interface for the abstraction of sets.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc8da-103">Cette interface fournit des méthodes pour l’implémentation de jeux, qui sont des collections qui ont des éléments uniques et des opérations spécifiques.</span><span class="sxs-lookup"><span data-stu-id="cc8da-103">This interface provides methods for implementing sets, which are collections that have unique elements and specific operations.</span></span> <span data-ttu-id="cc8da-104">Le <xref:System.Collections.Generic.HashSet%601> et <xref:System.Collections.Generic.SortedSet%601> collections implémentent cette interface.</span><span class="sxs-lookup"><span data-stu-id="cc8da-104">The <xref:System.Collections.Generic.HashSet%601> and <xref:System.Collections.Generic.SortedSet%601> collections implement this interface.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="cc8da-105">Élément à ajouter à l'ensemble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-105">The element to add to the set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc8da-106">Ajoute un élément à l’ensemble actuel et retourne une valeur qui indique si l’ajout a réussi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-106">Adds an element to the current set and returns a value to indicate if the element was successfully added.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc8da-107">
            <see langword="true" /> si l’élément est ajouté à l’ensemble ; <see langword="false" /> si l’élément figure déjà dans l’ensemble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-107">
              <see langword="true" /> if the element is added to the set; <see langword="false" /> if the element is already in the set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptWith">
      <MemberSignature Language="C#" Value="public void ExceptWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExceptWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExceptWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExceptWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="cc8da-108">Collection d’éléments à supprimer de l’ensemble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-108">The collection of items to remove from the set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc8da-109">Supprime de l’ensemble actuel tous les éléments de la collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-109">Removes all elements in the specified collection from the current set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc8da-110">Cette méthode est un O (`n`) opération, où `n` est le nombre d’éléments dans le `other` paramètre.</span><span class="sxs-lookup"><span data-stu-id="cc8da-110">This method is an O(`n`) operation, where `n` is the number of elements in the `other` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc8da-111">
            <paramref name="other" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-111">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IntersectWith">
      <MemberSignature Language="C#" Value="public void IntersectWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IntersectWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub IntersectWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IntersectWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="cc8da-112">Collection à comparer à l’ensemble actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-112">The collection to compare to the current set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc8da-113">Modifie l’ensemble actuel pour qu’il contienne uniquement les éléments qui figurent également dans une collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-113">Modifies the current set so that it contains only elements that are also in a specified collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc8da-114">Cette méthode ignore les éléments en double dans `other`.</span><span class="sxs-lookup"><span data-stu-id="cc8da-114">This method ignores any duplicate elements in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc8da-115">
            <paramref name="other" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-115">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsProperSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsProperSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="cc8da-116">Collection à comparer à l’ensemble actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-116">The collection to compare to the current set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc8da-117">Détermine si l’ensemble actuel est un sous-ensemble (strict) approprié d’une collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-117">Determines whether the current set is a proper (strict) subset of a specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc8da-118">
            <see langword="true" /> si l’ensemble actuel est un sous-ensemble approprié de <paramref name="other" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-118">
              <see langword="true" /> if the current set is a proper subset of <paramref name="other" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc8da-119">Si l’ensemble actuel est un sous-ensemble approprié de `other`, `other` doit avoir au moins un élément que l’ensemble actuel n’a pas.</span><span class="sxs-lookup"><span data-stu-id="cc8da-119">If the current set is a proper subset of `other`, `other` must have at least one element that the current set does not have.</span></span>  
  
 <span data-ttu-id="cc8da-120">Un ensemble vide est un sous-ensemble approprié de toute autre collection.</span><span class="sxs-lookup"><span data-stu-id="cc8da-120">An empty set is a proper subset of any other collection.</span></span> <span data-ttu-id="cc8da-121">Par conséquent, cette méthode retourne `true` si l’ensemble actuel est vide, sauf si le `other` paramètre est également un ensemble vide.</span><span class="sxs-lookup"><span data-stu-id="cc8da-121">Therefore, this method returns `true` if the current set is empty, unless the `other` parameter is also an empty set.</span></span>  
  
 <span data-ttu-id="cc8da-122">Cette méthode retourne toujours `false` si le jeu actuel a plus d’informations ou le même nombre d’éléments `other`.</span><span class="sxs-lookup"><span data-stu-id="cc8da-122">This method always returns `false` if the current set has more or the same number of elements than `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc8da-123">
            <paramref name="other" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-123">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsProperSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsProperSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="cc8da-124">Collection à comparer à l’ensemble actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-124">The collection to compare to the current set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc8da-125">Détermine si l’ensemble actuel est un sur-ensemble de propriété (strict) approprié d’une collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-125">Determines whether the current set is a proper (strict) superset of a specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc8da-126">
            <see langword="true" /> si l’ensemble actuel est un sur-ensemble approprié de <paramref name="other" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-126">
              <see langword="true" /> if the current set is a proper superset of <paramref name="other" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc8da-127">Si l’ensemble actuel est un sur-ensemble de `other`, le jeu actuel doit avoir au moins un élément qui `other` n’a pas.</span><span class="sxs-lookup"><span data-stu-id="cc8da-127">If the current set is a proper superset of `other`, the current set must have at least one element that `other` does not have.</span></span>  
  
 <span data-ttu-id="cc8da-128">Un ensemble vide est un sur-ensemble d’une autre collection.</span><span class="sxs-lookup"><span data-stu-id="cc8da-128">An empty set is a proper superset of any other collection.</span></span> <span data-ttu-id="cc8da-129">Par conséquent, cette méthode retourne `true` si la collection représentée par le `other` paramètre est vide, sauf si l’ensemble actuel est également vide.</span><span class="sxs-lookup"><span data-stu-id="cc8da-129">Therefore, this method returns `true` if the collection represented by the `other` parameter is empty, unless the current set is also empty.</span></span>  
  
 <span data-ttu-id="cc8da-130">Cette méthode retourne toujours `false` si le nombre d’éléments dans l’ensemble actuel est inférieur ou égal au nombre d’éléments de `other`.</span><span class="sxs-lookup"><span data-stu-id="cc8da-130">This method always returns `false` if the number of elements in the current set is less than or equal to the number of elements in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc8da-131">
            <paramref name="other" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-131">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="cc8da-132">Collection à comparer à l’ensemble actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-132">The collection to compare to the current set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc8da-133">Détermine si un ensemble est un sous-ensemble d’une collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-133">Determines whether a set is a subset of a specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc8da-134">
            <see langword="true" /> si l’ensemble actuel est un sous-ensemble de <paramref name="other" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-134">
              <see langword="true" /> if the current set is a subset of <paramref name="other" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc8da-135">Si `other` contient les mêmes éléments que l’ensemble actuel, l’ensemble actuel est encore considéré comme un sous-ensemble de l’autre.</span><span class="sxs-lookup"><span data-stu-id="cc8da-135">If `other` contains the same elements as the current set, the current set is still considered a subset of other.</span></span>  
  
 <span data-ttu-id="cc8da-136">Cette méthode retourne toujours `false` si le jeu actuel a des éléments qui ne sont pas `other`.</span><span class="sxs-lookup"><span data-stu-id="cc8da-136">This method always returns `false` if the current set has elements that are not in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc8da-137">
            <paramref name="other" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-137">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="cc8da-138">Collection à comparer à l’ensemble actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-138">The collection to compare to the current set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc8da-139">Détermine si l’ensemble actuel est un super-ensemble d’une collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-139">Determines whether the current set is a superset of a specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc8da-140">
            <see langword="true" /> si l’ensemble actuel est un sur-ensemble de <paramref name="other" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-140">
              <see langword="true" /> if the current set is a superset of <paramref name="other" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc8da-141">Si `other` contient les mêmes éléments que l’ensemble actuel, l’ensemble actuel est encore considéré comme un sur-ensemble de `other`.</span><span class="sxs-lookup"><span data-stu-id="cc8da-141">If `other` contains the same elements as the current set, the current set is still considered a superset of `other`.</span></span>  
  
 <span data-ttu-id="cc8da-142">Cette méthode retourne toujours `false` si le jeu actuel a moins d’éléments que `other`.</span><span class="sxs-lookup"><span data-stu-id="cc8da-142">This method always returns `false` if the current set has fewer elements than `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc8da-143">
            <paramref name="other" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-143">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Overlaps">
      <MemberSignature Language="C#" Value="public bool Overlaps (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Overlaps(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Overlaps (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Overlaps(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="cc8da-144">Collection à comparer à l’ensemble actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-144">The collection to compare to the current set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc8da-145">Détermine si l’ensemble actuel recoupe la collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-145">Determines whether the current set overlaps with the specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc8da-146">
            <see langword="true" /> si l’ensemble actuel et <paramref name="other" /> partagent au moins un élément commun ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-146">
              <see langword="true" /> if the current set and <paramref name="other" /> share at least one common element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc8da-147">Les doublons d’éléments dans `other` sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="cc8da-147">Any duplicate elements in `other` are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc8da-148">
            <paramref name="other" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-148">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetEquals">
      <MemberSignature Language="C#" Value="public bool SetEquals (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetEquals(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function SetEquals (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetEquals(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="cc8da-149">Collection à comparer à l’ensemble actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-149">The collection to compare to the current set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc8da-150">Détermine si l’ensemble actuel et la collection spécifiée contiennent les mêmes éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-150">Determines whether the current set and the specified collection contain the same elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc8da-151">
            <see langword="true" /> si l’ensemble actuel est égal à <paramref name="other" /> ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-151">
              <see langword="true" /> if the current set is equal to <paramref name="other" />; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc8da-152">Cette méthode ignore l’ordre des éléments et les éléments en double dans `other`.</span><span class="sxs-lookup"><span data-stu-id="cc8da-152">This method ignores the order of elements and any duplicate elements in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc8da-153">
            <paramref name="other" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-153">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SymmetricExceptWith">
      <MemberSignature Language="C#" Value="public void SymmetricExceptWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SymmetricExceptWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SymmetricExceptWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SymmetricExceptWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="cc8da-154">Collection à comparer à l’ensemble actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-154">The collection to compare to the current set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc8da-155">Modifie l’ensemble actuel pour qu’il contienne uniquement les éléments présents dans l’ensemble actuel ou dans la collection spécifiée, mais pas dans les deux à la fois.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-155">Modifies the current set so that it contains only elements that are present either in the current set or in the specified collection, but not both.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc8da-156">Les doublons d’éléments dans `other` sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="cc8da-156">Any duplicate elements in `other` are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc8da-157">
            <paramref name="other" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-157">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnionWith">
      <MemberSignature Language="C#" Value="public void UnionWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnionWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnionWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnionWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="cc8da-158">Collection à comparer à l’ensemble actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-158">The collection to compare to the current set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc8da-159">Modifie l’ensemble actuel pour qu’il contienne tous les éléments présents dans l’ensemble actuel, dans la collection spécifiée ou dans les deux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-159">Modifies the current set so that it contains all elements that are present in the current set, in the specified collection, or in both.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc8da-160">Les doublons d’éléments dans `other` sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="cc8da-160">Any duplicate elements in `other` are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc8da-161">
            <paramref name="other" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc8da-161">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>