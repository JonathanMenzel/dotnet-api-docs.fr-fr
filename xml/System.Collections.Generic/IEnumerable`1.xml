<Type Name="IEnumerable&lt;T&gt;" FullName="System.Collections.Generic.IEnumerable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f3b6eaa112a135b87821854f7ee6b50799fa3df" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51873489" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumerable&lt;out T&gt; : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerable`1&lt;+ T&gt; implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEnumerable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerable(Of Out T)&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumerable : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type seq&lt;'T&gt; = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="b7fa9-101">Type des objets à énumérer.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-101">The type of objects to enumerate.</span></span></typeparam>
    <summary><span data-ttu-id="b7fa9-102">Expose l’énumérateur, qui prend en charge une itération simple sur une collection d’un type spécifié.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-102">Exposes the enumerator, which supports a simple iteration over a collection of a specified type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fa9-103"><xref:System.Collections.Generic.IEnumerable%601> est l’interface de base pour les collections dans le <xref:System.Collections.Generic> espace de noms comme <xref:System.Collections.Generic.List%601>, <xref:System.Collections.Generic.Dictionary%602>, et <xref:System.Collections.Generic.Stack%601> et d’autres collections génériques comme <xref:System.Collections.ObjectModel.ObservableCollection%601> et <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-103"><xref:System.Collections.Generic.IEnumerable%601> is the base interface for collections in the <xref:System.Collections.Generic> namespace such as <xref:System.Collections.Generic.List%601>, <xref:System.Collections.Generic.Dictionary%602>, and <xref:System.Collections.Generic.Stack%601> and other generic collections such as <xref:System.Collections.ObjectModel.ObservableCollection%601> and <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span> <span data-ttu-id="b7fa9-104">Les collections qui implémentent <xref:System.Collections.Generic.IEnumerable%601> peuvent être énumérés à l’aide de la `foreach` instruction.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-104">Collections that implement <xref:System.Collections.Generic.IEnumerable%601> can be enumerated by using the `foreach` statement.</span></span>  
  
 <span data-ttu-id="b7fa9-105">Pour la version non générique de cette interface, consultez <xref:System.Collections.IEnumerable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-105">For the non-generic version of this interface, see <xref:System.Collections.IEnumerable?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b7fa9-106"><xref:System.Collections.Generic.IEnumerable%601> contient une seule méthode que vous devez implémenter lors de l’implémentation de cette interface ; <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>, qui retourne un <xref:System.Collections.Generic.IEnumerator%601> objet.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-106"><xref:System.Collections.Generic.IEnumerable%601> contains a single method that you must implement when implementing this interface; <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>, which returns an <xref:System.Collections.Generic.IEnumerator%601> object.</span></span> <span data-ttu-id="b7fa9-107">Retourné <xref:System.Collections.Generic.IEnumerator%601> offre la possibilité d’effectuer une itération dans la collection en exposant un <xref:System.Collections.Generic.IEnumerator%601.Current%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-107">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7fa9-108">L’exemple suivant montre comment implémenter la <xref:System.Collections.Generic.IEnumerable%601> interface et comment utiliser cette implémentation pour créer une requête LINQ.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-108">The following example demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface and how to use that implementation to create a LINQ query.</span></span> <span data-ttu-id="b7fa9-109">Lorsque vous implémentez <xref:System.Collections.Generic.IEnumerable%601>, vous devez également implémenter <xref:System.Collections.Generic.IEnumerator%601> ou, pour c# uniquement, vous pouvez utiliser la [yield](~/docs/csharp/language-reference/keywords/yield.md) mot clé.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-109">When you implement <xref:System.Collections.Generic.IEnumerable%601>, you must also implement <xref:System.Collections.Generic.IEnumerator%601> or, for C# only, you can use the [yield](~/docs/csharp/language-reference/keywords/yield.md) keyword.</span></span> <span data-ttu-id="b7fa9-110">Implémentation <xref:System.Collections.Generic.IEnumerator%601> requiert également <xref:System.IDisposable> à mettre en oeuvre, qui s’affiche dans cet exemple.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-110">Implementing <xref:System.Collections.Generic.IEnumerator%601> also requires <xref:System.IDisposable> to be implemented, which you will see in this example.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 <span data-ttu-id="b7fa9-111">Pour un autre exemple c# qui montre comment implémenter la <xref:System.Collections.Generic.IEnumerable%601> l’interface, consultez la [génériques, exemple](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span><span class="sxs-lookup"><span data-stu-id="b7fa9-111">For another C# example that demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface, see the [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span></span> <span data-ttu-id="b7fa9-112">Cet exemple utilise le `yield` mot-clé au lieu d’implémenter <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-112">This sample uses the `yield` keyword instead of implementing <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="b7fa9-113">
        <see cref="T:System.Collections.Generic.IEnumerable\`1" /> est inclus pour la parité avec les collections non génériques ; implémentation <see cref="T:System.Collections.Generic.IEnumerable\`1" /> permet une collection générique d’être passée à une méthode qui attend un <see cref="T:System.Collections.IEnumerable" /> objet.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-113">
        <see cref="T:System.Collections.Generic.IEnumerable\`1" /> is included for parity with non-generic collections; implementing <see cref="T:System.Collections.Generic.IEnumerable\`1" /> allows a generic collection to be passed to a method that expects an <see cref="T:System.Collections.IEnumerable" /> object.</span></span></para></block>
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
    <altmember cref="N:System.Collections" />
    <related type="Article" href="https://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554"><span data-ttu-id="b7fa9-114">Procédure pas à pas : implémentation d'IEnumerable(Of T) en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="b7fa9-114">Walkthrough: Implementing IEnumerable(Of T) in Visual Basic</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="b7fa9-115">Itérateurs (C# et Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b7fa9-115">Iterators (C# and Visual Basic)</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&amp;pathId=1364935593"><span data-ttu-id="b7fa9-116">Génériques, exemple</span><span class="sxs-lookup"><span data-stu-id="b7fa9-116">Generics Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;out T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Out T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="seq.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7fa9-117">Retourne un énumérateur qui itère au sein de la collection.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-117">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="b7fa9-118">Énumérateur permettant d'effectuer une itération au sein de la collection.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-118">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7fa9-119">Retourné <xref:System.Collections.Generic.IEnumerator%601> offre la possibilité d’effectuer une itération dans la collection en exposant un <xref:System.Collections.Generic.IEnumerator%601.Current%2A> propriété. Vous pouvez utiliser les énumérateurs pour lire les données dans une collection, mais ne pas de modifier la collection.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-119">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property .You can use enumerators to read the data in a collection, but not to modify the collection.</span></span>  
  
 <span data-ttu-id="b7fa9-120">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-120">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b7fa9-121">À cette position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-121">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="b7fa9-122">Par conséquent, vous devez appeler la <xref:System.Collections.IEnumerator.MoveNext%2A> méthode pour avancer l’énumérateur vers le premier élément de la collection avant de lire la valeur de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-122">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="b7fa9-123"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> Retourne le même objet jusqu'à ce que <xref:System.Collections.IEnumerator.MoveNext%2A> est appelé à nouveau <xref:System.Collections.IEnumerator.MoveNext%2A> définit <xref:System.Collections.Generic.IEnumerator%601.Current%2A> jusqu'à l’élément suivant.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-123"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called again as <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b7fa9-124">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-124">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b7fa9-125">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-125">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b7fa9-126">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-126">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="b7fa9-127">Vous ne pouvez pas attribuer de nouveau <xref:System.Collections.Generic.IEnumerator%601.Current%2A> au premier élément de la collection ; vous devez créer une nouvelle instance de l’énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-127">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  

 <span data-ttu-id="b7fa9-128">Si des modifications sont apportées à la collection, telles que l’ajout, modification ou suppression d’éléments, le comportement de l’énumérateur est indéfini.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-128">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="b7fa9-129">Un énumérateur ne dispose pas d’un accès exclusif à la collection pour un énumérateur reste valid aussi longtemps que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-129">An enumerator does not have exclusive access to the collection so an enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b7fa9-130">Si des modifications sont apportées à la collection, en ajoutant, modifiant ou supprimant des éléments, l’énumérateur est invalidé et vous pouvez obtenir des résultats inattendus.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is invalidated and you may get unexpected results.</span></span> <span data-ttu-id="b7fa9-131">En outre, l’énumération d’une collection n’est pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-131">Also, enumerating a collection is not a thread-safe procedure.</span></span> <span data-ttu-id="b7fa9-132">Pour garantir la cohérence de thread, vous devez verrouiller la collection pendant l’énumérateur ou implémenter la synchronisation sur la collection.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-132">To guarantee thread-safety, you should lock the collection during enumerator or implement synchronization on the collection.</span></span>  
  
 <span data-ttu-id="b7fa9-133">Implémentations par défaut de collections dans le <xref:System.Collections.Generic?displayProperty=nameWithType> espace de noms ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-133">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace aren't synchronized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7fa9-134">L’exemple suivant montre comment implémenter la <xref:System.Collections.Generic.IEnumerable%601> interface et utilise cette implémentation pour créer une requête LINQ.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-134">The following example demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface and uses that implementation to create a LINQ query.</span></span> <span data-ttu-id="b7fa9-135">Lorsque vous implémentez <xref:System.Collections.Generic.IEnumerable%601>, vous devez également implémenter <xref:System.Collections.Generic.IEnumerator%601> ou, pour c# uniquement, vous pouvez utiliser la [yield](~/docs/csharp/language-reference/keywords/yield.md) mot clé.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-135">When you implement <xref:System.Collections.Generic.IEnumerable%601>, you must also implement <xref:System.Collections.Generic.IEnumerator%601> or, for C# only, you can use the [yield](~/docs/csharp/language-reference/keywords/yield.md) keyword.</span></span> <span data-ttu-id="b7fa9-136">Implémentation <xref:System.Collections.Generic.IEnumerator%601> requiert également <xref:System.IDisposable> à mettre en oeuvre, qui s’affiche dans cet exemple.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-136">Implementing <xref:System.Collections.Generic.IEnumerator%601> also requires <xref:System.IDisposable> to be implemented, which you will see in this example.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 <span data-ttu-id="b7fa9-137">Pour un autre exemple c# qui montre comment implémenter la <xref:System.Collections.Generic.IEnumerable%601> l’interface, consultez la [génériques, exemple](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span><span class="sxs-lookup"><span data-stu-id="b7fa9-137">For another C# example that demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface, see the [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span></span> <span data-ttu-id="b7fa9-138">Cet exemple utilise de la `yield` mot-clé au lieu d’implémenter <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="b7fa9-138">This sample uses of the `yield` keyword instead of implementing <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
        <related type="Article" href="https://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554"><span data-ttu-id="b7fa9-139">Procédure pas à pas : implémentation d'IEnumerable(Of T) en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="b7fa9-139">Walkthrough: Implementing IEnumerable(Of T) in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="b7fa9-140">Itérateurs (C# et Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b7fa9-140">Iterators (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>