<Type Name="EqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.EqualityComparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6926c9fb583cd56e84ecf6ce168cd1d09195ea51" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36645541" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EqualityComparer&lt;T&gt; : System.Collections.Generic.IEqualityComparer&lt;T&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EqualityComparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.EqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EqualityComparer(Of T)&#xA;Implements IEqualityComparer, IEqualityComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class EqualityComparer abstract : System::Collections::Generic::IEqualityComparer&lt;T&gt;, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type EqualityComparer&lt;'T&gt; = class&#xA;    interface IEqualityComparer&#xA;    interface IEqualityComparer&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="b29f2-101">Type des objets à comparer.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b29f2-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="b29f2-102">Fournit une classe de base pour les implémentations de l'interface générique <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b29f2-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b29f2-103">Dériver de cette classe pour fournir une implémentation personnalisée de la <xref:System.Collections.Generic.IEqualityComparer%601> interface générique pour une utilisation avec une collection de classes telles que la <xref:System.Collections.Generic.Dictionary%602> classe générique, ou avec des méthodes telles que <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b29f2-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b29f2-104">Le <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> propriété vérifie si le type `T` implémente la <xref:System.IEquatable%601?displayProperty=nameWithType> interface générique et, si tel est le cas, retourne un <xref:System.Collections.Generic.EqualityComparer%601> qui appelle l’implémentation de la <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b29f2-104">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b29f2-105">Sinon, elle retourne un <xref:System.Collections.Generic.EqualityComparer%601>, tel que fourni par `T`.</span><span class="sxs-lookup"><span data-stu-id="b29f2-105">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.</span></span>  
  
 <span data-ttu-id="b29f2-106">Nous vous recommandons de dériver de la <xref:System.Collections.Generic.EqualityComparer%601> classe au lieu d’implémenter la <xref:System.Collections.Generic.IEqualityComparer%601> de l’interface, car le <xref:System.Collections.Generic.EqualityComparer%601> teste l’égalité à l’aide de la classe le <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> méthode au lieu du <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b29f2-106">We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method instead of the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b29f2-107">Cela est cohérent avec la `Contains`, `IndexOf`, `LastIndexOf`, et `Remove` méthodes de la <xref:System.Collections.Generic.Dictionary%602> classe et autres collections génériques.</span><span class="sxs-lookup"><span data-stu-id="b29f2-107">This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b29f2-108">L’exemple suivant crée une collection de dictionnaires d’objets de type `Box` avec un comparateur d’égalité.</span><span class="sxs-lookup"><span data-stu-id="b29f2-108">The following example creates a dictionary collection of objects of type `Box` with an equality comparer.</span></span> <span data-ttu-id="b29f2-109">Deux zones sont considérées comme égales si leurs dimensions sont les mêmes.</span><span class="sxs-lookup"><span data-stu-id="b29f2-109">Two boxes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="b29f2-110">Il ajoute ensuite les zones à la collection.</span><span class="sxs-lookup"><span data-stu-id="b29f2-110">It then adds the boxes to the collection.</span></span>  
  
 <span data-ttu-id="b29f2-111">Le dictionnaire est recréé avec un comparateur d’égalité qui définit l’égalité d’une façon différente : deux zones sont considérées comme égales si leurs volumes sont les mêmes.</span><span class="sxs-lookup"><span data-stu-id="b29f2-111">The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-csharp[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b29f2-112">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.EqualityComparer`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-112">Initializes a new instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.EqualityComparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.EqualityComparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.EqualityComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As EqualityComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::EqualityComparer&lt;T&gt; ^ Default { System::Collections::Generic::EqualityComparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.Generic.EqualityComparer&lt;'T&gt;" Usage="System.Collections.Generic.EqualityComparer&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.EqualityComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b29f2-113">Retourne un comparateur d’égalité par défaut pour le type spécifié par l’argument générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-113">Returns a default equality comparer for the type specified by the generic argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b29f2-114">Instance par défaut de la classe <see cref="T:System.Collections.Generic.EqualityComparer`1" /> pour le type <typeparamref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-114">The default instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class for type <typeparamref name="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b29f2-115">Le <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> propriété vérifie si le type `T` implémente la <xref:System.IEquatable%601?displayProperty=nameWithType> de l’interface et, dans ce cas, retourne un <xref:System.Collections.Generic.EqualityComparer%601> qui utilise cette implémentation.</span><span class="sxs-lookup"><span data-stu-id="b29f2-115">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation.</span></span> <span data-ttu-id="b29f2-116">Sinon, elle retourne un <xref:System.Collections.Generic.EqualityComparer%601> qui utilise les substitutions de <xref:System.Object.Equals%2A?displayProperty=nameWithType> et <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> fournie par `T`.</span><span class="sxs-lookup"><span data-stu-id="b29f2-116">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=nameWithType> and <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> provided by `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b29f2-117">L’exemple suivant crée une collection qui contient les éléments de la `Box` de type et de recherche pour une zone correspondant à une autre zone en appelant le `FindFirst` (méthode), à deux reprises.</span><span class="sxs-lookup"><span data-stu-id="b29f2-117">The following example creates a collection that contains elements of the `Box` type and then searches it for a box matching another box by calling the `FindFirst` method, twice.</span></span>
  
 <span data-ttu-id="b29f2-118">La première recherche ne spécifie pas un comparateur d’égalité, ce qui signifie que `FindFirst` utilise <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour déterminer l’égalité des zones.</span><span class="sxs-lookup"><span data-stu-id="b29f2-118">The first search does not specify any equality comparer, which means `FindFirst` uses <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> to determine equality of boxes.</span></span> <span data-ttu-id="b29f2-119">Qui à son tour utilise l’implémentation de la <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> méthode dans la `Box` classe.</span><span class="sxs-lookup"><span data-stu-id="b29f2-119">That in turn uses the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method in the `Box` class.</span></span> <span data-ttu-id="b29f2-120">Deux zones sont considérées comme égales si leurs dimensions sont les mêmes.</span><span class="sxs-lookup"><span data-stu-id="b29f2-120">Two boxes are considered equal if their dimensions are the same.</span></span>
  
 <span data-ttu-id="b29f2-121">La seconde recherche spécifie un comparateur d’égalité (`BoxEqVolume`) qui définit l’égalité par volume.</span><span class="sxs-lookup"><span data-stu-id="b29f2-121">The second search specifies an equality comparer (`BoxEqVolume`) that defines equality by volume.</span></span> <span data-ttu-id="b29f2-122">Deux zones sont considérées comme égales si leurs volumes sont les mêmes.</span><span class="sxs-lookup"><span data-stu-id="b29f2-122">Two boxes are considered equal if their volumes are the same.</span></span>
  
 [!code-csharp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cs/program.cs)]
 [!code-vb[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/vb/program.vb)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="T:System.IEquatable`1" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(T x, T y);" />
      <MemberSignature Language="F#" Value="override this.Equals : 'T * 'T -&gt; bool" Usage="equalityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="b29f2-123">Premier objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-123">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="b29f2-124">Deuxième objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-124">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b29f2-125">En cas de substitution dans une classe dérivée, détermine si deux objets de type <typeparamref name="T" /> sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-125">When overridden in a derived class, determines whether two objects of type <typeparamref name="T" /> are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b29f2-126">
            <see langword="true" /> si les objets spécifiés sont égaux ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-126">
              <see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b29f2-127">Le <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> méthode est réflexive, symétrique et transitive.</span><span class="sxs-lookup"><span data-stu-id="b29f2-127">The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="b29f2-128">Autrement dit, elle retourne `true` si utilisé pour comparer un objet avec lui-même ; `true` pour deux objets `x` et `y` s’il s’agit `true` pour `y` et `x`; et `true` pour deux objets `x` et `z` si elle est `true` pour `x` et `y` et `true` pour `y` et `z`.</span><span class="sxs-lookup"><span data-stu-id="b29f2-128">That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="b29f2-129">
            <para>Implémentations sont requises afin de garantir que si le <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> méthode retourne <see langword="true" /> pour deux objets <c>x</c> et <c>y</c>, puis la valeur retournée par la <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> méthode pour <c>x</c> doit être égal à la valeur retournée pour <c>y</c>.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-129">
              <para>Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(T obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : 'T -&gt; int" Usage="equalityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b29f2-130">Objet pour lequel obtenir un code de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-130">The object for which to get a hash code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b29f2-131">En cas de substitution dans une classe dérivée, sert de fonction de hachage pour l'objet spécifié pour le hachage d'algorithmes et des structures de données, telles qu'une table de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-131">When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b29f2-132">Code de hachage pour l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-132">A hash code for the specified object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b29f2-133">Le type de <paramref name="obj" /> est un type référence et <paramref name="obj" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-133">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="b29f2-134">
            <para>Implémentations sont requises afin de garantir que si le <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> méthode retourne <see langword="true" /> pour deux objets <c>x</c> et <c>y</c>, puis la valeur retournée par la <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> méthode pour <c>x</c> doit être égal à la valeur retournée pour <c>y</c>.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-134">
              <para>Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="b29f2-135">Premier objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-135">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="b29f2-136">Deuxième objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-136">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b29f2-137">Détermine si les objets spécifiés sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-137">Determines whether the specified objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b29f2-138">
            <see langword="true" /> si les objets spécifiés sont égaux ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-138">
              <see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b29f2-139">Cette méthode est un wrapper pour le <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> (méthode), de sorte que `obj` doit être casté en type spécifié par l’argument générique `T` de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="b29f2-139">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="b29f2-140">S’il ne peut pas être casté en `T`, un <xref:System.ArgumentException> est levée.</span><span class="sxs-lookup"><span data-stu-id="b29f2-140">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="b29f2-141">Comparaison de `null` est autorisée et ne génère pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="b29f2-141">Comparing `null` is allowed and does not generate an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b29f2-142">
            <paramref name="x" /> ou <paramref name="y" /> est d'un type qui ne peut pas être casté en type <typeparamref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-142">
              <paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b29f2-143">
            <see cref="T:System.Object" /> pour lequel un code de hachage doit être retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-143">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b29f2-144">Retourne un code de hachage pour l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-144">Returns a hash code for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b29f2-145">Code de hachage pour l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-145">A hash code for the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b29f2-146">Cette méthode est un wrapper pour le <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> (méthode), de sorte que `obj` doit être un type qui peut être converti en type spécifié par l’argument de type générique `T` de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="b29f2-146">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b29f2-147">Le type de <paramref name="obj" /> est un type référence et <paramref name="obj" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-147">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b29f2-148">-ou- <paramref name="obj" /> a un type qui ne peut pas être casté en type <typeparamref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b29f2-148">-or-  <paramref name="obj" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>