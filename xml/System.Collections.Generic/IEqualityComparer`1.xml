<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea29512abcf8fb15aa435e75f569d1fd308650f9" /><Meta Name="ms.sourcegitcommit" Value="6ee2e6b2c5d7c5bd66feeb362d29e65fdf858836" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/15/2018" /><Meta Name="ms.locfileid" Value="51691142" /></Metadata><TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="19ce0-101">Type des objets à comparer.</span><span class="sxs-lookup"><span data-stu-id="19ce0-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="19ce0-102">Définit des méthodes pour prendre en charge la comparaison d'objets.</span><span class="sxs-lookup"><span data-stu-id="19ce0-102">Defines methods to support the comparison of objects for equality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-103">Cette interface permet à l’implémentation de comparaison d’égalité personnalisée pour les collections.</span><span class="sxs-lookup"><span data-stu-id="19ce0-103">This interface allows the implementation of customized equality comparison for collections.</span></span> <span data-ttu-id="19ce0-104">Autrement dit, vous pouvez créer votre propre définition d’égalité pour le type `T`et spécifier que cette définition soit utilisée avec un type de collection qui accepte le <xref:System.Collections.Generic.IEqualityComparer%601> interface générique.</span><span class="sxs-lookup"><span data-stu-id="19ce0-104">That is, you can create your own definition of equality for type `T`, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface.</span></span> <span data-ttu-id="19ce0-105">Dans le .NET Framework, les constructeurs de la <xref:System.Collections.Generic.Dictionary%602> type de collection générique acceptent cette interface.</span><span class="sxs-lookup"><span data-stu-id="19ce0-105">In the .NET Framework, constructors of the <xref:System.Collections.Generic.Dictionary%602> generic collection type accept this interface.</span></span>  
  
 <span data-ttu-id="19ce0-106">Une implémentation par défaut de cette interface est fournie par le <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> propriété de la <xref:System.Collections.Generic.EqualityComparer%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="19ce0-106">A default implementation of this interface is provided by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property of the <xref:System.Collections.Generic.EqualityComparer%601> generic class.</span></span> <span data-ttu-id="19ce0-107">Le <xref:System.StringComparer> la classe implémente <xref:System.Collections.Generic.IEqualityComparer%601> de type <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="19ce0-107">The <xref:System.StringComparer> class implements <xref:System.Collections.Generic.IEqualityComparer%601> of type <xref:System.String>.</span></span>  
  
 <span data-ttu-id="19ce0-108">Cette interface prend en charge uniquement les comparaisons d’égalité.</span><span class="sxs-lookup"><span data-stu-id="19ce0-108">This interface supports only equality comparisons.</span></span> <span data-ttu-id="19ce0-109">Personnalisation des comparaisons pour le tri et de classement est fournie par le <xref:System.Collections.Generic.IComparer%601> interface générique.</span><span class="sxs-lookup"><span data-stu-id="19ce0-109">Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.Generic.IComparer%601> generic interface.</span></span>  
  
 <span data-ttu-id="19ce0-110">Nous vous recommandons de dériver à partir de la <xref:System.Collections.Generic.EqualityComparer%601> classe au lieu d’implémenter la <xref:System.Collections.Generic.IEqualityComparer%601> interface, car le <xref:System.Collections.Generic.EqualityComparer%601> teste l’égalité à l’aide de la classe la <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> méthode au lieu du <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="19ce0-110">We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method instead of the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="19ce0-111">Ceci est cohérent avec la `Contains`, `IndexOf`, `LastIndexOf`, et `Remove` méthodes de la <xref:System.Collections.Generic.Dictionary%602> classe et autres collections génériques.</span><span class="sxs-lookup"><span data-stu-id="19ce0-111">This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-112">L’exemple suivant ajoute personnalisé `Box` objets à une collection de dictionnaires.</span><span class="sxs-lookup"><span data-stu-id="19ce0-112">The following example adds custom `Box` objects to a dictionary collection.</span></span> <span data-ttu-id="19ce0-113">Le `Box` objets sont considérés comme égaux si leurs dimensions sont les mêmes.</span><span class="sxs-lookup"><span data-stu-id="19ce0-113">The `Box` objects are considered equal if their dimensions are the same.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T * 'T -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="19ce0-114">Premier objet de type <paramref name="T" /> à comparer.</span><span class="sxs-lookup"><span data-stu-id="19ce0-114">The first object of type <paramref name="T" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="19ce0-115">Deuxième objet de type <paramref name="T" /> à comparer.</span><span class="sxs-lookup"><span data-stu-id="19ce0-115">The second object of type <paramref name="T" /> to compare.</span></span></param>
        <summary><span data-ttu-id="19ce0-116">Détermine si les objets spécifiés sont égaux.</span><span class="sxs-lookup"><span data-stu-id="19ce0-116">Determines whether the specified objects are equal.</span></span></summary>
        <returns><span data-ttu-id="19ce0-117"><see langword="true" /> si les objets spécifiés sont égaux ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="19ce0-117"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-118">Implémentez cette méthode pour fournir une comparaison d’égalité personnalisée pour le type `T`.</span><span class="sxs-lookup"><span data-stu-id="19ce0-118">Implement this method to provide a customized equality comparison for type `T`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="19ce0-119">Implémentations sont requises afin de garantir que si le <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> retourne de la méthode <see langword="true" /> pour deux objets <paramref name="x" /> et <paramref name="y" />, puis la valeur retournée par la <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> méthode pour <paramref name="x" /> doit être égale à la valeur retournée pour <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="19ce0-119">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span></span>  
  
<span data-ttu-id="19ce0-120">Le <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> méthode est réfléchie, symétrique et transitive.</span><span class="sxs-lookup"><span data-stu-id="19ce0-120">The <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="19ce0-121">Autrement dit, elle retourne <see langword="true" /> si utilisé pour comparer un objet avec lui-même ; <see langword="true" /> pour deux objets <paramref name="x" /> et <paramref name="y" /> s’il s’agit <see langword="true" /> pour <paramref name="y" /> et <paramref name="x" />; et <see langword="true" /> pour deux objets <paramref name="x" /> et <paramref name="z" /> s’il s’agit <see langword="true" /> pour <paramref name="x" /> et <paramref name="y" /> et également <see langword="true" /> pour <paramref name="y" /> et <paramref name="z" />.</span><span class="sxs-lookup"><span data-stu-id="19ce0-121">That is, it returns <see langword="true" /> if used to compare an object with itself; <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" /> if it is <see langword="true" /> for <paramref name="y" /> and <paramref name="x" />; and <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="z" /> if it is <see langword="true" /> for <paramref name="x" /> and <paramref name="y" /> and also <see langword="true" /> for <paramref name="y" /> and <paramref name="z" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : 'T -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="19ce0-122"><see cref="T:System.Object" /> pour lequel un code de hachage doit être retourné.</span><span class="sxs-lookup"><span data-stu-id="19ce0-122">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="19ce0-123">Retourne un code de hachage pour l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="19ce0-123">Returns a hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="19ce0-124">Code de hachage pour l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="19ce0-124">A hash code for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-125">Implémentez cette méthode pour fournir un code de hachage personnalisé pour le type `T`, qui correspond à la comparaison d’égalité personnalisée fournie par le <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="19ce0-125">Implement this method to provide a customized hash code for type `T`,corresponding to the customized equality comparison provided by the <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19ce0-126">Le type de <paramref name="obj" /> est un type référence et <paramref name="obj" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="19ce0-126">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="19ce0-127">Implémentations sont requises afin de garantir que si le <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> retourne de la méthode <see langword="true" /> pour deux objets <paramref name="x" /> et <paramref name="y" />, puis la valeur retournée par la <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> méthode pour <paramref name="x" /> doit être égale à la valeur retournée pour <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="19ce0-127">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span></span></para></block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>