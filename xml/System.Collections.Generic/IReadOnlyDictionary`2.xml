<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IReadOnlyDictionary`2.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d1085a08e24f5f95c18921ba74a94f939942bf27.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1085a08e24f5f95c18921ba74a94f939942bf27</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The type of keys in the read-only dictionary.</source>
          <target state="translated">Type de clés dans le dictionnaire en lecture seule.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The type of values in the read-only dictionary.</source>
          <target state="translated">Type des valeurs dans le dictionnaire en lecture seule.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Represents a generic read-only collection of key/value pairs.</source>
          <target state="translated">Représente une collection générique, en lecture seule, de paires clé/valeur.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Each element is a key/value pair that is stored in a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> object.</source>
          <target state="translated">Chaque élément est une paire clé/valeur qui est stockée dans un <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Each pair must have a unique key.</source>
          <target state="translated">Chaque paire doit avoir une clé unique.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Implementations can vary in whether they allow you to specify a key that is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Les implémentations peuvent varier selon si elles permettent de spécifier une clé qui est <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The value can be <ph id="ph1">`null`</ph> and does not have to be unique.</source>
          <target state="translated">La valeur peut être <ph id="ph1">`null`</ph> et ne doivent pas être uniques.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface permet les clés et les valeurs à énumérer, mais elle n’implique pas de n’importe quel ordre de tri particulier.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++) requires the type of each element in the collection.</source>
          <target state="translated">Le <ph id="ph1">`foreach`</ph> instruction du langage c# (<ph id="ph2">`For Each`</ph> en Visual Basic, <ph id="ph3">`for each`</ph> en C++) requiert le type de chaque élément dans la collection.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Because each element of the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> interface is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Étant donné que chaque élément de la <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> interface est une paire clé/valeur, le type d’élément n’est pas le type de la clé ou le type de la valeur.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>, as the following example illustrates.</source>
          <target state="translated">Au lieu de cela, le type d’élément est <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>, comme l’illustre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator; it allows only reading from the collection, not writing to the collection.</source>
          <target state="translated">La <ph id="ph1">`foreach`</ph> instruction est un wrapper autour de l’énumérateur ; il permet la lecture à partir de la collection, et non l’écriture dans la collection.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>The key to locate.</source>
          <target state="translated">Clé à rechercher.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>Determines whether the read-only dictionary contains an element that has the specified key.</source>
          <target state="translated">Détermine si le dictionnaire en lecture seule contient un élément avec la clé spécifiée.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the read-only dictionary contains an element that has the specified key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le dictionnaire en lecture seule contient un élément qui possède la clé spécifiée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>Implementations can vary in how they determine the equality of objects; for example, the class that implements <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> might use the <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property, or it might implement the <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> method.</source>
          <target state="translated">Les implémentations peuvent déterminer l’égalité des objets ; par exemple, la classe qui implémente <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> peut utiliser le <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> propriété, ou elle peut implémenter la <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Les implémentations peuvent varier selon si elles que <ph id="ph1">`key`</ph> être <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>The key to locate.</source>
          <target state="translated">Clé à rechercher.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>Gets the element that has the specified key in the read-only dictionary.</source>
          <target state="translated">Obtient l'élément avec la clé spécifiée dans le dictionnaire en lecture seule.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>The element that has the specified key in the read-only dictionary.</source>
          <target state="translated">Élément avec la clé spécifiée dans le dictionnaire en lecture seule.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>This property lets you access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Cette propriété vous permet d’accéder à un élément spécifique dans la collection à l’aide de la syntaxe suivante : <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>Implementations can vary in how they determine the equality of objects: for example, the class that implements <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> might use the <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property, or it might implement the <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> method.</source>
          <target state="translated">Les implémentations peuvent déterminer l’égalité des objets : par exemple, la classe qui implémente <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> peut utiliser le <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> propriété, ou elle peut implémenter la <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Les implémentations peuvent varier selon si elles que <ph id="ph1">`key`</ph> être <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not found.</source>
          <target state="translated">La propriété est récupérée et <ph id="ph1">&lt;paramref name="key" /&gt;</ph> est introuvable.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
          <source>Gets an enumerable collection that contains the keys in the read-only dictionary.</source>
          <target state="translated">Obtient une collection énumérable qui contient les clés dans dictionnaire en lecture seule.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
          <source>An enumerable collection that contains the keys in the read-only dictionary.</source>
          <target state="translated">Collection énumérable qui contient les clés dans dictionnaire en lecture seule.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
          <source>The order of the keys in the enumerable collection is unspecified, but the implementation must guarantee that the keys are in the same order as the corresponding values in the enumerable collection that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">L’ordre des clés dans la collection dénombrable n’est pas spécifié, mais l’implémentation doit garantir que les clés sont dans le même ordre que les valeurs correspondantes dans la collection énumérable qui est retourné par la <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>The key to locate.</source>
          <target state="translated">Clé à rechercher.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Quand cette méthode retourne une valeur, valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, valeur par défaut du type du paramètre <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Ce paramètre est passé sans être initialisé.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>Gets the value that is associated with the specified key.</source>
          <target state="translated">Obtient la valeur associée à la clé spécifiée.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object that implements the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /&gt;</ph> interface contains an element that has the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet qui implémente l'interface <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /&gt;</ph> contient un élément comportant la clé spécifiée ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>This method combines the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Cette méthode combine les fonctionnalités de la <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>If the key is not found, the <ph id="ph1">`value`</ph> parameter gets the appropriate default value for the type <ph id="ph2">`TValue`</ph>: for example, 0 (zero) for integer types, <ph id="ph3">`false`</ph> for Boolean types, and <ph id="ph4">`null`</ph> for reference types.</source>
          <target state="translated">Si la clé est introuvable, la <ph id="ph1">`value`</ph> paramètre Obtient la valeur par défaut appropriée pour le type <ph id="ph2">`TValue`</ph>: par exemple, 0 (zéro) pour les types d’entiers, <ph id="ph3">`false`</ph> pour les types booléens, et <ph id="ph4">`null`</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
          <source>Gets an enumerable collection that contains the values in the read-only dictionary.</source>
          <target state="translated">Obtient une collection énumérable qui contient les valeurs dans dictionnaire en lecture seule.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
          <source>An enumerable collection that contains the values in the read-only dictionary.</source>
          <target state="translated">Collection énumérable qui contient les valeurs dans dictionnaire en lecture seule.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
          <source>The order of the values in the enumerable collection is unspecified, but the implementation must guarantee that the values are in the same order as the corresponding keys in the enumerable collection that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A&gt;</ph> property.</source>
          <target state="translated">L’ordre des valeurs dans la collection dénombrable n’est pas spécifié, mais l’implémentation doit garantir que les valeurs sont dans le même ordre que les clés correspondantes dans la collection énumérable qui est retourné par la <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A&gt;</ph> propriété.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>