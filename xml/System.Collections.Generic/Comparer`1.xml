<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3605f22f18741f9d594c6aa830f85604d9b8bf52" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37701651" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type Comparer&lt;'T&gt; = class&#xA;    interface IComparer&#xA;    interface IComparer&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="f9a45-101">Type des objets à comparer.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9a45-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="f9a45-102">Fournit une classe de base pour les implémentations de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9a45-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a45-103">Dériver de cette classe pour fournir une implémentation personnalisée de la <xref:System.Collections.Generic.IComparer%601> interface pour une utilisation avec les classes de collection, tels que le <xref:System.Collections.Generic.SortedList%602> et <xref:System.Collections.Generic.SortedDictionary%602> classes génériques.</span><span class="sxs-lookup"><span data-stu-id="f9a45-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IComparer%601> interface for use with collection classes such as the <xref:System.Collections.Generic.SortedList%602> and <xref:System.Collections.Generic.SortedDictionary%602> generic classes.</span></span>  
  
 <span data-ttu-id="f9a45-104">La différence entre la dérivation de la <xref:System.Collections.Generic.Comparer%601> classe et implémenter la <xref:System.IComparable?displayProperty=nameWithType> interface se présente comme suit :</span><span class="sxs-lookup"><span data-stu-id="f9a45-104">The difference between deriving from the <xref:System.Collections.Generic.Comparer%601> class and implementing the <xref:System.IComparable?displayProperty=nameWithType> interface is as follows:</span></span>  
  
-   <span data-ttu-id="f9a45-105">Pour spécifier comment les deux objets doivent être comparés par défaut, implémentez le <xref:System.IComparable?displayProperty=nameWithType> interface dans votre classe.</span><span class="sxs-lookup"><span data-stu-id="f9a45-105">To specify how two objects should be compared by default, implement the <xref:System.IComparable?displayProperty=nameWithType> interface in your class.</span></span> <span data-ttu-id="f9a45-106">Cela garantit que les opérations de tri utilisera le code de comparaison par défaut que vous avez fourni.</span><span class="sxs-lookup"><span data-stu-id="f9a45-106">This ensures that sort operations will use the default comparison code that you provided.</span></span>  
  
-   <span data-ttu-id="f9a45-107">Pour définir un comparateur à utiliser au lieu du comparateur par défaut, dérivez à partir de la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f9a45-107">To define a comparer to use instead of the default comparer, derive from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="f9a45-108">Vous pouvez ensuite utiliser ce comparateur dans les opérations de tri qui prennent un comparateur en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="f9a45-108">You can then use this comparer in sort operations that take a comparer as a parameter.</span></span>  
  
 <span data-ttu-id="f9a45-109">L’objet retourné par la <xref:System.Collections.Generic.Comparer%601.Default%2A> propriété utilise le <xref:System.IComparable%601?displayProperty=nameWithType> interface générique (`IComparable<T>` en c#, `IComparable(Of T)` en Visual Basic) pour comparer deux objets.</span><span class="sxs-lookup"><span data-stu-id="f9a45-109">The object returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A> property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="f9a45-110">Si type `T` n’implémente pas le <xref:System.IComparable%601?displayProperty=nameWithType> interface générique, le <xref:System.Collections.Generic.Comparer%601.Default%2A> propriété retourne un <xref:System.Collections.Generic.Comparer%601> qui utilise le <xref:System.IComparable?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="f9a45-110">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the <xref:System.Collections.Generic.Comparer%601.Default%2A> property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9a45-111">L’exemple suivant dérive une classe, `BoxLengthFirst`, à partir de la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f9a45-111">The following example derives a class, `BoxLengthFirst`, from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="f9a45-112">Ce comparateur compare deux objets de type `Box`.</span><span class="sxs-lookup"><span data-stu-id="f9a45-112">This comparer compares two objects of type `Box`.</span></span> <span data-ttu-id="f9a45-113">Elle les trie tout d’abord en longueur, puis en hauteur et par la largeur.</span><span class="sxs-lookup"><span data-stu-id="f9a45-113">It sorts them first by length, then by height, and then by width.</span></span> <span data-ttu-id="f9a45-114">Le `Box` la classe implémente le <xref:System.IComparable%601> interface pour contrôler la comparaison par défaut entre deux `Box` objets.</span><span class="sxs-lookup"><span data-stu-id="f9a45-114">The `Box` class implements the <xref:System.IComparable%601> interface to control the default comparison between two `Box` objects.</span></span> <span data-ttu-id="f9a45-115">Cette implémentation par défaut trie d’abord par la hauteur, puis par longueur, puis par la largeur.</span><span class="sxs-lookup"><span data-stu-id="f9a45-115">This default implementation sorts first by height, then by length, and then by width.</span></span> <span data-ttu-id="f9a45-116">L’exemple montre les différences entre les deux comparaisons en triant une liste de `Box` objets tout d’abord en utilisant le `BoxLengthFirst` à l’aide du comparateur par défaut et le comparateur.</span><span class="sxs-lookup"><span data-stu-id="f9a45-116">The example shows the differences between the two comparisons by sorting a list of `Box` objects first by using the `BoxLengthFirst` comparer and then by using the default comparer.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxCompare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="f9a45-117">
        <para>
          <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> et <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> peuvent se comporter différemment en termes de culture et respectant la casse.  Pour les comparaisons de chaînes, la <see cref="T:System.StringComparer" /> classe est préférable <c>comparateur&lt;chaîne&gt;</c>.  Propriétés de la <see cref="T:System.StringComparer" /> classe retournent des instances prédéfinies qui effectuent des comparaisons de chaînes avec différentes combinaisons de culture et respectant la casse.  Le respect de la casse et de la culture est cohérentes parmi les membres du même <see cref="T:System.StringComparer" /> instance.  Pour plus d’informations sur les comparaisons propres à la culture, consultez le <see cref="N:System.Globalization" /> espace de noms et [globalisation et Localization](~/docs/standard/globalization-localization/index.md).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="f9a45-117">
          <para>
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> may behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9a45-118">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.Comparer`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-118">Initializes a new instance of the <see cref="T:System.Collections.Generic.Comparer`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : 'T * 'T -&gt; int" Usage="comparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="f9a45-119">Premier objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-119">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="f9a45-120">Deuxième objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-120">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9a45-121">En cas de substitution dans une classe dérivée, effectue une comparaison de deux objets du même type et retourne une valeur indiquant si l'un est inférieur, égal ou supérieur à l'autre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-121">When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9a45-122">Entier signé qui indique les valeurs relatives de <paramref name="x" /> et <paramref name="y" />, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-122">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="f9a45-123">
            <list type="table">
              <listheader>
                <term> Valeur  </term>
                <description> Signification  </description>
              </listheader>
              <item>
                <term> Inférieur à zéro  </term>
                <description>
                  <paramref name="x" /> est inférieur à <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Zéro  </term>
                <description>
                  <paramref name="x" /> égale <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Supérieur à zéro  </term>
                <description>
                  <paramref name="x" /> est supérieur à <paramref name="y" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-123">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a45-124">Implémentez cette méthode pour fournir un texte personnalisé comparaison d’ordre pour le type de tri `T`.</span><span class="sxs-lookup"><span data-stu-id="f9a45-124">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9a45-125">L’exemple suivant définit un comparateur de `Box` objets qui peuvent être utilisés au lieu du comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9a45-125">The following example defines a comparer of `Box` objects that can be used instead of the default comparer.</span></span> <span data-ttu-id="f9a45-126">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f9a45-126">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9a45-127">Le type <paramref name="T" /> n'implémente pas l'interface générique <see cref="T:System.IComparable`1" /> ni l'interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-127">Type <paramref name="T" /> does not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f9a45-128">
            <para>Comparaison <see langword="null" /> avec toute référence de type est autorisé et ne génère pas d’exception. Une référence null est considérée comme inférieure à toute référence qui n’est pas null.  Pour plus d’informations sur les comparaisons propres à la culture, consultez le <see cref="N:System.Globalization" /> espace de noms et [globalisation et Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-128">
              <para>Comparing <see langword="null" /> with any reference type is allowed and does not generate an exception. A null reference is considered to be less than any reference that is not null.  For information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="static member Create : Comparison&lt;'T&gt; -&gt; System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Create comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="f9a45-129">La comparaison à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-129">The comparison to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9a45-130">Crée un comparateur à partir d'une comparaison spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-130">Creates a comparer by using the specified comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9a45-131">Nouveau comparateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-131">The new comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9a45-132">Retourne un comparateur d'ordre de tri par défaut pour le type spécifié par l'argument générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-132">Returns a default sort order comparer for the type specified by the generic argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9a45-133">Objet qui hérite de <see cref="T:System.Collections.Generic.Comparer`1" /> et sert de comparateur d'ordre de tri pour le type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-133">An object that inherits <see cref="T:System.Collections.Generic.Comparer`1" /> and serves as a sort order comparer for type <paramref name="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a45-134">Le <xref:System.Collections.Generic.Comparer%601> retourné par cette propriété utilise la <xref:System.IComparable%601?displayProperty=nameWithType> interface générique (`IComparable<T>` en c#, `IComparable(Of T)` en Visual Basic) pour comparer deux objets.</span><span class="sxs-lookup"><span data-stu-id="f9a45-134">The <xref:System.Collections.Generic.Comparer%601> returned by this property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="f9a45-135">Si type `T` n’implémente pas le <xref:System.IComparable%601?displayProperty=nameWithType> interface générique, cette propriété retourne un <xref:System.Collections.Generic.Comparer%601> qui utilise le <xref:System.IComparable?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="f9a45-135">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, this property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9a45-136">L’exemple suivant montre comment utiliser le <xref:System.Collections.Generic.Comparer%601.Default%2A> propriété pour obtenir un objet qui effectue la comparaison par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9a45-136">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.Default%2A> property to get an object that performs the default comparison.</span></span> <span data-ttu-id="f9a45-137">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f9a45-137">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="f9a45-138">
            <para>Pour les comparaisons de chaînes, la <see cref="T:System.StringComparer" /> classe est préférable <c>comparateur&lt;chaîne&gt; </c> (<c>comparateur (Of String)</c> en Visual Basic).  Propriétés de la <see cref="T:System.StringComparer" /> classe retournent des instances prédéfinies qui effectuent des comparaisons de chaînes avec différentes combinaisons de culture et respectant la casse.  Le respect de la casse et de la culture est cohérentes parmi les membres du même <see cref="T:System.StringComparer" /> instance.  Pour plus d’informations sur les comparaisons propres à la culture, consultez le <see cref="N:System.Globalization" /> espace de noms et [globalisation et Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-138">
              <para>For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c> (<c>Comparer(Of String)</c> in Visual Basic).  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="f9a45-139">Premier objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-139">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="f9a45-140">Deuxième objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-140">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9a45-141">Compare deux objets et retourne une valeur indiquant si le premier est inférieur, égal ou supérieur au second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-141">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9a45-142">Entier signé qui indique les valeurs relatives de <paramref name="x" /> et <paramref name="y" />, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-142">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="f9a45-143">
            <list type="table">
              <listheader>
                <term> Valeur  </term>
                <description> Signification  </description>
              </listheader>
              <item>
                <term> Inférieur à zéro  </term>
                <description>
                  <paramref name="x" /> est inférieur à <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Zéro  </term>
                <description>
                  <paramref name="x" /> égale <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Supérieur à zéro  </term>
                <description>
                  <paramref name="x" /> est supérieur à <paramref name="y" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-143">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a45-144">Cette méthode est un wrapper pour le <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> (méthode), de sorte que `obj` doit être casté en type spécifié par l’argument générique `T` de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="f9a45-144">This method is a wrapper for the <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="f9a45-145">Si elle ne peut pas être convertie en `T`, un <xref:System.ArgumentException> est levée.</span><span class="sxs-lookup"><span data-stu-id="f9a45-145">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="f9a45-146">Comparaison `null` avec toute référence de type est autorisé et ne génère pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="f9a45-146">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="f9a45-147">Lors du tri, `null` est considéré comme étant inférieure à n’importe quel autre objet.</span><span class="sxs-lookup"><span data-stu-id="f9a45-147">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9a45-148">L’exemple suivant montre comment utiliser le <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> méthode pour comparer deux objets.</span><span class="sxs-lookup"><span data-stu-id="f9a45-148">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method to compare two objects.</span></span> <span data-ttu-id="f9a45-149">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f9a45-149">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9a45-150">
            <paramref name="x" /> ou <paramref name="y" /> est d'un type qui ne peut pas être casté en type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-150">
              <paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <paramref name="T" />.</span>
          </span>
          <span data-ttu-id="f9a45-151">-ou- <paramref name="x" /> et <paramref name="y" /> n’implémentent pas l’interface générique <see cref="T:System.IComparable`1" /> ni l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-151">-or-  <paramref name="x" /> and <paramref name="y" /> do not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="f9a45-152">
            <para>
              <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> et <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> se comportent différemment en termes de culture et respectant la casse.  Pour les comparaisons de chaînes, la <see cref="T:System.StringComparer" /> classe est préférable <c>comparateur&lt;chaîne&gt;</c>.  Propriétés de la <see cref="T:System.StringComparer" /> classe retournent des instances prédéfinies qui effectuent des comparaisons de chaînes avec différentes combinaisons de culture et respectant la casse.  Le respect de la casse et de la culture est cohérentes parmi les membres du même <see cref="T:System.StringComparer" /> instance.  Pour plus d’informations sur les comparaisons propres à la culture, consultez le <see cref="N:System.Globalization" /> espace de noms et [globalisation et Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f9a45-152">
              <para>
                <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>