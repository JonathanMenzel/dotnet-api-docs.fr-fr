<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="bef77-101">Type des objets à comparer.</span><span class="sxs-lookup"><span data-stu-id="bef77-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="bef77-102">Fournit une classe de base pour les implémentations de l'interface générique <see cref="T:System.Collections.Generic.IComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef77-103">Dériver de cette classe pour fournir une implémentation personnalisée de la <xref:System.Collections.Generic.IComparer%601> interface pour une utilisation avec les classes de collection, tels que les <xref:System.Collections.Generic.SortedList%602> et <xref:System.Collections.Generic.SortedDictionary%602> classes génériques.</span><span class="sxs-lookup"><span data-stu-id="bef77-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IComparer%601> interface for use with collection classes such as the <xref:System.Collections.Generic.SortedList%602> and <xref:System.Collections.Generic.SortedDictionary%602> generic classes.</span></span>  
  
 <span data-ttu-id="bef77-104">La différence entre la dérivation de la <xref:System.Collections.Generic.Comparer%601> classe et implémenter la <xref:System.IComparable?displayProperty=nameWithType> interface est comme suit :</span><span class="sxs-lookup"><span data-stu-id="bef77-104">The difference between deriving from the <xref:System.Collections.Generic.Comparer%601> class and implementing the <xref:System.IComparable?displayProperty=nameWithType> interface is as follows:</span></span>  
  
-   <span data-ttu-id="bef77-105">Pour spécifier comment les deux objets doivent être comparés par défaut, implémentez le <xref:System.IComparable?displayProperty=nameWithType> interface dans votre classe.</span><span class="sxs-lookup"><span data-stu-id="bef77-105">To specify how two objects should be compared by default, implement the <xref:System.IComparable?displayProperty=nameWithType> interface in your class.</span></span> <span data-ttu-id="bef77-106">Cela garantit que les opérations de tri utilise le code de comparaison par défaut que vous avez fourni.</span><span class="sxs-lookup"><span data-stu-id="bef77-106">This ensures that sort operations will use the default comparison code that you provided.</span></span>  
  
-   <span data-ttu-id="bef77-107">Pour définir un comparateur à utiliser à la place le comparateur par défaut, dérivez de la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="bef77-107">To define a comparer to use instead of the default comparer, derive from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="bef77-108">Vous pouvez ensuite utiliser ce comparateur dans les opérations de tri qui prennent un comparateur en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="bef77-108">You can then use this comparer in sort operations that take a comparer as a parameter.</span></span>  
  
 <span data-ttu-id="bef77-109">L’objet retourné par la <xref:System.Collections.Generic.Comparer%601.Default%2A> propriété utilise la <xref:System.IComparable%601?displayProperty=nameWithType> interface générique (`IComparable<T>` en c#, `IComparable(Of T)` en Visual Basic) pour comparer deux objets.</span><span class="sxs-lookup"><span data-stu-id="bef77-109">The object returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A> property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="bef77-110">Si type `T` n’implémente pas le <xref:System.IComparable%601?displayProperty=nameWithType> interface générique, la <xref:System.Collections.Generic.Comparer%601.Default%2A> propriété retourne un <xref:System.Collections.Generic.Comparer%601> qui utilise le <xref:System.IComparable?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="bef77-110">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the <xref:System.Collections.Generic.Comparer%601.Default%2A> property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef77-111">L’exemple suivant dérive une classe, `BoxLengthFirst`, à partir de la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="bef77-111">The following example derives a class, `BoxLengthFirst`, from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="bef77-112">Ce comparateur compare deux objets de type `Box`.</span><span class="sxs-lookup"><span data-stu-id="bef77-112">This comparer compares two objects of type `Box`.</span></span> <span data-ttu-id="bef77-113">Elle les trie tout d’abord par longueur, puis par sa hauteur et largeur.</span><span class="sxs-lookup"><span data-stu-id="bef77-113">It sorts them first by length, then by height, and then by width.</span></span> <span data-ttu-id="bef77-114">Le `Box` la classe implémente le <xref:System.IComparable%601> interface pour contrôler la comparaison par défaut entre deux `Box` objets.</span><span class="sxs-lookup"><span data-stu-id="bef77-114">The `Box` class implements the <xref:System.IComparable%601> interface to control the default comparison between two `Box` objects.</span></span> <span data-ttu-id="bef77-115">Cette implémentation par défaut trie d’abord en hauteur, puis en longueur et en largeur.</span><span class="sxs-lookup"><span data-stu-id="bef77-115">This default implementation sorts first by height, then by length, and then by width.</span></span> <span data-ttu-id="bef77-116">L’exemple montre les différences entre les deux comparaisons en triant une liste de `Box` tout d’abord à l’aide des objets du `BoxLengthFirst` à l’aide du comparateur par défaut et le comparateur.</span><span class="sxs-lookup"><span data-stu-id="bef77-116">The example shows the differences between the two comparisons by sorting a list of `Box` objects first by using the `BoxLengthFirst` comparer and then by using the default comparer.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxCompare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="bef77-117"><see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> et <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> peuvent se comporter différemment en termes de respect de la culture et de respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="bef77-117"><see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> may behave differently in terms of culture-sensitivity and case-sensitivity.</span></span>  
  
 <span data-ttu-id="bef77-118">Pour les comparaisons de chaînes, la <see cref="T:System.StringComparer" /> classe est préférable <c>comparateur&lt;chaîne&gt;</c>.</span><span class="sxs-lookup"><span data-stu-id="bef77-118">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.</span></span>  <span data-ttu-id="bef77-119">Propriétés de la <see cref="T:System.StringComparer" /> classe retournent des instances prédéfinies qui effectuent des comparaisons de chaînes avec des combinaisons différentes de la culture et respectant la casse.</span><span class="sxs-lookup"><span data-stu-id="bef77-119">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="bef77-120">Le respect de la casse et respect de la culture sont cohérents parmi les membres du même <see cref="T:System.StringComparer" /> instance.</span><span class="sxs-lookup"><span data-stu-id="bef77-120">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
 <span data-ttu-id="bef77-121">Pour plus d’informations sur les comparaisons spécifiques à la culture, consultez la <see cref="N:System.Globalization" /> espace de noms et [globalisation et localisation](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span><span class="sxs-lookup"><span data-stu-id="bef77-121">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span></para>
    </block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bef77-122">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.Comparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-122">Initializes a new instance of the <see cref="T:System.Collections.Generic.Comparer`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="bef77-123">Premier objet à comparer.</span><span class="sxs-lookup"><span data-stu-id="bef77-123">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="bef77-124">Deuxième objet à comparer.</span><span class="sxs-lookup"><span data-stu-id="bef77-124">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="bef77-125">En cas de substitution dans une classe dérivée, effectue une comparaison de deux objets du même type et retourne une valeur indiquant si l'un est inférieur, égal ou supérieur à l'autre.</span><span class="sxs-lookup"><span data-stu-id="bef77-125">When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="bef77-126">Entier signé qui indique les valeurs relatives de <paramref name="x" /> et <paramref name="y" />, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="bef77-126">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="bef77-127"><list type="table"><listheader><term> Valeur</span><span class="sxs-lookup"><span data-stu-id="bef77-127"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="bef77-128"></term><description> Signification</span><span class="sxs-lookup"><span data-stu-id="bef77-128"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="bef77-129"></description></listheader><item><term> Inférieur à zéro</span><span class="sxs-lookup"><span data-stu-id="bef77-129"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="bef77-130"></term><description><paramref name="x" /> est inférieur à <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-130"></term><description><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 <span data-ttu-id="bef77-131"></description></item><item><term> Zéro</span><span class="sxs-lookup"><span data-stu-id="bef77-131"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="bef77-132"></term><description><paramref name="x" /> est égal à <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-132"></term><description><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 <span data-ttu-id="bef77-133"></description></item><item><term> Supérieur à zéro</span><span class="sxs-lookup"><span data-stu-id="bef77-133"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="bef77-134"></term><description><paramref name="x" /> est supérieur à <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-134"></term><description><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef77-135">Implémentez cette méthode pour fournir un texte personnalisé pour le type de comparaison d’ordre de tri `T`.</span><span class="sxs-lookup"><span data-stu-id="bef77-135">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef77-136">L’exemple suivant définit un comparateur de `Box` objets qui peuvent être utilisés au lieu du comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="bef77-136">The following example defines a comparer of `Box` objects that can be used instead of the default comparer.</span></span> <span data-ttu-id="bef77-137">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="bef77-137">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bef77-138">Le type <paramref name="T" /> n'implémente pas l'interface générique <see cref="T:System.IComparable`1" /> ni l'interface <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-138">Type <paramref name="T" /> does not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bef77-139">Comparaison <see langword="null" /> avec toute référence le type est autorisée et ne génère pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="bef77-139">Comparing <see langword="null" /> with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="bef77-140">Une référence null est considérée comme inférieure à toute référence qui n’est pas null.</span><span class="sxs-lookup"><span data-stu-id="bef77-140">A null reference is considered to be less than any reference that is not null.</span></span>  
  
 <span data-ttu-id="bef77-141">Pour plus d’informations sur les comparaisons spécifiques à la culture, consultez la <see cref="N:System.Globalization" /> espace de noms et [globalisation et localisation](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span><span class="sxs-lookup"><span data-stu-id="bef77-141">For information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span></para>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison"><span data-ttu-id="bef77-142">La comparaison à utiliser.</span><span class="sxs-lookup"><span data-stu-id="bef77-142">The comparison to use.</span></span></param>
        <summary><span data-ttu-id="bef77-143">Crée un comparateur à partir d'une comparaison spécifiée.</span><span class="sxs-lookup"><span data-stu-id="bef77-143">Creates a comparer by using the specified comparison.</span></span></summary>
        <returns><span data-ttu-id="bef77-144">Nouveau comparateur.</span><span class="sxs-lookup"><span data-stu-id="bef77-144">The new comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef77-145">Retourne un comparateur d'ordre de tri par défaut pour le type spécifié par l'argument générique.</span><span class="sxs-lookup"><span data-stu-id="bef77-145">Returns a default sort order comparer for the type specified by the generic argument.</span></span></summary>
        <value><span data-ttu-id="bef77-146">Objet qui hérite de <see cref="T:System.Collections.Generic.Comparer`1" /> et sert de comparateur d'ordre de tri pour le type <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-146">An object that inherits <see cref="T:System.Collections.Generic.Comparer`1" /> and serves as a sort order comparer for type <paramref name="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef77-147">Le <xref:System.Collections.Generic.Comparer%601> retournée par cette propriété utilise la <xref:System.IComparable%601?displayProperty=nameWithType> interface générique (`IComparable<T>` en c#, `IComparable(Of T)` en Visual Basic) pour comparer deux objets.</span><span class="sxs-lookup"><span data-stu-id="bef77-147">The <xref:System.Collections.Generic.Comparer%601> returned by this property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="bef77-148">Si type `T` n’implémente pas le <xref:System.IComparable%601?displayProperty=nameWithType> interface générique, cette propriété retourne un <xref:System.Collections.Generic.Comparer%601> qui utilise le <xref:System.IComparable?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="bef77-148">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, this property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef77-149">L’exemple suivant montre comment utiliser le <xref:System.Collections.Generic.Comparer%601.Default%2A> propriété à obtenir un objet qui effectue la comparaison par défaut.</span><span class="sxs-lookup"><span data-stu-id="bef77-149">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.Default%2A> property to get an object that performs the default comparison.</span></span> <span data-ttu-id="bef77-150">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="bef77-150">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="bef77-151">Pour les comparaisons de chaînes, la <see cref="T:System.StringComparer" /> classe est préférable <c>comparateur&lt;chaîne&gt; </c> (<c>comparateur (Of String)</c> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="bef77-151">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c> (<c>Comparer(Of String)</c> in Visual Basic).</span></span>  <span data-ttu-id="bef77-152">Propriétés de la <see cref="T:System.StringComparer" /> classe retournent des instances prédéfinies qui effectuent des comparaisons de chaînes avec des combinaisons différentes de la culture et respectant la casse.</span><span class="sxs-lookup"><span data-stu-id="bef77-152">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="bef77-153">Le respect de la casse et respect de la culture sont cohérents parmi les membres du même <see cref="T:System.StringComparer" /> instance.</span><span class="sxs-lookup"><span data-stu-id="bef77-153">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
 <span data-ttu-id="bef77-154">Pour plus d’informations sur les comparaisons spécifiques à la culture, consultez la <see cref="N:System.Globalization" /> espace de noms et [globalisation et localisation](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span><span class="sxs-lookup"><span data-stu-id="bef77-154">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span></para>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="bef77-155">Premier objet à comparer.</span><span class="sxs-lookup"><span data-stu-id="bef77-155">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="bef77-156">Deuxième objet à comparer.</span><span class="sxs-lookup"><span data-stu-id="bef77-156">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="bef77-157">Compare deux objets et retourne une valeur indiquant si le premier est inférieur, égal ou supérieur au second.</span><span class="sxs-lookup"><span data-stu-id="bef77-157">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="bef77-158">Entier signé qui indique les valeurs relatives de <paramref name="x" /> et <paramref name="y" />, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="bef77-158">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="bef77-159"><list type="table"><listheader><term> Valeur</span><span class="sxs-lookup"><span data-stu-id="bef77-159"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="bef77-160"></term><description> Signification</span><span class="sxs-lookup"><span data-stu-id="bef77-160"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="bef77-161"></description></listheader><item><term> Inférieur à zéro</span><span class="sxs-lookup"><span data-stu-id="bef77-161"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="bef77-162"></term><description><paramref name="x" /> est inférieur à <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-162"></term><description><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 <span data-ttu-id="bef77-163"></description></item><item><term> Zéro</span><span class="sxs-lookup"><span data-stu-id="bef77-163"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="bef77-164"></term><description><paramref name="x" /> est égal à <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-164"></term><description><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 <span data-ttu-id="bef77-165"></description></item><item><term> Supérieur à zéro</span><span class="sxs-lookup"><span data-stu-id="bef77-165"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="bef77-166"></term><description><paramref name="x" /> est supérieur à <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-166"></term><description><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef77-167">Cette méthode est un wrapper pour le <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> (méthode), de sorte que `obj` doit être casté en type spécifié par l’argument générique `T` de l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="bef77-167">This method is a wrapper for the <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="bef77-168">S’il ne peut pas être casté en `T`, un <xref:System.ArgumentException> est levée.</span><span class="sxs-lookup"><span data-stu-id="bef77-168">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="bef77-169">Comparaison `null` avec toute référence le type est autorisée et ne génère pas d’exception.</span><span class="sxs-lookup"><span data-stu-id="bef77-169">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="bef77-170">Lors du tri, `null` est considéré comme étant inférieure à n’importe quel autre objet.</span><span class="sxs-lookup"><span data-stu-id="bef77-170">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bef77-171">L’exemple suivant montre comment utiliser la <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> méthode pour comparer deux objets.</span><span class="sxs-lookup"><span data-stu-id="bef77-171">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method to compare two objects.</span></span> <span data-ttu-id="bef77-172">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="bef77-172">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bef77-173"><paramref name="x" /> ou <paramref name="y" /> est d'un type qui ne peut pas être casté en type <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-173"><paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <paramref name="T" />.</span></span>  
  
 <span data-ttu-id="bef77-174">- ou -</span><span class="sxs-lookup"><span data-stu-id="bef77-174">-or-</span></span>  
  
 <span data-ttu-id="bef77-175"><paramref name="x" /> et <paramref name="y" /> n'implémentent pas l'interface générique <see cref="T:System.IComparable`1" /> ni l'interface <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="bef77-175"><paramref name="x" /> and <paramref name="y" /> do not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="bef77-176"><see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> et <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> se comportent différemment en termes de respect de la culture et de respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="bef77-176"><see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> behave differently in terms of culture-sensitivity and case-sensitivity.</span></span>  
  
 <span data-ttu-id="bef77-177">Pour les comparaisons de chaînes, la <see cref="T:System.StringComparer" /> classe est préférable <c>comparateur&lt;chaîne&gt;</c>.</span><span class="sxs-lookup"><span data-stu-id="bef77-177">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.</span></span>  <span data-ttu-id="bef77-178">Propriétés de la <see cref="T:System.StringComparer" /> classe retournent des instances prédéfinies qui effectuent des comparaisons de chaînes avec des combinaisons différentes de la culture et respectant la casse.</span><span class="sxs-lookup"><span data-stu-id="bef77-178">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="bef77-179">Le respect de la casse et respect de la culture sont cohérents parmi les membres du même <see cref="T:System.StringComparer" /> instance.</span><span class="sxs-lookup"><span data-stu-id="bef77-179">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
 <span data-ttu-id="bef77-180">Pour plus d’informations sur les comparaisons spécifiques à la culture, consultez la <see cref="N:System.Globalization" /> espace de noms et [globalisation et localisation](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span><span class="sxs-lookup"><span data-stu-id="bef77-180">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span></para>
        </block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>