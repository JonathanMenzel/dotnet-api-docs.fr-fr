<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LinkedList`1.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f4f915bbf25b5784d684d30fa9b51ea4c57557ac.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4f915bbf25b5784d684d30fa9b51ea4c57557ac</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Specifies the element type of the linked list.</source>
          <target state="translated">Spécifie le type d’élément de la liste liée.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Represents a doubly linked list.</source>
          <target state="translated">Représente une liste doublement liée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is a general-purpose linked list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est une liste liée à usage général.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>It supports enumerators and implements the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> interface, consistent with other collection classes in the .NET Framework.</source>
          <target state="translated">Il prend en charge les énumérateurs et implémente la <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> interface, cohérent avec d’autres classes de collection dans le .NET Framework.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> provides separate nodes of type <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601&gt;</ph>, so insertion and removal are O(1) operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> Fournit des nœuds séparés de type <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601&gt;</ph>, de sorte que l’insertion et suppression sont des opérations d’o (1).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>You can remove nodes and reinsert them, either in the same list or in another list, which results in no additional objects allocated on the heap.</source>
          <target state="translated">Vous pouvez supprimer des nœuds et les réinsérer, dans la même liste ou dans une autre liste, ce qui entraîne aucun alloués sur le tas des objets supplémentaires.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Because the list also maintains an internal count, getting the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph> property is an O(1) operation.</source>
          <target state="translated">Étant donné que la liste conserve également un compte interne, l’obtention du <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph> propriété est une opération o (1).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Each node in a <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> object is of the type <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601&gt;</ph>.</source>
          <target state="translated">Chaque nœud dans un <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> objet est de type <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Because the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is doubly linked, each node points forward to the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601.Next%2A&gt;</ph> node and backward to the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Previous%2A&gt;</ph> node.</source>
          <target state="translated">Étant donné que la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est liée doublement, chaque nœud pointe vers l’avant vers le <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedListNode%601.Next%2A&gt;</ph> nœud et vers l’arrière à la <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Previous%2A&gt;</ph> nœud.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Lists that contain reference types perform better when a node and its value are created at the same time.</source>
          <target state="translated">Les listes qui contiennent des types référence sont plus performantes lorsqu’un nœud et sa valeur sont créés en même temps.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> property for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> propriété de référence de types et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est vide, le <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> contiennent des propriétés <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class does not support chaining, splitting, cycles, or other features that can leave the list in an inconsistent state.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe ne prend pas en charge le chaînage des propriétés, fractionnement, cycles ou autres fonctionnalités qui peuvent laisser la liste dans un état incohérent.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>The list remains consistent on a single thread.</source>
          <target state="translated">La liste reste cohérente sur un thread unique.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>The only multithreaded scenario supported by <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is multithreaded read operations.</source>
          <target state="translated">Le seul scénario multithread pris en charge par <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> des opérations de lecture multithread.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>The following code example demonstrates many features of the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">L’exemple de code suivant illustre de nombreuses fonctionnalités de la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>This type is not thread safe.</source>
          <target state="translated">Ce type n’est pas thread-safe.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> needs to be accessed by multiple threads, you will need to implement their own synchronization mechanism.</source>
          <target state="translated">Si le <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> doit être accessible par plusieurs threads, vous devez implémenter leur propre mécanisme de synchronisation.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> peut prendre en charge plusieurs lecteurs simultanément, tant que la collection n’est pas modifiée.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Même dans ce cas, l’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>In the rare case where an enumeration contends with write accesses, the collection must be locked during the entire enumeration.</source>
          <target state="translated">Dans les rares cas où une énumération gère avec accès en écriture, la collection doit être verrouillée pendant toute l’énumération.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.LinkedList`1">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> class that is empty.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> qui est vide.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est vide, le <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> contiennent des propriétés <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ce constructeur est une opération o (1).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor">
          <source>The following code example creates and initializes a <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.String&gt;</ph>, adds several nodes, and then displays its contents.</source>
          <target state="translated">L’exemple de code suivant crée et initialise un <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> de type <ph id="ph2">&lt;xref:System.String&gt;</ph>, ajoute plusieurs nœuds, puis affiche son contenu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> dont les éléments sont copiés dans le nouveau <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> and has sufficient capacity to accommodate the number of elements copied.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> qui contient des éléments copiés à partir du <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> spécifié et qui possède une capacité suffisante pour accepter le nombre d'éléments copiés.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>If <ph id="ph1">`collection`</ph> has no elements then the new <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph5">`null`</ph>.</source>
          <target state="translated">Si <ph id="ph1">`collection`</ph> n’a pas d’éléments, la nouvelle <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est vide et la <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> contiennent des propriétés <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>This constructor is an O(n) operation, where <ph id="ph1">`n`</ph> is the number of elements in <ph id="ph2">`collection`</ph>.</source>
          <target state="translated">Ce constructeur est une opération o (n), où <ph id="ph1">`n`</ph> est le nombre d’éléments dans <ph id="ph2">`collection`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>For an example that includes this constructor, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut ce constructeur, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object containing the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> contenant les informations nécessaires pour sérialiser <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object containing the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> contenant la source et la destination du flux sérialisé associé à <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> class that is serializable with the specified <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> qui est sérialisable avec les <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est vide, le <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> contiennent des propriétés <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is an O(n) operation.</source>
          <target state="translated">Ce constructeur est une opération o (n).</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Adds a new node or value after an existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute un nouveau nœud ou une valeur après un nœud existant dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> after which to insert <bpt id="p1">&lt;c&gt;</bpt>newNode<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> après lequel insérer <bpt id="p1">&lt;c&gt;</bpt>newNode<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> to add to the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Le nouveau <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> à ajouter à <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>Adds the specified new node after the specified existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute le nouveau nœud spécifié après le nœud existant spécifié dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is not in the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> n'est pas dans le <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> belongs to another <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> appartient à une autre <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> after which to insert a new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> après lequel insérer un nouveau <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> qui contient <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The value to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Valeur à ajouter à <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>Adds a new node containing the specified value after the specified existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute un nouveau nœud qui contient la valeur spécifiée après le nœud existant spécifié dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Le nouveau <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> contenant <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is not in the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> n'est pas dans le <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Adds a new node or value before an existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute un nouveau nœud ou une valeur avant un nœud existant dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> before which to insert <bpt id="p1">&lt;c&gt;</bpt>newNode<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> avant lequel insérer <bpt id="p1">&lt;c&gt;</bpt>newNode<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> to add to the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Le nouveau <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> à ajouter à <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>Adds the specified new node before the specified existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute le nouveau nœud spécifié avant le nœud existant spécifié dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is not in the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> n'est pas dans le <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> belongs to another <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newNode" /&gt;</ph> appartient à une autre <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> before which to insert a new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> avant lequel insérer un nouveau <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> qui contient <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The value to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Valeur à ajouter à <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>Adds a new node containing the specified value before the specified existing node in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute un nouveau nœud qui contient la valeur spécifiée avant le nœud existant spécifié dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Le nouveau <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> contenant <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is not in the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> n'est pas dans le <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Adds a new node or value at the start of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute un nouveau nœud ou valeur au début de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> to add at the start of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Le nouveau <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> à ajouter au début de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source>Adds the specified new node at the start of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute le nouveau nœud spécifié au début de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the new node becomes the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est vide, le nouveau nœud devient le <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> belongs to another <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> appartient à une autre <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>The value to add at the start of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Valeur à ajouter au début de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>Adds a new node containing the specified value at the start of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute un nouveau nœud qui contient la valeur spécifiée au début de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Le nouveau <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> contenant <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the new node becomes the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est vide, le nouveau nœud devient le <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Adds a new node or value at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute un nouveau nœud ou valeur à la fin de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> to add at the end of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Le nouveau <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> à ajouter à la fin de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source>Adds the specified new node at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute le nouveau nœud spécifié à la fin de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the new node becomes the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est vide, le nouveau nœud devient le <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> belongs to another <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> appartient à une autre <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>The value to add at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Valeur à ajouter à la fin de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>Adds a new node containing the specified value at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute un nouveau nœud qui contient la valeur spécifiée à la fin de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Le nouveau <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> contenant <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the new node becomes the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est vide, le nouveau nœud devient le <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Clear">
          <source>Removes all nodes from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Supprime tous les nœuds de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph> est définie à zéro, et les références à d’autres objets des éléments de la collection sont également libérées.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> are set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> ont la valeur <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Clear">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Valeur à trouver dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source>Determines whether a value is in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Détermine si une valeur est dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="value" /&gt;</ph> existe dans <ph id="ph3">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionnel qui constitue la destination des éléments copiés à partir de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Copie l'ensemble de l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> vers un objet <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>.</source>
          <target state="translated">Les éléments sont copiés dans le <ph id="ph1">&lt;xref:System.Array&gt;</ph> dans le même ordre que celui dans lequel l’énumérateur itère au sein du <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Le nombre d’éléments dans le <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> source est supérieur à la quantité d’espace disponible entre <ph id="ph2">&lt;paramref name="index" /&gt;</ph> et la fin du <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destination.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.Count">
          <source>Gets the number of nodes actually contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Obtient le nombre de nœuds réellement contenus dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Count">
          <source>The number of nodes actually contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Nombre de nœuds réellement contenus dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Count">
          <source>For an example that includes this property, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette propriété, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Valeur à trouver dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>Finds the first node that contains the specified value.</source>
          <target state="translated">Recherche le premier nœud qui contient la valeur spécifiée.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> that contains the specified value, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le premier <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> qui contient la valeur spécifiée, s'il est trouvé ; sinon, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is searched forward starting at <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and ending at <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> recherche est effectuée vers l’avant <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et se terminant à <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Find(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Valeur à trouver dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>Finds the last node that contains the specified value.</source>
          <target state="translated">Recherche le dernier nœud qui contient la valeur spécifiée.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>The last <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> that contains the specified value, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le dernier <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> qui contient la valeur spécifiée, s'il est trouvé ; sinon, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is searched backward starting at <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> and ending at <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est effectuée vers l’arrière commençant à <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> et se terminant à <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source>Gets the first node of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Obtient le premier nœud de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Le premier <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est vide, le <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> contiennent des propriétés <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.First">
          <source>For an example that includes this property, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette propriété, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /&gt;</ph> pour <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Le <ph id="ph1">`foreach`</ph> instruction du langage c# (<ph id="ph2">`for each`</ph> en C++, <ph id="ph3">`For Each`</ph> en Visual Basic) masque la complexité des énumérateurs.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Il est donc recommandé d'utiliser <ph id="ph1">`foreach`</ph> plutôt que de manipuler l'énumérateur directement.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">À cette position, <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> n'est pas défini.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Par conséquent, vous devez appeler <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> retourne le même objet jusqu'à ce que <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> soit appelé.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> affecte l'élément suivant à <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> retourne <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Lorsque l’énumérateur est à cette position, les appels suivants à <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> également retourner <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si le dernier appel à <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A&gt;</ph> retourné <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> n’est pas défini.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Vous ne pouvez pas attribuer de nouveau <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A&gt;</ph> au premier élément de la collection ; vous devez créer une nouvelle instance de l'énumérateur à la place.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Implémentations par défaut de collections dans <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> ne sont pas synchronisées.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> instance.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> qui contient les informations nécessaires pour sérialiser l'instance <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> instance.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> qui contient la source et la destination du flux sérialisé associé à l'instance du <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> instance.</source>
          <target state="translated">Implémente l'interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> et retourne les données nécessaires pour sérialiser l'instance <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">pour fournir des services de sérialisation.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> action de sécurité : <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source>Gets the last node of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Obtient le dernier nœud de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source>The last <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Le dernier <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> properties contain <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est vide, le <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph> contiennent des propriétés <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.Last">
          <source>For an example that includes this property, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette propriété, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">Source de l’événement de désérialisation.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and raises the deserialization event when the deserialization is complete.</source>
          <target state="translated">Implémente l'interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> et déclenche l'événement de désérialisation une fois la désérialisation terminée.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> instance is invalid.</source>
          <target state="translated">L’objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> associé à l’instance de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> actuelle n’est pas valide.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.LinkedList`1">
          <source>Removes the first occurrence of a node or value from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Supprime la première occurrence d'un nœud ou d'une valeur dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedListNode`1" /&gt;</ph> à supprimer de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source>Removes the specified node from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Supprime le nœud spécifié de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
          <source><ph id="ph1">&lt;paramref name="node" /&gt;</ph> is not in the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="node" /&gt;</ph> n'est pas dans le <ph id="ph2">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source>The value to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Valeur à supprimer de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source>Removes the first occurrence of the specified value from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Supprime la première occurrence de la valeur spécifiée dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is successfully removed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la suppression de l'élément contenant <ph id="ph2">&lt;paramref name="value" /&gt;</ph> réussit ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> was not found in the original <ph id="ph3">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne également <ph id="ph1">&lt;see langword="false" /&gt;</ph> si <ph id="ph2">&lt;paramref name="value" /&gt;</ph> est introuvable dans le <ph id="ph3">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> d'origine.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
          <source>Removes the node at the start of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Supprime le nœud au début de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> is empty.</source>
          <target state="translated">La <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> est vide.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.RemoveLast">
          <source>Removes the node at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</source>
          <target state="translated">Supprime le nœud à la fin de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.RemoveLast">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.RemoveLast">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.RemoveLast">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> is empty.</source>
          <target state="translated">La <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph> est vide.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The value to add at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">Valeur à ajouter à la fin de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item at the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute un élément à la fin de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> for reference types and allows duplicate values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> accepte <ph id="ph2">`null`</ph> en tant que fichier <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedListNode%601.Value%2A&gt;</ph> pour les types référence et autorise les valeurs en double.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> is empty, the new node becomes the <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> est vide, le nouveau nœud devient le <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.First%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Last%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>For an example that includes this method, see the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class.</source>
          <target state="translated">Pour obtenir un exemple qui inclut cette méthode, consultez la <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtient une valeur indiquant si <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> est en lecture seule ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Dans l'implémentation par défaut de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>, cette propriété retourne toujours <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection ; Par conséquent, si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein d'une collection.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> qui peut être utilisé pour itérer au sein de la collection.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Le <ph id="ph1">`foreach`</ph> instruction du langage c# (<ph id="ph2">`for each`</ph> en C++, <ph id="ph3">`For Each`</ph> en Visual Basic) masque la complexité des énumérateurs.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Il est donc recommandé d'utiliser <ph id="ph1">`foreach`</ph> plutôt que de manipuler l'énumérateur directement.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">À cette position, <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> n'est pas défini.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">Par conséquent, vous devez appeler <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> retourne le même objet jusqu'à ce que <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> soit appelé.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> affecte l'élément suivant à <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourne <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Lorsque l’énumérateur est à cette position, les appels suivants à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> également retourner <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si le dernier appel à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourné <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> n’est pas défini.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Vous ne pouvez pas attribuer de nouveau <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> au premier élément de la collection ; vous devez créer une nouvelle instance de l'énumérateur à la place.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Implémentations par défaut de collections dans <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> ne sont pas synchronisées.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionnel qui constitue la destination des éléments copiés à partir de <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">Copie les éléments de <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> dans <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, à partir d'un index particulier de <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the non-generic implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Si le type de la source de <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> ne peut pas être casté automatiquement au type de la destination <ph id="ph2">`array`</ph>, les implémentations non génériques de <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> lever <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, alors que les implémentations génériques lèvent <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est multidimensionnel.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> n’a pas d’indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Le nombre d’éléments dans le <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> source est supérieur à la quantité d’espace disponible entre <ph id="ph2">&lt;paramref name="index" /&gt;</ph> et la fin du <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destination.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Le type du <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> source ne peut pas être converti automatiquement en type du <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destination.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtient une valeur indiquant si l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> est synchronisé (thread-safe).</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'accès à <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> est synchronisé (thread-safe) ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Dans l'implémentation par défaut de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>, cette propriété retourne toujours <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Implémentations par défaut de collections dans <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> ne sont pas synchronisées.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Retourne un objet qui peut être utilisé pour synchroniser l’accès à la <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">La synchronisation est effective uniquement si tous les threads de verrouillent de cet objet avant d’accéder à la collection.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">Dans l'implémentation par défaut de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.LinkedList`1" /&gt;</ph>, cette propriété retourne toujours l'instance actuelle.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Implémentations par défaut de collections dans <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> ne sont pas synchronisées.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Retourne un objet qui peut être utilisé pour synchroniser l’accès à la <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">La synchronisation est effective uniquement si tous les threads de verrouillent de cet objet avant d’accéder à la collection.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propriété pour c#, C++ et Visual Basic.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the linked list as a collection.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein de la liste liée en tant que collection.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the linked list as a collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> pouvant être utilisé pour itérer au sein de la liste liée en tant que collection.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Le <ph id="ph1">`foreach`</ph> instruction du langage c# (<ph id="ph2">`for each`</ph> en C++, <ph id="ph3">`For Each`</ph> en Visual Basic) masque la complexité des énumérateurs.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Il est donc recommandé d'utiliser <ph id="ph1">`foreach`</ph> plutôt que de manipuler l'énumérateur directement.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> replace également l'énumérateur à cette position.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">À cette position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> n'est pas défini.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Par conséquent, vous devez appeler <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retourne le même objet tant que <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> n'est pas appelé.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> affecte l'élément suivant à <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourne <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Lorsque l’énumérateur est à cette position, les appels suivants à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> également retourner <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si le dernier appel à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourné <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> n’est pas défini.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Pour attribuer une nouvelle fois <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> au premier élément de la collection, vous pouvez appeler <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> suivi de <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Implémentations par défaut de collections dans <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> ne sont pas synchronisées.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>