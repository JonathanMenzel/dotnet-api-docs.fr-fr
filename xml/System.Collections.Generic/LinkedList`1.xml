<Type Name="LinkedList&lt;T&gt;" FullName="System.Collections.Generic.LinkedList&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f4f915bbf25b5784d684d30fa9b51ea4c57557ac" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinkedList&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit LinkedList`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.LinkedList`1" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkedList(Of T)&#xA;Implements ICollection, ICollection(Of T), IDeserializationCallback, IEnumerable(Of T), IReadOnlyCollection(Of T), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class LinkedList : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_CollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="32fef-101">Spécifie le type d’élément de la liste liée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="32fef-101">Specifies the element type of the linked list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="32fef-102">Représente une liste doublement liée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="32fef-102">Represents a doubly linked list.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-103"><xref:System.Collections.Generic.LinkedList%601> est une liste liée à usage général.</span><span class="sxs-lookup"><span data-stu-id="32fef-103"><xref:System.Collections.Generic.LinkedList%601> is a general-purpose linked list.</span></span> <span data-ttu-id="32fef-104">Il prend en charge les énumérateurs et implémente la <xref:System.Collections.ICollection> interface, cohérent avec d’autres classes de collection dans le .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="32fef-104">It supports enumerators and implements the <xref:System.Collections.ICollection> interface, consistent with other collection classes in the .NET Framework.</span></span>  
  
 <span data-ttu-id="32fef-105"><xref:System.Collections.Generic.LinkedList%601> Fournit des nœuds séparés de type <xref:System.Collections.Generic.LinkedListNode%601>, de sorte que l’insertion et suppression sont des opérations d’o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-105"><xref:System.Collections.Generic.LinkedList%601> provides separate nodes of type <xref:System.Collections.Generic.LinkedListNode%601>, so insertion and removal are O(1) operations.</span></span>  
  
 <span data-ttu-id="32fef-106">Vous pouvez supprimer des nœuds et les réinsérer, dans la même liste ou dans une autre liste, ce qui entraîne aucun alloués sur le tas des objets supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="32fef-106">You can remove nodes and reinsert them, either in the same list or in another list, which results in no additional objects allocated on the heap.</span></span> <span data-ttu-id="32fef-107">Étant donné que la liste conserve également un compte interne, l’obtention du <xref:System.Collections.Generic.LinkedList%601.Count%2A> propriété est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-107">Because the list also maintains an internal count, getting the <xref:System.Collections.Generic.LinkedList%601.Count%2A> property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="32fef-108">Chaque nœud dans un <xref:System.Collections.Generic.LinkedList%601> objet est de type <xref:System.Collections.Generic.LinkedListNode%601>.</span><span class="sxs-lookup"><span data-stu-id="32fef-108">Each node in a <xref:System.Collections.Generic.LinkedList%601> object is of the type <xref:System.Collections.Generic.LinkedListNode%601>.</span></span> <span data-ttu-id="32fef-109">Étant donné que la <xref:System.Collections.Generic.LinkedList%601> est liée doublement, chaque nœud pointe vers l’avant vers le <xref:System.Collections.Generic.LinkedListNode%601.Next%2A> nœud et vers l’arrière à la <xref:System.Collections.Generic.LinkedListNode%601.Previous%2A> nœud.</span><span class="sxs-lookup"><span data-stu-id="32fef-109">Because the <xref:System.Collections.Generic.LinkedList%601> is doubly linked, each node points forward to the <xref:System.Collections.Generic.LinkedListNode%601.Next%2A> node and backward to the <xref:System.Collections.Generic.LinkedListNode%601.Previous%2A> node.</span></span>  
  
 <span data-ttu-id="32fef-110">Les listes qui contiennent des types référence sont plus performantes lorsqu’un nœud et sa valeur sont créés en même temps.</span><span class="sxs-lookup"><span data-stu-id="32fef-110">Lists that contain reference types perform better when a node and its value are created at the same time.</span></span> <span data-ttu-id="32fef-111"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> propriété de référence de types et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-111"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> property for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-112">Si le <xref:System.Collections.Generic.LinkedList%601> est vide, le <xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A> contiennent des propriétés `null`.</span><span class="sxs-lookup"><span data-stu-id="32fef-112">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="32fef-113">La <xref:System.Collections.Generic.LinkedList%601> classe ne prend pas en charge le chaînage des propriétés, fractionnement, cycles ou autres fonctionnalités qui peuvent laisser la liste dans un état incohérent.</span><span class="sxs-lookup"><span data-stu-id="32fef-113">The <xref:System.Collections.Generic.LinkedList%601> class does not support chaining, splitting, cycles, or other features that can leave the list in an inconsistent state.</span></span> <span data-ttu-id="32fef-114">La liste reste cohérente sur un thread unique.</span><span class="sxs-lookup"><span data-stu-id="32fef-114">The list remains consistent on a single thread.</span></span> <span data-ttu-id="32fef-115">Le seul scénario multithread pris en charge par <xref:System.Collections.Generic.LinkedList%601> des opérations de lecture multithread.</span><span class="sxs-lookup"><span data-stu-id="32fef-115">The only multithreaded scenario supported by <xref:System.Collections.Generic.LinkedList%601> is multithreaded read operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-116">L’exemple de code suivant illustre de nombreuses fonctionnalités de la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-116">The following code example demonstrates many features of the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 [!code-cpp[Generic.LinkedList#1](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.LinkedList/cpp/source.cpp#1)]
 [!code-csharp[Generic.LinkedList#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.LinkedList/cs/source.cs#1)]
 [!code-vb[Generic.LinkedList#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.LinkedList/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="32fef-117">Ce type n’est pas thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="32fef-117">This type is not thread safe.</span>
      </span>
      <span data-ttu-id="32fef-118">Si le <see cref="T:System.Collections.Generic.LinkedList`1" /> doit être accessible par plusieurs threads, vous devez implémenter leur propre mécanisme de synchronisation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="32fef-118">If the <see cref="T:System.Collections.Generic.LinkedList`1" /> needs to be accessed by multiple threads, you will need to implement their own synchronization mechanism.</span>
      </span>
      <span data-ttu-id="32fef-119">Un <see cref="T:System.Collections.Generic.LinkedList`1" /> peut prendre en charge plusieurs lecteurs simultanément, tant que la collection n’est pas modifiée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="32fef-119">A <see cref="T:System.Collections.Generic.LinkedList`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="32fef-120">Même dans ce cas, l’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="32fef-120">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="32fef-121">Dans les rares cas où une énumération gère avec accès en écriture, la collection doit être verrouillée pendant toute l’énumération.</span>
      <span class="sxs-lookup">
        <span data-stu-id="32fef-121">In the rare case where an enumeration contends with write accesses, the collection must be locked during the entire enumeration.</span>
      </span>
      <span data-ttu-id="32fef-122">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="32fef-122">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Generic.LinkedListNode`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-123">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-123">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32fef-124">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.LinkedList`1" /> qui est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-124">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-125"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-125"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-126">Si le <xref:System.Collections.Generic.LinkedList%601> est vide, le <xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A> contiennent des propriétés `null`.</span><span class="sxs-lookup"><span data-stu-id="32fef-126">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="32fef-127">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-127">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-128">L’exemple de code suivant crée et initialise un <xref:System.Collections.Generic.LinkedList%601> de type <xref:System.String>, ajoute plusieurs nœuds, puis affiche son contenu.</span><span class="sxs-lookup"><span data-stu-id="32fef-128">The following code example creates and initializes a <xref:System.Collections.Generic.LinkedList%601> of type <xref:System.String>, adds several nodes, and then displays its contents.</span></span>  
  
 [!code-cpp[System.Collections.Generic.LinkedList.ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Generic.LinkedList.ctor/CPP/llctor.cpp#1)]
 [!code-csharp[System.Collections.Generic.LinkedList.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.LinkedList.ctor/CS/llctor.cs#1)]
 [!code-vb[System.Collections.Generic.LinkedList.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.LinkedList.ctor/VB/llctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedList (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkedList(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="32fef-129">
            <see cref="T:System.Collections.IEnumerable" /> dont les éléments sont copiés dans le nouveau <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-129">The <see cref="T:System.Collections.IEnumerable" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-130">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.LinkedList`1" /> qui contient des éléments copiés à partir du <see cref="T:System.Collections.IEnumerable" /> spécifié et qui possède une capacité suffisante pour accepter le nombre d'éléments copiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-130">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" /> and has sufficient capacity to accommodate the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-131"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-131"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-132">Si `collection` n’a pas d’éléments, la nouvelle <xref:System.Collections.Generic.LinkedList%601> est vide et la <xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A> contiennent des propriétés `null`.</span><span class="sxs-lookup"><span data-stu-id="32fef-132">If `collection` has no elements then the new <xref:System.Collections.Generic.LinkedList%601> is empty, and the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="32fef-133">Ce constructeur est une opération o (n), où `n` est le nombre d’éléments dans `collection`.</span><span class="sxs-lookup"><span data-stu-id="32fef-133">This constructor is an O(n) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-134">Pour obtenir un exemple qui inclut ce constructeur, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-134">For an example that includes this constructor, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="32fef-135">
            <paramref name="collection" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-135">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinkedList (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LinkedList(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="32fef-136">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenant les informations nécessaires pour sérialiser <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-136">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="32fef-137">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenant la source et la destination du flux sérialisé associé à <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-137">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-138">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.LinkedList`1" /> qui est sérialisable avec les <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-138">Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that is serializable with the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-139"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-139"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-140">Si le <xref:System.Collections.Generic.LinkedList%601> est vide, le <xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A> contiennent des propriétés `null`.</span><span class="sxs-lookup"><span data-stu-id="32fef-140">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="32fef-141">Ce constructeur est une opération o (n).</span><span class="sxs-lookup"><span data-stu-id="32fef-141">This constructor is an O(n) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAfter">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-142">Ajoute un nouveau nœud ou une valeur après un nœud existant dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-142">Adds a new node or value after an existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAfter">
      <MemberSignature Language="C#" Value="public void AddAfter (System.Collections.Generic.LinkedListNode&lt;T&gt; node, System.Collections.Generic.LinkedListNode&lt;T&gt; newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAfter(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAfter (node As LinkedListNode(Of T), newNode As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAfter(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, System::Collections::Generic::LinkedListNode&lt;T&gt; ^ newNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="newNode" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="32fef-143">
            <see cref="T:System.Collections.Generic.LinkedListNode`1" /> après lequel insérer <c>newNode</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-143">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> after which to insert <c>newNode</c>.</span>
          </span>
        </param>
        <param name="newNode">
          <span data-ttu-id="32fef-144">Le nouveau <see cref="T:System.Collections.Generic.LinkedListNode`1" /> à ajouter à <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-144">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-145">Ajoute le nouveau nœud spécifié après le nœud existant spécifié dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-145">Adds the specified new node after the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-146"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-146"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-147">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-147">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-148">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-148">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="32fef-149">
            <paramref name="node" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-149">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="32fef-150">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-150">-or-</span>
          </span>
          <span data-ttu-id="32fef-151">
            <paramref name="newNode" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-151">
              <paramref name="newNode" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="32fef-152">
            <paramref name="node" /> n'est pas dans le <see cref="T:System.Collections.Generic.LinkedList`1" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-152">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="32fef-153">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-153">-or-</span>
          </span>
          <span data-ttu-id="32fef-154">
            <paramref name="newNode" /> appartient à une autre <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-154">
              <paramref name="newNode" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <Member MemberName="AddAfter">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddAfter (System.Collections.Generic.LinkedListNode&lt;T&gt; node, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddAfter(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAfter (node As LinkedListNode(Of T), value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddAfter(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="32fef-155">
            <see cref="T:System.Collections.Generic.LinkedListNode`1" /> après lequel insérer un nouveau <see cref="T:System.Collections.Generic.LinkedListNode`1" /> qui contient <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-155">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> after which to insert a new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="32fef-156">Valeur à ajouter à <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-156">The value to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-157">Ajoute un nouveau nœud qui contient la valeur spécifiée après le nœud existant spécifié dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-157">Adds a new node containing the specified value after the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32fef-158">Le nouveau <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenant <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-158">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-159"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-159"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-160">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-160">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-161">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-161">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="32fef-162">
            <paramref name="node" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-162">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="32fef-163">
            <paramref name="node" /> n'est pas dans le <see cref="T:System.Collections.Generic.LinkedList`1" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-163">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBefore">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-164">Ajoute un nouveau nœud ou une valeur avant un nœud existant dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-164">Adds a new node or value before an existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBefore">
      <MemberSignature Language="C#" Value="public void AddBefore (System.Collections.Generic.LinkedListNode&lt;T&gt; node, System.Collections.Generic.LinkedListNode&lt;T&gt; newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBefore(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; newNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBefore (node As LinkedListNode(Of T), newNode As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBefore(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, System::Collections::Generic::LinkedListNode&lt;T&gt; ^ newNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="newNode" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="32fef-165">
            <see cref="T:System.Collections.Generic.LinkedListNode`1" /> avant lequel insérer <c>newNode</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-165">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> before which to insert <c>newNode</c>.</span>
          </span>
        </param>
        <param name="newNode">
          <span data-ttu-id="32fef-166">Le nouveau <see cref="T:System.Collections.Generic.LinkedListNode`1" /> à ajouter à <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-166">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-167">Ajoute le nouveau nœud spécifié avant le nœud existant spécifié dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-167">Adds the specified new node before the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-168"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-168"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-169">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-169">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-170">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-170">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="32fef-171">
            <paramref name="node" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-171">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="32fef-172">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-172">-or-</span>
          </span>
          <span data-ttu-id="32fef-173">
            <paramref name="newNode" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-173">
              <paramref name="newNode" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="32fef-174">
            <paramref name="node" /> n'est pas dans le <see cref="T:System.Collections.Generic.LinkedList`1" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-174">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="32fef-175">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-175">-or-</span>
          </span>
          <span data-ttu-id="32fef-176">
            <paramref name="newNode" /> appartient à une autre <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-176">
              <paramref name="newNode" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <Member MemberName="AddBefore">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddBefore (System.Collections.Generic.LinkedListNode&lt;T&gt; node, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddBefore(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddBefore (node As LinkedListNode(Of T), value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddBefore(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="32fef-177">
            <see cref="T:System.Collections.Generic.LinkedListNode`1" /> avant lequel insérer un nouveau <see cref="T:System.Collections.Generic.LinkedListNode`1" /> qui contient <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-177">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> before which to insert a new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="32fef-178">Valeur à ajouter à <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-178">The value to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-179">Ajoute un nouveau nœud qui contient la valeur spécifiée avant le nœud existant spécifié dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-179">Adds a new node containing the specified value before the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32fef-180">Le nouveau <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenant <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-180">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-181"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-181"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-182">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-182">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-183">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-183">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="32fef-184">
            <paramref name="node" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-184">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="32fef-185">
            <paramref name="node" /> n'est pas dans le <see cref="T:System.Collections.Generic.LinkedList`1" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-185">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddFirst">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-186">Ajoute un nouveau nœud ou valeur au début de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-186">Adds a new node or value at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddFirst">
      <MemberSignature Language="C#" Value="public void AddFirst (System.Collections.Generic.LinkedListNode&lt;T&gt; node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFirst(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFirst (node As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFirst(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="32fef-187">Le nouveau <see cref="T:System.Collections.Generic.LinkedListNode`1" /> à ajouter au début de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-187">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-188">Ajoute le nouveau nœud spécifié au début de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-188">Adds the specified new node at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-189"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-189"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-190">Si le <xref:System.Collections.Generic.LinkedList%601> est vide, le nouveau nœud devient le <xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-190">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="32fef-191">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-191">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-192">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-192">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="32fef-193">
            <paramref name="node" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-193">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="32fef-194">
            <paramref name="node" /> appartient à une autre <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-194">
              <paramref name="node" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="AddFirst">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddFirst (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddFirst(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFirst (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddFirst(T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="32fef-195">Valeur à ajouter au début de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-195">The value to add at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-196">Ajoute un nouveau nœud qui contient la valeur spécifiée au début de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-196">Adds a new node containing the specified value at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32fef-197">Le nouveau <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenant <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-197">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-198"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-198"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-199">Si le <xref:System.Collections.Generic.LinkedList%601> est vide, le nouveau nœud devient le <xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-199">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="32fef-200">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-200">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-201">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-201">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLast">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-202">Ajoute un nouveau nœud ou valeur à la fin de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-202">Adds a new node or value at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLast">
      <MemberSignature Language="C#" Value="public void AddLast (System.Collections.Generic.LinkedListNode&lt;T&gt; node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLast(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLast (node As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLast(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="32fef-203">Le nouveau <see cref="T:System.Collections.Generic.LinkedListNode`1" /> à ajouter à la fin de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-203">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-204">Ajoute le nouveau nœud spécifié à la fin de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-204">Adds the specified new node at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-205"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-205"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-206">Si le <xref:System.Collections.Generic.LinkedList%601> est vide, le nouveau nœud devient le <xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-206">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="32fef-207">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-207">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-208">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-208">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="32fef-209">
            <paramref name="node" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-209">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="32fef-210">
            <paramref name="node" /> appartient à une autre <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-210">
              <paramref name="node" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      </Docs>
    </Member>
    <Member MemberName="AddLast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; AddLast (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; AddLast(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.AddLast(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLast (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ AddLast(T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="32fef-211">Valeur à ajouter à la fin de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-211">The value to add at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-212">Ajoute un nouveau nœud qui contient la valeur spécifiée à la fin de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-212">Adds a new node containing the specified value at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32fef-213">Le nouveau <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenant <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-213">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-214"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-214"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-215">Si le <xref:System.Collections.Generic.LinkedList%601> est vide, le nouveau nœud devient le <xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-215">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="32fef-216">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-216">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-217">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-217">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32fef-218">Supprime tous les nœuds de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-218">Removes all nodes from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-219"><xref:System.Collections.Generic.LinkedList%601.Count%2A> est définie à zéro, et les références à d’autres objets des éléments de la collection sont également libérées.</span><span class="sxs-lookup"><span data-stu-id="32fef-219"><xref:System.Collections.Generic.LinkedList%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  <span data-ttu-id="32fef-220"><xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A> ont la valeur `null`.</span><span class="sxs-lookup"><span data-stu-id="32fef-220"><xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> are set to `null`.</span></span>  
  
 <span data-ttu-id="32fef-221">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-221">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-222">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-222">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="32fef-223">Valeur à trouver dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-223">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="32fef-224">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-224">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-225">Détermine si une valeur est dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-225">Determines whether a value is in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32fef-226">
            <see langword="true" /> si <paramref name="value" /> existe dans <see cref="T:System.Collections.Generic.LinkedList`1" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-226">
              <see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.Generic.LinkedList`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-227">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-227">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-228">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-228">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Find(`0)" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.FindLast(`0)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="32fef-229">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-229">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
          <span data-ttu-id="32fef-230">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-230">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="32fef-231">Index de base zéro dans un <c>tableau</c> auquel commencer la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-231">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-232">Copie l'ensemble de l'objet <see cref="T:System.Collections.Generic.LinkedList`1" /> vers un objet <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-232">Copies the entire <see cref="T:System.Collections.Generic.LinkedList`1" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-233">Les éléments sont copiés dans le <xref:System.Array> dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.Generic.LinkedList%601>.</span><span class="sxs-lookup"><span data-stu-id="32fef-233">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.LinkedList%601>.</span></span>  
  
 <span data-ttu-id="32fef-234">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-234">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-235">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-235">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="32fef-236">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-236">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="32fef-237">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-237">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="32fef-238">Le nombre d’éléments dans le <see cref="T:System.Collections.Generic.LinkedList`1" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-238">The number of elements in the source <see cref="T:System.Collections.Generic.LinkedList`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-239">Obtient le nombre de nœuds réellement contenus dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-239">Gets the number of nodes actually contained in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32fef-240">Nombre de nœuds réellement contenus dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-240">The number of nodes actually contained in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-241">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="32fef-241">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-242">Pour obtenir un exemple qui inclut cette propriété, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-242">For an example that includes this property, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; Find (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; Find(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Find(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ Find(T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="32fef-243">Valeur à trouver dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-243">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-244">Recherche le premier nœud qui contient la valeur spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-244">Finds the first node that contains the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32fef-245">Le premier <see cref="T:System.Collections.Generic.LinkedListNode`1" /> qui contient la valeur spécifiée, s'il est trouvé ; sinon, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-245">The first <see cref="T:System.Collections.Generic.LinkedListNode`1" /> that contains the specified value, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-246">Le <xref:System.Collections.Generic.LinkedList%601> recherche est effectuée vers l’avant <xref:System.Collections.Generic.LinkedList%601.First%2A> et se terminant à <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-246">The <xref:System.Collections.Generic.LinkedList%601> is searched forward starting at <xref:System.Collections.Generic.LinkedList%601.First%2A> and ending at <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="32fef-247">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-247">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-248">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-248">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.FindLast(`0)" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="FindLast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; FindLast (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; FindLast(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.FindLast(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLast (value As T) As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedListNode&lt;T&gt; ^ FindLast(T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="32fef-249">Valeur à trouver dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-249">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-250">Recherche le dernier nœud qui contient la valeur spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-250">Finds the last node that contains the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32fef-251">Le dernier <see cref="T:System.Collections.Generic.LinkedListNode`1" /> qui contient la valeur spécifiée, s'il est trouvé ; sinon, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-251">The last <see cref="T:System.Collections.Generic.LinkedListNode`1" /> that contains the specified value, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-252">Le <xref:System.Collections.Generic.LinkedList%601> est effectuée vers l’arrière commençant à <xref:System.Collections.Generic.LinkedList%601.Last%2A> et se terminant à <xref:System.Collections.Generic.LinkedList%601.First%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-252">The <xref:System.Collections.Generic.LinkedList%601> is searched backward starting at <xref:System.Collections.Generic.LinkedList%601.Last%2A> and ending at <xref:System.Collections.Generic.LinkedList%601.First%2A>.</span></span>  
  
 <span data-ttu-id="32fef-253">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-253">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-254">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-254">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Find(`0)" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; First { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; First" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.First" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property First As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::LinkedListNode&lt;T&gt; ^ First { System::Collections::Generic::LinkedListNode&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-255">Obtient le premier nœud de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-255">Gets the first node of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32fef-256">Le premier <see cref="T:System.Collections.Generic.LinkedListNode`1" /> de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-256">The first <see cref="T:System.Collections.Generic.LinkedListNode`1" /> of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-257"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-257"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-258">Si le <xref:System.Collections.Generic.LinkedList%601> est vide, le <xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A> contiennent des propriétés `null`.</span><span class="sxs-lookup"><span data-stu-id="32fef-258">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="32fef-259">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="32fef-259">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-260">Pour obtenir un exemple qui inclut cette propriété, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-260">For an example that includes this property, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedList&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.LinkedList`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As LinkedList(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::LinkedList&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedList&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32fef-261">Retourne un énumérateur qui itère au sein de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-261">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32fef-262">
            <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> pour <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-262">An <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-263">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="32fef-263">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="32fef-264">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="32fef-264">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="32fef-265">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="32fef-265">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="32fef-266">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="32fef-266">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="32fef-267">À cette position, <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="32fef-267">At this position, <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="32fef-268">Par conséquent, vous devez appeler <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-268">Therefore, you must call <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="32fef-269"><xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> retourne le même objet jusqu'à ce que <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> soit appelé.</span><span class="sxs-lookup"><span data-stu-id="32fef-269"><xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="32fef-270"><xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-270"><xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="32fef-271">Si <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="32fef-271">If <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="32fef-272">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="32fef-272">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="32fef-273">Si le dernier appel à <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="32fef-273">If the last call to <xref:System.Collections.Generic.LinkedList%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="32fef-274">Vous ne pouvez pas attribuer de nouveau <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> au premier élément de la collection ; vous devez créer une nouvelle instance de l'énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="32fef-274">You cannot set <xref:System.Collections.Generic.LinkedList%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="32fef-275">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="32fef-275">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="32fef-276">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="32fef-276">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="32fef-277">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="32fef-277">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="32fef-278">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="32fef-278">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="32fef-279">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="32fef-279">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="32fef-280">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="32fef-280">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="32fef-281">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-281">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.LinkedList`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="32fef-282">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations nécessaires pour sérialiser l'instance <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-282">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="32fef-283">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé associé à l'instance du <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-283">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-284">Implémente l'interface <see cref="T:System.Runtime.Serialization.ISerializable" /> et retourne les données nécessaires pour sérialiser l'instance <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-284">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-285">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-285">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="32fef-286">
            <paramref name="info" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-286">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="32fef-287">pour fournir des services de sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-287">for providing serialization services.</span>
          </span>
          <span data-ttu-id="32fef-288">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-288">Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Last">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.LinkedListNode&lt;T&gt; Last { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; Last" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.Last" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Last As LinkedListNode(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::LinkedListNode&lt;T&gt; ^ Last { System::Collections::Generic::LinkedListNode&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.LinkedListNode&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-289">Obtient le dernier nœud de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-289">Gets the last node of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32fef-290">Le dernier <see cref="T:System.Collections.Generic.LinkedListNode`1" /> de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-290">The last <see cref="T:System.Collections.Generic.LinkedListNode`1" /> of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-291"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-291"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-292">Si le <xref:System.Collections.Generic.LinkedList%601> est vide, le <xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A> contiennent des propriétés `null`.</span><span class="sxs-lookup"><span data-stu-id="32fef-292">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the <xref:System.Collections.Generic.LinkedList%601.First%2A> and <xref:System.Collections.Generic.LinkedList%601.Last%2A> properties contain `null`.</span></span>  
  
 <span data-ttu-id="32fef-293">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="32fef-293">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-294">Pour obtenir un exemple qui inclut cette propriété, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-294">For an example that includes this property, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="32fef-295">Source de l’événement de désérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-295">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-296">Implémente l'interface <see cref="T:System.Runtime.Serialization.ISerializable" /> et déclenche l'événement de désérialisation une fois la désérialisation terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-296">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-297">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-297">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="32fef-298">L’objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associé à l’instance de <see cref="T:System.Collections.Generic.LinkedList`1" /> actuelle n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-298">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.LinkedList`1" /> instance is invalid.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-299">Supprime la première occurrence d'un nœud ou d'une valeur dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-299">Removes the first occurrence of a node or value from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Collections.Generic.LinkedListNode&lt;T&gt; node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Collections.Generic.LinkedListNode`1&lt;!T&gt; node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (node As LinkedListNode(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Collections::Generic::LinkedListNode&lt;T&gt; ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Collections.Generic.LinkedListNode&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="32fef-300">
            <see cref="T:System.Collections.Generic.LinkedListNode`1" /> à supprimer de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-300">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to remove from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-301">Supprime le nœud spécifié de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-301">Removes the specified node from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-302">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-302">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-303">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-303">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="32fef-304">
            <paramref name="node" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-304">
              <paramref name="node" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="32fef-305">
            <paramref name="node" /> n'est pas dans le <see cref="T:System.Collections.Generic.LinkedList`1" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-305">
              <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="32fef-306">Valeur à supprimer de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-306">The value to remove from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-307">Supprime la première occurrence de la valeur spécifiée dans <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-307">Removes the first occurrence of the specified value from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32fef-308">
            <see langword="true" /> si la suppression de l'élément contenant <paramref name="value" /> réussit ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-308">
              <see langword="true" /> if the element containing <paramref name="value" /> is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="32fef-309">Cette méthode retourne également <see langword="false" /> si <paramref name="value" /> est introuvable dans le <see cref="T:System.Collections.Generic.LinkedList`1" /> d'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-309">This method also returns <see langword="false" /> if <paramref name="value" /> was not found in the original <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-310">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-310">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-311">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-311">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddBefore" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddAfter" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="RemoveFirst">
      <MemberSignature Language="C#" Value="public void RemoveFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFirst ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFirst();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32fef-312">Supprime le nœud au début de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-312">Removes the node at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-313">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-313">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-314">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-314">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="32fef-315">La <see cref="T:System.Collections.Generic.LinkedList`1" /> est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-315">The <see cref="T:System.Collections.Generic.LinkedList`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddFirst" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLast">
      <MemberSignature Language="C#" Value="public void RemoveLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.RemoveLast" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveLast ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32fef-316">Supprime le nœud à la fin de <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-316">Removes the node at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-317">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-317">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-318">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-318">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="32fef-319">La <see cref="T:System.Collections.Generic.LinkedList`1" /> est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-319">The <see cref="T:System.Collections.Generic.LinkedList`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.Remove" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.RemoveFirst" />
        <altmember cref="M:System.Collections.Generic.LinkedList`1.Clear" />
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (value As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T value) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="32fef-320">Valeur à ajouter à la fin de <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-320">The value to add at the end of the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-321">Ajoute un élément à la fin de <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-321">Adds an item at the end of the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-322"><xref:System.Collections.Generic.LinkedList%601> accepte `null` en tant que fichier <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> pour les types référence et autorise les valeurs en double.</span><span class="sxs-lookup"><span data-stu-id="32fef-322"><xref:System.Collections.Generic.LinkedList%601> accepts `null` as a valid <xref:System.Collections.Generic.LinkedListNode%601.Value%2A> for reference types and allows duplicate values.</span></span>  
  
 <span data-ttu-id="32fef-323">Si le <xref:System.Collections.Generic.LinkedList%601> est vide, le nouveau nœud devient le <xref:System.Collections.Generic.LinkedList%601.First%2A> et <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-323">If the <xref:System.Collections.Generic.LinkedList%601> is empty, the new node becomes the <xref:System.Collections.Generic.LinkedList%601.First%2A> and the <xref:System.Collections.Generic.LinkedList%601.Last%2A>.</span></span>  
  
 <span data-ttu-id="32fef-324">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-324">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32fef-325">Pour obtenir un exemple qui inclut cette méthode, consultez la <xref:System.Collections.Generic.LinkedList%601> classe.</span><span class="sxs-lookup"><span data-stu-id="32fef-325">For an example that includes this method, see the <xref:System.Collections.Generic.LinkedList%601> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.LinkedList`1.AddLast" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-326">Obtient une valeur indiquant si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-326">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32fef-327">
            <see langword="true" /> si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-327">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="32fef-328">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.LinkedList`1" />, cette propriété retourne toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-328">In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-329">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</span><span class="sxs-lookup"><span data-stu-id="32fef-329">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="32fef-330">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection ; Par conséquent, si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="32fef-330">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="32fef-331">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="32fef-331">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32fef-332">Retourne un énumérateur qui itère au sein d'une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-332">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32fef-333">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> qui peut être utilisé pour itérer au sein de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-333">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-334">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="32fef-334">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="32fef-335">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="32fef-335">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="32fef-336">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="32fef-336">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="32fef-337">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="32fef-337">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="32fef-338">À cette position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="32fef-338">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="32fef-339">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-339">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="32fef-340"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> retourne le même objet jusqu'à ce que <xref:System.Collections.IEnumerator.MoveNext%2A> soit appelé.</span><span class="sxs-lookup"><span data-stu-id="32fef-340"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="32fef-341"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-341"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="32fef-342">Si <xref:System.Collections.IEnumerator.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="32fef-342">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="32fef-343">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="32fef-343">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="32fef-344">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="32fef-344">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="32fef-345">Vous ne pouvez pas attribuer de nouveau <xref:System.Collections.Generic.IEnumerator%601.Current%2A> au premier élément de la collection ; vous devez créer une nouvelle instance de l'énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="32fef-345">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="32fef-346">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="32fef-346">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="32fef-347">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="32fef-347">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="32fef-348">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="32fef-348">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="32fef-349">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="32fef-349">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="32fef-350">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="32fef-350">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="32fef-351">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="32fef-351">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="32fef-352">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-352">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="32fef-353">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-353">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="32fef-354">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-354">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="32fef-355">Index de base zéro dans un <c>tableau</c> auquel commencer la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-355">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32fef-356">Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, à partir d'un index particulier de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-356">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="32fef-357">Si le type de la source de <xref:System.Collections.ICollection> ne peut pas être casté automatiquement au type de la destination `array`, les implémentations non génériques de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> lever <xref:System.InvalidCastException>, alors que les implémentations génériques lèvent <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="32fef-357">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="32fef-358">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-358">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.LinkedList%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="32fef-359">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-359">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="32fef-360">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-360">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="32fef-361">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-361">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="32fef-362">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-362">-or-</span>
          </span>
          <span data-ttu-id="32fef-363">
            <paramref name="array" /> n’a pas d’indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-363">
              <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="32fef-364">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-364">-or-</span>
          </span>
          <span data-ttu-id="32fef-365">Le nombre d’éléments dans le <see cref="T:System.Collections.ICollection" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-365">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="32fef-366">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-366">-or-</span>
          </span>
          <span data-ttu-id="32fef-367">Le type du <see cref="T:System.Collections.ICollection" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-367">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-368">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-368">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32fef-369">
            <see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-369">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="32fef-370">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.LinkedList`1" />, cette propriété retourne toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-370">In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-371">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="32fef-371">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="32fef-372">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="32fef-372">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="32fef-373">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="32fef-373">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="32fef-374">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="32fef-374">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="32fef-375"><xref:System.Collections.ICollection.SyncRoot%2A> Retourne un objet qui peut être utilisé pour synchroniser l’accès à la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="32fef-375"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="32fef-376">La synchronisation est effective uniquement si tous les threads de verrouillent de cet objet avant d’accéder à la collection.</span><span class="sxs-lookup"><span data-stu-id="32fef-376">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="32fef-377">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="32fef-377">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32fef-378">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-378">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32fef-379">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-379">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="32fef-380">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.LinkedList`1" />, cette propriété retourne toujours l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-380">In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-381">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="32fef-381">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="32fef-382">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="32fef-382">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="32fef-383">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="32fef-383">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="32fef-384">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="32fef-384">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="32fef-385"><xref:System.Collections.ICollection.SyncRoot%2A> Retourne un objet qui peut être utilisé pour synchroniser l’accès à la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="32fef-385"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="32fef-386">La synchronisation est effective uniquement si tous les threads de verrouillent de cet objet avant d’accéder à la collection.</span><span class="sxs-lookup"><span data-stu-id="32fef-386">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="32fef-387">Le code suivant illustre l’utilisation de la <xref:System.Collections.ICollection.SyncRoot%2A> propriété pour c#, C++ et Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="32fef-387">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="32fef-388">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="32fef-388">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32fef-389">Retourne un énumérateur qui itère au sein de la liste liée en tant que collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-389">Returns an enumerator that iterates through the linked list as a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32fef-390">
            <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la liste liée en tant que collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32fef-390">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the linked list as a collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32fef-391">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="32fef-391">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="32fef-392">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="32fef-392">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="32fef-393">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="32fef-393">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="32fef-394">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="32fef-394">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="32fef-395"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="32fef-395"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="32fef-396">À cette position, <xref:System.Collections.IEnumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="32fef-396">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="32fef-397">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-397">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="32fef-398"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="32fef-398"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="32fef-399"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-399"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="32fef-400">Si <xref:System.Collections.IEnumerator.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="32fef-400">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="32fef-401">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="32fef-401">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="32fef-402">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.IEnumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="32fef-402">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="32fef-403">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="32fef-403">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="32fef-404">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="32fef-404">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="32fef-405">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="32fef-405">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="32fef-406">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="32fef-406">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="32fef-407">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="32fef-407">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="32fef-408">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="32fef-408">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="32fef-409">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="32fef-409">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="32fef-410">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="32fef-410">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.LinkedList`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>