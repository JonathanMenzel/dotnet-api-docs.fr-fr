<Type Name="Stack&lt;T&gt;" FullName="System.Collections.Generic.Stack&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3974e97e893db48f241a47a19c02bfa795c7a260" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52353698" /></Metadata><TypeSignature Language="C#" Value="public class Stack&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Stack`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Stack`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Stack(Of T)&#xA;Implements ICollection, IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Stack : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type Stack&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_StackDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="fefe1-101">Spécifie le type d'éléments dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-101">Specifies the type of elements in the stack.</span></span></typeparam>
    <summary><span data-ttu-id="fefe1-102">Représente une collection d’instances à taille variable de type dernier entré, premier sorti (LIFO) du même type spécifié.</span><span class="sxs-lookup"><span data-stu-id="fefe1-102">Represents a variable size last-in-first-out (LIFO) collection of instances of the same specified type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-103"><xref:System.Collections.Generic.Stack%601> est implémenté comme un tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-103"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="fefe1-104">Piles et les files d’attente sont utiles lorsque vous avez besoin de stockage temporaire des informations ; Autrement dit, lorsque vous souhaitez ignorer un élément après avoir récupéré sa valeur.</span><span class="sxs-lookup"><span data-stu-id="fefe1-104">Stacks and queues are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="fefe1-105">Utilisez <xref:System.Collections.Generic.Queue%601> si vous avez besoin accéder aux informations dans le même ordre que celui qu’elles sont stockées dans la collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-105">Use <xref:System.Collections.Generic.Queue%601> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="fefe1-106">Utilisez <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> si vous avez besoin accéder aux informations dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="fefe1-106">Use <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> if you need to access the information in reverse order.</span></span>  
  
 <span data-ttu-id="fefe1-107">Utilisez le <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> et <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> types lorsque vous avez besoin pour accéder à la collection à partir de plusieurs threads simultanément.</span><span class="sxs-lookup"><span data-stu-id="fefe1-107">Use the <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> and <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> types when you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="fefe1-108">Une utilisation courante pour <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> consiste à conserver des États des variables pendant les appels aux autres procédures.</span><span class="sxs-lookup"><span data-stu-id="fefe1-108">A common use for <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> is to preserve variable states during calls to other procedures.</span></span>  
  
 <span data-ttu-id="fefe1-109">Trois opérations principales peuvent être effectuées sur un <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> et ses éléments :</span><span class="sxs-lookup"><span data-stu-id="fefe1-109">Three main operations can be performed on a <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> and its elements:</span></span>  
  
-   <span data-ttu-id="fefe1-110"><xref:System.Collections.Generic.Stack%601.Push%2A> Insère un élément en haut de la <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-110"><xref:System.Collections.Generic.Stack%601.Push%2A> inserts an element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
-   <span data-ttu-id="fefe1-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> Supprime un élément du haut de la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> removes an element from the top of the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
-   <span data-ttu-id="fefe1-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> Retourne un élément qui est en haut de la <xref:System.Collections.Generic.Stack%601> mais ne supprime ne pas de la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> returns an element that is at the top of the <xref:System.Collections.Generic.Stack%601> but does not remove it from the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fefe1-113">La capacité d’un <xref:System.Collections.Generic.Stack%601> est le nombre d’éléments du <xref:System.Collections.Generic.Stack%601> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="fefe1-113">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="fefe1-114">Comme les éléments sont ajoutés à un <xref:System.Collections.Generic.Stack%601>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="fefe1-114">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="fefe1-115">La capacité peut être diminuée en appelant <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-115">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="fefe1-116">Si <xref:System.Collections.Generic.Stack%601.Count%2A> est inférieure à la capacité de la pile, <xref:System.Collections.Generic.Stack%601.Push%2A> est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-116">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="fefe1-117">Si la capacité doit être augmentée pour intégrer le nouvel élément <xref:System.Collections.Generic.Stack%601.Push%2A> devient un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-117">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="fefe1-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> is an O(1) operation.</span></span>  
  
 <span data-ttu-id="fefe1-119"><xref:System.Collections.Generic.Stack%601> accepte `null` comme une valeur valide pour la référence de types et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="fefe1-119"><xref:System.Collections.Generic.Stack%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-120">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="fefe1-120">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span> <span data-ttu-id="fefe1-121">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-121">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-122">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-122">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-123">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-123">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-124">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-124">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-125">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-125">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-126">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-126">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-127">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-127">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-128">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-128">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-129">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-129">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="fefe1-130">Statique public (<see langword="Shared" /> en Visual Basic) de ce type sont thread-safe.</span><span class="sxs-lookup"><span data-stu-id="fefe1-130">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="fefe1-131">Il n'est pas garanti que les membres d'instance soient thread-safe.</span><span class="sxs-lookup"><span data-stu-id="fefe1-131">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="fefe1-132">Un <see cref="T:System.Collections.Generic.Stack`1" /> peut prendre en charge plusieurs lecteurs simultanément, tant que la collection n’est pas modifiée.</span><span class="sxs-lookup"><span data-stu-id="fefe1-132">A <see cref="T:System.Collections.Generic.Stack`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="fefe1-133">Même dans ce cas, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="fefe1-133">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="fefe1-134">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="fefe1-134">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fefe1-135">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="fefe1-135">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="fefe1-136">Itérateurs (C# et Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fefe1-136">Iterators (C# and Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fefe1-137">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-137">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fefe1-138">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.Stack`1" /> qui est vide et possède la capacité initiale par défaut.</span><span class="sxs-lookup"><span data-stu-id="fefe1-138">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-139">La capacité d’un <xref:System.Collections.Generic.Stack%601> est le nombre d’éléments qui le <xref:System.Collections.Generic.Stack%601> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="fefe1-139">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="fefe1-140">Comme les éléments sont ajoutés à un <xref:System.Collections.Generic.Stack%601>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="fefe1-140">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="fefe1-141">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-141">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fefe1-142">La capacité peut être diminuée en appelant <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-142">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="fefe1-143">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-143">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-144">L’exemple de code suivant illustre ce constructeur et plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="fefe1-144">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="fefe1-145">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-145">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-146">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-146">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-147">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-147">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-148">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-148">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-149">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-149">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-150">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-150">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-151">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-151">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-152">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-152">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-153">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-153">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="fefe1-154">Collection à partir de laquelle copier les éléments.</span><span class="sxs-lookup"><span data-stu-id="fefe1-154">The collection to copy elements from.</span></span></param>
        <summary><span data-ttu-id="fefe1-155">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.Stack`1" /> qui contient des éléments copiés à partir de la collection spécifiée et qui possède une capacité suffisante pour accepter le nombre d’éléments copiés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-155">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-156">La capacité d’un <xref:System.Collections.Generic.Stack%601> est le nombre d’éléments qui le <xref:System.Collections.Generic.Stack%601> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="fefe1-156">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="fefe1-157">Comme les éléments sont ajoutés à un <xref:System.Collections.Generic.Stack%601>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="fefe1-157">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="fefe1-158">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-158">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fefe1-159">La capacité peut être diminuée en appelant <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-159">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="fefe1-160">Les éléments sont copiés dans le <xref:System.Collections.Generic.Stack%601> dans le même ordre qu’ils sont lus par le <xref:System.Collections.Generic.IEnumerator%601> de la collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-160">The elements are copied onto the <xref:System.Collections.Generic.Stack%601> in the same order they are read by the <xref:System.Collections.Generic.IEnumerator%601> of the collection.</span></span>  
  
 <span data-ttu-id="fefe1-161">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans `collection`.</span><span class="sxs-lookup"><span data-stu-id="fefe1-161">This constructor is an O(`n`) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-162">L’exemple de code suivant illustre ce constructeur et plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="fefe1-162">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="fefe1-163">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-163">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-164">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-164">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-165">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-165">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-166">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-166">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-167">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-167">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-168">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-168">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-169">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-169">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-170">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-170">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-171">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-171">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fefe1-172"><paramref name="collection" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-172"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.ICollection`1" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : int -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="fefe1-173">Nombre initial d'éléments que <see cref="T:System.Collections.Generic.Stack`1" /> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="fefe1-173">The initial number of elements that the <see cref="T:System.Collections.Generic.Stack`1" /> can contain.</span></span></param>
        <summary><span data-ttu-id="fefe1-174">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.Stack`1" /> qui est vide et possède une capacité égale à la plus grande valeur parmi la capacité initiale spécifiée et la capacité initiale par défaut.</span><span class="sxs-lookup"><span data-stu-id="fefe1-174">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-175">La capacité d’un <xref:System.Collections.Generic.Stack%601> est le nombre d’éléments qui le <xref:System.Collections.Generic.Stack%601> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="fefe1-175">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="fefe1-176">Comme les éléments sont ajoutés à un <xref:System.Collections.Generic.Stack%601>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="fefe1-176">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="fefe1-177">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-177">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fefe1-178">La capacité peut être diminuée en appelant <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-178">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="fefe1-179">Ce constructeur est un O (`n`) opération, où `n` est `capacity`.</span><span class="sxs-lookup"><span data-stu-id="fefe1-179">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fefe1-180"><paramref name="capacity" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="fefe1-180"><paramref name="capacity" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="stack.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fefe1-181">Supprime tous les objets du <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-181">Removes all objects from the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-182"><xref:System.Collections.Generic.Stack%601.Count%2A> est défini sur zéro et les références à d’autres objets à partir des éléments de la collection sont également libérées.</span><span class="sxs-lookup"><span data-stu-id="fefe1-182"><xref:System.Collections.Generic.Stack%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="fefe1-183">La capacité reste inchangée.</span><span class="sxs-lookup"><span data-stu-id="fefe1-183">The capacity remains unchanged.</span></span> <span data-ttu-id="fefe1-184">Pour rétablir la capacité de la <xref:System.Collections.Generic.Stack%601>, appelez <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-184">To reset the capacity of the <xref:System.Collections.Generic.Stack%601>, call <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span> <span data-ttu-id="fefe1-185">Suppression vide <xref:System.Collections.Generic.Stack%601> définit la capacité de la <xref:System.Collections.Generic.Stack%601> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="fefe1-185">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="fefe1-186">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-186">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-187">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Clear%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fefe1-187">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="fefe1-188">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-188">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-189">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-189">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-190">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-190">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-191">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-191">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-192">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-192">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-193">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-193">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-194">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-194">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-195">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-195">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-196">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-196">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="member this.Contains : 'T -&gt; bool" Usage="stack.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fefe1-197">Objet à rechercher dans <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-197">The object to locate in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="fefe1-198">La valeur peut être <see langword="null" /> pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="fefe1-198">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="fefe1-199">Détermine si le <see cref="T:System.Collections.Generic.Stack`1" /> contient un élément.</span><span class="sxs-lookup"><span data-stu-id="fefe1-199">Determines whether an element is in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="fefe1-200"><see langword="true" /> si <paramref name="item" /> existe dans <see cref="T:System.Collections.Generic.Stack`1" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-200"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.Stack`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-201">Cette méthode détermine l’égalité à l’aide du comparateur d’égalité par défaut <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour `T`, le type des valeurs dans la liste.</span><span class="sxs-lookup"><span data-stu-id="fefe1-201">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="fefe1-202">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-202">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-203">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Contains%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fefe1-203">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="fefe1-204">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-204">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-205">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-205">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-206">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-206">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-207">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-207">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-208">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-208">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-209">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-209">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-210">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-210">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-211">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-211">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-212">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-212">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="fefe1-213">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="fefe1-213">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="stack.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="fefe1-214"><see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-214">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="fefe1-215">Le <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span><span class="sxs-lookup"><span data-stu-id="fefe1-215">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="fefe1-216">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</span><span class="sxs-lookup"><span data-stu-id="fefe1-216">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="fefe1-217">Copie <see cref="T:System.Collections.Generic.Stack`1" /> dans un <see cref="T:System.Array" /> unidimensionnel existant commençant à l'index de tableau spécifié.</span><span class="sxs-lookup"><span data-stu-id="fefe1-217">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-218">Les éléments sont copiés dans le tableau par ordre dernier-in-first-out (LIFO), similaire à celui des éléments retournés par une succession d’appels à <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-218">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="fefe1-219">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-219">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-220">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fefe1-220">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method.</span></span>  
  
 <span data-ttu-id="fefe1-221">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-221">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-222">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-222">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-223">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-223">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-224">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-224">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-225">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-225">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-226">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-226">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-227">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-227">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-228">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-228">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-229">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-229">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fefe1-230"><paramref name="array" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-230"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fefe1-231"><paramref name="arrayIndex" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="fefe1-231"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fefe1-232">Le nombre d’éléments dans le <see cref="T:System.Collections.Generic.Stack`1" /> source est supérieur à la quantité d’espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</span><span class="sxs-lookup"><span data-stu-id="fefe1-232">The number of elements in the source <see cref="T:System.Collections.Generic.Stack`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.ToArray" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.Stack&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fefe1-233">Obtient le nombre d'éléments contenus dans le <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-233">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <value><span data-ttu-id="fefe1-234">Nombre d'éléments contenus dans <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-234">The number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-235">La capacité de la <xref:System.Collections.Generic.Stack%601> est le nombre d’éléments qui le <xref:System.Collections.Generic.Stack%601> peut stocker.</span><span class="sxs-lookup"><span data-stu-id="fefe1-235">The capacity of the <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can store.</span></span> <span data-ttu-id="fefe1-236"><xref:System.Collections.Generic.Stack%601.Count%2A> est le nombre d’éléments réellement contenus dans le <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-236"><xref:System.Collections.Generic.Stack%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fefe1-237">La capacité est toujours supérieure ou égale à <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-237">The capacity is always greater than or equal to <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="fefe1-238">Si <xref:System.Collections.Generic.Stack%601.Count%2A> dépasse la capacité lors de l’ajout d’éléments, la capacité est augmentée en réallouant automatiquement le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</span><span class="sxs-lookup"><span data-stu-id="fefe1-238">If <xref:System.Collections.Generic.Stack%601.Count%2A> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="fefe1-239">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-239">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-240">L’exemple de code suivant montre plusieurs propriétés et méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="fefe1-240">The following code example demonstrates several properties and methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Count%2A> property.</span></span>  
  
 <span data-ttu-id="fefe1-241">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-241">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-242">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-242">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-243">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-243">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-244">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-244">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-245">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-245">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-246">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-246">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-247">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-247">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-248">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-248">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-249">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-249">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Stack&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.Stack`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As Stack(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::Stack&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.Stack&lt;'T&gt;.Enumerator" Usage="stack.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Stack&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fefe1-250">Retourne un énumérateur pour <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-250">Returns an enumerator for the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="fefe1-251"><see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> pour <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-251">An <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-252">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="fefe1-252">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="fefe1-253">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="fefe1-253">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="fefe1-254">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="fefe1-254">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="fefe1-255">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-255">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="fefe1-256">À cette position, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="fefe1-256">At this position, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fefe1-257">Par conséquent, vous devez appeler <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-257">Therefore, you must call <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="fefe1-258"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> retourne le même objet jusqu'à ce que <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> soit appelé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-258"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="fefe1-259"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-259"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="fefe1-260">Si <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="fefe1-260">If <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fefe1-261">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="fefe1-261">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="fefe1-262">Si le dernier appel à <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="fefe1-262">If the last call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fefe1-263">Vous ne pouvez pas attribuer de nouveau <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> au premier élément de la collection ; vous devez créer une nouvelle instance de l'énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="fefe1-263">You cannot set <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="fefe1-264">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="fefe1-264">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fefe1-265">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-265">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="fefe1-266">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="fefe1-266">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="fefe1-267">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="fefe1-267">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fefe1-268">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="fefe1-268">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fefe1-269">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="fefe1-269">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="fefe1-270">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-270">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-271">L’exemple de code suivant montre que la <xref:System.Collections.Generic.Stack%601> classe générique est énumérable.</span><span class="sxs-lookup"><span data-stu-id="fefe1-271">The following code example demonstrates that the <xref:System.Collections.Generic.Stack%601> generic class is enumerable.</span></span> <span data-ttu-id="fefe1-272">Le `foreach` instruction (`For Each` en Visual Basic, `for each` en C++) est utilisé pour énumérer la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="fefe1-272">The `foreach` statement (`For Each` in Visual Basic, `for each` in C++) is used to enumerate the queue.</span></span>  
  
 <span data-ttu-id="fefe1-273">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-273">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-274">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-274">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-275">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-275">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-276">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-276">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-277">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-277">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-278">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-278">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-279">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-279">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-280">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-280">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-281">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-281">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Stack`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; 'T" Usage="stack.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fefe1-282">Retourne l'objet situé en haut de <see cref="T:System.Collections.Generic.Stack`1" /> sans le supprimer.</span><span class="sxs-lookup"><span data-stu-id="fefe1-282">Returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="fefe1-283">Objet situé en haut de <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-283">The object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-284">Cette méthode est analogue à la méthode <xref:System.Collections.Generic.Stack%601.Pop%2A>, mais <xref:System.Collections.Generic.Stack%601.Peek%2A> ne modifie pas la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-284">This method is similar to the <xref:System.Collections.Generic.Stack%601.Pop%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fefe1-285">Si type `T` est un type référence, `null` peut être placé le <xref:System.Collections.Generic.Stack%601> comme espace réservé, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="fefe1-285">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="fefe1-286">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-286">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-287">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Peek%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fefe1-287">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="fefe1-288">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-288">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-289">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-289">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-290">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-290">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-291">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-291">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-292">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-292">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-293">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-293">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-294">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-294">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-295">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-295">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-296">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-296">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fefe1-297">La <see cref="T:System.Collections.Generic.Stack`1" /> est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-297">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public T Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; 'T" Usage="stack.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fefe1-298">Supprime et retourne l’objet en haut de <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-298">Removes and returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="fefe1-299">Objet supprimé du haut de <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-299">The object removed from the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-300">Cette méthode est analogue à la méthode <xref:System.Collections.Generic.Stack%601.Peek%2A>, mais <xref:System.Collections.Generic.Stack%601.Peek%2A> ne modifie pas la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-300">This method is similar to the <xref:System.Collections.Generic.Stack%601.Peek%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fefe1-301">Si type `T` est un type référence, `null` peut être placé le <xref:System.Collections.Generic.Stack%601> comme espace réservé, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="fefe1-301">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="fefe1-302"><xref:System.Collections.Generic.Stack%601> est implémenté comme un tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-302"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span> <span data-ttu-id="fefe1-303">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-303">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-304">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Pop%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fefe1-304">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Pop%2A> method.</span></span>  
  
 <span data-ttu-id="fefe1-305">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-305">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-306">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-306">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-307">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-307">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-308">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-308">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-309">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-309">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-310">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-310">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-311">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-311">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-312">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-312">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-313">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-313">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fefe1-314">La <see cref="T:System.Collections.Generic.Stack`1" /> est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-314">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(T item);" />
      <MemberSignature Language="F#" Value="member this.Push : 'T -&gt; unit" Usage="stack.Push item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fefe1-315">Objet à placer dans <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-315">The object to push onto the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="fefe1-316">La valeur peut être <see langword="null" /> pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="fefe1-316">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="fefe1-317">Insère un objet en haut de <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-317">Inserts an object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-318"><xref:System.Collections.Generic.Stack%601> est implémenté comme un tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-318"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="fefe1-319">Si <xref:System.Collections.Generic.Stack%601.Count%2A> est déjà égale à la capacité, la capacité de la <xref:System.Collections.Generic.Stack%601> est augmentée en réallouant automatiquement le tableau interne, et les éléments existants sont copiés vers le nouveau tableau avant le nouvel élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="fefe1-319">If <xref:System.Collections.Generic.Stack%601.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Generic.Stack%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="fefe1-320">Si type `T` est un type référence, `null` peut être placé le <xref:System.Collections.Generic.Stack%601> comme espace réservé, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="fefe1-320">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span> <span data-ttu-id="fefe1-321">Il occupe une position de la pile et est traité comme n’importe quel objet.</span><span class="sxs-lookup"><span data-stu-id="fefe1-321">It occupies a slot in the stack and is treated like any object.</span></span>  
  
 <span data-ttu-id="fefe1-322">Si <xref:System.Collections.Generic.Stack%601.Count%2A> est inférieure à la capacité de la pile, <xref:System.Collections.Generic.Stack%601.Push%2A> est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-322">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="fefe1-323">Si la capacité doit être augmentée pour intégrer le nouvel élément <xref:System.Collections.Generic.Stack%601.Push%2A> devient un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-323">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-324">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Push%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fefe1-324">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Push%2A> method.</span></span>  
  
 <span data-ttu-id="fefe1-325">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-325">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-326">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-326">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-327">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-327">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-328">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-328">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-329">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-329">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-330">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-330">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-331">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-331">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-332">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-332">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-333">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-333">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fefe1-334">Retourne un énumérateur qui itère au sein de la collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-334">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="fefe1-335"><see cref="T:System.Collections.Generic.IEnumerator`1" /> qui peut être utilisé pour itérer au sein de la collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-335">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-336">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="fefe1-336">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="fefe1-337">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="fefe1-337">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="fefe1-338">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="fefe1-338">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="fefe1-339">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-339">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="fefe1-340">À cette position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="fefe1-340">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="fefe1-341">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-341">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="fefe1-342"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> retourne le même objet jusqu'à ce que <xref:System.Collections.IEnumerator.MoveNext%2A> soit appelé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-342"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="fefe1-343"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-343"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="fefe1-344">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="fefe1-344">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fefe1-345">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="fefe1-345">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="fefe1-346">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="fefe1-346">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="fefe1-347">Vous ne pouvez pas attribuer de nouveau <xref:System.Collections.Generic.IEnumerator%601.Current%2A> au premier élément de la collection ; vous devez créer une nouvelle instance de l'énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="fefe1-347">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="fefe1-348">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="fefe1-348">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fefe1-349">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-349">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="fefe1-350">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="fefe1-350">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="fefe1-351">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="fefe1-351">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fefe1-352">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="fefe1-352">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fefe1-353">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="fefe1-353">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="fefe1-354">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-354">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="fefe1-355"><see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-355">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="fefe1-356">Le <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span><span class="sxs-lookup"><span data-stu-id="fefe1-356">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="fefe1-357">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</span><span class="sxs-lookup"><span data-stu-id="fefe1-357">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="fefe1-358">Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, à partir d'un index particulier de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-358">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fefe1-359">Si le type de la source <xref:System.Collections.ICollection> ne peut pas être casté automatiquement au type de la destination `array`, les implémentations non génériques de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> lever <xref:System.InvalidCastException>, tandis que les implémentations génériques lèvent <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-359">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="fefe1-360">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-360">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fefe1-361"><paramref name="array" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-361"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fefe1-362"><paramref name="arrayIndex" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="fefe1-362"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fefe1-363"><paramref name="array" /> est multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="fefe1-363"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="fefe1-364">- ou -</span><span class="sxs-lookup"><span data-stu-id="fefe1-364">-or-</span></span> 
 <span data-ttu-id="fefe1-365"><paramref name="array" /> n’a pas d’indexation de base zéro.</span><span class="sxs-lookup"><span data-stu-id="fefe1-365"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="fefe1-366">- ou -</span><span class="sxs-lookup"><span data-stu-id="fefe1-366">-or-</span></span> 
<span data-ttu-id="fefe1-367">Le nombre d’éléments dans la <see cref="T:System.Collections.ICollection" /> source est supérieur à la quantité d’espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</span><span class="sxs-lookup"><span data-stu-id="fefe1-367">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="fefe1-368">- ou -</span><span class="sxs-lookup"><span data-stu-id="fefe1-368">-or-</span></span> 
<span data-ttu-id="fefe1-369">Le type du <see cref="T:System.Collections.ICollection" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span><span class="sxs-lookup"><span data-stu-id="fefe1-369">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fefe1-370">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="fefe1-370">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="fefe1-371"><see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-371"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="fefe1-372">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.Stack`1" />, cette propriété retourne toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-372">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-373">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="fefe1-373">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="fefe1-374">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="fefe1-374">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="fefe1-375">Dans les rares cas où des énumérations traitent des accès en écriture, vous devez verrouiller la collection pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="fefe1-375">In the rare case where enumerations contend with write accesses, you must lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fefe1-376">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="fefe1-376">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fefe1-377"><xref:System.Collections.ICollection.SyncRoot%2A> Retourne un objet qui peut être utilisé pour synchroniser l’accès à la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-377"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="fefe1-378">La synchronisation est effective uniquement si tous les threads de verrouillent de cet objet avant d’accéder à la collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-378">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="fefe1-379">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-379">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fefe1-380">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-380">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="fefe1-381">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-381">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="fefe1-382">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.Stack`1" />, cette propriété retourne toujours l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="fefe1-382">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-383">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="fefe1-383">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="fefe1-384">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="fefe1-384">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="fefe1-385">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="fefe1-385">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fefe1-386">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="fefe1-386">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fefe1-387"><xref:System.Collections.ICollection.SyncRoot%2A> Retourne un objet qui peut être utilisé pour synchroniser l’accès à la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-387"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="fefe1-388">La synchronisation est effective uniquement si tous les threads de verrouillent de cet objet avant d’accéder à la collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-388">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="fefe1-389">Le code suivant illustre l’utilisation de la <xref:System.Collections.ICollection.SyncRoot%2A> propriété pour c#, C++ et Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="fefe1-389">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="fefe1-390">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-390">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fefe1-391">Retourne un énumérateur qui itère au sein d'une collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-391">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="fefe1-392"><see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-392">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-393">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="fefe1-393">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="fefe1-394">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="fefe1-394">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="fefe1-395">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="fefe1-395">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="fefe1-396">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-396">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="fefe1-397"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="fefe1-397"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="fefe1-398">À cette position, <xref:System.Collections.IEnumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="fefe1-398">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fefe1-399">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-399">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="fefe1-400"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-400"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="fefe1-401"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-401"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="fefe1-402">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="fefe1-402">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fefe1-403">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="fefe1-403">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="fefe1-404">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.IEnumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="fefe1-404">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fefe1-405">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-405">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="fefe1-406">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="fefe1-406">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fefe1-407">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-407">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="fefe1-408">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="fefe1-408">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="fefe1-409">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="fefe1-409">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fefe1-410">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="fefe1-410">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fefe1-411">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="fefe1-411">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="fefe1-412">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="fefe1-412">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="stack.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fefe1-413">Copie <see cref="T:System.Collections.Generic.Stack`1" /> vers un nouveau tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-413">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="fefe1-414">Nouveau tableau contenant les copies des éléments de <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fefe1-414">A new array containing copies of the elements of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-415">Les éléments sont copiés dans le tableau par ordre dernier-in-first-out (LIFO), similaire à celui des éléments retournés par une succession d’appels à <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-415">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="fefe1-416">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-416">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe1-417">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.ToArray%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fefe1-417">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.ToArray%2A> method.</span></span>  
  
 <span data-ttu-id="fefe1-418">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-418">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fefe1-419">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-419">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fefe1-420">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="fefe1-420">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fefe1-421">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="fefe1-421">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fefe1-422">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="fefe1-422">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fefe1-423">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="fefe1-423">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fefe1-424">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="fefe1-424">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fefe1-425">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="fefe1-425">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fefe1-426">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="fefe1-426">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="stack.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fefe1-427">Définit la capacité au nombre réel d'éléments dans <see cref="T:System.Collections.Generic.Stack`1" />, si ce nombre est inférieur à 90 pour cent de la capacité actuelle.</span><span class="sxs-lookup"><span data-stu-id="fefe1-427">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.Stack`1" />, if that number is less than 90 percent of current capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe1-428">Cette méthode peut être utilisée pour réduire une surcharge de mémoire d’une collection si aucun nouvel élément ne doit être ajouté à la collection.</span><span class="sxs-lookup"><span data-stu-id="fefe1-428">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="fefe1-429">Le coût de réallocation et de copie d’un grand <xref:System.Collections.Generic.Stack%601> peut être considérable, toutefois, par conséquent, le <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> méthode ne fait rien si la liste est à plus de 90 pour cent de la capacité.</span><span class="sxs-lookup"><span data-stu-id="fefe1-429">The cost of reallocating and copying a large <xref:System.Collections.Generic.Stack%601> can be considerable, however, so the <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="fefe1-430">Cela évite de devoir engager un coût de réallocation élevé pour un gain relativement faible.</span><span class="sxs-lookup"><span data-stu-id="fefe1-430">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="fefe1-431">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fefe1-431">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="fefe1-432">Pour réinitialiser un <xref:System.Collections.Generic.Stack%601> à son état initial, appelez le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode avant d’appeler <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fefe1-432">To reset a <xref:System.Collections.Generic.Stack%601> to its initial state, call the <xref:System.Collections.Generic.Stack%601.Clear%2A> method before calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="fefe1-433">Suppression vide <xref:System.Collections.Generic.Stack%601> définit la capacité de la <xref:System.Collections.Generic.Stack%601> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="fefe1-433">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Clear" />
        <altmember cref="P:System.Collections.Generic.Stack`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPeek :  -&gt; bool" Usage="stack.TryPeek result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPop">
      <MemberSignature Language="C#" Value="public bool TryPop (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPop([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPop(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPop (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPop([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPop :  -&gt; bool" Usage="stack.TryPop result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>