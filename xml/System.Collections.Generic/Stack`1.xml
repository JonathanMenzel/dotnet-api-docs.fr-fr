<Type Name="Stack&lt;T&gt;" FullName="System.Collections.Generic.Stack&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6796f3dea4c4211a973e7a3817fe09430621c4f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37701781" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Stack&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Stack`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Stack`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Stack(Of T)&#xA;Implements ICollection, IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Stack : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type Stack&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_StackDebugView`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="366c1-101">Spécifie le type d'éléments dans la pile.</span>
      <span class="sxs-lookup">
        <span data-stu-id="366c1-101">Specifies the type of elements in the stack.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="366c1-102">Représente une collection d’instances à taille variable de type dernier entré, premier sorti (LIFO) du même type spécifié.</span>
      <span class="sxs-lookup">
        <span data-stu-id="366c1-102">Represents a variable size last-in-first-out (LIFO) collection of instances of the same specified type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-103"><xref:System.Collections.Generic.Stack%601> est implémenté comme un tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-103"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="366c1-104">Piles et les files d’attente sont utiles lorsque vous avez besoin de stockage temporaire des informations ; Autrement dit, lorsque vous souhaitez ignorer un élément après avoir récupéré sa valeur.</span><span class="sxs-lookup"><span data-stu-id="366c1-104">Stacks and queues are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="366c1-105">Utilisez <xref:System.Collections.Generic.Queue%601> si vous avez besoin accéder aux informations dans le même ordre que celui qu’elles sont stockées dans la collection.</span><span class="sxs-lookup"><span data-stu-id="366c1-105">Use <xref:System.Collections.Generic.Queue%601> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="366c1-106">Utilisez <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> si vous avez besoin accéder aux informations dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="366c1-106">Use <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> if you need to access the information in reverse order.</span></span>  
  
 <span data-ttu-id="366c1-107">Utilisez le <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> et <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> types lorsque vous avez besoin pour accéder à la collection à partir de plusieurs threads simultanément.</span><span class="sxs-lookup"><span data-stu-id="366c1-107">Use the <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> and <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> types when you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="366c1-108">Une utilisation courante pour <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> consiste à conserver des États des variables pendant les appels aux autres procédures.</span><span class="sxs-lookup"><span data-stu-id="366c1-108">A common use for <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> is to preserve variable states during calls to other procedures.</span></span>  
  
 <span data-ttu-id="366c1-109">Trois opérations principales peuvent être effectuées sur un <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> et ses éléments :</span><span class="sxs-lookup"><span data-stu-id="366c1-109">Three main operations can be performed on a <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> and its elements:</span></span>  
  
-   <span data-ttu-id="366c1-110"><xref:System.Collections.Generic.Stack%601.Push%2A> Insère un élément en haut de la <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="366c1-110"><xref:System.Collections.Generic.Stack%601.Push%2A> inserts an element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
-   <span data-ttu-id="366c1-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> Supprime un élément du haut de la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="366c1-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> removes an element from the top of the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
-   <span data-ttu-id="366c1-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> Retourne un élément qui est en haut de la <xref:System.Collections.Generic.Stack%601> mais ne supprime ne pas de la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="366c1-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> returns an element that is at the top of the <xref:System.Collections.Generic.Stack%601> but does not remove it from the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="366c1-113">La capacité d’un <xref:System.Collections.Generic.Stack%601> est le nombre d’éléments du <xref:System.Collections.Generic.Stack%601> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="366c1-113">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="366c1-114">Comme les éléments sont ajoutés à un <xref:System.Collections.Generic.Stack%601>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="366c1-114">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="366c1-115">La capacité peut être diminuée en appelant <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-115">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="366c1-116">Si <xref:System.Collections.Generic.Stack%601.Count%2A> est inférieure à la capacité de la pile, <xref:System.Collections.Generic.Stack%601.Push%2A> est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="366c1-116">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="366c1-117">Si la capacité doit être augmentée pour intégrer le nouvel élément <xref:System.Collections.Generic.Stack%601.Push%2A> devient un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-117">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="366c1-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="366c1-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> is an O(1) operation.</span></span>  
  
 <span data-ttu-id="366c1-119"><xref:System.Collections.Generic.Stack%601> accepte `null` comme une valeur valide pour la référence de types et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="366c1-119"><xref:System.Collections.Generic.Stack%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-120">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="366c1-120">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span> <span data-ttu-id="366c1-121">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-121">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-122">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-122">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-123">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-123">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-124">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-124">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-125">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-125">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-126">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-126">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-127">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-127">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-128">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-128">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-129">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-129">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="366c1-130">Statique public (<see langword="Shared" /> en Visual Basic) de ce type sont thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="366c1-130">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="366c1-131">Il n'est pas garanti que les membres d'instance soient thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="366c1-131">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="366c1-132">Un <see cref="T:System.Collections.Generic.Stack`1" /> peut prendre en charge plusieurs lecteurs simultanément, tant que la collection n’est pas modifiée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="366c1-132">A <see cref="T:System.Collections.Generic.Stack`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="366c1-133">Même dans ce cas, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="366c1-133">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="366c1-134">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span>
      <span class="sxs-lookup">
        <span data-stu-id="366c1-134">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="366c1-135">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="366c1-135">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="366c1-136">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-136">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="366c1-137">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.Stack`1" /> qui est vide et possède la capacité initiale par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-137">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-138">La capacité d’un <xref:System.Collections.Generic.Stack%601> est le nombre d’éléments qui le <xref:System.Collections.Generic.Stack%601> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="366c1-138">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="366c1-139">Comme les éléments sont ajoutés à un <xref:System.Collections.Generic.Stack%601>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="366c1-139">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="366c1-140">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="366c1-140">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="366c1-141">La capacité peut être diminuée en appelant <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-141">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="366c1-142">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="366c1-142">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-143">L’exemple de code suivant illustre ce constructeur et plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="366c1-143">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="366c1-144">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-144">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-145">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-145">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-146">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-146">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-147">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-147">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-148">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-148">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-149">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-149">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-150">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-150">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-151">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-151">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-152">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-152">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="366c1-153">Collection à partir de laquelle copier les éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-153">The collection to copy elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="366c1-154">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.Stack`1" /> qui contient des éléments copiés à partir de la collection spécifiée et qui possède une capacité suffisante pour accepter le nombre d'éléments copiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-154">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-155">La capacité d’un <xref:System.Collections.Generic.Stack%601> est le nombre d’éléments qui le <xref:System.Collections.Generic.Stack%601> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="366c1-155">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="366c1-156">Comme les éléments sont ajoutés à un <xref:System.Collections.Generic.Stack%601>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="366c1-156">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="366c1-157">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="366c1-157">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="366c1-158">La capacité peut être diminuée en appelant <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-158">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="366c1-159">Les éléments sont copiés dans le <xref:System.Collections.Generic.Stack%601> dans le même ordre qu’ils sont lus par le <xref:System.Collections.Generic.IEnumerator%601> de la collection.</span><span class="sxs-lookup"><span data-stu-id="366c1-159">The elements are copied onto the <xref:System.Collections.Generic.Stack%601> in the same order they are read by the <xref:System.Collections.Generic.IEnumerator%601> of the collection.</span></span>  
  
 <span data-ttu-id="366c1-160">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans `collection`.</span><span class="sxs-lookup"><span data-stu-id="366c1-160">This constructor is an O(`n`) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-161">L’exemple de code suivant illustre ce constructeur et plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="366c1-161">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="366c1-162">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-162">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-163">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-163">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-164">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-164">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-165">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-165">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-166">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-166">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-167">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-167">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-168">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-168">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-169">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-169">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-170">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-170">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="366c1-171">
            <paramref name="collection" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-171">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.ICollection`1" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : int -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="366c1-172">Nombre initial d'éléments que <see cref="T:System.Collections.Generic.Stack`1" /> peut contenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-172">The initial number of elements that the <see cref="T:System.Collections.Generic.Stack`1" /> can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="366c1-173">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Generic.Stack`1" /> qui est vide et possède une capacité égale à la plus grande valeur parmi la capacité initiale spécifiée et la capacité initiale par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-173">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-174">La capacité d’un <xref:System.Collections.Generic.Stack%601> est le nombre d’éléments qui le <xref:System.Collections.Generic.Stack%601> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="366c1-174">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="366c1-175">Comme les éléments sont ajoutés à un <xref:System.Collections.Generic.Stack%601>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="366c1-175">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="366c1-176">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="366c1-176">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="366c1-177">La capacité peut être diminuée en appelant <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-177">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="366c1-178">Ce constructeur est un O (`n`) opération, où `n` est `capacity`.</span><span class="sxs-lookup"><span data-stu-id="366c1-178">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="366c1-179">
            <paramref name="capacity" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-179">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="stack.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="366c1-180">Supprime tous les objets du <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-180">Removes all objects from the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-181"><xref:System.Collections.Generic.Stack%601.Count%2A> est défini sur zéro et les références à d’autres objets à partir des éléments de la collection sont également libérées.</span><span class="sxs-lookup"><span data-stu-id="366c1-181"><xref:System.Collections.Generic.Stack%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="366c1-182">La capacité reste inchangée.</span><span class="sxs-lookup"><span data-stu-id="366c1-182">The capacity remains unchanged.</span></span> <span data-ttu-id="366c1-183">Pour rétablir la capacité de la <xref:System.Collections.Generic.Stack%601>, appelez <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-183">To reset the capacity of the <xref:System.Collections.Generic.Stack%601>, call <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span> <span data-ttu-id="366c1-184">Suppression vide <xref:System.Collections.Generic.Stack%601> définit la capacité de la <xref:System.Collections.Generic.Stack%601> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="366c1-184">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="366c1-185">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-185">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-186">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Clear%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="366c1-186">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="366c1-187">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-187">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-188">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-188">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-189">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-189">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-190">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-190">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-191">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-191">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-192">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-192">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-193">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-193">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-194">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-194">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-195">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-195">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="member this.Contains : 'T -&gt; bool" Usage="stack.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="366c1-196">Objet à rechercher dans <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-196">The object to locate in the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
          <span data-ttu-id="366c1-197">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-197">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="366c1-198">Détermine si le <see cref="T:System.Collections.Generic.Stack`1" /> contient un élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-198">Determines whether an element is in the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="366c1-199">
            <see langword="true" /> si <paramref name="item" /> existe dans <see cref="T:System.Collections.Generic.Stack`1" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-199">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.Stack`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-200">Cette méthode détermine l’égalité à l’aide du comparateur d’égalité par défaut <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> pour `T`, le type des valeurs dans la liste.</span><span class="sxs-lookup"><span data-stu-id="366c1-200">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="366c1-201">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-201">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-202">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Contains%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="366c1-202">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="366c1-203">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-203">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-204">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-204">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-205">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-205">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-206">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-206">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-207">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-207">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-208">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-208">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-209">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-209">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-210">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-210">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-211">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-211">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="stack.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="366c1-212">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-212">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
          <span data-ttu-id="366c1-213">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-213">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="366c1-214">Index de base zéro dans un <c>tableau</c> auquel commencer la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-214">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="366c1-215">Copie <see cref="T:System.Collections.Generic.Stack`1" /> dans un <see cref="T:System.Array" /> unidimensionnel existant commençant à l'index de tableau spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-215">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-216">Les éléments sont copiés dans le tableau par ordre dernier-in-first-out (LIFO), similaire à celui des éléments retournés par une succession d’appels à <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-216">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="366c1-217">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-217">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-218">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="366c1-218">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method.</span></span>  
  
 <span data-ttu-id="366c1-219">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-219">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-220">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-220">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-221">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-221">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-222">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-222">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-223">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-223">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-224">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-224">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-225">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-225">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-226">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-226">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-227">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-227">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="366c1-228">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-228">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="366c1-229">
            <paramref name="arrayIndex" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-229">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="366c1-230">Le nombre d’éléments dans le <see cref="T:System.Collections.Generic.Stack`1" /> source est supérieur à la quantité d’espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-230">The number of elements in the source <see cref="T:System.Collections.Generic.Stack`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.ToArray" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.Stack&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="366c1-231">Obtient le nombre d'éléments contenus dans le <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-231">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="366c1-232">Nombre d'éléments contenus dans <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-232">The number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-233">La capacité de la <xref:System.Collections.Generic.Stack%601> est le nombre d’éléments qui le <xref:System.Collections.Generic.Stack%601> peut stocker.</span><span class="sxs-lookup"><span data-stu-id="366c1-233">The capacity of the <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can store.</span></span> <span data-ttu-id="366c1-234"><xref:System.Collections.Generic.Stack%601.Count%2A> est le nombre d’éléments réellement contenus dans le <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="366c1-234"><xref:System.Collections.Generic.Stack%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="366c1-235">La capacité est toujours supérieure ou égale à <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-235">The capacity is always greater than or equal to <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="366c1-236">Si <xref:System.Collections.Generic.Stack%601.Count%2A> dépasse la capacité lors de l’ajout d’éléments, la capacité est augmentée en réallouant automatiquement le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</span><span class="sxs-lookup"><span data-stu-id="366c1-236">If <xref:System.Collections.Generic.Stack%601.Count%2A> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="366c1-237">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="366c1-237">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-238">L’exemple de code suivant montre plusieurs propriétés et méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="366c1-238">The following code example demonstrates several properties and methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Count%2A> property.</span></span>  
  
 <span data-ttu-id="366c1-239">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-239">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-240">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-240">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-241">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-241">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-242">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-242">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-243">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-243">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-244">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-244">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-245">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-245">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-246">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-246">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-247">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-247">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Stack&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.Stack`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As Stack(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::Stack&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.Stack&lt;'T&gt;.Enumerator" Usage="stack.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Stack&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="366c1-248">Retourne un énumérateur pour <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-248">Returns an enumerator for the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="366c1-249">
            <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> pour <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-249">An <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-250">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="366c1-250">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="366c1-251">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="366c1-251">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="366c1-252">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="366c1-252">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="366c1-253">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="366c1-253">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="366c1-254">À cette position, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="366c1-254">At this position, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="366c1-255">Par conséquent, vous devez appeler <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-255">Therefore, you must call <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="366c1-256"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> retourne le même objet jusqu'à ce que <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> soit appelé.</span><span class="sxs-lookup"><span data-stu-id="366c1-256"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="366c1-257"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-257"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="366c1-258">Si <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="366c1-258">If <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="366c1-259">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="366c1-259">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="366c1-260">Si le dernier appel à <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="366c1-260">If the last call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="366c1-261">Vous ne pouvez pas attribuer de nouveau <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> au premier élément de la collection ; vous devez créer une nouvelle instance de l'énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="366c1-261">You cannot set <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="366c1-262">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="366c1-262">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="366c1-263">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="366c1-263">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="366c1-264">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="366c1-264">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="366c1-265">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="366c1-265">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="366c1-266">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="366c1-266">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="366c1-267">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="366c1-267">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="366c1-268">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="366c1-268">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-269">L’exemple de code suivant montre que la <xref:System.Collections.Generic.Stack%601> classe générique est énumérable.</span><span class="sxs-lookup"><span data-stu-id="366c1-269">The following code example demonstrates that the <xref:System.Collections.Generic.Stack%601> generic class is enumerable.</span></span> <span data-ttu-id="366c1-270">Le `foreach` instruction (`For Each` en Visual Basic, `for each` en C++) est utilisé pour énumérer la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="366c1-270">The `foreach` statement (`For Each` in Visual Basic, `for each` in C++) is used to enumerate the queue.</span></span>  
  
 <span data-ttu-id="366c1-271">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-271">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-272">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-272">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-273">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-273">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-274">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-274">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-275">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-275">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-276">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-276">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-277">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-277">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-278">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-278">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-279">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-279">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Stack`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; 'T" Usage="stack.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="366c1-280">Retourne l'objet situé en haut de <see cref="T:System.Collections.Generic.Stack`1" /> sans le supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-280">Returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="366c1-281">Objet situé en haut de <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-281">The object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-282">Cette méthode est analogue à la méthode <xref:System.Collections.Generic.Stack%601.Pop%2A>, mais <xref:System.Collections.Generic.Stack%601.Peek%2A> ne modifie pas la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="366c1-282">This method is similar to the <xref:System.Collections.Generic.Stack%601.Pop%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="366c1-283">Si type `T` est un type référence, `null` peut être placé le <xref:System.Collections.Generic.Stack%601> comme espace réservé, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="366c1-283">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="366c1-284">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="366c1-284">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-285">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Peek%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="366c1-285">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="366c1-286">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-286">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-287">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-287">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-288">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-288">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-289">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-289">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-290">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-290">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-291">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-291">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-292">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-292">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-293">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-293">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-294">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-294">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="366c1-295">La <see cref="T:System.Collections.Generic.Stack`1" /> est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-295">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public T Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; 'T" Usage="stack.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="366c1-296">Supprime et retourne l'objet en haut de <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-296">Removes and returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="366c1-297">Objet supprimé du haut de <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-297">The object removed from the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-298">Cette méthode est analogue à la méthode <xref:System.Collections.Generic.Stack%601.Peek%2A>, mais <xref:System.Collections.Generic.Stack%601.Peek%2A> ne modifie pas la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="366c1-298">This method is similar to the <xref:System.Collections.Generic.Stack%601.Peek%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="366c1-299">Si type `T` est un type référence, `null` peut être placé le <xref:System.Collections.Generic.Stack%601> comme espace réservé, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="366c1-299">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="366c1-300"><xref:System.Collections.Generic.Stack%601> est implémenté comme un tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-300"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span> <span data-ttu-id="366c1-301">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="366c1-301">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-302">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Pop%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="366c1-302">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Pop%2A> method.</span></span>  
  
 <span data-ttu-id="366c1-303">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-303">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-304">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-304">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-305">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-305">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-306">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-306">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-307">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-307">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-308">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-308">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-309">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-309">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-310">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-310">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-311">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-311">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="366c1-312">La <see cref="T:System.Collections.Generic.Stack`1" /> est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-312">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(T item);" />
      <MemberSignature Language="F#" Value="member this.Push : 'T -&gt; unit" Usage="stack.Push item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="366c1-313">Objet à placer dans <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-313">The object to push onto the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
          <span data-ttu-id="366c1-314">La valeur peut être <see langword="null" /> pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-314">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="366c1-315">Insère un objet en haut de <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-315">Inserts an object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-316"><xref:System.Collections.Generic.Stack%601> est implémenté comme un tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-316"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="366c1-317">Si <xref:System.Collections.Generic.Stack%601.Count%2A> est déjà égale à la capacité, la capacité de la <xref:System.Collections.Generic.Stack%601> est augmentée en réallouant automatiquement le tableau interne, et les éléments existants sont copiés vers le nouveau tableau avant le nouvel élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="366c1-317">If <xref:System.Collections.Generic.Stack%601.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Generic.Stack%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="366c1-318">Si type `T` est un type référence, `null` peut être placé le <xref:System.Collections.Generic.Stack%601> comme espace réservé, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="366c1-318">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span> <span data-ttu-id="366c1-319">Il occupe une position de la pile et est traité comme n’importe quel objet.</span><span class="sxs-lookup"><span data-stu-id="366c1-319">It occupies a slot in the stack and is treated like any object.</span></span>  
  
 <span data-ttu-id="366c1-320">Si <xref:System.Collections.Generic.Stack%601.Count%2A> est inférieure à la capacité de la pile, <xref:System.Collections.Generic.Stack%601.Push%2A> est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="366c1-320">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="366c1-321">Si la capacité doit être augmentée pour intégrer le nouvel élément <xref:System.Collections.Generic.Stack%601.Push%2A> devient un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-321">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-322">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.Push%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="366c1-322">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Push%2A> method.</span></span>  
  
 <span data-ttu-id="366c1-323">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-323">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-324">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-324">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-325">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-325">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-326">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-326">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-327">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-327">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-328">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-328">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-329">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-329">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-330">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-330">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-331">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-331">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="366c1-332">Retourne un énumérateur qui itère au sein de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-332">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="366c1-333">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> qui peut être utilisé pour itérer au sein de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-333">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-334">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="366c1-334">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="366c1-335">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="366c1-335">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="366c1-336">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="366c1-336">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="366c1-337">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="366c1-337">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="366c1-338">À cette position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="366c1-338">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="366c1-339">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-339">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="366c1-340"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> retourne le même objet jusqu'à ce que <xref:System.Collections.IEnumerator.MoveNext%2A> soit appelé.</span><span class="sxs-lookup"><span data-stu-id="366c1-340"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="366c1-341"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-341"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="366c1-342">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="366c1-342">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="366c1-343">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="366c1-343">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="366c1-344">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="366c1-344">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="366c1-345">Vous ne pouvez pas attribuer de nouveau <xref:System.Collections.Generic.IEnumerator%601.Current%2A> au premier élément de la collection ; vous devez créer une nouvelle instance de l'énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="366c1-345">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="366c1-346">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="366c1-346">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="366c1-347">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="366c1-347">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="366c1-348">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="366c1-348">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="366c1-349">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="366c1-349">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="366c1-350">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="366c1-350">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="366c1-351">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="366c1-351">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="366c1-352">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="366c1-352">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="366c1-353">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-353">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="366c1-354">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-354">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="366c1-355">Index de base zéro dans un <c>tableau</c> auquel commencer la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-355">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="366c1-356">Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, à partir d'un index particulier de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-356">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="366c1-357">Si le type de la source <xref:System.Collections.ICollection> ne peut pas être casté automatiquement au type de la destination `array`, les implémentations non génériques de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> lever <xref:System.InvalidCastException>, tandis que les implémentations génériques lèvent <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="366c1-357">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="366c1-358">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-358">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="366c1-359">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-359">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="366c1-360">
            <paramref name="arrayIndex" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-360">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="366c1-361">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-361">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="366c1-362">-ou- <paramref name="array" /> n’a pas d’indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-362">-or-  <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="366c1-363">-ou- Le nombre d’éléments du <see cref="T:System.Collections.ICollection" /> source est supérieur à la quantité d’espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-363">-or-  The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="366c1-364">-ou- Le type du <see cref="T:System.Collections.ICollection" /> source ne peut pas être casté automatiquement en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-364">-or-  The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.Stack&lt;'T&gt;.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="366c1-365">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-365">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="366c1-366">
            <see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-366">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="366c1-367">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.Stack`1" />, cette propriété retourne toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-367">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-368">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="366c1-368">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="366c1-369">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="366c1-369">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="366c1-370">Dans les rares cas où des énumérations traitent des accès en écriture, vous devez verrouiller la collection pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="366c1-370">In the rare case where enumerations contend with write accesses, you must lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="366c1-371">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="366c1-371">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="366c1-372"><xref:System.Collections.ICollection.SyncRoot%2A> Retourne un objet qui peut être utilisé pour synchroniser l’accès à la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="366c1-372"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="366c1-373">La synchronisation est effective uniquement si tous les threads de verrouillent de cet objet avant d’accéder à la collection.</span><span class="sxs-lookup"><span data-stu-id="366c1-373">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="366c1-374">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="366c1-374">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.Stack&lt;'T&gt;.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="366c1-375">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-375">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="366c1-376">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-376">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="366c1-377">Dans l'implémentation par défaut de <see cref="T:System.Collections.Generic.Stack`1" />, cette propriété retourne toujours l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-377">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-378">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="366c1-378">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="366c1-379">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="366c1-379">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="366c1-380">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="366c1-380">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="366c1-381">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="366c1-381">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="366c1-382"><xref:System.Collections.ICollection.SyncRoot%2A> Retourne un objet qui peut être utilisé pour synchroniser l’accès à la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="366c1-382"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="366c1-383">La synchronisation est effective uniquement si tous les threads de verrouillent de cet objet avant d’accéder à la collection.</span><span class="sxs-lookup"><span data-stu-id="366c1-383">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="366c1-384">Le code suivant illustre l’utilisation de la <xref:System.Collections.ICollection.SyncRoot%2A> propriété pour c#, C++ et Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="366c1-384">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="366c1-385">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="366c1-385">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="366c1-386">Retourne un énumérateur qui itère au sein d'une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-386">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="366c1-387">
            <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-387">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-388">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="366c1-388">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="366c1-389">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="366c1-389">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="366c1-390">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="366c1-390">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="366c1-391">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="366c1-391">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="366c1-392"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="366c1-392"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="366c1-393">À cette position, <xref:System.Collections.IEnumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="366c1-393">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="366c1-394">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-394">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="366c1-395"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="366c1-395"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="366c1-396"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-396"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="366c1-397">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="366c1-397">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="366c1-398">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="366c1-398">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="366c1-399">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.IEnumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="366c1-399">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="366c1-400">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-400">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="366c1-401">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="366c1-401">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="366c1-402">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="366c1-402">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="366c1-403">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="366c1-403">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="366c1-404">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="366c1-404">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="366c1-405">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="366c1-405">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="366c1-406">Implémentations par défaut de collections dans <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="366c1-406">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="366c1-407">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="366c1-407">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="stack.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="366c1-408">Copie <see cref="T:System.Collections.Generic.Stack`1" /> vers un nouveau tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-408">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="366c1-409">Nouveau tableau contenant les copies des éléments de <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-409">A new array containing copies of the elements of the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-410">Les éléments sont copiés dans le tableau par ordre dernier-in-first-out (LIFO), similaire à celui des éléments retournés par une succession d’appels à <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-410">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="366c1-411">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-411">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="366c1-412">L’exemple de code suivant illustre plusieurs méthodes de la <xref:System.Collections.Generic.Stack%601> classe générique, y compris le <xref:System.Collections.Generic.Stack%601.ToArray%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="366c1-412">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.ToArray%2A> method.</span></span>  
  
 <span data-ttu-id="366c1-413">L’exemple de code crée une pile de chaînes avec une capacité par défaut et utilise le <xref:System.Collections.Generic.Stack%601.Push%2A> méthode pour insérer cinq chaînes dans la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-413">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="366c1-414">Les éléments de la pile sont énumérés, ce qui ne modifie pas l’état de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-414">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="366c1-415">Le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode est utilisée pour afficher la première chaîne de la pile.</span><span class="sxs-lookup"><span data-stu-id="366c1-415">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="366c1-416">Le <xref:System.Collections.Generic.Stack%601.Peek%2A> méthode est utilisée pour rechercher l’élément suivant sur la pile, puis le <xref:System.Collections.Generic.Stack%601.Pop%2A> méthode sert à dépiler.</span><span class="sxs-lookup"><span data-stu-id="366c1-416">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="366c1-417">Le <xref:System.Collections.Generic.Stack%601.ToArray%2A> méthode est utilisée pour créer un tableau et de copier les éléments de la pile, puis le tableau est passé à la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur qui accepte <xref:System.Collections.Generic.IEnumerable%601>, création d’une copie de la pile avec l’ordre des éléments inversé.</span><span class="sxs-lookup"><span data-stu-id="366c1-417">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="366c1-418">Les éléments de la copie sont affichés.</span><span class="sxs-lookup"><span data-stu-id="366c1-418">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="366c1-419">Un tableau à deux reprises la taille de la pile est créée et le <xref:System.Collections.Generic.Stack%601.CopyTo%2A> méthode est utilisée pour copier les éléments du tableau commençant au milieu du tableau.</span><span class="sxs-lookup"><span data-stu-id="366c1-419">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="366c1-420">Le <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructeur est utilisé à nouveau pour créer une copie de la pile avec l’ordre des éléments est inversé ; par conséquent, les trois éléments null sont à la fin.</span><span class="sxs-lookup"><span data-stu-id="366c1-420">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="366c1-421">Le <xref:System.Collections.Generic.Stack%601.Contains%2A> méthode est utilisée pour indiquer que la chaîne « 4 » dans la première copie de la pile, après quoi le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode efface la copie et le <xref:System.Collections.Generic.Stack%601.Count%2A> propriété montre que la pile est vide.</span><span class="sxs-lookup"><span data-stu-id="366c1-421">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="stack.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="366c1-422">Définit la capacité au nombre réel d'éléments dans <see cref="T:System.Collections.Generic.Stack`1" />, si ce nombre est inférieur à 90 pour cent de la capacité actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="366c1-422">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.Stack`1" />, if that number is less than 90 percent of current capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="366c1-423">Cette méthode peut être utilisée pour réduire une surcharge de mémoire d’une collection si aucun nouvel élément ne doit être ajouté à la collection.</span><span class="sxs-lookup"><span data-stu-id="366c1-423">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="366c1-424">Le coût de réallocation et de copie d’un grand <xref:System.Collections.Generic.Stack%601> peut être considérable, toutefois, par conséquent, le <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> méthode ne fait rien si la liste est à plus de 90 pour cent de la capacité.</span><span class="sxs-lookup"><span data-stu-id="366c1-424">The cost of reallocating and copying a large <xref:System.Collections.Generic.Stack%601> can be considerable, however, so the <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="366c1-425">Cela évite de devoir engager un coût de réallocation élevé pour un gain relativement faible.</span><span class="sxs-lookup"><span data-stu-id="366c1-425">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="366c1-426">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="366c1-426">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="366c1-427">Pour réinitialiser un <xref:System.Collections.Generic.Stack%601> à son état initial, appelez le <xref:System.Collections.Generic.Stack%601.Clear%2A> méthode avant d’appeler <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="366c1-427">To reset a <xref:System.Collections.Generic.Stack%601> to its initial state, call the <xref:System.Collections.Generic.Stack%601.Clear%2A> method before calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="366c1-428">Suppression vide <xref:System.Collections.Generic.Stack%601> définit la capacité de la <xref:System.Collections.Generic.Stack%601> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="366c1-428">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Clear" />
        <altmember cref="P:System.Collections.Generic.Stack`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPeek :  -&gt; bool" Usage="stack.TryPeek result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPop">
      <MemberSignature Language="C#" Value="public bool TryPop (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPop([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPop(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPop (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPop([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPop :  -&gt; bool" Usage="stack.TryPop result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>