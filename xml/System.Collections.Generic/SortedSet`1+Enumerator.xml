<Type Name="SortedSet&lt;T&gt;+Enumerator" FullName="System.Collections.Generic.SortedSet&lt;T&gt;+Enumerator">
  <TypeSignature Language="C#" Value="public struct SortedSet&lt;T&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;T&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit SortedSet`1/Enumerator&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!T&gt;, class System.Collections.IEnumerator, class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedSet`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure SortedSet(Of T).Enumerator&#xA;Implements IDeserializationCallback, IEnumerator(Of T), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: value class SortedSet&lt;T&gt;::Enumerator : System::Collections::Generic::IEnumerator&lt;T&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="fd8e4-101">Énumère les éléments d’un objet <see cref="T:System.Collections.Generic.SortedSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-101">Enumerates the elements of a <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8e4-102">Le `foreach` instruction du langage c# (`for each` en C++, `For Each` en Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-102">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="fd8e4-103">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-103">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="fd8e4-104">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="fd8e4-105">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="fd8e4-106">À cette position, la <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> propriété n’est pas définie.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-106">At this position, the <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="fd8e4-107">Par conséquent, vous devez appeler la <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> méthode pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-107">Therefore, you must call the <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="fd8e4-108"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> retourne le même objet jusqu'à ce que <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> soit appelé.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-108"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="fd8e4-109"><xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-109"><xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="fd8e4-110">Si <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-110">If <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fd8e4-111">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-111">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="fd8e4-112">Si le dernier appel à <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-112">If the last call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fd8e4-113">Vous ne pouvez pas définir <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> vers le premier élément de la collection ; vous devez créer un nouvel objet énumérateur à la place.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-113">You cannot set <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator object instead.</span></span>  
  
 <span data-ttu-id="fd8e4-114">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-114">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fd8e4-115">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-115">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="fd8e4-116">Si la collection est modifiée entre l’appel <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> (méthode) et l’obtention de la valeur de la <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> propriété <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> retourne l’élément auquel il est attribué, même si l’énumérateur est déjà invalidé.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-116">If the collection is modified between calling <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property, <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>   
  
 <span data-ttu-id="fd8e4-117">L’énumérateur ne dispose d’un accès exclusif à la collection. Par conséquent, l’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-117">The enumerator doesn't have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="fd8e4-118">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-118">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fd8e4-119">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-119">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fd8e4-120">Les implémentations par défaut de collections dans l'espace de noms <xref:System.Collections.Generic?displayProperty=nameWithType> ne sont pas synchronisées.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-120">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Current { T get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd8e4-121">Obtient l'élément situé à la position actuelle de l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-121">Gets the element at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="fd8e4-122">Élément dans la collection à la position actuelle de l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-122">The element in the collection at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="fd8e4-123"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> Retourne la valeur par défaut de type `T` si l’une des conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="fd8e4-123"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> returns the default value of type `T` under any of the following conditions:</span></span>  
  
- <span data-ttu-id="fd8e4-124">L’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-124">The enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="fd8e4-125">Cela se produit après la création d’un énumérateur ou après le <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-125">That happens after an enumerator is created or after the <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> method is called.</span></span> <span data-ttu-id="fd8e4-126">Le <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> méthode doit être appelée pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de la <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-126">The <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property.</span></span>  
  
- <span data-ttu-id="fd8e4-127">Le dernier appel à <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> retourné `false`, qui indique la fin de la collection et que l’énumérateur est positionné après le dernier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-127">The last call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</span></span>

> [!NOTE]
>  <span data-ttu-id="fd8e4-128">Que le comportement est différent pour l’éléments non générique <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-128">That behaviour is different for the non-generic <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> property.</span></span> <span data-ttu-id="fd8e4-129">Non générique <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> propriété lève une <xref:System.InvalidOperationException> si l’énumérateur est positionné avant le premier élément ou après le dernier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-129">The non-generic <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> property throws an <xref:System.InvalidOperationException> if the enumerator is positioned before the first element of the collection or after the last element.</span></span>
 
 <span data-ttu-id="fd8e4-130"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> ne déplace pas la position de l’énumérateur et les appels successifs à <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> retournent le même objet jusqu'à ce que <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-130"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> return the same object until either <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="fd8e4-131">Si la collection est modifiée entre l’appel <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> (méthode) et l’obtention de la valeur de la <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> propriété <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> retourne l’élément auquel il est attribué, même si l’énumérateur est invalidé.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-131">If the collection is modified between calling <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property, <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> returns the element that it is set to, even though the enumerator is invalidated.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd8e4-132">Libère toutes les ressources utilisées par <see cref="T:System.Collections.Generic.SortedSet`1.Enumerator" />.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-132">Releases all resources used by the <see cref="T:System.Collections.Generic.SortedSet`1.Enumerator" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd8e4-133">Avance l’énumérateur à l’élément suivant de la collection <see cref="T:System.Collections.Generic.SortedSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-133">Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.SortedSet`1" /> collection.</span></span></summary>
        <returns>
          <span data-ttu-id="fd8e4-134"><see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-134"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8e4-135">Après la création d’un énumérateur, l’énumérateur est positionné avant le premier élément dans la collection et le premier appel à la <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> méthode avance l’énumérateur au premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-135">After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to the <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method advances the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="fd8e4-136">Si <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-136">If <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fd8e4-137">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-137">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> also return `false`.</span></span>  
  
 <span data-ttu-id="fd8e4-138">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-138">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fd8e4-139">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-139">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="fd8e4-140">Si la collection est modifiée entre l’appel <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> (méthode) et l’obtention de la valeur de la <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> propriété <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> retourne l’élément auquel il est attribué, même si l’énumérateur est invalidé.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-140">If the collection is modified between calling <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property, <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> returns the element that it is set to, even though the enumerator is invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd8e4-141">La collection a été modifiée après la création de l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-141">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd8e4-142">Obtient l'élément situé à la position actuelle de l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-142">Gets the element at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="fd8e4-143">Élément dans la collection à la position actuelle de l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-143">The element in the collection at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
 <span data-ttu-id="fd8e4-144"><xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> lève une <xref:System.InvalidOperationException> si l’une des conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="fd8e4-144"><xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> throws an <xref:System.InvalidOperationException> under any of the following conditions:</span></span>  
  
- <span data-ttu-id="fd8e4-145">L’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-145">The enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="fd8e4-146">Cela se produit après la création d’un énumérateur ou après le <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-146">That happens after an enumerator is created or after the <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> method is called.</span></span> <span data-ttu-id="fd8e4-147">Le <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> méthode doit être appelée pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de la <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-147">The <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> property.</span></span>  
  
- <span data-ttu-id="fd8e4-148">Le dernier appel à <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> retourné `false`, qui indique la fin de la collection et que l’énumérateur est positionné après le dernier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-148">The last call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</span></span>

> [!NOTE]
>  <span data-ttu-id="fd8e4-149">Que le comportement est différent pour le type générique <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-149">That behaviour is different for the generic <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property.</span></span> <span data-ttu-id="fd8e4-150">Le type générique <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> propriété retourne la valeur par défaut de type `T` si l’énumérateur est positionné avant le premier élément ou après le dernier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-150">The generic <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property returns the default value of type `T` if the enumerator is positioned before the first element of the collection or after the last element.</span></span>
 
 <span data-ttu-id="fd8e4-151"><xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> ne déplace pas la position de l’énumérateur et les appels successifs à <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> retournent le même objet jusqu'à ce que <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-151"><xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> return the same object until either <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="fd8e4-152">Si la collection est modifiée entre l’appel <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> (méthode) et l’obtention de la valeur de la <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> propriété <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> retourne l’élément auquel il est attribué, même si l’énumérateur est invalidé.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-152">If the collection is modified between calling <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> property, <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> returns the element that it is set to, even though the enumerator is invalidated.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd8e4-153">L'énumérateur est placé avant le premier élément de la collection ou après le dernier élément.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-153">The enumerator is positioned before the first element of the collection or after the last element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd8e4-154">Rétablit l’énumérateur à sa position initiale, qui précède le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-154">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd8e4-155">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-155">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fd8e4-156">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-156">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd8e4-157">La collection a été modifiée après la création de l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-157">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="fd8e4-158">Source de l’événement de désérialisation.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-158">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="fd8e4-159">Implémente l'interface <see cref="T:System.Runtime.Serialization.ISerializable" /> et déclenche l'événement de désérialisation une fois la désérialisation terminée.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-159">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="fd8e4-160">L’objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associé à l’instance de <see cref="T:System.Collections.Generic.SortedSet`1" /> actuelle n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-160">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.SortedSet`1" /> instance is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="fd8e4-161">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations nécessaires pour sérialiser l'instance <see cref="T:System.Collections.Generic.SortedSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-161">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="fd8e4-162">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé associé à l'instance du <see cref="T:System.Collections.Generic.SortedSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-162">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span></span></param>
        <summary><span data-ttu-id="fd8e4-163">Implémente l'interface <see cref="T:System.Runtime.Serialization.ISerializable" /> et retourne les données nécessaires pour sérialiser l'instance <see cref="T:System.Collections.Generic.SortedSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-163">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fd8e4-164"><paramref name="info" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd8e4-164"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>