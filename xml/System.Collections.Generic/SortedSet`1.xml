<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortedSet`1.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456895e13130761693f32825fca00f9c17c6eb6fcdf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">895e13130761693f32825fca00f9c17c6eb6fcdf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>The type of elements in the set.</source>
          <target state="translated">Type d'éléments de l'ensemble.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Represents a collection of objects that is maintained in sorted order.</source>
          <target state="translated">Représente une collection d’objets tenue à jour en ordre trié.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object maintains a sorted order without affecting performance as elements are inserted and deleted.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objet conserve un ordre de tri sans affecter les performances que les éléments sont insérés et supprimés.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Duplicate elements are not allowed.</source>
          <target state="translated">Éléments en double ne sont pas autorisés.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Changing the sort values of existing items is not supported and may lead to unexpected behavior.</source>
          <target state="translated">Modification des valeurs de tri des éléments existants n’est pas prise en charge et peut entraîner un comportement inattendu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>For a thread safe alternative to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, see <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601&gt;</ph></source>
          <target state="translated">Pour une alternative de thread-safe à <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, consultez <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601&gt;</ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>The following example demonstrates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class that is created with the constructor that takes an <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> as a parameter.</source>
          <target state="translated">L’exemple suivant montre un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe qui est créé avec le constructeur qui prend un <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> en tant que paramètre.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This comparer (<ph id="ph1">`ByFileExtension`</ph>) is used to sort a list of file names by their extensions.</source>
          <target state="translated">Ce comparateur (<ph id="ph1">`ByFileExtension`</ph>) est utilisé pour trier une liste de noms de fichiers par leurs extensions.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This example demonstrates how to create a sorted set of media file names, remove unwanted elements, view a range of elements, and compare the set with another sorted set.</source>
          <target state="translated">Cet exemple montre comment créer un jeu trié de support des noms de fichier, supprimer les éléments indésirables, afficher une plage d’éléments et comparer le jeu à un autre jeu trié.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ce constructeur est une opération o (1).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The default comparer to use for comparing objects.</source>
          <target state="translated">Comparateur par défaut à utiliser pour la comparaison d'objets.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that uses a specified comparer.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> qui utilise un comparateur spécifié.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> does not implement <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph>, you must specify an <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> object to be used.</source>
          <target state="translated">Si <ph id="ph1">`comparer`</ph> n’implémente pas <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph>, vous devez spécifier un <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> objet à utiliser.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The following example defines a comparer (<ph id="ph1">`ByFileExtension`</ph>) that is used to construct a sorted set that sorts file names by their extensions.</source>
          <target state="translated">L’exemple suivant définit un comparateur (<ph id="ph1">`ByFileExtension`</ph>) qui est utilisé pour construire un jeu trié qui trie les noms de fichiers par leurs extensions.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The enumerable collection to be copied.</source>
          <target state="translated">Collection énumérable à copier.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that contains elements copied from a specified enumerable collection.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> qui contient des éléments copiés d'une collection énumérable spécifiée.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Duplicate elements in the enumerable collection are not copied into the new instance of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class, and no exceptions are thrown.</source>
          <target state="translated">Dans la collection dénombrable des éléments en double ne sont pas copiés dans la nouvelle instance de la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe et aucune exception n’est levée.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is the number of elements in the <ph id="ph4">`collection`</ph> parameter.</source>
          <target state="translated">Ce constructeur est un O (<ph id="ph1">`n`</ph> journal <ph id="ph2">`n`</ph>) opération, où <ph id="ph3">`n`</ph> est le nombre d’éléments dans le <ph id="ph4">`collection`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source>The enumerable collection to be copied.</source>
          <target state="translated">Collection énumérable à copier.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source>The default comparer to use for comparing objects.</source>
          <target state="translated">Comparateur par défaut à utiliser pour la comparaison d'objets.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that contains elements copied from a specified enumerable collection and that uses a specified comparer.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> qui contient des éléments copiés d'une collection énumérable spécifiée et qui utilise un comparateur spécifié.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that contains the information that is required to serialize the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Objet qui contient les informations nécessaires pour sérialiser l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The structure that contains the source and destination of the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Structure qui contient la source et la destination du flux sérialisé associé à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that contains serialized data.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> qui contient des données sérialisées.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute an object that is transmitted over a stream.</source>
          <target state="translated">Ce constructeur est appelé pendant la désérialisation pour reconstituer l’objet qui est transmis sur un flux.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>The element to add to the set.</source>
          <target state="translated">Élément à ajouter à l'ensemble.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>Adds an element to the set and returns a value that indicates if it was successfully added.</source>
          <target state="translated">Ajoute un élément à l'ensemble et retourne une valeur qui indique si l'ajout a réussi.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is added to the set; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="item" /&gt;</ph> est ajouté à l'ensemble ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class does not accept duplicate elements.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe n’accepte pas les éléments en double.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>If <ph id="ph1">`item`</ph> is already in the set, this method returns <ph id="ph2">`false`</ph> and does not throw an exception.</source>
          <target state="translated">Si <ph id="ph1">`item`</ph> figure déjà dans le jeu, cette méthode retourne <ph id="ph2">`false`</ph> et ne lève pas d’exception.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> already equals the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, the capacity is automatically adjusted to accommodate the new item.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> est déjà égale à la capacité de le <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> de l’objet, la capacité est automatiquement ajustée pour prendre en compte le nouvel élément.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>The following example adds elements to a sorted set.</source>
          <target state="translated">L’exemple suivant ajoute des éléments à un ensemble trié.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Clear">
          <source>Removes all elements from the set.</source>
          <target state="translated">Supprime tous les éléments de l'ensemble.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> object that is used to order the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Obtient l’objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> qui est utilisé pour ordonner les valeurs du <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>The comparer that is used to order the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Le comparateur qui est utilisé pour ordonner les valeurs du <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>The returned comparer can be either the default comparer of the type for a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, or the comparer used for its constructor.</source>
          <target state="translated">Le comparateur retourné peut être soit le comparateur par défaut du type pour un <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, ou le comparateur utilisé pour son constructeur.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source>The element to locate in the set.</source>
          <target state="translated">Élément à rechercher dans l'ensemble.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source>Determines whether the set contains a specific element.</source>
          <target state="translated">Détermine si l'ensemble contient un élément spécifique.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the set contains <ph id="ph2">&lt;paramref name="item" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'ensemble contient <ph id="ph2">&lt;paramref name="item" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source>This method is an O(ln n) operation.</source>
          <target state="translated">Cette méthode est une opération O (log n).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Copies a portion or all of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the beginning of the destination array or at a specified index.</source>
          <target state="translated">Copie tout ou partie d'un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> dans un tableau unidimensionnel compatible, en commençant au début du tableau de destination ou au niveau d'un index spécifié.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir du <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>Copies the complete <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the beginning of the target array.</source>
          <target state="translated">Copie l'ensemble du <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> dans un tableau unidimensionnel compatible, en commençant au début du tableau cible.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>The indexing of <ph id="ph1">`array`</ph> must be zero-based.</source>
          <target state="translated">L’indexation de <ph id="ph1">`array`</ph> doit être de base zéro.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> exceeds the number of elements that the destination array can contain.</source>
          <target state="translated">Le nombre d'éléments dans le <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> source est supérieur au nombre d'éléments que le tableau de destination peut contenir.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir du <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Ce tableau doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>Copies the complete <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.</source>
          <target state="translated">Copie l'ensemble du <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> dans un tableau unidimensionnel compatible, en commençant au niveau de l'index spécifié du tableau.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source array is greater than the available space from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the end of the destination array.</source>
          <target state="translated">Le nombre d'éléments dans le tableau source est supérieur à la quantité d'espace disponible entre <ph id="ph1">&lt;paramref name="index" /&gt;</ph> et la fin du tableau de destination.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir du <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Ce tableau doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The number of elements to copy.</source>
          <target state="translated">Nombre d'éléments à copier.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>Copies a specified number of elements from <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.</source>
          <target state="translated">Copie un nombre d'éléments spécifié à partir de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> dans un tableau unidimensionnel compatible en commençant au niveau de l'index spécifié du tableau.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The number of elements in the source array is greater than the available space from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the end of the destination array.</source>
          <target state="translated">Le nombre d'éléments dans le tableau source est supérieur à la quantité d'espace disponible entre <ph id="ph1">&lt;paramref name="index" /&gt;</ph> et la fin du tableau de destination.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Count">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Obtient le nombre d’éléments dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Count">
          <source>The number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Nombre d'éléments dans <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object that can be used to create a collection that contains individual sets.</source>
          <target state="translated">Retourne un objet <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> qui peut être utilisé pour créer une collection qui contient des jeux individuels.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object that can be used to create a collection that contains individual sets.</source>
          <target state="translated">Retourne un objet <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> qui peut être utilisé pour créer une collection qui contient des jeux individuels.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>A comparer for creating a collection of sets.</source>
          <target state="translated">Comparateur pour la création d’une collection d’ensembles.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> objet vérifie l’égalité à un seul niveau ; Toutefois, vous pouvez chaîner ensemble des comparateurs à des niveaux supplémentaires pour exécuter le test d’égalité approfondi.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>Calling this method is an O(1) operation.</source>
          <target state="translated">Appel de cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The comparer to use for creating the returned comparer.</source>
          <target state="translated">Comparateur à utiliser pour la création du comparateur retourné.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object, according to a specified comparer, that can be used to create a collection that contains individual sets.</source>
          <target state="translated">Retourne un objet <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph>, d'après un comparateur spécifié, qui peut être utilisé pour créer une collection qui contient des ensembles individuels.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>A comparer for creating a collection of sets.</source>
          <target state="translated">Comparateur pour la création d’une collection d’ensembles.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">`memberEqualityComparer`</ph> and the current <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> must have the same definition of equality.</source>
          <target state="translated">Le <ph id="ph1">`memberEqualityComparer`</ph> et actuel <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> doit avoir la même définition de l’égalité des valeurs.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>You can use the comparer returned by this method in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> constructor to create a hash table of individual sets.</source>
          <target state="translated">Vous pouvez utiliser le comparateur retourné par cette méthode dans le <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> constructeur pour créer une table de hachage de jeux individuels.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.CreateSetComparer%2A&gt;</ph> method to create a set of sets.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.CreateSetComparer%2A&gt;</ph> pour créer un groupe d’ensembles de méthode.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection of items to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Collection d'éléments à supprimer de l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Removes all elements that are in a specified collection from the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Supprime tous les éléments figurant dans la collection spécifiée de l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method removes any element in the current <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> that is also in <ph id="ph2">`other`</ph>.</source>
          <target state="translated">Cette méthode supprime tout élément en cours <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> qui figurent également dans <ph id="ph2">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Duplicate values in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Valeurs dupliquées dans <ph id="ph1">`other`</ph> sont ignorés.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`other`</ph> parameter.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est le nombre d’éléments dans le <ph id="ph3">`other`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example removes elements from a sorted set that are duplicated in another sorted set.</source>
          <target state="translated">L’exemple suivant supprime les éléments d’un jeu trié qui sont dupliqués dans un autre jeu trié.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>An enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> in sorted order.</source>
          <target state="translated">Énumérateur qui itère via le <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> dans l'ordre de tri.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>Any changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> will invalidate the enumerator.</source>
          <target state="translated">Toute modification apportée à la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> invalidera l’énumérateur.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>This method is an O(log n) operation.</source>
          <target state="translated">Cette méthode est une opération O (n journal).</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information that is required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> qui contient les informations requises pour sérialiser l'objet <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Structure de <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> qui contient la source et la destination du flux sérialisé associé à l'objet <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data that you must have to serialize a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Implémente l'interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> et retourne les données requises pour sérialiser un objet <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Appel de cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">pour fournir des services de sérialisation.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Action de sécurité : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The lowest desired value in the view.</source>
          <target state="translated">Valeur la plus faible souhaitée dans la vue.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The highest desired value in the view.</source>
          <target state="translated">Valeur la plus élevée souhaitée dans la vue.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>Returns a view of a subset in a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Retourne une vue d'un sous-ensemble dans un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>A subset view that contains only the values in the specified range.</source>
          <target state="translated">Vue de sous-ensemble qui contient uniquement les valeurs de la plage spécifiée.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>This method returns a view of the range of elements that fall between <ph id="ph1">`lowerValue`</ph> and <ph id="ph2">`upperValue`</ph>, as defined by the comparer.</source>
          <target state="translated">Cette méthode retourne une vue de la plage d’éléments compris entre <ph id="ph1">`lowerValue`</ph> et <ph id="ph2">`upperValue`</ph>, comme défini par le comparateur.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>This method does not copy elements from the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, but provides a window into the underlying <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> itself.</source>
          <target state="translated">Cette méthode ne copie pas les éléments à partir de la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, mais fournit une fenêtre dans sous-jacent <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> lui-même.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>You can make changes in both the view and in the underlying <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</source>
          <target state="translated">Vous pouvez apporter des modifications dans la vue et sous-jacent <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.GetViewBetween%2A&gt;</ph> method to list only the AVI files from a sorted set of media file names.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.GetViewBetween%2A&gt;</ph> méthode pour répertorier uniquement le AVI des fichiers à partir d’un jeu trié de noms de fichiers multimédias.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The comparer evaluates file names according to their extensions.</source>
          <target state="translated">Le comparateur évalue les noms de fichiers en fonction de leur extension.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The <ph id="ph1">`lowerValue`</ph> is "AVI" and the <ph id="ph2">`upperValue`</ph> is only one value higher, "AVJ", to get the view of all AVI files.</source>
          <target state="translated">Le <ph id="ph1">`lowerValue`</ph> est « AVI » et le <ph id="ph2">`upperValue`</ph> est seulement une valeur plus élevée, « AVJ », pour obtenir la vue de tous les fichiers AVI.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source><ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> is more than <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph> according to the comparer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> est supérieur à <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph> d'après le comparateur.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>A tried operation on the view was outside the range specified by <ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> and <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph>.</source>
          <target state="translated">Une opération éprouvée sur la vue était à l'extérieur de la plage spécifiée par <ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> et <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Collection à comparer à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object so that it contains only elements that are also in a specified collection.</source>
          <target state="translated">Modifie l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actuel afin qu'il contienne uniquement les éléments qui figurent également dans une collection spécifiée.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method ignores any duplicate elements in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">Cette méthode ignore les éléments en double dans <ph id="ph1">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by the <ph id="ph1">`other`</ph> parameter is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la collection représentée par le <ph id="ph1">`other`</ph> paramètre est un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection avec le même comparateur d’égalité en cours <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> de l’objet, cette méthode est un O (<ph id="ph4">`n`</ph>) opération.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">Sinon, cette méthode est un O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) opération, où <ph id="ph4">`n`</ph> est <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> et <ph id="ph6">`m`</ph> est le nombre d’éléments dans <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Collection à comparer à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper subset of the specified collection.</source>
          <target state="translated">Détermine si un objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> appartient à la collection spécifiée.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper subset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> appartient à l'élément <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a proper subset of any other collection.</source>
          <target state="translated">Un ensemble vide est un sous-ensemble approprié de toute autre collection.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the current <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty unless the <ph id="ph3">`other`</ph> parameter is also an empty set.</source>
          <target state="translated">Par conséquent, cette méthode retourne <ph id="ph1">`true`</ph> si la collection représentée par le <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objet est vide, sauf si le <ph id="ph3">`other`</ph> paramètre est également un ensemble vide.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is greater than or equal to the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Cette méthode retourne toujours <ph id="ph1">`false`</ph> si <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> est supérieur ou égal au nombre d’éléments de <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, then this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la collection représentée par <ph id="ph1">`other`</ph> est un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection avec le même comparateur d’égalité en cours <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> de l’objet, cette méthode est un O (<ph id="ph4">`n`</ph>) opération.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">Sinon, cette méthode est un O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) opération, où <ph id="ph4">`n`</ph> est <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> et <ph id="ph6">`m`</ph> est le nombre d’éléments dans <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Collection à comparer à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper superset of the specified collection.</source>
          <target state="translated">Détermine si un objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> contient la collection spécifiée.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper superset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> contient l'élément <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a proper superset of any other collection.</source>
          <target state="translated">Un ensemble vide est un sur-ensemble d’une autre collection.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the <ph id="ph2">`other`</ph> parameter is empty unless the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection is also empty.</source>
          <target state="translated">Par conséquent, cette méthode retourne <ph id="ph1">`true`</ph> si la collection représentée par le <ph id="ph2">`other`</ph> paramètre est vide, sauf si en cours <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection est également vide.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is less than or equal to the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Cette méthode retourne toujours <ph id="ph1">`false`</ph> si <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> est inférieur ou égal au nombre d’éléments de <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la collection représentée par <ph id="ph1">`other`</ph> est un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection avec le même comparateur d’égalité en cours <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> de l’objet, cette méthode est un O (<ph id="ph4">`n`</ph>) opération.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Sinon, cette méthode est un O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) opération, où <ph id="ph4">`n`</ph> est le nombre d’éléments dans <ph id="ph5">`other`</ph> et <ph id="ph6">`m`</ph> est <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Collection à comparer à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a subset of the specified collection.</source>
          <target state="translated">Détermine si un objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> est un sous-ensemble de la collection spécifiée.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a subset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actuel est un sous-ensemble de <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a subset of any other collection, including an empty set; therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the current <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty, even if the <ph id="ph3">`other`</ph> parameter is an empty set.</source>
          <target state="translated">Un ensemble vide est un sous-ensemble d’un autre regroupement, y compris un ensemble vide ; Par conséquent, cette méthode retourne <ph id="ph1">`true`</ph> si la collection représentée par le <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objet est vide, même si le <ph id="ph3">`other`</ph> paramètre est un ensemble vide.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is greater than the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Cette méthode retourne toujours <ph id="ph1">`false`</ph> si <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> est supérieur au nombre d’éléments de <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la collection représentée par <ph id="ph1">`other`</ph> est un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection avec le même comparateur d’égalité en cours <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> de l’objet, cette méthode est un O (<ph id="ph4">`n`</ph>) opération.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">Sinon, cette méthode est un O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) opération, où <ph id="ph4">`n`</ph> est <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> et <ph id="ph6">`m`</ph> est le nombre d’éléments dans <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Collection à comparer à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a superset of the specified collection.</source>
          <target state="translated">Détermine si un objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> est un sur-ensemble de la collection spécifiée.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a superset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> est un sur-ensemble de <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>All collections, including the empty set, are supersets of the empty set.</source>
          <target state="translated">Toutes les collections, y compris le jeu vide, sont des sur-ensembles de l’ensemble vide.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the <ph id="ph2">`other`</ph> parameter is empty, even if the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty.</source>
          <target state="translated">Par conséquent, cette méthode retourne <ph id="ph1">`true`</ph> si la collection représentée par le <ph id="ph2">`other`</ph> paramètre est vide, même si en cours <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objet est vide.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is less than the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Cette méthode retourne toujours <ph id="ph1">`false`</ph> si <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> est inférieur au nombre d’éléments de <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la collection représentée par <ph id="ph1">`other`</ph> est un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection avec le même comparateur d’égalité en cours <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> de l’objet, cette méthode est un O (<ph id="ph4">`n`</ph>) opération.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Sinon, cette méthode est un O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) opération, où <ph id="ph4">`n`</ph> est le nombre d’éléments dans <ph id="ph5">`other`</ph> et <ph id="ph6">`m`</ph> est <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Max">
          <source>Gets the maximum value in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, as defined by the comparer.</source>
          <target state="translated">Obtient la valeur maximale de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, tel que défini par le comparateur.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Max">
          <source>The maximum value in the set.</source>
          <target state="translated">Valeur maximale dans l'ensemble.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Min">
          <source>Gets the minimum value in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, as defined by the comparer.</source>
          <target state="translated">Obtient la valeur minimale de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, tel que défini par le comparateur.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Min">
          <source>The minimum value in the set.</source>
          <target state="translated">Valeur minimale dans l'ensemble.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">Source de l’événement de désérialisation.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface, and raises the deserialization event when the deserialization is completed.</source>
          <target state="translated">Implémente l'interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> et déclenche l'événement de désérialisation une fois que la désérialisation est terminée.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Appel de cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is invalid.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> associé à l'objet <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actuel n'est pas valide.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Collection à comparer à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object and a specified collection share common elements.</source>
          <target state="translated">Détermine si l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actif et une collection spécifiée partagent des éléments communs.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> share at least one common element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> et l'élément <ph id="ph3">&lt;paramref name="other" /&gt;</ph> partagent au moins un élément commun ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>Any duplicate elements in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Les doublons d’éléments dans <ph id="ph1">`other`</ph> sont ignorés.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est le nombre d’éléments dans <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>The element to remove.</source>
          <target state="translated">Élément à supprimer.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>Removes a specified item from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Supprime un élément spécifié de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is found and successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la recherche et la suppression de l'élément réussissent ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object does not contain the specified element, the object remains unchanged and no exception is thrown.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objet ne contient pas l’élément spécifié, l’objet reste inchangé et aucune exception n’est levée.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source><ph id="ph1">`item`</ph> can be <ph id="ph2">`null`</ph> for reference types.</source>
          <target state="translated"><ph id="ph1">`item`</ph> peut être <ph id="ph2">`null`</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>This method is an O(log n) operation.</source>
          <target state="translated">Cette méthode est une opération O (n journal).</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">Délégué qui définit les conditions des éléments à supprimer.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Removes all elements that match the conditions defined by the specified predicate from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Supprime tous les éléments qui correspondent aux conditions définies par le prédicat spécifié de la collection <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The number of elements that were removed from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> collection..</source>
          <target state="translated">Nombre d'éléments supprimés de la collection <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source><ph id="ph1">`match`</ph> must not modify the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`match`</ph> ne doit pas modifier le <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Doing so can cause unexpected results.</source>
          <target state="translated">Cela peut entraîner des résultats inattendus.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Appel de cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The following example removes unwanted elements from a sorted set.</source>
          <target state="translated">L’exemple suivant supprime les éléments indésirables d’un jeu trié.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Reverse">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that iterates over the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> in reverse order.</source>
          <target state="translated">Retourne un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> qui itère dans l'ordre inverse au sein de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Reverse">
          <source>An enumerator that iterates over the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> in reverse order.</source>
          <target state="translated">Énumérateur qui itère dans l'ordre inverse au sein de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Collection à comparer à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object and the specified collection contain the same elements.</source>
          <target state="translated">Détermine si l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>actif et la collection spécifiée contiennent les mêmes éléments.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is equal to <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, false.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actuel est égal à <ph id="ph3">&lt;paramref name="other" /&gt;</ph> ; sinon, false.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>This method ignores the order of elements and any duplicate elements in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">Cette méthode ignore l’ordre des éléments et les éléments en double dans <ph id="ph1">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(log<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Si la collection représentée par <ph id="ph1">`other`</ph> est un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection avec le même comparateur d’égalité en cours <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> de l’objet, cette méthode est un O (journal<ph id="ph4">`n`</ph>) opération.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Sinon, cette méthode est un O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) opération, où <ph id="ph4">`n`</ph> est le nombre d’éléments dans <ph id="ph5">`other`</ph> et <ph id="ph6">`m`</ph> est <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Collection à comparer à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object so that it contains only elements that are present either in the current object or in the specified collection, but not both.</source>
          <target state="translated">Modifie l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actuel afin qu'il contienne uniquement les éléments présents dans l'objet actuel ou dans la collection spécifiée, mais pas dans les deux à la fois.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Any duplicate elements in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Les doublons d’éléments dans <ph id="ph1">`other`</ph> sont ignorés.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>If the <ph id="ph1">`other`</ph> parameter is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(n log <ph id="ph4">`m`</ph>) operation.</source>
          <target state="translated">Si le <ph id="ph1">`other`</ph> paramètre est un <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection avec le même comparateur d’égalité en cours <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> de l’objet, cette méthode est un O (n journal <ph id="ph4">`m`</ph>) opération.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`m`</ph>) + O(<ph id="ph3">`n`</ph> log <ph id="ph4">`n`</ph>) operation, where <ph id="ph5">`n`</ph> is the number of elements in <ph id="ph6">`other`</ph> and <ph id="ph7">`m`</ph> is <ph id="ph8">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Sinon, cette méthode est un O (<ph id="ph1">`n`</ph> journal <ph id="ph2">`m`</ph>) + O (<ph id="ph3">`n`</ph> journal <ph id="ph4">`n`</ph>) opération, où <ph id="ph5">`n`</ph> est le nombre d’éléments dans <ph id="ph6">`other`</ph> et <ph id="ph7">`m`</ph> est <ph id="ph8">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> object.</source>
          <target state="translated">Objet à ajouter à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> object.</source>
          <target state="translated">Ajoute un élément à un objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, this method is an O(1) operation.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> est inférieure à <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If the capacity must be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Si la capacité doit être augmentée pour intégrer le nouvel élément, cette méthode devient un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtient une valeur qui indique si <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la collection est en lecture seule ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection ; Par conséquent, si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Obtention de la valeur de cette propriété est une opération o (1).</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein d’une collection.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Énumérateur permettant d'effectuer une itération au sein de la collection.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir du <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Ce tableau doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the complete <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.</source>
          <target state="translated">Copie l'ensemble du <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> dans un tableau unidimensionnel compatible, en commençant au niveau de l'index spécifié du tableau.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source array is greater than the available space from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the end of the destination array.</source>
          <target state="translated">Le nombre d'éléments dans le tableau source est supérieur à la quantité d'espace disponible entre <ph id="ph1">&lt;paramref name="index" /&gt;</ph> et la fin du tableau de destination.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value that indicates whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtient une valeur qui indique si l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> est synchronisé (thread safe).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'accès à <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> est synchronisé ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">Dans l'implémentation par défaut de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph>, cette propriété retourne toujours l'instance actuelle.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein d’une collection.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Énumérateur permettant d'effectuer une itération au sein de la collection.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">Source de l’événement de désérialisation.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDeserializationCallback" /&gt;</ph> interface, and raises the deserialization event when the deserialization is completed.</source>
          <target state="translated">Implémente l'interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDeserializationCallback" /&gt;</ph> et déclenche l'événement de désérialisation une fois que la désérialisation est terminée.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance is invalid.</source>
          <target state="translated">L’objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> associé à l’instance de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actuelle n’est pas valide.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information that is required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> qui contient les informations nécessaires pour sérialiser l'instance de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance.</source>
          <target state="translated">Structure <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> qui contient la source et la destination du flux sérialisé associé à l'instance <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface, and returns the data that you need to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance.</source>
          <target state="translated">Implémente l'interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> et retourne les données requises pour sérialiser l'instance de <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">pour fournir des services de sérialisation.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Action de sécurité : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Collection à comparer à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object so that it contains all elements that are present in either the current object or the specified collection.</source>
          <target state="translated">Modifie l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> actuel afin qu'il contienne tous les éléments présents dans l'objet actif ou dans la collection spécifiée.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Any duplicate elements in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Les doublons d’éléments dans <ph id="ph1">`other`</ph> sont ignorés.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>