<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContextStack.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ee39372e13e8e5c6bb6ac16568007f4114539221.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee39372e13e8e5c6bb6ac16568007f4114539221</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Provides a stack object that can be used by a serializer to make information available to nested serializers.</source>
          <target state="translated">Fournit un objet de pile pouvant être utilisé par un sérialiseur pour mettre des informations à la disposition de sérialiseurs imbriqués.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Some serializers require information about the context of an object to correctly persist their state.</source>
          <target state="translated">Certains sérialiseurs requièrent des informations sur le contexte d'un objet pour rendre leur état correctement persistant.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> classe permet à un sérialiseur définir des données sur le contexte d’un objet qui est sérialisé dans une pile où un autre sérialiseur peut accéder.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>The value of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt;</ph> property is provided by an <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> to share information of use to some serializers.</source>
          <target state="translated">La valeur de la <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt;</ph> propriété est fournie par un <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> de partager des informations utiles à certains sérialiseurs.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object.</source>
          <target state="translated">Une pile de contexte est utile, car le processus de sérialisation d’un document de conception peuvent être profondément imbriqué et des objets à chaque niveau d’imbrication peuvent nécessiter des informations de contexte correctement rendre persistant l’état de l’objet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>A serializer can set a context object to the stack before invoking a nested serializer.</source>
          <target state="translated">Un sérialiseur peut définir un objet de contexte à la pile avant d’appeler un sérialiseur imbriqué.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.</source>
          <target state="translated">Chaque objet défini dans la pile doit être supprimé par le sérialiseur qui l’après un appel à un sérialiseur imbriqué.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Typically, the objects on the stack contain information about the context of the current object that is being serialized.</source>
          <target state="translated">En règle générale, les objets sur la pile contiennent des informations sur le contexte de l’objet actuel est en cours de sérialisation.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack.</source>
          <target state="translated">Un sérialiseur parent ajoute des informations de contexte à la pile de l’objet suivant à sérialiser, appelle un sérialiseur approprié et, lorsque le sérialiseur de fin d’exécution sur l’objet, supprime les informations de contexte de la pile.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>It is up to the implementation of each serializer to determine what objects get pushed on this stack.</source>
          <target state="translated">C’est à l’implémentation de chaque sérialiseur pour déterminer quels objets Obtient l’objet d’un push sur cette pile.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>As an example, an object with a property named <ph id="ph1">`Enabled`</ph> has a data type of <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated">Par exemple, un objet avec une propriété nommée <ph id="ph1">`Enabled`</ph> a un type de données <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing.</source>
          <target state="translated">Si un sérialiseur écrit cette valeur dans un flux de données, il peut-être inclure le contexte ou le type de propriété qu’elle écrit.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>The serializer does not have this information, however, because it is only instructed to write the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value.</source>
          <target state="translated">Le sérialiseur n’a pas toutefois, ces informations, car il est uniquement indiqué pour écrire la <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>To provide this information to the serializer, the parent serializer can push a <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> that points to the <ph id="ph2">`Enabled`</ph> property on the context stack.</source>
          <target state="translated">Pour fournir ces informations au sérialiseur, le sérialiseur parent peut transmettre un <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> qui pointe vers le <ph id="ph2">`Enabled`</ph> propriété sur la pile de contexte.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> to push and then remove 10 values.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> pour push, puis supprimer 10 valeurs.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>for full access to system resources.</source>
          <target state="translated">pour un accès complet aux ressources système.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Demand values: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">Valeurs de demande : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Associated state:</source>
          <target state="translated">État associé :</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> instance.</source>
          <target state="translated">L’exemple de code suivant montre comment créer un <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
          <source>A context object to append to the stack.</source>
          <target state="translated">Objet de contexte à ajouter à la pile.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
          <source>Appends an object to the end of the stack, rather than pushing it onto the top of the stack.</source>
          <target state="translated">Ajoute un objet à la fin de la pile au lieu de le pousser au sommet de celle-ci.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
          <source>This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order.</source>
          <target state="translated">Cette méthode permet à un sérialiseur communiquer avec d’autres sérialiseurs en ajoutant des objets de données contextuelles qui n’ont pas à supprimer dans l’ordre.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
          <source>There is no way to remove an object that was appended to the end of the stack without removing all other objects.</source>
          <target state="translated">Il n’existe aucun moyen pour supprimer un objet qui a été ajouté à la fin de la pile sans supprimer tous les autres objets.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Current">
          <source>Gets the current object on the stack.</source>
          <target state="translated">Obtient l'objet en cours dans la pile.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Current">
          <source>The current object on the stack, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no objects were pushed.</source>
          <target state="translated">Objet en cours dans la pile, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> si aucun objet n'a fait l'objet d'un push.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Current">
          <source>The current object is the object at the top of the stack, or the object last added to the stack.</source>
          <target state="translated">L’objet actuel est l’objet en haut de la pile, ou le dernier objet ajouté à la pile.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.ContextStack">
          <source>Gets or sets the object on the stack at the specified level.</source>
          <target state="translated">Obtient ou définit l'objet de la pile, au niveau spécifié.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>The level of the object to retrieve on the stack.</source>
          <target state="translated">Niveau de l'objet à récupérer de la pile.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>Level 0 is the top of the stack, level 1 is the next down, and so on.</source>
          <target state="translated">Le niveau 0 correspond au sommet de la pile, le niveau 1 au niveau inférieur suivant, etc.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>This level must be 0 or greater.</source>
          <target state="translated">Ce niveau doit être supérieur ou égal à 0.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>If level is greater than the number of levels on the stack, it returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si le niveau est supérieur au nombre de niveaux de la pile, <ph id="ph1">&lt;see langword="null" /&gt;</ph> est retournée.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>Gets the object on the stack at the specified level.</source>
          <target state="translated">Obtient l'objet de la pile, au niveau spécifié.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source>The object on the stack at the specified level, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no object exists at that level.</source>
          <target state="translated">Objet de la pile au niveau spécifié, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> si aucun objet n'est présent à ce niveau.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="level" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="level" /&gt;</ph> est inférieur à 0.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source>A type to retrieve from the context stack.</source>
          <target state="translated">Type à récupérer de la pile de contexte.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source>Gets the first object on the stack that inherits from or implements the specified type.</source>
          <target state="translated">Obtient le premier objet de la pile qui hérite du type spécifié ou l'implémente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source>The first object on the stack that inherits from or implements the specified type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no object on the stack implements the type.</source>
          <target state="translated">Premier objet de la pile qui hérite du type spécifié ou l'implémente, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> si aucun objet de la pile n'implémente le type.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source>A check is made on each level of the stack, searching for an object that implements or inherits <ph id="ph1">`type`</ph>.</source>
          <target state="translated">Une vérification est effectuée à chaque niveau de la pile pour rechercher un objet qui implémente ou en hérite <ph id="ph1">`type`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source>If a match is found, it is returned.</source>
          <target state="translated">Si une correspondance est trouvée, elle est retournée.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Pop">
          <source>Removes the current object off of the stack, returning its value.</source>
          <target state="translated">Supprime l'objet en cours de la pile en retournant sa valeur.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Pop">
          <source>The object removed from the stack; <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no objects are on the stack.</source>
          <target state="translated">Objet supprimé de la pile ; <ph id="ph1">&lt;see langword="null" /&gt;</ph> si la pile ne contient aucun objet.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Pop">
          <source>The following code example demonstrates removing a value from a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant illustre la suppression d’une valeur comprise entre un <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)">
          <source>The context object to push onto the stack.</source>
          <target state="translated">Objet de contexte devant faire l'objet d'un push dans la pile.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)">
          <source>Pushes, or places, the specified object onto the stack.</source>
          <target state="translated">Exécute un push de l'objet spécifié, ou place l'objet, dans la pile.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)">
          <source>The following code example demonstrates pushing values to a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant montre les valeurs push pour un <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>