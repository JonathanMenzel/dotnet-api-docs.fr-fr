<Type Name="RootDesignerSerializerAttribute" FullName="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f707606a0075d1dc28d159b7409d67e9949f556f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30368443" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RootDesignerSerializerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RootDesignerSerializerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RootDesignerSerializerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RootDesignerSerializerAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This attribute has been deprecated. Use DesignerSerializerAttribute instead.  For example, to specify a root designer for CodeDom, use DesignerSerializerAttribute(...,typeof(TypeCodeDomSerializer)).  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a06a2-101">Indique le sérialiseur de base à utiliser pour un objet concepteur racine.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a06a2-101">Indicates the base serializer to use for a root designer object.</span>
      </span>
      <span data-ttu-id="a06a2-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a06a2-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a06a2-103"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> Indique le sérialiseur à utiliser lorsque le Gestionnaire de sérialisation sérialise le document de conception, et si le sérialiseur spécifié prend en charge le rechargement automatique du document de design sans d’abord complètement la destruction du document.</span><span class="sxs-lookup"><span data-stu-id="a06a2-103"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> indicates the serializer to use when the serialization manager serializes the design document, and whether the specified serializer supports automatic reloading of the design document without first completely disposing of the document.</span></span>  
  
 <span data-ttu-id="a06a2-104">Cet attribut contient les membres importants suivants :</span><span class="sxs-lookup"><span data-stu-id="a06a2-104">This attribute contains the following significant members:</span></span>  
  
-   <span data-ttu-id="a06a2-105"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> Indique l’objet de sérialisation à utiliser pour sérialiser la classe au moment du design.</span><span class="sxs-lookup"><span data-stu-id="a06a2-105"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> indicates what serialization object to use to serialize the class at design time.</span></span>  
  
-   <span data-ttu-id="a06a2-106"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> Indique le nom qualifié complet de l’objet de sérialisation type de base.</span><span class="sxs-lookup"><span data-stu-id="a06a2-106"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> indicates the fully qualified name of the serialization object's base type.</span></span>  
  
-   <span data-ttu-id="a06a2-107"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> Indique si le sérialiseur prend en charge le rechargement d’un document de design sans intervention de l’utilisateur pour ouvrir une nouvelle vue du concepteur.</span><span class="sxs-lookup"><span data-stu-id="a06a2-107"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> indicates whether the serializer supports reloading a design document without user interaction to open a new designer view.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a06a2-108">L’exemple de code suivant applique un <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> à un composant.</span><span class="sxs-lookup"><span data-stu-id="a06a2-108">The following example code applies a <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> to a component.</span></span>  
  
 [!code-cpp[IDesignerSerializationManagerSample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#2)]
 [!code-csharp[IDesignerSerializationManagerSample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#2)]
 [!code-vb[IDesignerSerializationManagerSample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a06a2-109">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> avec les attributs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-109">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (string serializerTypeName, string baseSerializerTypeName, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, string baseSerializerTypeName, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerTypeName As String, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(System::String ^ serializerTypeName, System::String ^ baseSerializerTypeName, bool reloadable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerTypeName" Type="System.String" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName">
          <span data-ttu-id="a06a2-110">Nom qualifié complet du type de données du sérialiseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-110">The fully qualified name of the data type of the serializer.</span>
          </span>
        </param>
        <param name="baseSerializerTypeName">
          <span data-ttu-id="a06a2-111">Nom du type de base du sérialiseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-111">The name of the base type of the serializer.</span>
          </span>
          <span data-ttu-id="a06a2-112">Une classe peut comprendre plusieurs sérialiseurs, dans la mesure où ils possèdent tous des types de base différents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-112">A class can include multiple serializers as they all have different base types.</span>
          </span>
        </param>
        <param name="reloadable">
          <span data-ttu-id="a06a2-113">
            <see langword="true" /> si ce sérialiseur prend en charge le rechargement dynamique du document ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-113">
              <see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a06a2-114">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> avec les attributs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a06a2-115">Crée un nouvel attribut de sérialisation du concepteur.</span><span class="sxs-lookup"><span data-stu-id="a06a2-115">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (string serializerTypeName, Type baseSerializerType, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, class System.Type baseSerializerType, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerType As Type, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(System::String ^ serializerTypeName, Type ^ baseSerializerType, bool reloadable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName">
          <span data-ttu-id="a06a2-116">Nom qualifié complet du type de données du sérialiseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-116">The fully qualified name of the data type of the serializer.</span>
          </span>
        </param>
        <param name="baseSerializerType">
          <span data-ttu-id="a06a2-117">Nom du type de base du sérialiseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-117">The name of the base type of the serializer.</span>
          </span>
          <span data-ttu-id="a06a2-118">Une classe peut comprendre plusieurs sérialiseurs, dans la mesure où ils possèdent tous des types de base différents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-118">A class can include multiple serializers, as they all have different base types.</span>
          </span>
        </param>
        <param name="reloadable">
          <span data-ttu-id="a06a2-119">
            <see langword="true" /> si ce sérialiseur prend en charge le rechargement dynamique du document ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-119">
              <see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a06a2-120">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> avec les attributs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a06a2-121">Crée un nouvel attribut de sérialisation du concepteur.</span><span class="sxs-lookup"><span data-stu-id="a06a2-121">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (Type serializerType, Type baseSerializerType, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serializerType, class System.Type baseSerializerType, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerType As Type, baseSerializerType As Type, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(Type ^ serializerType, Type ^ baseSerializerType, bool reloadable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerType" Type="System.Type" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerType">
          <span data-ttu-id="a06a2-122">Type de données du sérialiseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-122">The data type of the serializer.</span>
          </span>
        </param>
        <param name="baseSerializerType">
          <span data-ttu-id="a06a2-123">Type de base du sérialiseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-123">The base type of the serializer.</span>
          </span>
          <span data-ttu-id="a06a2-124">Une classe peut comprendre plusieurs sérialiseurs, dans la mesure où ils possèdent tous des types de base différents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-124">A class can include multiple serializers as they all have different base types.</span>
          </span>
        </param>
        <param name="reloadable">
          <span data-ttu-id="a06a2-125">
            <see langword="true" /> si ce sérialiseur prend en charge le rechargement dynamique du document ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-125">
              <see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a06a2-126">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> avec les attributs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-126">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a06a2-127">Crée un nouvel attribut de sérialisation du concepteur.</span><span class="sxs-lookup"><span data-stu-id="a06a2-127">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reloadable">
      <MemberSignature Language="C#" Value="public bool Reloadable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Reloadable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reloadable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Reloadable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a06a2-128">Obtient une valeur indiquant si le sérialiseur racine prend en charge le rechargement du document de design sans détruire préalablement l'hôte du concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-128">Gets a value indicating whether the root serializer supports reloading of the design document without first disposing the designer host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a06a2-129">
            <see langword="true" /> si le sérialiseur racine prend en charge le rechargement ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-129">
              <see langword="true" /> if the root serializer supports reloading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a06a2-130">Si cette propriété est définie sur `false`, le document de design n’effectue pas automatiquement un rechargement de la part de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a06a2-130">If this property is set to `false`, the design document does not automatically perform a reload on behalf of the user.</span></span> <span data-ttu-id="a06a2-131">Si cette propriété est définie sur `false`, il est responsable de l’utilisateur pour rouvrir la fenêtre d’affichage du concepteur pour le document de conception, si une mise à jour ou recharger est souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a06a2-131">If this property is set to `false`, it is the user's responsibility to reopen the designer view window for the design document, if an update or reload is desired.</span></span>  
  
 <span data-ttu-id="a06a2-132">Certains sérialiseurs requièrent l’interaction des composants externes dans le Concepteur de processus de chargement afin de reconstruire le document de conception.</span><span class="sxs-lookup"><span data-stu-id="a06a2-132">Some serializers require the interaction of external components in the designer loading process in order to rebuild the design document.</span></span> <span data-ttu-id="a06a2-133">Ces sérialiseurs doivent parfois créer un nouvel hôte de concepteur chaque fois que le document de design est chargé.</span><span class="sxs-lookup"><span data-stu-id="a06a2-133">These serializers sometimes need to create a new designer host each time the design document is loaded.</span></span> <span data-ttu-id="a06a2-134">Si c’est le cas, <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> a la valeur `false`, et l’hôte de concepteur doit être recréé par l’utilisateur (lancer le concepteur pour le document) après la conception du document est supprimé.</span><span class="sxs-lookup"><span data-stu-id="a06a2-134">If this is the situation, <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> will be set to `false`, and the designer host must be recreated by user interaction (launching the designer for the document) after the design document is disposed.</span></span> <span data-ttu-id="a06a2-135">Les événements et les services qui ont été connectés à l’hôte de concepteur, sauf pendant la désérialisation, ne restent pas et peuvent doivent être redéfinis.</span><span class="sxs-lookup"><span data-stu-id="a06a2-135">The events and services that were connected to the designer host, except through deserialization, do not remain and may need to be set again.</span></span> <span data-ttu-id="a06a2-136">Si <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> est `true`, le document de design peut être rechargé après des modifications en dehors du concepteur sont apportées au code, sans fermer la fenêtre du concepteur, puis rouvrir.</span><span class="sxs-lookup"><span data-stu-id="a06a2-136">If <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> is `true`, the design document can be reloaded after changes outside the designer are made to the code, without closing the designer window and reopening it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerBaseTypeName">
      <MemberSignature Language="C#" Value="public string SerializerBaseTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerBaseTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerBaseTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerBaseTypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a06a2-137">Obtient le nom qualifié complet du type de base du sérialiseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-137">Gets the fully qualified type name of the base type of the serializer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a06a2-138">Nom du type de base du sérialiseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-138">The name of the base type of the serializer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerTypeName">
      <MemberSignature Language="C#" Value="public string SerializerTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerTypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a06a2-139">Obtient le nom de type qualifié complet du sérialiseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-139">Gets the fully qualified type name of the serializer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a06a2-140">Nom du type du sérialiseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-140">The name of the type of the serializer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a06a2-141">Obtient un ID unique pour ce type d'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-141">Gets a unique ID for this attribute type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a06a2-142">Objet contenant un ID unique pour ce type d'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a06a2-142">An object containing a unique ID for this attribute type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a06a2-143">Cette propriété est utilisée par des algorithmes de filtrage pour identifier deux attributs sont du même type.</span><span class="sxs-lookup"><span data-stu-id="a06a2-143">This property is used by filtering algorithms to identify two attributes that are the same type.</span></span> <span data-ttu-id="a06a2-144">Pour la plupart des attributs, il retourne simplement le <xref:System.Type> instance pour l’attribut.</span><span class="sxs-lookup"><span data-stu-id="a06a2-144">For most attributes, this just returns the <xref:System.Type> instance for the attribute.</span></span> <span data-ttu-id="a06a2-145"><xref:System.ComponentModel.EditorAttribute> substitue pour inclure le type de l’Éditeur du type de base.</span><span class="sxs-lookup"><span data-stu-id="a06a2-145"><xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>