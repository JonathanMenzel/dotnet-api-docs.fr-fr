<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MemberRelationshipService.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5378c9fc24b3404ec176cc07044966e22e16ba9c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">378c9fc24b3404ec176cc07044966e22e16ba9c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Provides the base class for relating one member to another.</source>
          <target state="translated">Fournit la classe de base pour lier un membre à un autre.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code.</source>
          <target state="translated">Concepteurs se sérialisent pour coder via un moteur qui recherche les valeurs de propriété dynamique d’objets et génère ces valeurs sous forme de code.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>So, for example, the text of a button is generated in the following format.</source>
          <target state="translated">Par conséquent, par exemple, le texte d’un bouton est généré dans le format suivant.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>One of the limitations of this scheme is that it is difficult to retrieve a property from another location.</source>
          <target state="translated">Une des limitations de ce schéma est qu’il est difficile de récupérer une propriété d’un autre emplacement.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.</source>
          <target state="translated">Par exemple, il est très difficile d’émettre du code dans le format suivant, car la seule chose que le Générateur de code peut s’appuient sur est la valeur de la propriété.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationshipService&gt;</ph> simplifies retrieval of a property value from another location.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationshipService&gt;</ph> simplifie la récupération d’une valeur de propriété à partir d’un autre emplacement.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>A designer can access this service to dictate that one member is assigned the value of another.</source>
          <target state="translated">Un concepteur peut accéder à ce service pour imposer qu’un membre est affecté à la valeur d’un autre.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>The code generator searches for such relationships when generating code, and if a relationship between two members is found the code generator, it emits code for the relationship rather than searching for the property value.</source>
          <target state="translated">Le Générateur de code recherche ces relations lors de la génération de code, et si une relation entre deux membres est trouvée le Générateur de code, il émet un code pour la relation plutôt que de recherche de la valeur de propriété.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Using the previous text assignment as an example, the following code example shows design time code used to establish a relationship.</source>
          <target state="translated">À l’aide de l’assignation de texte précédent par exemple, le code suivant montre concevoir le code de temps utilisé pour établir une relation d’exemple.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /&gt;</ph> class is <ph id="ph2">&lt;see langword="abstract" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /&gt;</ph> classe est <ph id="ph2">&lt;see langword="abstract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Implementing a concrete version varies depending on the types of members that are supported.</source>
          <target state="translated">Implémentation d’une version concrète varie selon les types de membres qui sont pris en charge.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>For example, relating one event to another might require a different implementation than relating one property to another.</source>
          <target state="translated">Par exemple, lier un événement à l’autre peut nécessiter une implémentation différente de lier une propriété à un autre.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Implementing the service requires the following steps:</source>
          <target state="translated">Implémentation du service implique les étapes suivantes :</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Implement <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" /&gt;</ph> to return <ph id="ph2">&lt;see langword="true" /&gt;</ph> for relationships that you support.</source>
          <target state="translated">Implémentez <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" /&gt;</ph> pour retourner <ph id="ph2">&lt;see langword="true" /&gt;</ph> pour les relations que vous prenez en charge.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Track changes to the source relationship and assign value changes into the target relationship.</source>
          <target state="translated">Suivre les modifications apportées à ces modifications de valeur de relation et attribuez source dans la relation cible.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The source relationship.</source>
          <target state="translated">Relation source.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>Gets a relationship to the given source relationship.</source>
          <target state="translated">Apporte une relation à la relation source donnée.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>A relationship to <ph id="ph1">&lt;paramref name="source" /&gt;</ph>, or <ph id="ph2">&lt;see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /&gt;</ph> if no relationship exists.</source>
          <target state="translated">Relation à <ph id="ph1">&lt;paramref name="source" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /&gt;</ph> s'il n'existe pas de relation.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The default implementation stores relationships in a dictionary using weak references, so the relationship table does not keep objects alive.</source>
          <target state="translated">L’implémentation par défaut stocke des relations dans un dictionnaire à l’aide des références faibles, afin de la table de relations ne pas conserve des objets actifs.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
          <source>Establishes a relationship between a source and target object.</source>
          <target state="translated">Établit une relation entre un objet source et un objet cible.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The source relationship.</source>
          <target state="translated">Relation source.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>This is the left-hand side of a relationship assignment.</source>
          <target state="translated">Il s'agit du côté gauche d'une assignation de relation.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>Establishes a relationship between a source and target object.</source>
          <target state="translated">Établit une relation entre un objet source et un objet cible.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The current relationship associated with <ph id="ph1">&lt;paramref name="source" /&gt;</ph>, or <ph id="ph2">&lt;see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /&gt;</ph> if there is no relationship.</source>
          <target state="translated">Relation actuelle associée à <ph id="ph1">&lt;paramref name="source" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /&gt;</ph> s'il n'existe pas de relation.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>If <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty&gt;</ph> is assigned to the source, any existing relationship is removed.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty&gt;</ph> est attribué à la source, toute relation existante est supprimée.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is empty, or the relationship is not supported by the service.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> est vide ou la relation n'est pas prise en charge par le service.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The owner of a source relationship.</source>
          <target state="translated">Propriétaire d'une relation source.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The member of a source relationship.</source>
          <target state="translated">Membre d'une relation source.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>Establishes a relationship between a source and target object.</source>
          <target state="translated">Établit une relation entre un objet source et un objet cible.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /&gt;</ph> structure encapsulating the relationship between a source and target object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no relationship.</source>
          <target state="translated">Structure <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /&gt;</ph> qui encapsule la relation entre un objet source et un objet cible ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> s'il n'existe pas de relation.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source><ph id="ph1">&lt;paramref name="sourceOwner" /&gt;</ph> or <ph id="ph2">&lt;paramref name="sourceMember" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceOwner" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="sourceMember" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
          <source><ph id="ph1">&lt;paramref name="sourceOwner" /&gt;</ph> or <ph id="ph2">&lt;paramref name="sourceMember" /&gt;</ph> is empty, or the relationship is not supported by the service.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceOwner" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="sourceMember" /&gt;</ph> est vide ou la relation n'est pas prise en charge par le service.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The source relationship.</source>
          <target state="translated">Relation source.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The relationship to set into the source.</source>
          <target state="translated">Relation à définir dans la source.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>Creates a relationship between the source object and target relationship.</source>
          <target state="translated">Crée une relation entre l'objet source et la relation cible.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A&gt;</ph> method clears any existing relationship if the relationship parameter is <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A&gt;</ph> méthode efface toute relation existante si le paramètre de relation est <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive.</source>
          <target state="translated">L’implémentation par défaut stocke des relations dans un dictionnaire à l’aide de références faibles afin de la table de relations ne pas conserve des objets actifs.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The relationship is not supported by the service.</source>
          <target state="translated">La relation n'est pas prise en charge par le service.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The source relationship.</source>
          <target state="translated">Relation source.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>The relationship to set into the source.</source>
          <target state="translated">Relation à définir dans la source.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source>Gets a value indicating whether the given relationship is supported.</source>
          <target state="translated">Obtient une valeur indiquant si la relation donnée est prise en charge.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a relationship between the given two objects is supported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si une relation entre les deux objets donnés est prise en charge ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>