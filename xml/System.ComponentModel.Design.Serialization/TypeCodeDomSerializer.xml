<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f1aeaf0a9b80e31cd73b52250bfcaa781f8eb58" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39869315" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <TypeSignature Language="F#" Value="type TypeCodeDomSerializer = class&#xA;    inherit CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="35f77-101">Sérialise un objet vers un type nouveau.</span>
      <span class="sxs-lookup">
        <span data-stu-id="35f77-101">Serializes an object to a new type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35f77-102">Le <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> classe effectue les mêmes tâches qu’un <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, mais la sérialisation d’un objet via cette classe définit un nouveau type.</span><span class="sxs-lookup"><span data-stu-id="35f77-102">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> class performs the same tasks as a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, but serializing an object through this class defines a new type.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35f77-103">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj&#xA;override this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj" Usage="typeCodeDomSerializer.Deserialize (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="35f77-104">Gestionnaire de sérialisation à utiliser pour la sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-104">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="35f77-105">Déclaration de type à utiliser pour une sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-105">Type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35f77-106">Désérialise la déclaration de type donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-106">Deserializes the given type declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35f77-107">Objet racine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-107">The root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35f77-108">Le <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> méthode désérialise une déclaration de type de code précédemment sérialisée.</span><span class="sxs-lookup"><span data-stu-id="35f77-108">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method deserializes a previously serialized code type declaration.</span></span> <span data-ttu-id="35f77-109">Le tableau suivant présente que l’implémentation par défaut de tâches effectue.</span><span class="sxs-lookup"><span data-stu-id="35f77-109">The following table shows the tasks default implementation performs.</span></span>  
  
|<span data-ttu-id="35f77-110">Tâche</span><span class="sxs-lookup"><span data-stu-id="35f77-110">Task</span></span>|<span data-ttu-id="35f77-111">Description </span><span class="sxs-lookup"><span data-stu-id="35f77-111">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="35f77-112">Vérifications de la casse</span><span class="sxs-lookup"><span data-stu-id="35f77-112">Case Sensitivity Checks</span></span>|<span data-ttu-id="35f77-113">L’implémentation recherche un <xref:System.CodeDom.Compiler.CodeDomProvider> service pour décider si elle doit traiter des membres comme respectant la casse ou de la casse.</span><span class="sxs-lookup"><span data-stu-id="35f77-113">The implementation searches for a <xref:System.CodeDom.Compiler.CodeDomProvider> service to decide if it should treat members as case sensitive or case insensitive.</span></span>|  
|<span data-ttu-id="35f77-114">Instruction de tri</span><span class="sxs-lookup"><span data-stu-id="35f77-114">Statement Sorting</span></span>|<span data-ttu-id="35f77-115">Toutes les variables membres et variables locales des méthodes init sont stockés dans une table.</span><span class="sxs-lookup"><span data-stu-id="35f77-115">All member variables and local variables from init methods are stored in a table.</span></span> <span data-ttu-id="35f77-116">Chaque instruction dans une méthode init est ajouté à une collection d’instructions regroupée en fonction de son côté gauche, donc toutes les instructions d’une variable particulière sont regroupées sous cette variable.</span><span class="sxs-lookup"><span data-stu-id="35f77-116">Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</span></span> <span data-ttu-id="35f77-117">Les variables qui n’ont aucuns instructions sont ignorées.</span><span class="sxs-lookup"><span data-stu-id="35f77-117">Variables that have no statements are discarded.</span></span>|  
|<span data-ttu-id="35f77-118">Désérialisation</span><span class="sxs-lookup"><span data-stu-id="35f77-118">Deserialization</span></span>|<span data-ttu-id="35f77-119">Les collections de l’instruction pour chaque variable sont désérialisées en fonction de la variable.</span><span class="sxs-lookup"><span data-stu-id="35f77-119">The statement collections for each variable are deserialized according to the variable.</span></span>|  
  
 <span data-ttu-id="35f77-120">Le tableau suivant présente les services du <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> requiert de méthode.</span><span class="sxs-lookup"><span data-stu-id="35f77-120">The following table shows the services the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method requires.</span></span>  
  
|<span data-ttu-id="35f77-121">Service</span><span class="sxs-lookup"><span data-stu-id="35f77-121">Service</span></span>|<span data-ttu-id="35f77-122">Description </span><span class="sxs-lookup"><span data-stu-id="35f77-122">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|<span data-ttu-id="35f77-123">Bien que pas strictement nécessaire, le service, s’il est disponible, est utilisé pour déterminer si la sérialisation doit être sensible à la casse ou de la casse.</span><span class="sxs-lookup"><span data-stu-id="35f77-123">While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="35f77-124">Si un objet n’existe pas dans la table de noms pendant la désérialisation, une requête pour <xref:System.ComponentModel.IContainer> est effectuée.</span><span class="sxs-lookup"><span data-stu-id="35f77-124">If an object does not exist in the name table during deserialization, a query for <xref:System.ComponentModel.IContainer> is made.</span></span> <span data-ttu-id="35f77-125">Si cette requête réussit, le conteneur est activé pour l’objet.</span><span class="sxs-lookup"><span data-stu-id="35f77-125">If this query succeeds, the container is checked for the object.</span></span> <span data-ttu-id="35f77-126">Le conteneur est également utilisé comme auxiliaire pour n’importe quel argument de conteneur nécessaire aux composants.</span><span class="sxs-lookup"><span data-stu-id="35f77-126">The container is also used as a stand-in for any container argument needed by components.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35f77-127">
            <paramref name="manager" /> ou <paramref name="typeDecl" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-127">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethod (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration, value As Object) As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::CodeDom::CodeMemberMethod ^ GetInitializeMethod(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod&#xA;override this.GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod" Usage="typeCodeDomSerializer.GetInitializeMethod (manager, declaration, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="35f77-128">Gestionnaire de sérialisation à utiliser pour la sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-128">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="35f77-129">Déclaration de type à utiliser pour la sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-129">The type declaration to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="35f77-130">Valeur à utiliser pour la sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-130">The value to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35f77-131">Retourne la méthode dans laquelle sont stockées les instructions utilisées pour sérialiser un membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-131">Returns the method where statements used to serialize a member are stored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35f77-132">Méthode utilisée pour émettre tout le code d’initialisation pour le membre donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-132">The method used to emit all of the initialization code for the given member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35f77-133">Le <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> méthode retourne la méthode pour émettre tout le code d’initialisation pour le membre donné.</span><span class="sxs-lookup"><span data-stu-id="35f77-133">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> method returns the method to emit all of the initialization code for the given member.</span></span> <span data-ttu-id="35f77-134">L’implémentation par défaut retourne un constructeur vide.</span><span class="sxs-lookup"><span data-stu-id="35f77-134">The default implementation returns an empty constructor.</span></span> <span data-ttu-id="35f77-135">Si la même méthode doit retourner plusieurs valeurs, la même instance de la méthode doit être retournée.</span><span class="sxs-lookup"><span data-stu-id="35f77-135">If the same method is to be returned for multiple values, the same instance of the method should be returned.</span></span> <span data-ttu-id="35f77-136">Vous pouvez utiliser le <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dictionnaire à vous souvenir des méthodes que vous avez créé.</span><span class="sxs-lookup"><span data-stu-id="35f77-136">You can use the <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dictionary to remember methods you have created.</span></span> <span data-ttu-id="35f77-137">Le `typeDecl` paramètre peut également être utilisé pour ajouter des méthodes d’infrastructure.</span><span class="sxs-lookup"><span data-stu-id="35f77-137">The `typeDecl` parameter can also be used to add infrastructure methods.</span></span> <span data-ttu-id="35f77-138">Par exemple, si vous souhaitez émettre une méthode distincte pour chaque objet, vous devez une seule méthode qui appelle toutes ces méthodes à son tour.</span><span class="sxs-lookup"><span data-stu-id="35f77-138">For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</span></span> <span data-ttu-id="35f77-139">Cette méthode peut être ajoutée à la déclaration de type de code en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="35f77-139">This method can be added to the code type declaration as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35f77-140">
            <paramref name="manager" />, <paramref name="typeDecl" /> ou <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-140">
              <paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethods (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As CodeMemberMethod()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::CodeDom::CodeMemberMethod ^&gt; ^ GetInitializeMethods(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]&#xA;override this.GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]" Usage="typeCodeDomSerializer.GetInitializeMethods (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="35f77-141">Gestionnaire de sérialisation à utiliser pour la sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-141">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="35f77-142">Déclaration de type à utiliser pour la sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-142">The type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35f77-143">Retourne un tableau de méthodes à interpréter pendant une désérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-143">Returns an array of methods to be interpreted during deserialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35f77-144">Tableau de méthodes <see cref="T:System.CodeDom.CodeMemberMethod" /> à interpréter pendant une désérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-144">A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35f77-145">L’implémentation par défaut retourne un seul élément tableau avec le constructeur.</span><span class="sxs-lookup"><span data-stu-id="35f77-145">The default implementation returns a single-element array with the constructor in it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35f77-146">
            <paramref name="manager" /> ou <paramref name="typeDecl" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-146">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, root As Object, members As ICollection) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeTypeDeclaration ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ root, System::Collections::ICollection ^ members);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration&#xA;override this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration" Usage="typeCodeDomSerializer.Serialize (manager, root, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="35f77-147">Gestionnaire de sérialisation à utiliser pour la sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-147">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="root">
          <span data-ttu-id="35f77-148">L'objet à sérialiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-148">The object to serialize.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="35f77-149">Collection facultative de membres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-149">Optional collection of members.</span>
          </span>
          <span data-ttu-id="35f77-150">Peut être <see langword="null" /> ou vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-150">Can be <see langword="null" /> or empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35f77-151">Sérialise la racine de l'objet en créant une nouvelle déclaration de type qui définit la racine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-151">Serializes the object root by creating a new type declaration that defines root.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35f77-152">
            <see cref="T:System.CodeDom.CodeTypeDeclaration" /> qui définit l'objet racine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-152">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35f77-153">Le <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> méthode sérialise l’objet racine donné et la collection facultative de membres pour créer une nouvelle définition de type.</span><span class="sxs-lookup"><span data-stu-id="35f77-153">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method serializes the given root object and optional collection of members to create a new type definition.</span></span> <span data-ttu-id="35f77-154">Si le `members` collection contient des valeurs, ces valeurs sont sérialisées.</span><span class="sxs-lookup"><span data-stu-id="35f77-154">If the `members` collection contains values, these values are serialized.</span></span> <span data-ttu-id="35f77-155">Valeurs elles-mêmes peuvent sérialiser en tant que variables membres ou variables locales.</span><span class="sxs-lookup"><span data-stu-id="35f77-155">Values themselves may serialize as either member variables or local variables.</span></span> <span data-ttu-id="35f77-156">Cette détermination est faite en recherchant une propriété d’extendeur sur l’objet appelé `GenerateMember`.</span><span class="sxs-lookup"><span data-stu-id="35f77-156">This determination is done by searching for an extender property on the object called `GenerateMember`.</span></span> <span data-ttu-id="35f77-157">Si `true`, un membre est généré.</span><span class="sxs-lookup"><span data-stu-id="35f77-157">If `true`, a member is generated.</span></span> <span data-ttu-id="35f77-158">Sinon, une variable locale est générée.</span><span class="sxs-lookup"><span data-stu-id="35f77-158">Otherwise, a local variable is generated.</span></span> <span data-ttu-id="35f77-159">Pour plus de commodité, le `members` collection peut contenir l’objet racine.</span><span class="sxs-lookup"><span data-stu-id="35f77-159">For convenience, the `members` collection can contain the root object.</span></span> <span data-ttu-id="35f77-160">Dans ce cas, l’objet racine n’est pas également ajouté en tant que membre ou variable locale.</span><span class="sxs-lookup"><span data-stu-id="35f77-160">In this case, the root object is not also added as a member or local variable.</span></span>  
  
 <span data-ttu-id="35f77-161">Le nom du type retourné est effectuée à partir du nom de l’objet racine, s’il s’agissait d’un objet nommé.</span><span class="sxs-lookup"><span data-stu-id="35f77-161">The name of the returned type is taken from the root object’s name, if it was a named object.</span></span> <span data-ttu-id="35f77-162">Si ce n’est pas le cas, un nom est créé à partir du nom de type simple de la classe racine.</span><span class="sxs-lookup"><span data-stu-id="35f77-162">If not, a name is fabricated from the simple type name of the root class.</span></span>  
  
 <span data-ttu-id="35f77-163">Le tableau suivant présente les tâches effectuées par l’implémentation par défaut de la <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="35f77-163">The following table shows the tasks performed by the default implementation of the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method.</span></span>  
  
|<span data-ttu-id="35f77-164">Tâche</span><span class="sxs-lookup"><span data-stu-id="35f77-164">Task</span></span>|<span data-ttu-id="35f77-165">Description </span><span class="sxs-lookup"><span data-stu-id="35f77-165">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="35f77-166">Contexte de l’amorçage</span><span class="sxs-lookup"><span data-stu-id="35f77-166">Context Seeding</span></span>|<span data-ttu-id="35f77-167">Le contexte de sérialisation est initialisé avec les données, notamment le <xref:System.ComponentModel.Design.Serialization.RootContext> et <xref:System.CodeDom.CodeTypeDeclaration></span><span class="sxs-lookup"><span data-stu-id="35f77-167">The serialization context is initialized with data including the <xref:System.ComponentModel.Design.Serialization.RootContext> and <xref:System.CodeDom.CodeTypeDeclaration></span></span>|  
|<span data-ttu-id="35f77-168">Sérialisation de membre</span><span class="sxs-lookup"><span data-stu-id="35f77-168">Member Serialization</span></span>|<span data-ttu-id="35f77-169">Ensuite, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> parcourt tous les membres et les appels <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span><span class="sxs-lookup"><span data-stu-id="35f77-169">Next, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> walks all of the members and calls <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span></span> <span data-ttu-id="35f77-170">Sérialisation est effectuée de façon opportuniste dans <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, cela garantit que sérialisation n’est pas effectuée deux fois.</span><span class="sxs-lookup"><span data-stu-id="35f77-170">Because serialization is done opportunistically in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, this ensures that serialization is not done twice.</span></span>|  
|<span data-ttu-id="35f77-171">Sérialisation de racine</span><span class="sxs-lookup"><span data-stu-id="35f77-171">Root Serialization</span></span>|<span data-ttu-id="35f77-172">Ensuite, l’objet racine est sérialisé et ses instructions sont ajoutées à la collection d’instructions.</span><span class="sxs-lookup"><span data-stu-id="35f77-172">Next, the root object is serialized and its statements are added to the statement collection.</span></span>|  
|<span data-ttu-id="35f77-173">Intégration de l’instruction</span><span class="sxs-lookup"><span data-stu-id="35f77-173">Statement Integration</span></span>|<span data-ttu-id="35f77-174">Une fois que tous les objets sont sérialisés, le <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> méthode trie les instructions et les ajoute à une méthode retournée à partir de <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="35f77-174">After all objects are serialized, the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method orders the statements and adds them to a method returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span> <span data-ttu-id="35f77-175">Enfin, un constructeur est créé qui appelle toutes les méthodes retournés à partir de <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="35f77-175">Finally, a constructor is fabricated that calls all of the methods returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span>|  
  
-  
  
 <span data-ttu-id="35f77-176">Le tableau suivant présente les objets la <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> méthode place sur la pile de contexte.</span><span class="sxs-lookup"><span data-stu-id="35f77-176">The following table shows the objects the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method places on the context stack.</span></span>  
  
|<span data-ttu-id="35f77-177">Instance</span><span class="sxs-lookup"><span data-stu-id="35f77-177">Instance</span></span>|<span data-ttu-id="35f77-178">Description </span><span class="sxs-lookup"><span data-stu-id="35f77-178">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|<span data-ttu-id="35f77-179">Ce sérialiseur.</span><span class="sxs-lookup"><span data-stu-id="35f77-179">This serializer.</span></span> <span data-ttu-id="35f77-180">Dérivation de classes peut s’avérer utile pour ajouter des propriétés publiques à cette classe.</span><span class="sxs-lookup"><span data-stu-id="35f77-180">Deriving classes may find it useful to add public properties to this class.</span></span>|  
|<xref:System.CodeDom.CodeTypeDeclaration>|<span data-ttu-id="35f77-181">Le type en cours de création.</span><span class="sxs-lookup"><span data-stu-id="35f77-181">The type being created.</span></span> <span data-ttu-id="35f77-182">La plupart des objets n’avez pas besoin d’un accès direct à cela.</span><span class="sxs-lookup"><span data-stu-id="35f77-182">Most objects do not need direct access to this.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35f77-183">
            <paramref name="manager" /> ou <paramref name="root" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f77-183">
              <paramref name="manager" /> or <paramref name="root" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
  </Members>
</Type>