<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DesignerLoader.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51ceac61034c2821d36ae8f0792cf3b40e2e98ee3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ceac61034c2821d36ae8f0792cf3b40e2e98ee3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>Provides a basic designer loader interface that can be used to implement a custom designer loader.</source>
          <target state="translated">Fournit une interface de chargeur de concepteur de base pouvant être utilisée pour implémenter un chargeur de concepteur personnalisé.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> can be implemented to support custom loading of a designer and designer components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> peut être implémentée pour prendre en charge le chargement personnalisé d’un concepteur et de composants de concepteur.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>A designer loader is also responsible for writing changes to an open document back to the storage the loader used when loading the document after the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A&gt;</ph> method is called.</source>
          <target state="translated">Un chargeur de concepteur est également chargé d’écrire des modifications à un document ouvert sur le stockage le chargeur utilisé lors du chargement du document après la <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A&gt;</ph> méthode est appelée.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>By default, the Visual Studio development environment creates its own variety of <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> that can load basic designer projects.</source>
          <target state="translated">Par défaut, l’environnement de développement Visual Studio crée sa propre variété de <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> qui peut charger des projets de Concepteur de base.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>To create a custom designer loader, you must inherit from and implement the abstract <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> class.</source>
          <target state="translated">Pour créer un chargeur de concepteur personnalisé, vous devez hériter et implémenter l’abstraite <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>You cannot directly instantiate <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>, as it has no public constructor.</source>
          <target state="translated">Vous ne pouvez pas instancier directement <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>, comme il n’a aucun constructeur public.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>When <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A&gt;</ph> is invoked, the designer loader loads the design document, displays the designer surface using the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> interface, and calls <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt;</ph> on the <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> interface when done.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A&gt;</ph> est appelé, le chargeur de concepteur charge le document de conception, affiche le concepteur surface à l’aide de la <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> interface et les appels <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt;</ph> sur la <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> interface lorsqu’elle est effectuée.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> implementation is usually the same class that implements <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> implémentation est généralement la même classe qui implémente <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>for full access to system resources.</source>
          <target state="translated">pour un accès complet aux ressources système.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">Valeur de la demande : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>Associated state:</source>
          <target state="translated">État associé :</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
          <source>The loader host through which this loader loads components.</source>
          <target state="translated">Hôte de chargeur par le biais duquel ce chargeur charge les composants.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
          <source>Begins loading a designer.</source>
          <target state="translated">Commence le chargement d'un concepteur.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> that is passed to the <ph id="ph2">`host`</ph> parameter is typically the same object as the designer host.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> qui est passé à la <ph id="ph2">`host`</ph> paramètre est généralement le même objet que l’hôte de concepteur.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
          <source>Through this reference to the loader host, the designer loader can reload the design document and indicate that it has finished loading the design document.</source>
          <target state="translated">Grâce à cette référence à l’hôte du chargeur, le chargeur de concepteur peut recharger le document de conception et indiquer qu’il a terminé le chargement du document de conception.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /&gt;</ph>.</source>
          <target state="translated">Libère toutes les ressources utilisées par <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>.</source>
          <target state="translated">Appelez la méthode <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> une fois que vous avez terminé d'utiliser <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> in an unusable state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> rend le <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> inutilisable.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> was occupying.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph>, vous devez libérer toutes les références à la <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> pour que le garbage collector puisse récupérer la mémoire qui le <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> occupée.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>implémentant une méthode de suppression<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>.</source>
          <target state="translated">Appelez toujours <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> avant de libérer votre dernière référence à <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> de l'objet <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Flush">
          <source>Writes cached changes to the location that the designer was loaded from.</source>
          <target state="translated">Écrit les modifications mises en cache à l'emplacement à partir duquel le concepteur a été chargé.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Flush">
          <source>The designer host calls this method periodically to ensure that changes made to the document were saved by the designer loader.</source>
          <target state="translated">L’hôte de concepteur appelle cette méthode périodiquement pour vous assurer que les modifications apportées au document ont été enregistrées par le chargeur de concepteur.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Flush">
          <source>This method allows designer loaders to implement an asynchronous write scheme to improve performance.</source>
          <target state="translated">Cette méthode permet d’implémenter un schéma d’écriture asynchrone pour améliorer les performances des chargeurs de concepteur.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Flush">
          <source>The default implementation of this method does nothing.</source>
          <target state="translated">L’implémentation par défaut de cette méthode ne fait rien.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerLoader.Loading">
          <source>Gets a value indicating whether the loader is currently loading a document.</source>
          <target state="translated">Obtient une valeur indiquant si le chargeur charge actuellement un document.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerLoader.Loading">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the loader is currently loading a document; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le chargeur charge actuellement un document ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>