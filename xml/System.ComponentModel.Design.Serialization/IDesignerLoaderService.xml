<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="101efbeb4f9297253c7d86ddfb36bb534a207280" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36708549" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type IDesignerLoaderService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fournit une interface qui peut étendre un chargeur de concepteur de sorte qu'il prenne en charge le chargement asynchrone de composants externes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.ComponentModel.Design.Serialization.DesignerLoader> peut implémenter cette interface pour gérer le chargement du concepteur qui implique des composants externes. Cette interface permet également à des composants externes de lancer un rechargement de l’aire de conception en appelant <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>. Un chargeur de concepteur n’a pas d’implémenter cette interface si elle ne requiert pas de prise en charge pour le chargement asynchrone.  
  
 Concepteur de chargement à l’aide d’une implémentation personnalisée de la <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> peut se produire dans diverses manières. Composants externes parfois sont impliqués dans le processus de chargement. Pour faciliter le chargement des dépendances externes, l’interface de service du chargeur de concepteur fournit un mécanisme qui détermine quand le chargement est terminé et permet à chaque partie du chargement de signaler qu’elle est terminée. Le <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> détermine généralement lorsque le chargement est terminé en testant un compteur qui suit le nombre de dépendances de chargement restantes. Lorsque chaque partie de la charge est terminée, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> est appelée et le service décrémente le compteur. Pour définir le nombre de processus de chargement dépendants, appelez <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> une fois pour chaque processus de chargement qui appelle <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> lorsque son chargement est terminée. Lorsque le chargement final est terminé, le service appelle <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> sur l’hôte du chargeur.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberSignature Language="F#" Value="abstract member AddLoadDependency : unit -&gt; unit" Usage="iDesignerLoaderService.AddLoadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inscrit un composant externe comme appartenant au processus de chargement managé par cette interface.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> une fois pour chaque objet externe qui participe au processus de chargement. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> est appelée lorsque le travail du processus de chargement est effectué.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberSignature Language="F#" Value="abstract member DependentLoadComplete : bool * System.Collections.ICollection -&gt; unit" Usage="iDesignerLoaderService.DependentLoadComplete (successful, errorCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <see langword="true" /> si le chargement du concepteur réussit ; <see langword="false" /> si des erreurs ont empêché la fin du chargement.</param>
        <param name="errorCollection">Collection d'erreurs s'étant éventuellement produites pendant le chargement. Si aucune erreur ne s'est produite, on passe une collection vide ou <see langword="null" />.</param>
        <summary>Signale qu'un chargement dépendant est terminé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée pour signaler qu’une opération de chargement dépendante est terminée. Appelez <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> une fois pour chaque processus a été inscrit en appelant <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, qui est déjà terminée.  
  
 Réussit si le chargement dépendant, l’appelant définit le `successful` paramètre `true` et passe une collection vide ou `null` à le `errorCollection` paramètre. Si le chargement dépendant rencontre des erreurs, l’appelant définit le `successful` paramètre `false` et passe une collection d’exceptions qui indiquent l’ou les raisons de l’échec de le `errorCollection` paramètre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; bool" Usage="iDesignerLoaderService.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recharge le document de design.</summary>
        <returns>
          <see langword="true" /> si la demande de rechargement est acceptée, ou <see langword="false" /> si le chargeur ne permet pas le rechargement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 N’importe quel objet peut appeler cette méthode pour demander que le chargeur recharge le document de conception. Si le chargeur prend en charge le rechargement et est compatible avec le rechargement, le chargeur de concepteur peut retourner `true`. Sinon, elle retourne `false`, ce qui indique que le rechargement ne se produira pas. Les appelants ne peuvent pas s’appuient sur le rechargement effectue immédiatement. le chargeur de concepteur peut planifier cette opération à un autre moment, ou il peut tenter de recharger à la fois.  
  
 L’appelant peut afficher un message à l’utilisateur si le concepteur ne peut pas être rechargé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>