<Type Name="INameCreationService" FullName="System.ComponentModel.Design.Serialization.INameCreationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e3f89aa3dd1694e1a3b5a2c741089250dbba7f6f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37698193" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameCreationService" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameCreationService" />
  <TypeSignature Language="F#" Value="type INameCreationService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="776b0-101">Fournit un service pouvant générer des noms uniques pour des objets.</span>
      <span class="sxs-lookup">
        <span data-stu-id="776b0-101">Provides a service that can generate unique names for objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="776b0-102">Un <xref:System.ComponentModel.Design.Serialization.DesignerLoader> peut implémenter ce service pour fournir un moyen pour un concepteur créer de nouveaux noms uniques pour les objets.</span><span class="sxs-lookup"><span data-stu-id="776b0-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this service to provide a way for a designer to create new, unique names for objects.</span></span> <span data-ttu-id="776b0-103">Si ce service n’est pas disponible, le concepteur utilise une implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="776b0-103">If this service is not available, the designer uses a default implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="776b0-104">L’exemple de code suivant fournit un exemple <xref:System.ComponentModel.Design.Serialization.INameCreationService> implémentation.</span><span class="sxs-lookup"><span data-stu-id="776b0-104">The following example code provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService> implementation.</span></span> <span data-ttu-id="776b0-105">Le service peut créer un nom unique basé sur un type qui ne correspond pas à tous les noms dans le conteneur spécifié.</span><span class="sxs-lookup"><span data-stu-id="776b0-105">The service can create a unique name based on a type that does not match any names in the specified container.</span></span> <span data-ttu-id="776b0-106">Il peut également valider une chaîne de nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="776b0-106">It can also validate a specified name string.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#1)]
 [!code-csharp[INameCreationServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#1)]
 [!code-vb[INameCreationServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateName">
      <MemberSignature Language="C#" Value="public string CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateName (container As IContainer, dataType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateName(System::ComponentModel::IContainer ^ container, Type ^ dataType);" />
      <MemberSignature Language="F#" Value="abstract member CreateName : System.ComponentModel.IContainer * Type -&gt; string" Usage="iNameCreationService.CreateName (container, dataType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="776b0-107">Conteneur dans lequel le nouvel objet est ajouté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="776b0-107">The container where the new object is added.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="776b0-108">Type de données de l'objet auquel le nom est attribué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="776b0-108">The data type of the object that receives the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="776b0-109">Crée un nouveau nom spécifique à tous les composants du conteneur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="776b0-109">Creates a new name that is unique to all components in the specified container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="776b0-110">Nom unique pour le type de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="776b0-110">A unique name for the data type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="776b0-111">Cette méthode retourne un nom pour le nouvel objet qui est unique dans le conteneur spécifié.</span><span class="sxs-lookup"><span data-stu-id="776b0-111">This method returns a name for the new object that is unique within the specified container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="776b0-112">L’exemple de code suivant fournit un exemple <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType> implémentation de la méthode.</span><span class="sxs-lookup"><span data-stu-id="776b0-112">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="776b0-113">La méthode peut créer un nom basé sur le nom d’un type spécifié qui est unique pour les noms des composants dans le conteneur spécifié.</span><span class="sxs-lookup"><span data-stu-id="776b0-113">The method can create a name based on the name of a specified type that is unique to the names of the components within the specified container.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[INameCreationServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#2)]
 [!code-vb[INameCreationServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="776b0-114">
            <para>Ce type de service est souvent implémenté pour créer un nom d’objet unique à partir du nom du type de données, souvent accompagné d’un nombre qui permet au nom d’être un identificateur unique. Par exemple, <see langword="ListBox1" /> pour un <see langword="ListBox" /> objet.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="776b0-114">
              <para>This type of service is often implemented to create a unique object name from the name of the data type, often appended with a number that allows the name to be a unique identifier. For example, <see langword="ListBox1" /> for a <see langword="ListBox" /> object.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsValidName">
      <MemberSignature Language="C#" Value="public bool IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member IsValidName : string -&gt; bool" Usage="iNameCreationService.IsValidName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="776b0-115">Nom à valider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="776b0-115">The name to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="776b0-116">Obtient une valeur indiquant si le nom spécifié est valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="776b0-116">Gets a value indicating whether the specified name is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="776b0-117">
            <see langword="true" /> si le nom est valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="776b0-117">
              <see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="776b0-118">Une implémentation de la <xref:System.ComponentModel.Design.Serialization.INameCreationService> peut avoir des règles qui définissent les paramètres des noms valides.</span><span class="sxs-lookup"><span data-stu-id="776b0-118">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="776b0-119">Cette méthode peut être implémentée pour valider un nom et appliquer ces règles.</span><span class="sxs-lookup"><span data-stu-id="776b0-119">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="776b0-120">L’exemple de code suivant fournit un exemple <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> implémentation de la méthode.</span><span class="sxs-lookup"><span data-stu-id="776b0-120">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="776b0-121">La méthode utilise un schéma de validation de chaîne qui examine chaque caractère de la chaîne spécifiée pour déterminer si la chaîne spécifiée est un nom valide.</span><span class="sxs-lookup"><span data-stu-id="776b0-121">The method uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="776b0-122">La méthode retourne `true` si la chaîne est valide, ou `false` dans le cas contraire.</span><span class="sxs-lookup"><span data-stu-id="776b0-122">The method returns `true` if the string is valid, or `false` otherwise.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#3)]
 [!code-csharp[INameCreationServiceExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#3)]
 [!code-vb[INameCreationServiceExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateName">
      <MemberSignature Language="C#" Value="public void ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ValidateName : string -&gt; unit" Usage="iNameCreationService.ValidateName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="776b0-123">Nom à valider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="776b0-123">The name to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="776b0-124">Obtient une valeur indiquant si le nom spécifié est valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="776b0-124">Gets a value indicating whether the specified name is valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="776b0-125">Une implémentation de la <xref:System.ComponentModel.Design.Serialization.INameCreationService> peut avoir des règles qui définissent les paramètres des noms valides.</span><span class="sxs-lookup"><span data-stu-id="776b0-125">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="776b0-126">Cette méthode peut être implémentée pour valider un nom et appliquer ces règles.</span><span class="sxs-lookup"><span data-stu-id="776b0-126">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
 <span data-ttu-id="776b0-127">Cette méthode est similaire à <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>, sauf que cette méthode lève une exception si le nom n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="776b0-127">This method is similar to <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>, except that this method throws an exception if the name is invalid.</span></span> <span data-ttu-id="776b0-128">Cela permet aux implémenteurs de fournir des informations détaillées dans le message d’exception.</span><span class="sxs-lookup"><span data-stu-id="776b0-128">This allows implementers to provide detailed information in the exception message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="776b0-129">L’exemple de code suivant fournit un exemple <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> implémentation de la méthode qui utilise un schéma de validation de chaîne qui examine chaque caractère de la chaîne spécifiée pour déterminer si la chaîne spécifiée est un nom valide.</span><span class="sxs-lookup"><span data-stu-id="776b0-129">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation that uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="776b0-130">La méthode lève une exception si la chaîne n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="776b0-130">The method throws an exception if the string is not valid.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#4)]
 [!code-csharp[INameCreationServiceExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#4)]
 [!code-vb[INameCreationServiceExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>