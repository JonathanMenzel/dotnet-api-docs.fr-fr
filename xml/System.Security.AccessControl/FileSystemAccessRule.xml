<Type Name="FileSystemAccessRule" FullName="System.Security.AccessControl.FileSystemAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf298630e77f1516eb18c5c54e25c66c699f8fdd" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56774570" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileSystemAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystemAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSystemAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type FileSystemAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une abstraction d'une entrée de contrôle d'accès (ACE) qui définit une règle d'accès pour un fichier ou un répertoire. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemAccessRule> classe représente une abstraction d’une entrée de contrôle d’accès (ACE) sous-jacente qui spécifie un compte d’utilisateur, le type d’accès à fournir (lecture, écriture et ainsi de suite) et s’il faut autoriser ou refuser ce droit.  Cette classe peut également spécifier comment les règles d’accès sont propagées aux objets enfants.  
  
 Utilisez la <xref:System.Security.AccessControl.FileSystemAccessRule> classe pour créer une nouvelle règle d’accès.  Vous pouvez conserver la règle à l’aide de la <xref:System.Security.AccessControl.FileSecurity> ou <xref:System.Security.AccessControl.DirectorySecurity> classe.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Security.AccessControl.FileSecurity> classe pour ajouter et supprimer ensuite une entrée de contrôle d’accès (ACE) d’un fichier.  Vous devez entrer un compte d'utilisateur ou de groupe valide pour exécuter cet exemple.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">Objet <see cref="T:System.Security.Principal.IdentityReference" /> qui encapsule une référence à un compte d’utilisateur.</param>
        <param name="fileSystemRights">Une des valeurs <see cref="T:System.Security.AccessControl.FileSystemRights" /> qui spécifie le type d’opération associé à la règle d’accès.</param>
        <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> qui spécifie s’il faut autoriser ou refuser l’opération.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> à l'aide d'une référence à un compte d'utilisateur, d'une valeur qui spécifie le type d'opération associé à la règle d'accès et d'une valeur qui spécifie s'il faut autoriser ou refuser l'opération.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer une règle de contrôle d’accès que vous pouvez rendre persistante à l’aide de la <xref:System.Security.AccessControl.FileSecurity> ou <xref:System.Security.AccessControl.DirectorySecurity> classe.  Règles de contrôle d’accès définissent les droits de compte d’utilisateur qui déterminent les actions qui sont autorisées ou interdits sur les ordinateurs exécutant Microsoft Windows.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="identity" /> n'est pas un objet <see cref="T:System.Security.Principal.IdentityReference" />.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="identity" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Une énumération incorrecte a été passée au paramètre <paramref name="type" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::String ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : string * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">Nom d'un compte d'utilisateur.</param>
        <param name="fileSystemRights">Une des valeurs <see cref="T:System.Security.AccessControl.FileSystemRights" /> qui spécifie le type d’opération associé à la règle d’accès.</param>
        <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> qui spécifie s’il faut autoriser ou refuser l’opération.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> à l'aide du nom d'un compte d'utilisateur, d'une valeur qui spécifie le type d'opération associé à la règle d'accès et d'une valeur qui décrit s'il faut autoriser ou refuser l'opération.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer une règle de contrôle d’accès que vous pouvez rendre persistante à l’aide de la <xref:System.Security.AccessControl.FileSecurity> ou <xref:System.Security.AccessControl.DirectorySecurity> classe.  Règles de contrôle d’accès définissent les droits de compte d’utilisateur qui déterminent les actions qui sont autorisées ou interdits sur les ordinateurs exécutant Microsoft Windows.  
  
 Le `identity` paramètre doit identifier un compte valide sur l’ordinateur actuel ou le domaine.  La chaîne prend la forme suivante, où `DOMAIN` est le nom d’un nom de domaine ou d’ordinateur valid et `account` est le nom d’un compte d’utilisateur valide sur un ordinateur ou un domaine : `DOMAIN\account`.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Security.AccessControl.FileSecurity> classe pour ajouter et supprimer ensuite une entrée de contrôle d’accès (ACE) d’un fichier.  Vous devez entrer un compte d'utilisateur ou de groupe valide pour exécuter cet exemple.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="identity" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Une énumération incorrecte a été passée au paramètre <paramref name="type" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">Objet <see cref="T:System.Security.Principal.IdentityReference" /> qui encapsule une référence à un compte d’utilisateur.</param>
        <param name="fileSystemRights">Une des valeurs <see cref="T:System.Security.AccessControl.FileSystemRights" /> qui spécifie le type d’opération associé à la règle d’accès.</param>
        <param name="inheritanceFlags">Une des valeurs <see cref="T:System.Security.AccessControl.InheritanceFlags" /> qui spécifie comment les masques d'accès sont propagés aux objets enfants.</param>
        <param name="propagationFlags">Une des valeurs <see cref="T:System.Security.AccessControl.PropagationFlags" /> qui spécifie comment les entrées de contrôle d'accès (ACE) sont propagées aux objets enfants.</param>
        <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> qui spécifie s’il faut autoriser ou refuser l’opération.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> à l'aide d'une référence à un compte d'utilisateur, d'une valeur qui spécifie le type d'opération associé à la règle d'accès, d'une valeur qui détermine comment les droits sont hérités, d'une valeur qui détermine comment les droits sont propagés et d'une valeur qui spécifie s'il faut autoriser ou refuser l'opération.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer une règle de contrôle d’accès que vous pouvez rendre persistante à l’aide de la <xref:System.Security.AccessControl.FileSecurity> ou <xref:System.Security.AccessControl.DirectorySecurity> classe.  Règles de contrôle d’accès définissent les droits de compte d’utilisateur qui déterminent les actions qui sont autorisées ou interdits sur les ordinateurs exécutant Microsoft Windows.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="identity" /> n'est pas un objet <see cref="T:System.Security.Principal.IdentityReference" />.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="identity" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Une énumération incorrecte a été passée au paramètre <paramref name="type" />.  
  
ou 
Une énumération incorrecte a été passée au paramètre <paramref name="inheritanceFlags" />.  
  
ou 
Une énumération incorrecte a été passée au paramètre <paramref name="propagationFlags" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::String ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : string * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">Nom d'un compte d'utilisateur.</param>
        <param name="fileSystemRights">Une des valeurs <see cref="T:System.Security.AccessControl.FileSystemRights" /> qui spécifie le type d’opération associé à la règle d’accès.</param>
        <param name="inheritanceFlags">Une des valeurs <see cref="T:System.Security.AccessControl.InheritanceFlags" /> qui spécifie comment les masques d'accès sont propagés aux objets enfants.</param>
        <param name="propagationFlags">Une des valeurs <see cref="T:System.Security.AccessControl.PropagationFlags" /> qui spécifie comment les entrées de contrôle d'accès (ACE) sont propagées aux objets enfants.</param>
        <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> qui spécifie s’il faut autoriser ou refuser l’opération.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> à l'aide du nom d'un compte d'utilisateur, d'une valeur qui spécifie le type d'opération associé à la règle d'accès, d'une valeur qui détermine comment les droits sont hérités, d'une valeur qui détermine comment les droits sont propagés et d'une valeur qui spécifie s'il faut autoriser ou refuser l'opération.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer une règle de contrôle d’accès que vous pouvez rendre persistante à l’aide de la <xref:System.Security.AccessControl.FileSecurity> ou <xref:System.Security.AccessControl.DirectorySecurity> classe.  Règles de contrôle d’accès définissent les droits de compte d’utilisateur qui déterminent les actions qui sont autorisées ou interdits sur les ordinateurs exécutant Microsoft Windows.  
  
 Le `identity` paramètre doit identifier un compte valide sur l’ordinateur actuel ou le domaine.  La chaîne prend la forme suivante, où `DOMAIN` est le nom d’un nom de domaine ou d’ordinateur valid et `account` est le nom d’un compte d’utilisateur valide sur un ordinateur ou un domaine : `DOMAIN\account`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="identity" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Une énumération incorrecte a été passée au paramètre <paramref name="type" />.  
  
ou 
Une énumération incorrecte a été passée au paramètre <paramref name="inheritanceFlags" />.  
  
ou 
Une énumération incorrecte a été passée au paramètre <paramref name="propagationFlags" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FileSystemRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.FileSystemRights FileSystemRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemAccessRule.FileSystemRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSystemRights As FileSystemRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::FileSystemRights FileSystemRights { System::Security::AccessControl::FileSystemRights get(); };" />
      <MemberSignature Language="F#" Value="member this.FileSystemRights : System.Security.AccessControl.FileSystemRights" Usage="System.Security.AccessControl.FileSystemAccessRule.FileSystemRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSystemRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les indicateurs <see cref="T:System.Security.AccessControl.FileSystemRights" /> associés à l'objet <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> en cours.</summary>
        <value>Indicateurs <see cref="T:System.Security.AccessControl.FileSystemRights" /> associés à l'objet <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> en cours.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>