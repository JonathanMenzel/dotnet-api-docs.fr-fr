<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SemaphoreAccessRule.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b72c9fc4a0941955630b26ee94d6981d6c7654fc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b72c9fc4a0941955630b26ee94d6981d6c7654fc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Represents a set of access rights allowed or denied for a user or group.</source>
          <target state="translated">Représente un jeu de droits d'accès accordés ou refusés à un utilisateur ou à un groupe.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system semaphores.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> classe est d’un jeu de classes .NET Framework fournit pour gérer la sécurité de contrôle d’accès Windows sur les sémaphores de système nommé.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>For an overview of these classes, and their relationship to the underlying Windows access control structures, see <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph>.</source>
          <target state="translated">Pour une vue d’ensemble de ces classes et leur relation avec les structures sous-jacentes de contrôle d’accès Windows, consultez <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Windows access control security is meaningful only for named system semaphores.</source>
          <target state="translated">Sécurité de contrôle d’accès Windows est significative uniquement pour les sémaphores système nommés.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>If a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object represents a local semaphore, access control is irrelevant.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> objet représente un sémaphore local, le contrôle d’accès n’est pas pertinent.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>To get a list of the rules currently applied to a named semaphore, use the <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, then use its <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt;</ph> method to obtain a collection of <ph id="ph4">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects.</source>
          <target state="translated">Pour obtenir une liste de règles en cours sur un sémaphore nommé, utilisez la <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> méthode pour obtenir un <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> de l’objet, puis utiliser son <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt;</ph> méthode pour obtenir une collection de <ph id="ph4">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objets ne mappent pas un à un avec les entrées de contrôle d’accès dans la liste de contrôle accès discrétionnaire (DACL) sous-jacent.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>When you get the set of all access rules for a semaphore, the set contains the minimum number of rules currently required to express all the access control entries.</source>
          <target state="translated">Lorsque vous obtenez l’ensemble de toutes les règles d’accès d’un sémaphore, le jeu contient le nombre minimal de règles actuellement requises pour exprimer toutes les entrées de contrôle d’accès.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The underlying access control entries change as you apply and remove rules.</source>
          <target state="translated">Les entrées de contrôle d’accès sous-jacentes modifier comme vous appliquer et supprimer des règles.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The information in rules is merged if possible, to maintain the smallest number of access control entries.</source>
          <target state="translated">Les informations contenues dans les règles sont fusionnés dans la mesure du possible, pour mettre à jour le plus petit nombre d’entrées de contrôle d’accès.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</source>
          <target state="translated">Par conséquent, lors de la lecture de la liste actuelle des règles, il ne ressemble pas forcément exactement à la liste de toutes les règles que vous avez ajouté.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Use <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects to specify access rights to allow or deny to a user or group.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> pour spécifier les droits d’accès pour autoriser ou refuser à un utilisateur ou un groupe d’objets.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> object always represents either allowed access or denied access, never both.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> toujours l’objet représente un accès accordé ou refusé d’accès, jamais les deux.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>To apply a rule to a named system semaphore, use the <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object.</source>
          <target state="translated">Pour appliquer une règle à un sémaphore système nommé, utilisez la <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> méthode pour obtenir le <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Modify the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object by using its methods to add the rule, and then use the <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to reattach the security object.</source>
          <target state="translated">Modifier la <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> objet à l’aide de ses méthodes pour ajouter la règle, puis utiliser le <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> méthode pour rattacher l’objet de sécurité.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Changes you make to a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object do not affect the access levels of the named semaphore until you call the <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to assign the altered security object to the named semaphore.</source>
          <target state="translated">Modifications apportées à un <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> objet n’affectent pas les niveaux d’accès du sémaphore nommé jusqu'à ce que vous appeliez la <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> méthode pour attribuer l’objet de sécurité modifié pour le sémaphore nommé.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects are immutable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> les objets sont immuables.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Security for a semaphore is modified using the methods of the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> class to add or remove rules; as you do this, the underlying access control entries are modified.</source>
          <target state="translated">Sécurité d’un sémaphore est modifiée à l’aide des méthodes de la <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> classe pour ajouter ou supprimer des règles ; comme vous le faites, les entrées de contrôle d’accès sous-jacentes sont modifiées.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">La sécurité sur les objets de synchronisation n’est pas pris en charge par Windows 98 ou Windows Millennium Edition.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The following code example demonstrates the separation between <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules, and shows the combination of rights in compatible rules.</source>
          <target state="translated">L’exemple de code suivant illustre la séparation entre <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> règles et <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> des règles et affiche la combinaison de droits des règles compatibles.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">L’exemple crée un <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> objet, ajoute des règles qui accordent et refusent divers droits à l’utilisateur actuel et affiche la paire de règles résultante.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">L’exemple permet de nouveaux droits de l’utilisateur actuel, puis affiche le résultat, en indiquant que les nouveaux droits sont fusionnés avec les <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> règle.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">Cet exemple n’attache pas l’objet de sécurité à un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Vous trouverez des exemples qui attachent des objets de sécurité dans <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.SemaphoreAccessRule">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>The user or group the rule applies to.</source>
          <target state="translated">Utilisateur ou groupe auquel s'applique la règle.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>Must be of type <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> or a type such as <ph id="ph2">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph3">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated">Doit être de type <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> ou d'un type, tel que <ph id="ph2">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> qui peut être converti en type <ph id="ph3">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> values specifying the rights allowed or denied.</source>
          <target state="translated">Combinaison d'opérations de bits de valeurs <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> spécifiant les droits accordés ou refusés.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">Une des valeurs <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> spécifiant si les droits sont accordés ou refusés.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph>, en spécifiant l'utilisateur ou le groupe auquel la règle s'applique, les droits d'accès, et si les droits d'accès spécifiés sont accordés ou refusés.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>To enter a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph>, for example by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method, a user must have <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Pour entrer un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph>, par exemple en appelant le <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> (méthode), un utilisateur doit avoir <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType&gt;</ph> accès.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>To exit the semaphore, by calling the <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> method, the user must have <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Pour quitter le sémaphore, en appelant le <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> méthode, l’utilisateur doit avoir <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType&gt;</ph> accès.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> spécifie une valeur non valide.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> spécifie une valeur non valide.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> est égal à zéro.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> n'est pas du type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>, ni <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> qui peut être converti en type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>The name of the user or group the rule applies to.</source>
          <target state="translated">Nom de l'utilisateur ou du groupe auquel s'applique la règle.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> values specifying the rights allowed or denied.</source>
          <target state="translated">Combinaison d'opérations de bits de valeurs <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> spécifiant les droits accordés ou refusés.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">Une des valeurs <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> spécifiant si les droits sont accordés ou refusés.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /&gt;</ph>, en spécifiant le nom de l'utilisateur ou du groupe auquel la règle s'applique, les droits d'accès, et si les droits d'accès spécifiés sont accordés ou refusés.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>To enter a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph>, for example by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method, a user must have <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Pour entrer un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph>, par exemple en appelant le <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> (méthode), un utilisateur doit avoir <ph id="ph3">&lt;xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType&gt;</ph> accès.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>To exit the semaphore, by calling the <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> method, the user must have <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">Pour quitter le sémaphore, en appelant le <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> méthode, l’utilisateur doit avoir <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType&gt;</ph> accès.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>This constructor is equivalent to creating an <ph id="ph1">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object, by passing <ph id="ph2">`identity`</ph> to the <ph id="ph3">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, and passing the newly created <ph id="ph4">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29&gt;</ph> constructor.</source>
          <target state="translated">Ce constructeur est équivalent à la création d’un <ph id="ph1">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> objet, en passant <ph id="ph2">`identity`</ph> à la <ph id="ph3">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructeur et en passant nouvellement créé <ph id="ph4">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> de l’objet à le <ph id="ph5">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>The following code example demonstrates the use of this constructor to create <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de ce constructeur pour créer <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">L’exemple crée un <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> objet, ajoute des règles qui accordent et refusent divers droits à l’utilisateur actuel et affiche la paire de règles résultante.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">L’exemple permet de nouveaux droits de l’utilisateur actuel, puis affiche le résultat, en indiquant que les nouveaux droits sont fusionnés avec les <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> règle.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">Cet exemple n’attache pas l’objet de sécurité à un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Vous trouverez des exemples qui attachent des objets de sécurité dans <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> spécifie une valeur non valide.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> spécifie une valeur non valide.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> est égal à zéro.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is a zero-length string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> est une chaîne de longueur nulle.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is longer than 512 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> fait plus de 512 caractères.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>Gets the rights allowed or denied by the access rule.</source>
          <target state="translated">Obtient les droits accordés ou refusés par la règle d'accès.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> values indicating the rights allowed or denied by the access rule.</source>
          <target state="translated">Combinaison d'opérations de bits de valeurs <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SemaphoreRights" /&gt;</ph> spécifiant les droits accordés ou refusés par la règle d'accès.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> objects are immutable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule&gt;</ph> les objets sont immuables.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>You can create a new access rule representing a different user, different rights, or a different <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, but you cannot modify an existing access rule.</source>
          <target state="translated">Vous pouvez créer une nouvelle règle d’accès qui représente un utilisateur différent, des droits différents ou un autre <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, mais vous ne pouvez pas modifier une règle d’accès existant.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights%2A&gt;</ph> property to display the rights in the set of rules contained in a <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights%2A&gt;</ph> propriété pour afficher les droits dans l’ensemble de règles contenues dans un <ph id="ph2">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">L’exemple crée un <ph id="ph1">&lt;xref:System.Security.AccessControl.SemaphoreSecurity&gt;</ph> objet, ajoute des règles qui accordent et refusent divers droits à l’utilisateur actuel et affiche la paire de règles résultante.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">L’exemple permet de nouveaux droits de l’utilisateur actuel, puis affiche le résultat, en indiquant que les nouveaux droits sont fusionnés avec les <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> règle.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> object.</source>
          <target state="translated">Cet exemple n’attache pas l’objet de sécurité à un <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Vous trouverez des exemples qui attachent des objets de sécurité dans <ph id="ph1">&lt;xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>