<Type Name="FileSecurity" FullName="System.Security.AccessControl.FileSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cfd3e20070aa573413b01199193071123cb54876" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56766653" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileSecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <TypeSignature Language="F#" Value="type FileSecurity = class&#xA;    inherit FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente la sécurité de contrôle d'accès et d'audit pour un fichier. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSecurity> classe spécifie les droits d’accès pour un fichier système et la façon dont les tentatives d’accès sont auditées.  Cette classe représente des droits d’accès et d’audit sous la forme d’un ensemble de règles. Chaque règle d’accès est représenté par un <xref:System.Security.AccessControl.FileSystemAccessRule> de l’objet, tandis que chaque règle d’audit est représentée par un <xref:System.Security.AccessControl.FileSystemAuditRule> objet.  
  
 Le <xref:System.Security.AccessControl.FileSecurity> classe est une abstraction du système de sécurité des fichiers Microsoft Windows sous-jacent. Dans ce système, chaque fichier possède une liste de contrôle d’accès discrétionnaire (DACL), qui contrôle l’accès au fichier et une liste de contrôle d’accès système (SACL), qui spécifie les tentatives de contrôle d’accès sont auditées.  Le <xref:System.Security.AccessControl.FileSystemAccessRule> et <xref:System.Security.AccessControl.FileSystemAuditRule> classes sont des abstractions des entrées de contrôle d’accès (ACE) qui comprennent les DACL et les SACL.  
  
 Le <xref:System.Security.AccessControl.FileSecurity> classe masque de nombreux détails des DACL et les SACL ; vous n’avez pas à vous soucier du classement ACE ou des DACL null.  
  
 Utilisez la <xref:System.Security.AccessControl.FileSecurity> classe à récupérer, ajouter ou modifier les règles d’accès qui représentent le DACL et les SACL d’un fichier.  
  
 Pour conserver l’accès nouvelles ou modifiées ou les règles dans un fichier d’audit, utilisez le <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode). Pour récupérer un accès ou des règles d’audit à partir d’un fichier existant, utilisez la méthode <xref:System.IO.FileInfo.GetAccessControl%2A>.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Security.AccessControl.FileSecurity> classe à ajouter, puis supprimer une entrée de contrôle d’accès (ACL) de liste à partir d’un fichier.  Vous devez entrer un compte d'utilisateur ou de groupe valide pour exécuter cet exemple.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.FileSecurity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.FileSecurity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur lorsque vous souhaitez créer vide <xref:System.Security.AccessControl.FileSecurity> objet qui n’est pas basé sur un fichier existant.  Vous pouvez remplir l’objet avec les informations de contrôle d’accès, puis appliquez-le à un fichier.  
  
 Vous pouvez ajouter un accès ou d’audit pour le <xref:System.Security.AccessControl.FileSecurity> à l’aide de l’objet le <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> (méthode). Vous pouvez supprimer l’accès ou à l’aide de règles d’audit le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> (méthode).  
  
 Pour conserver l’accès nouvelles ou modifiées ou les règles dans un fichier d’audit, utilisez le <xref:System.IO.File.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  Pour récupérer un accès ou d’audit à partir d’un fichier existant, utilisez la <xref:System.IO.File.GetAccessControl%2A> ou <xref:System.IO.FileInfo.GetAccessControl%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Le système d'exploitation actuel n'est pas Microsoft Windows 2000 ou version ultérieure.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity (string fileName, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity(System::String ^ fileName, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSecurity : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.FileSecurity" Usage="new System.Security.AccessControl.FileSecurity (fileName, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="fileName">Emplacement du fichier à partir duquel créer un objet <see cref="T:System.Security.AccessControl.FileSecurity" />.</param>
        <param name="includeSections">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlSections" /> qui spécifie le type d'informations ACL à récupérer.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.FileSecurity" /> à partir d'un fichier spécifié à l'aide des valeurs spécifiées de l'énumération <see cref="T:System.Security.AccessControl.AccessControlSections" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur récupère les informations de contrôle d’accès pour le fichier spécifié et crée ensuite un <xref:System.Security.AccessControl.FileSecurity> objet qui encapsule ces informations.  Vous pouvez ensuite inspecter, ajouter ou supprimer les informations de contrôle d’accès pour le fichier spécifié.  
  
 Vous pouvez ajouter un accès ou d’audit pour le <xref:System.Security.AccessControl.FileSecurity> à l’aide de l’objet le <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> (méthode). Vous pouvez supprimer l’accès ou à l’aide de règles d’audit le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> (méthode).  
  
 Pour conserver l’accès nouvelles ou modifiées ou les règles dans un fichier d’audit, utilisez le <xref:System.IO.File.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  Pour récupérer un accès ou d’audit à partir d’un fichier existant, utilisez la <xref:System.IO.File.GetAccessControl%2A> ou <xref:System.IO.FileInfo.GetAccessControl%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="fileName" /> est une chaîne de longueur nulle, ne contient que des espaces blancs ou contient un ou plusieurs caractères non valides comme défini par <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès spécifié n'est pas valide (il se trouve, par exemple, sur un lecteur non mappé).</exception>
        <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié dans le paramètre <paramref name="fileName" /> est introuvable.</exception>
        <exception cref="T:System.IO.IOException">Une erreur d’E/S s’est produite lors de l’ouverture du fichier.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="path" /> a un format non valide.</exception>
        <exception cref="T:System.Runtime.InteropServices.SEHException">Le paramètre <paramref name="fileName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Le système d'exploitation actuel n'est pas Microsoft Windows 2000 ou version ultérieure.</exception>
        <exception cref="T:System.IO.PathTooLongException">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">Le compte système actuel n'a pas de privilèges d'administrateur.</exception>
        <exception cref="T:System.SystemException">Le fichier est introuvable.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le paramètre <paramref name="fileName" /> a spécifié un fichier qui est en lecture seule.  
  
ou 
Cette opération n'est pas prise en charge sur la plateforme actuelle.  
  
ou 
Le paramètre <paramref name="fileName" /> a spécifié un répertoire.  
  
ou 
L'appelant n'a pas l'autorisation requise.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Pour obtenir l’autorisation d’accès au fichier spécifié par le <paramref name="name" /> paramètre. Énumérations associées : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" />  
  
Action de sécurité : À la demande</permission>
        <block subset="none" type="usage"><para>Le <see cref="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" /> constructeur nécessite le compte actuel à disposer de privilèges administratifs. Pour créer une nouvelle instance de la <see cref="T:System.Security.AccessControl.FileSecurity" /> classe pour un fichier spécifique à l’aide d’un compte qui ne pas disposer de privilèges administratifs, utilisez le <see cref="M:System.IO.FileStream.GetAccessControl" /> (méthode).</para></block>
      </Docs>
    </Member>
  </Members>
</Type>