<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8ee8cc4343be15fdcafeb66e8d660e510b2bf5f" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52350115" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemSecurity abstract : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type FileSystemSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente la sécurité de contrôle d'accès et d'audit pour un fichier ou un répertoire.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity> est la classe de base pour le <xref:System.Security.AccessControl.FileSecurity> et <xref:System.Security.AccessControl.DirectorySecurity> classes.  Ces classes représentent tous les droits d’accès pour un fichier système ou un répertoire et définissent la façon dont les tentatives d’accès sont auditées.  
  
 Le <xref:System.Security.AccessControl.FileSystemSecurity> classe représente des droits d’accès et d’audit sous la forme d’un ensemble de règles. Chaque règle d’accès est représenté par un <xref:System.Security.AccessControl.FileSystemAccessRule> de l’objet, tandis que chaque règle d’audit est représentée par un <xref:System.Security.AccessControl.FileSystemAuditRule> objet.  
  
 Le <xref:System.Security.AccessControl.FileSystemSecurity> classe est une abstraction du système de sécurité des fichiers Microsoft Windows sous-jacent. Dans ce système, chaque fichier ou répertoire a une liste de contrôle d’accès discrétionnaire (DACL), qui contrôle l’accès au fichier ou répertoire, et une liste de contrôle d’accès système (SACL), qui spécifie les tentatives de contrôle d’accès sont auditées.  Le <xref:System.Security.AccessControl.FileSystemAccessRule> et <xref:System.Security.AccessControl.FileSystemAuditRule> classes sont des abstractions des entrées de contrôle d’accès (ACE) qui comprennent les DACL et les SACL.  
  
 Le <xref:System.Security.AccessControl.FileSystemSecurity> classe masque de nombreux détails des DACL et SACL ; vous n’avez pas à vous soucier du classement ACE ou des DACL null.  
  
 Pour conserver les informations de liste (ACL) de contrôle d’accès nouvelles ou modifiées dans un fichier, utilisez le <xref:System.IO.File.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  Pour rendre persistantes les informations ACL nouvelles ou modifiées dans un répertoire, utilisez la <xref:System.IO.Directory.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  
  
 Pour récupérer les informations ACL à partir d’un fichier, utilisez le <xref:System.IO.File.GetAccessControl%2A> ou <xref:System.IO.FileInfo.GetAccessControl%2A> (méthode).  Pour récupérer les informations ACL à partir d’un répertoire, utilisez la <xref:System.IO.Directory.GetAccessControl%2A> ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A> (méthode).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Security.AccessControl.FileSecurity> classe à ajouter, puis supprimer une entrée de contrôle d’accès (ACL) de liste à partir d’un fichier.  Vous devez entrer un compte d'utilisateur ou de groupe valide pour exécuter cet exemple.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'énumération utilisée par la classe <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> pour représenter des droits d'accès.</summary>
        <value>Objet <see cref="T:System.Type" /> représentant l'énumération <see cref="T:System.Security.AccessControl.FileSystemRights" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes qui dérivent de la <xref:System.Security.AccessControl.FileSystemSecurity> classe remplacement le <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> propriété et retournent le type qu’ils utilisent pour représenter des droits d’accès. Lorsque vous travaillez avec des tableaux ou collections contenant plusieurs types d’objets de sécurité, utilisez cette propriété pour déterminer le type d’énumération correct à utiliser avec chaque objet de sécurité.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="fileSystemSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">Objet <see cref="T:System.Security.Principal.IdentityReference" /> qui représente un compte d'utilisateur.</param>
        <param name="accessMask">Entier qui spécifie un type d'accès.</param>
        <param name="isInherited">
          <see langword="true" /> si la règle d'accès est héritée ; sinon, <see langword="false" />.</param>
        <param name="inheritanceFlags">Une des valeurs <see cref="T:System.Security.AccessControl.InheritanceFlags" /> qui spécifie la manière de propager des masques d'accès aux objets enfants.</param>
        <param name="propagationFlags">Une des valeurs <see cref="T:System.Security.AccessControl.PropagationFlags" /> qui spécifie la manière de propager les entrées du contrôle d'accès (ACE) aux objets enfants.</param>
        <param name="type">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> qui spécifie si l'accès est accordé ou refusé.</param>
        <summary>Crée une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> qui représente une nouvelle règle de contrôle d'accès pour l'utilisateur spécifié, avec les droits d'accès, le contrôle d'accès et les indicateurs spécifiés.</summary>
        <returns>Nouvel objet <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> qui représente une nouvelle règle de contrôle d'accès pour l'utilisateur spécifié, avec les droits d'accès, le contrôle d'accès et les indicateurs spécifiés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode recommandée pour créer des règles de contrôle d’accès consiste à utiliser les constructeurs de la <xref:System.Security.AccessControl.FileSystemAccessRule> classe.  
  
 Le type de retour de la <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> méthode est la classe de base, <xref:System.Security.AccessControl.AccessRule>, mais la valeur de retour peut être castée en toute sécurité à la classe dérivée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Les paramètres <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="type" /> spécifient une valeur non valide.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="identityReference" /> a la valeur <see langword="null" />.  
  
- ou - 
Le paramètre <paramref name="accessMask" /> est nul.</exception>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="identityReference" /> n'est ni du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'énumération utilisée par la classe <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> pour représenter des règles d'accès.</summary>
        <value>Objet <see cref="T:System.Type" /> représentant la classe <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes qui dérivent de la <xref:System.Security.AccessControl.FileSystemSecurity> classe remplacement le <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> propriété et retournent le type qu’ils utilisent pour représenter des règles d’accès. Lorsque vous travaillez avec des tableaux ou collections contenant plusieurs types d’objets de sécurité, utilisez cette propriété pour déterminer le type de règle d’accès correct à utiliser avec chaque objet de sécurité.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Objet <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> qui représente une autorisation de liste de contrôle d'accès (ACL) à ajouter à un fichier ou un répertoire.</param>
        <summary>Ajoute l'autorisation de liste de contrôle d'accès (ACL) spécifiée au fichier ou répertoire en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> méthode ajoute une nouvelle règle à la liste des règles contenue dans un <xref:System.Security.AccessControl.FileSystemSecurity> objet.  
  
 Si une liste de contrôle d’accès (ACL) existe déjà pour la règle spécifiée, la <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> méthode sera toujours ajouter la règle, à une exception près : un <xref:System.Security.AccessControl.FileSystemAccessRule> objet créé à l’aide de la <xref:System.Security.AccessControl.AccessControlType.Deny> valeur d’énumération remplace un objet créé à l’aide de la <xref:System.Security.AccessControl.AccessControlType.Allow> valeur d’énumération.  
  
 Pour rendre persistantes les informations ACL nouvelles ou modifiées dans un fichier, utilisez le <xref:System.IO.File.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  Pour rendre persistantes les informations ACL nouvelles ou modifiées dans un répertoire, utilisez la <xref:System.IO.Directory.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  
  
 Pour récupérer les informations ACL à partir d’un fichier, utilisez le <xref:System.IO.File.GetAccessControl%2A> ou <xref:System.IO.FileInfo.GetAccessControl%2A> (méthode).  Pour récupérer les informations ACL à partir d’un répertoire, utilisez la <xref:System.IO.Directory.GetAccessControl%2A> ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A> (méthode).  
  
 Lorsque vous ajoutez une règle d’accès sans affecter le <xref:System.Security.AccessControl.FileSystemRights.Synchronize> indicateur, la <xref:System.Security.AccessControl.FileSystemRights.Synchronize> indicateur sera automatiquement ajouté à votre règle.  Si vous supprimez ultérieurement la règle sans spécifier le <xref:System.Security.AccessControl.FileSystemRights.Synchronize> , l’indicateur sera automatiquement supprimé.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Security.AccessControl.FileSecurity> classe à ajouter, puis supprimer une entrée de contrôle d’accès (ACL) de liste à partir d’un fichier.  Vous devez entrer un compte d'utilisateur ou de groupe valide pour exécuter cet exemple.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Objet <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> qui représente une règle d'audit à ajouter à un fichier ou un répertoire.</param>
        <summary>Ajoute la règle d'audit spécifiée au fichier ou répertoire en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> méthode ajoute une nouvelle règle d’audit à la liste des règles contenue dans un <xref:System.Security.AccessControl.FileSystemSecurity> objet.  
  
 Si une règle d’audit existe déjà pour la règle spécifiée, la <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> méthode sera toujours ajouter la règle.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> méthode pour ajouter une règle d’audit dans un fichier et utilise le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> méthode pour supprimer la règle d’audit à partir du fichier.  Vous devez entrer un compte d'utilisateur ou de groupe valide pour exécuter cet exemple.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="fileSystemSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">Objet <see cref="T:System.Security.Principal.IdentityReference" /> qui représente un compte d'utilisateur.</param>
        <param name="accessMask">Entier qui spécifie un type d'accès.</param>
        <param name="isInherited">
          <see langword="true" /> si la règle d'accès est héritée ; sinon, <see langword="false" />.</param>
        <param name="inheritanceFlags">Une des valeurs <see cref="T:System.Security.AccessControl.InheritanceFlags" /> qui spécifie la manière de propager des masques d'accès aux objets enfants.</param>
        <param name="propagationFlags">Une des valeurs <see cref="T:System.Security.AccessControl.PropagationFlags" /> qui spécifie la manière de propager les entrées du contrôle d'accès (ACE) aux objets enfants.</param>
        <param name="flags">Une des valeurs <see cref="T:System.Security.AccessControl.AuditFlags" /> qui spécifie le type d'audit à effectuer.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> représentant la règle d'audit spécifiée pour l'utilisateur spécifié.</summary>
        <returns>Nouvel objet <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> représentant la règle d'audit spécifiée pour l'utilisateur spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode recommandée pour créer des règles d’audit consiste à utiliser les constructeurs de la <xref:System.Security.AccessControl.FileSystemAuditRule> classe.  
  
 Le type de retour de la <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> méthode est la classe de base, <xref:System.Security.AccessControl.AuditRule>, mais la valeur de retour peut être castée en toute sécurité à la classe dérivée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Les propriétés <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="flags" /> spécifient une valeur non valide.</exception>
        <exception cref="T:System.ArgumentNullException">La propriété <paramref name="identityReference" /> a la valeur <see langword="null" />.  
  
- ou - 
La propriété <paramref name="accessMask" /> est nulle.</exception>
        <exception cref="T:System.ArgumentException">La propriété <paramref name="identityReference" /> n'est ni du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type utilisé par la classe <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> pour représenter des règles d'audit.</summary>
        <value>Objet <see cref="T:System.Type" /> représentant la classe <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes qui dérivent de la <xref:System.Security.AccessControl.FileSystemSecurity> classe remplacement le <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> propriété et retournent le type qu’ils utilisent pour représenter des droits d’audit. Lorsque vous travaillez avec des tableaux ou collections contenant plusieurs types d’objets de sécurité, utilisez cette propriété pour déterminer le type de règle d’audit correct à utiliser avec chaque objet de sécurité.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As FileSystemAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; bool" Usage="fileSystemSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Objet <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> qui représente une autorisation de liste de contrôle d'accès (ACL) de suppression dans un fichier ou un répertoire.</param>
        <summary>Supprime toutes les autorisations correspondantes d'autorisation ou de refus de la liste de contrôle d'accès (ACL) du fichier ou du répertoire en cours.</summary>
        <returns>
          <see langword="true" /> si la règle d'accès a été supprimée ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> méthode supprime soit mise en correspondance tous les <xref:System.Security.AccessControl.AccessControlType.Deny> de règles d’accès ou de mise en correspondance tous les <xref:System.Security.AccessControl.AccessControlType.Allow> règles d’accès à partir du <xref:System.Security.AccessControl.FileSystemSecurity> objet.  Par exemple, vous pouvez utiliser cette méthode pour supprimer tous les <xref:System.Security.AccessControl.AccessControlType.Deny> règles d’accès pour un utilisateur en passant un <xref:System.Security.AccessControl.FileSystemAccessRule> objet créé à l’aide de la <xref:System.Security.AccessControl.AccessControlType.Deny> valeur, le <xref:System.Security.AccessControl.FileSystemRights.Read> valeur et un compte d’utilisateur.  Lorsque vous effectuez cette opération, le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> méthode supprime les règles de refus qui spécifient la <xref:System.Security.AccessControl.FileSystemRights.Read> valeur ou la <xref:System.Security.AccessControl.FileSystemRights.Write> valeur.  
  
 Pour conserver les informations de liste (ACL) de contrôle d’accès nouvelles ou modifiées dans un fichier, utilisez le <xref:System.IO.File.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  Pour rendre persistantes les informations ACL nouvelles ou modifiées dans un répertoire, utilisez la <xref:System.IO.Directory.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  
  
 Pour récupérer les informations ACL à partir d’un fichier, utilisez le <xref:System.IO.File.GetAccessControl%2A> ou <xref:System.IO.FileInfo.GetAccessControl%2A> (méthode).  Pour récupérer les informations ACL à partir d’un répertoire, utilisez la <xref:System.IO.Directory.GetAccessControl%2A> ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A> (méthode).  
  
 Lorsque vous ajoutez une règle d’accès sans affecter le <xref:System.Security.AccessControl.FileSystemRights.Synchronize> indicateur, la <xref:System.Security.AccessControl.FileSystemRights.Synchronize> indicateur sera automatiquement ajouté à votre règle.  Si vous supprimez ultérieurement la règle sans spécifier le <xref:System.Security.AccessControl.FileSystemRights.Synchronize> , l’indicateur sera automatiquement supprimé.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Security.AccessControl.FileSecurity> classe à ajouter, puis supprimer une entrée de contrôle d’accès (ACL) de liste à partir d’un fichier.  Vous devez entrer un compte d'utilisateur ou de groupe valide pour exécuter cet exemple.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Objet <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> qui spécifie un utilisateur dont les autorisations de liste de contrôle d'accès (ACL) doivent être supprimées d'un fichier ou d'un répertoire.</param>
        <summary>Supprime toutes les autorisations de liste de contrôle d'accès (ACL) pour l'utilisateur spécifié dans le fichier ou le répertoire en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> méthode supprime toutes les autorisations (ACL) de liste contrôle d’accès pour l’utilisateur spécifié.  La méthode ignore toutes les valeurs dans le <xref:System.Security.AccessControl.FileSystemAccessRule> objet sauf le compte d’utilisateur.  
  
 Pour rendre persistantes les informations ACL nouvelles ou modifiées dans un fichier, utilisez le <xref:System.IO.File.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  Pour rendre persistantes les informations ACL nouvelles ou modifiées dans un répertoire, utilisez la <xref:System.IO.Directory.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  
  
 Pour récupérer les informations ACL à partir d’un fichier, utilisez le <xref:System.IO.File.GetAccessControl%2A> ou <xref:System.IO.FileInfo.GetAccessControl%2A> (méthode).  Pour récupérer les informations ACL à partir d’un répertoire, utilisez la <xref:System.IO.Directory.GetAccessControl%2A> ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A> (méthode).  
  
 Lorsque vous ajoutez une règle d’accès sans affecter le <xref:System.Security.AccessControl.FileSystemRights.Synchronize> indicateur, la <xref:System.Security.AccessControl.FileSystemRights.Synchronize> indicateur sera automatiquement ajouté à votre règle.  Si vous supprimez ultérieurement la règle sans spécifier le <xref:System.Security.AccessControl.FileSystemRights.Synchronize> , l’indicateur sera automatiquement supprimé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Objet <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> qui spécifie un utilisateur dont les autorisations de liste de contrôle d'accès (ACL) doivent être supprimées d'un fichier ou d'un répertoire.</param>
        <summary>Supprime une seule autorisation correspondante d'autorisation ou de refus de la liste de contrôle d'accès (ACL) du fichier ou du répertoire en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> méthode enlève la <xref:System.Security.AccessControl.AccessControlType.Deny> accéder à la règle ou la mise en correspondance spécifié <xref:System.Security.AccessControl.AccessControlType.Allow> règle d’accès à partir du <xref:System.Security.AccessControl.FileSystemSecurity> objet.  Par exemple, vous pouvez utiliser cette méthode pour supprimer une certaine <xref:System.Security.AccessControl.AccessControlType.Deny> règle d’accès pour un utilisateur en passant un <xref:System.Security.AccessControl.FileSystemAccessRule> objet créé à l’aide de la <xref:System.Security.AccessControl.AccessControlType.Deny> valeur, le <xref:System.Security.AccessControl.FileSystemRights.Read> valeur et un compte d’utilisateur.  Lorsque vous effectuez cette opération, le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> méthode supprime uniquement la règle de refus qui spécifie la <xref:System.Security.AccessControl.FileSystemRights.Read> valeur.  Elle ne supprime pas les règles de refus qui spécifient la <xref:System.Security.AccessControl.FileSystemRights.Write> valeur.  
  
 Pour conserver les informations de liste (ACL) de contrôle d’accès nouvelles ou modifiées dans un fichier, utilisez le <xref:System.IO.File.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  Pour rendre persistantes les informations ACL nouvelles ou modifiées dans un répertoire, utilisez la <xref:System.IO.Directory.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  
  
 Pour récupérer les informations ACL à partir d’un fichier, utilisez le <xref:System.IO.File.GetAccessControl%2A> ou <xref:System.IO.FileInfo.GetAccessControl%2A> (méthode).  Pour récupérer les informations ACL à partir d’un répertoire, utilisez la <xref:System.IO.Directory.GetAccessControl%2A> ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A> (méthode).  
  
 Lorsque vous ajoutez une règle d’accès sans affecter le <xref:System.Security.AccessControl.FileSystemRights.Synchronize> indicateur, la <xref:System.Security.AccessControl.FileSystemRights.Synchronize> indicateur sera automatiquement ajouté à votre règle.  Si vous supprimez ultérieurement la règle sans spécifier le <xref:System.Security.AccessControl.FileSystemRights.Synchronize> , l’indicateur sera automatiquement supprimé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As FileSystemAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; bool" Usage="fileSystemSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Objet <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> qui représente une règle d'audit à supprimer d'un fichier ou un répertoire.</param>
        <summary>Supprime toutes les règles d'audit d'acceptation ou de refus dans le fichier ou le répertoire en cours.</summary>
        <returns>
          <see langword="true" /> si la règle d’audit a été supprimée ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> méthode supprime soit mise en correspondance tous les <xref:System.Security.AccessControl.AccessControlType.Deny> de règles d’audit ou de toutes les correspondances <xref:System.Security.AccessControl.AccessControlType.Allow> règles d’audit d’actuel <xref:System.Security.AccessControl.FileSystemSecurity> objet.  Par exemple, vous pouvez utiliser cette méthode pour supprimer tous les <xref:System.Security.AccessControl.AccessControlType.Deny> règles d’audit pour un utilisateur en passant un <xref:System.Security.AccessControl.FileSystemAuditRule> objet créé à l’aide de la <xref:System.Security.AccessControl.AccessControlType.Deny> valeur, le <xref:System.Security.AccessControl.AuditFlags.Failure> valeur et un compte d’utilisateur.  Lorsque vous effectuez cette opération, le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> méthode supprime les règles de refus qui spécifient la <xref:System.Security.AccessControl.AuditFlags.Failure> valeur ou la <xref:System.Security.AccessControl.AuditFlags.Success> valeur.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> méthode pour ajouter une règle d’audit dans un fichier et utilise le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> méthode pour supprimer la règle d’audit à partir du fichier.  Vous devez entrer un compte d'utilisateur ou de groupe valide pour exécuter cet exemple.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Objet <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> qui spécifie un utilisateur dont les règles d'audit doivent être supprimées d'un fichier ou d'un répertoire.</param>
        <summary>Supprime toutes les règles d'audit pour l'utilisateur spécifié du fichier ou du répertoire en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> méthode supprime toutes les règles d’audit pour l’utilisateur spécifié.  Il ignore toutes les valeurs dans le <xref:System.Security.AccessControl.FileSystemAuditRule> objet sauf le compte d’utilisateur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Objet <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> qui représente une règle d'audit à supprimer d'un fichier ou un répertoire.</param>
        <summary>Supprime une seule règle d'audit d'acceptation ou de refus correspondante du fichier ou du répertoire en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> méthode supprime la mise en correspondance spécifié <xref:System.Security.AccessControl.AccessControlType.Deny> d’audit de la règle ou la mise en correspondance spécifié <xref:System.Security.AccessControl.AccessControlType.Allow> règle d’audit à partir du <xref:System.Security.AccessControl.FileSystemSecurity> objet.  Par exemple, vous pouvez utiliser cette méthode pour supprimer une certaine <xref:System.Security.AccessControl.AccessControlType.Deny> règle d’audit pour un utilisateur en passant un <xref:System.Security.AccessControl.FileSystemAuditRule> objet créé à l’aide de la <xref:System.Security.AccessControl.AccessControlType.Deny> valeur, le <xref:System.Security.AccessControl.AuditFlags.Failure> valeur et un compte d’utilisateur.  Lorsque vous effectuez cette opération, le <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> méthode supprime uniquement la règle de refus qui spécifie la <xref:System.Security.AccessControl.AuditFlags.Failure> valeur.  Elle ne supprime pas les règles de refus qui spécifient la <xref:System.Security.AccessControl.AuditFlags.Success> valeur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Objet <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> qui représente une autorisation de liste de contrôle d'accès (ACL) à ajouter à un fichier ou un répertoire.</param>
        <summary>Ajoute l'autorisation de liste de contrôle d'accès (ACL) spécifiée au fichier ou au répertoire en cours et supprime toutes les autorisations ACL correspondantes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> méthode ajoute la règle liste (ACL) de contrôle d’accès spécifié ou remplace les règles ACL identiques qui correspondent à la `rule` paramètre.  Par exemple, si le `rule` paramètre spécifie un <xref:System.Security.AccessControl.FileSystemRights.Read> valeur et le <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> méthode recherche une règle ACL identique qui spécifie la <xref:System.Security.AccessControl.FileSystemRights.Read> valeur, la règle identique sera remplacée.  Si le <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> méthode recherche une règle ACL identique qui spécifie la <xref:System.Security.AccessControl.FileSystemRights.Write> valeur, la règle identique sera également remplacée.  
  
 Pour rendre persistantes les informations ACL nouvelles ou modifiées dans un fichier, utilisez le <xref:System.IO.File.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  Pour rendre persistantes les informations ACL nouvelles ou modifiées dans un répertoire, utilisez la <xref:System.IO.Directory.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  
  
 Pour récupérer les informations ACL à partir d’un fichier, utilisez le <xref:System.IO.File.GetAccessControl%2A> ou <xref:System.IO.FileInfo.GetAccessControl%2A> (méthode).  Pour récupérer les informations ACL à partir d’un répertoire, utilisez la <xref:System.IO.Directory.GetAccessControl%2A> ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Objet <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> qui représente une autorisation de liste de contrôle d'accès (ACL) à définir pour un fichier ou un répertoire.</param>
        <summary>Définit l'autorisation de liste de contrôle d'accès (ACL) spécifiée pour le fichier ou le répertoire en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> méthode ajoute la règle liste (ACL) de contrôle d’accès spécifié ou remplace les règles ACL identiques qui correspondent à la <xref:System.Security.AccessControl.FileSystemRights> valeur de la `rule` paramètre.  Par exemple, si le `rule` paramètre spécifie un <xref:System.Security.AccessControl.FileSystemRights.Read> valeur et le <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> méthode recherche une règle ACL identique qui spécifie la <xref:System.Security.AccessControl.FileSystemRights.Read> valeur, la règle identique sera remplacée.  Si le <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> méthode recherche une règle ACL identique qui spécifie la <xref:System.Security.AccessControl.FileSystemRights.Write> valeur, la règle identique ne pourra être remplacée.  
  
 Pour rendre persistantes les informations ACL nouvelles ou modifiées dans un fichier, utilisez le <xref:System.IO.File.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  Pour rendre persistantes les informations ACL nouvelles ou modifiées dans un répertoire, utilisez la <xref:System.IO.Directory.SetAccessControl%2A> ou <xref:System.IO.FileInfo.SetAccessControl%2A> (méthode).  
  
 Pour récupérer les informations ACL à partir d’un fichier, utilisez le <xref:System.IO.File.GetAccessControl%2A> ou <xref:System.IO.FileInfo.GetAccessControl%2A> (méthode).  Pour récupérer les informations ACL à partir d’un répertoire, utilisez la <xref:System.IO.Directory.GetAccessControl%2A> ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Objet <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> qui représente une règle d'audit à définir  pour un fichier ou un répertoire.</param>
        <summary>Définit la règle d'audit spécifiée pour le fichier ou le répertoire en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> méthode ajoute la règle d’audit spécifiée ou remplace les règles d’audit identiques qui correspondent à la <xref:System.Security.AccessControl.FileSystemRights> valeur de la `rule` paramètre.  Par exemple, si le `rule` paramètre spécifie un <xref:System.Security.AccessControl.FileSystemRights.Read> valeur et le <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> méthode recherche une règle d’audit identique qui spécifie la <xref:System.Security.AccessControl.FileSystemRights.Read> valeur, la règle identique sera remplacée.  Si le <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> méthode recherche une règle d’audit identique qui spécifie la <xref:System.Security.AccessControl.FileSystemRights.Write> valeur, la règle identique ne pourra être remplacée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rule" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>