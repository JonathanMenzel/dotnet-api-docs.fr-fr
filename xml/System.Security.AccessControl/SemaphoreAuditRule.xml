<Type Name="SemaphoreAuditRule" FullName="System.Security.AccessControl.SemaphoreAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d45419518bddc19c525be6f6a3ad4520b845f8e8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30488713" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SemaphoreAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SemaphoreAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.SemaphoreAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SemaphoreAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un jeu de droits d'accès à auditer pour un utilisateur ou groupe. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Security.AccessControl.SemaphoreAuditRule> classe est d’un jeu de classes .NET Framework fournit pour gérer la sécurité de contrôle d’accès Windows sur les sémaphores de système nommé. Pour une vue d’ensemble de ces classes et leur relation avec les structures sous-jacentes de contrôle d’accès Windows, consultez <xref:System.Security.AccessControl.SemaphoreSecurity>.  
  
> [!NOTE]
>  Sécurité de contrôle d’accès Windows est significative uniquement pour les sémaphores système nommés. Si un <xref:System.Threading.Semaphore> objet représente un sémaphore local, le contrôle d’accès n’est pas pertinent.  
  
 Pour obtenir une liste des règles actuellement appliquée à un sémaphore nommé, utilisez la <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> méthode pour obtenir un <xref:System.Security.AccessControl.SemaphoreSecurity> objet, puis utiliser son <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> méthode pour obtenir une collection de <xref:System.Security.AccessControl.SemaphoreAuditRule> objets.  
  
 <xref:System.Security.AccessControl.SemaphoreAuditRule> objets ne mappent pas un à un avec les entrées de contrôle d’accès dans la liste de contrôle accès discrétionnaire (DACL) sous-jacent. Lorsque vous obtenez le jeu de toutes les règles d’audit pour un sémaphore, il contient le nombre minimal de règles actuellement requises pour exprimer toutes les entrées de contrôle d’accès.  
  
> [!NOTE]
>  Les entrées de contrôle d’accès sous-jacentes modifier comme vous appliquer et supprimer des règles. Les informations contenues dans les règles sont fusionnés dans la mesure du possible, pour mettre à jour le plus petit nombre d’entrées de contrôle d’accès. Par conséquent, lors de la lecture de la liste actuelle des règles, il ne ressemble pas forcément exactement à la liste de toutes les règles que vous avez ajouté.  
  
 Utilisez <xref:System.Security.AccessControl.SemaphoreAuditRule> pour spécifier les droits d’accès à auditer pour un utilisateur ou un groupe d’objets. Pour appliquer une règle à un sémaphore système nommé, utilisez la <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> méthode pour obtenir le <xref:System.Security.AccessControl.SemaphoreSecurity> objet. Modifier la <xref:System.Security.AccessControl.SemaphoreSecurity> objet à l’aide de ses méthodes pour ajouter la règle, puis utiliser le <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> méthode pour rattacher l’objet de sécurité.  
  
> [!IMPORTANT]
>  Modifications apportées à un <xref:System.Security.AccessControl.SemaphoreSecurity> objet n’affectent pas les niveaux d’accès du sémaphore nommé jusqu'à ce que vous appeliez la <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> méthode pour attribuer l’objet de sécurité modifié pour le sémaphore nommé.  
  
 <xref:System.Security.AccessControl.SemaphoreAuditRule> les objets sont immuables. Sécurité d’un sémaphore est modifiée à l’aide des méthodes de la <xref:System.Security.AccessControl.SemaphoreSecurity> classe pour ajouter ou supprimer des règles ; comme vous le faites, les entrées de contrôle d’accès sous-jacentes sont modifiées.  
  
> [!NOTE]
>  La sécurité sur les objets de synchronisation n’est pas pris en charge par Windows 98 ou Windows Millennium Edition.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.SemaphoreRights eventRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As SemaphoreRights, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::SemaphoreRights eventRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.SemaphoreRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Utilisateur ou groupe auquel s'applique la règle. Doit être de type <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="eventRights">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.AccessControl.SemaphoreRights" /> spécifiant les types d'accès à auditer.</param>
        <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Security.AccessControl.AuditFlags" /> spécifiant s'il faut auditer les succès, les échecs ou les deux.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />, en spécifiant l'utilisateur ou groupe à auditer, les droits à auditer, et s'il faut auditer les succès, les échecs ou les deux.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour créer un <xref:System.Security.Principal.NTAccount> de l’objet à partir d’une chaîne représentant un nom d’utilisateur ou un groupe, utilisez le <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructeur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> spécifie une valeur non valide.  
  
 - ou -  
  
 <paramref name="flags" /> spécifie une valeur non valide.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> est <see langword="null" />.  
  
 - ou -  
  
 <paramref name="eventRights" /> est égal à zéro.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> n'est pas du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SemaphoreRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.SemaphoreRights SemaphoreRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.SemaphoreRights SemaphoreRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SemaphoreRights As SemaphoreRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::SemaphoreRights SemaphoreRights { System::Security::AccessControl::SemaphoreRights get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.SemaphoreRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les droits d'accès affectés par la règle d'audit.</summary>
        <value>Combinaison de bits de valeurs <see cref="T:System.Security.AccessControl.SemaphoreRights" /> qui indique les droits affectés par la règle d'audit.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.SemaphoreAuditRule> les objets sont immuables. Vous pouvez créer une nouvelle règle d’audit qui représente un utilisateur différent, des droits différents ou une combinaison différente de <xref:System.Security.AccessControl.AuditFlags> valeurs, mais vous ne pouvez pas modifier une règle d’audit existante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>