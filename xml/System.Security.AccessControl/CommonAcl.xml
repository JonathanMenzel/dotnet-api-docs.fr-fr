<Type Name="CommonAcl" FullName="System.Security.AccessControl.CommonAcl">
  <TypeSignature Language="C#" Value="public abstract class CommonAcl : System.Security.AccessControl.GenericAcl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonAcl extends System.Security.AccessControl.GenericAcl" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.CommonAcl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommonAcl&#xA;Inherits GenericAcl" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommonAcl abstract : System::Security::AccessControl::GenericAcl" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.GenericAcl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f1e88-101">Représente une liste de contrôle d'accès et constitue la classe de base des classes <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> et <see cref="T:System.Security.AccessControl.SystemAcl" />.</span><span class="sxs-lookup"><span data-stu-id="f1e88-101">Represents an access control list (ACL) and is the base class for the <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> and <see cref="T:System.Security.AccessControl.SystemAcl" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="f1e88-102">Certaines combinaisons d’héritage et les indicateurs de masque d’accès sont sans signification :</span><span class="sxs-lookup"><span data-stu-id="f1e88-102">Certain combinations of inheritance and access mask flags are meaningless:</span></span>  
  
-   <span data-ttu-id="f1e88-103">Toute entrée de contrôle d’accès (ACE) avec un masque d’accès zéro est supprimée.</span><span class="sxs-lookup"><span data-stu-id="f1e88-103">Any access control entry (ACE) with a zero-access mask is removed.</span></span>  
  
-   <span data-ttu-id="f1e88-104">ACE hériter uniquement à l’intérieur des ACL de l’objet est supprimés.</span><span class="sxs-lookup"><span data-stu-id="f1e88-104">Inherit-only ACEs inside object ACLs are removed.</span></span>  
  
-   <span data-ttu-id="f1e88-105"><xref:System.Security.AccessControl.PropagationFlags.InheritOnly>, <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>, et <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> des indicateurs sur toutes les entrées dans la feuille de l’objet ACL sont effacées.</span><span class="sxs-lookup"><span data-stu-id="f1e88-105"><xref:System.Security.AccessControl.PropagationFlags.InheritOnly>, <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>, and <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flags on all ACEs in leaf object ACLs are cleared.</span></span>  
  
-   <span data-ttu-id="f1e88-106">Les entrées qui ont un <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> indicateur en l’absence de la <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> ou <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur est sans effet ; ils sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="f1e88-106">ACEs that have an <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> flag in the absence of the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> or <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag are meaningless; they are removed.</span></span>  
  
-   <span data-ttu-id="f1e88-107">Le <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> indicateur en l’absence de la <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> ou <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur peut être supprimé.</span><span class="sxs-lookup"><span data-stu-id="f1e88-107">The <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> flag in the absence of the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> or <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag can be removed.</span></span>  
  
-   <span data-ttu-id="f1e88-108">Les entrées qui ont un <xref:System.Security.AccessControl.AuditFlags> valeur <xref:System.Security.AccessControl.AuditFlags.Success> ou <xref:System.Security.AccessControl.AuditFlags.Failure> dans le contrôle d’accès discrétionnaire (DACL) de listes sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="f1e88-108">ACEs that have an <xref:System.Security.AccessControl.AuditFlags> value of <xref:System.Security.AccessControl.AuditFlags.Success> or <xref:System.Security.AccessControl.AuditFlags.Failure> in discretionary access control lists (DACLs) are removed.</span></span>  
  
-   <span data-ttu-id="f1e88-109">Les ACE qui ne spécifie pas d’audit <xref:System.Security.AccessControl.AuditFlags.Success> ou <xref:System.Security.AccessControl.AuditFlags.Failure> est supprimé.</span><span class="sxs-lookup"><span data-stu-id="f1e88-109">Any audit ACE that does not specify either <xref:System.Security.AccessControl.AuditFlags.Success> or <xref:System.Security.AccessControl.AuditFlags.Failure> is removed.</span></span>  
  
-   <span data-ttu-id="f1e88-110">Dans les listes DACL, les entrées SystemAudit et SystemAlarm sont supprimées.</span><span class="sxs-lookup"><span data-stu-id="f1e88-110">On DACLs, SystemAudit and SystemAlarm ACEs are removed.</span></span>  
  
-   <span data-ttu-id="f1e88-111">Sur les listes de contrôle d’accès système (SACL), les entrées AccessAllowed et AccessDenied sont supprimées.</span><span class="sxs-lookup"><span data-stu-id="f1e88-111">On system access control lists (SACLs), AccessAllowed and AccessDenied ACEs are removed.</span></span>  
  
 <span data-ttu-id="f1e88-112">Ordre canonique est maintenu selon l’algorithme suivant :</span><span class="sxs-lookup"><span data-stu-id="f1e88-112">Canonical order is maintained according to the following algorithm:</span></span>  
  
-   <span data-ttu-id="f1e88-113">Explicites sont prioritaires sur héritées ; Cette règle s’applique aux listes DACL et SACL.</span><span class="sxs-lookup"><span data-stu-id="f1e88-113">Explicit ACEs take precedence over inherited ACEs; this rule applies to both DACLs and SACLs.</span></span>  
  
-   <span data-ttu-id="f1e88-114">Dans les listes DACL, parmi les ACE explicites, celles qui refusent l’accès sont prioritaires sur ACE qui autorisent l’accès.</span><span class="sxs-lookup"><span data-stu-id="f1e88-114">In DACLs, among the explicit ACEs, ACEs that deny access take precedence over ACEs that allow access.</span></span> <span data-ttu-id="f1e88-115">Pour l’objet d’annuaire ACL, l’ACE non-objets avec objet.</span><span class="sxs-lookup"><span data-stu-id="f1e88-115">For directory object ACLs, the nonobject ACEs come before object ACEs.</span></span>  
  
-   <span data-ttu-id="f1e88-116">Toutes les entrées courantes sont prioritaires sur les entrées.</span><span class="sxs-lookup"><span data-stu-id="f1e88-116">All common ACEs take precedence over noncommon ACEs.</span></span>  
  
-   <span data-ttu-id="f1e88-117">Héritées conservent leur ordre relatif après canonicité.</span><span class="sxs-lookup"><span data-stu-id="f1e88-117">Inherited ACEs maintain their relative order after canonicity.</span></span>  
  
-   <span data-ttu-id="f1e88-118">ACE non reconnu et personnalisés n’est pas autorisées dans les listes DACL et SACL.</span><span class="sxs-lookup"><span data-stu-id="f1e88-118">Unrecognized and custom ACEs are disallowed in both DACLs and SACLs.</span></span>  
  
-   <span data-ttu-id="f1e88-119">Dans des plages contiguës (AccessDenied explicite et ACE AccessAllowed sur DACL, toutes les entrées ACE explicites dans des listes système), les entrées sont triées à l’aide de la <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A> méthodes de la <xref:System.Security.Principal.SecurityIdentifier> les objets associés.</span><span class="sxs-lookup"><span data-stu-id="f1e88-119">Within contiguous ranges (explicit AccessDenied and AccessAllowed ACEs on DACLs, all explicit ACEs on SACLs), the ACEs are sorted by using the <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A> methods of the <xref:System.Security.Principal.SecurityIdentifier> objects associated with the ACEs.</span></span>  
  
 <span data-ttu-id="f1e88-120">ACE adjacents est combinées, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="f1e88-120">Adjacent ACEs are combined, if appropriate.</span></span>  <span data-ttu-id="f1e88-121">Cela réduit la taille de la liste ACL sans affecter la sémantique de contrôle d’accès qu'il accorde un accès.</span><span class="sxs-lookup"><span data-stu-id="f1e88-121">This reduces the size of the ACL without affecting the access control semantics it grants.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BinaryLength">
      <MemberSignature Language="C#" Value="public override sealed int BinaryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BinaryLength" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.BinaryLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property BinaryLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BinaryLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1e88-122">Obtient la longueur, en octets, de la représentation binaire de l'objet <see cref="T:System.Security.AccessControl.CommonAcl" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="f1e88-122">Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span> <span data-ttu-id="f1e88-123">Cette longueur doit être utilisée avant de marshaler la liste de contrôle d'accès dans un tableau binaire avec la méthode <see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="f1e88-123">This length should be used before marshaling the access control list (ACL) into a binary array by using the <see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" /> method.</span></span></summary>
        <value><span data-ttu-id="f1e88-124">Longueur, en octets, de la représentation binaire de l'objet <see cref="T:System.Security.AccessControl.CommonAcl" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="f1e88-124">The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override sealed int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1e88-125">Obtient le nombre d'entrées du contrôle d'accès dans l'objet <see cref="T:System.Security.AccessControl.CommonAcl" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="f1e88-125">Gets the number of access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></summary>
        <value><span data-ttu-id="f1e88-126">Nombre d'entrées du contrôle d'accès dans l'objet <see cref="T:System.Security.AccessControl.CommonAcl" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="f1e88-126">The number of ACEs in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinaryForm">
      <MemberSignature Language="C#" Value="public override sealed void GetBinaryForm (byte[] binaryForm, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetBinaryForm(unsigned int8[] binaryForm, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub GetBinaryForm (binaryForm As Byte(), offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetBinaryForm(cli::array &lt;System::Byte&gt; ^ binaryForm, int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="binaryForm"><span data-ttu-id="f1e88-127">Tableau d'octets dans lequel le contenu de <see cref="T:System.Security.AccessControl.CommonAcl" /> est marshalé.</span><span class="sxs-lookup"><span data-stu-id="f1e88-127">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.CommonAcl" /> is marshaled.</span></span></param>
        <param name="offset"><span data-ttu-id="f1e88-128">Offset au niveau duquel commencer le marshaling.</span><span class="sxs-lookup"><span data-stu-id="f1e88-128">The offset at which to start marshaling.</span></span></param>
        <summary><span data-ttu-id="f1e88-129">Marshale le contenu de l'objet <see cref="T:System.Security.AccessControl.CommonAcl" /> dans le tableau d'octets spécifié en commençant à l'offset spécifié.</span><span class="sxs-lookup"><span data-stu-id="f1e88-129">Marshals the contents of the <see cref="T:System.Security.AccessControl.CommonAcl" /> object into the specified byte array beginning at the specified offset.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonical">
      <MemberSignature Language="C#" Value="public bool IsCanonical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanonical" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsCanonical" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCanonical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCanonical { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1e88-130">Obtient une valeur booléenne qui spécifie si les entrées du contrôle d'accès de l'objet <see cref="T:System.Security.AccessControl.CommonAcl" /> actuel suivent un ordre canonique.</span><span class="sxs-lookup"><span data-stu-id="f1e88-130">Gets a Boolean value that specifies whether the access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object are in canonical order.</span></span></summary>
        <value>
          <span data-ttu-id="f1e88-131"><see langword="true" /> si les entrées du contrôle d'accès de l'objet <see cref="T:System.Security.AccessControl.CommonAcl" /> actuel suivent un ordre canonique ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f1e88-131"><see langword="true" /> if the ACEs in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object are in canonical order; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContainer">
      <MemberSignature Language="C#" Value="public bool IsContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContainer" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContainer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1e88-132">Définit si l'objet <see cref="T:System.Security.AccessControl.CommonAcl" /> est un conteneur.</span><span class="sxs-lookup"><span data-stu-id="f1e88-132">Sets whether the <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a container.</span></span></summary>
        <value>
          <span data-ttu-id="f1e88-133"><see langword="true" /> si l'objet actuel <see cref="T:System.Security.AccessControl.CommonAcl" /> est un conteneur.</span><span class="sxs-lookup"><span data-stu-id="f1e88-133"><see langword="true" /> if the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a container.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDS">
      <MemberSignature Language="C#" Value="public bool IsDS { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDS" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsDS" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDS As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDS { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1e88-134">Définit si l'objet <see cref="T:System.Security.AccessControl.CommonAcl" /> actuel est une liste de contrôle d'accès d'objets d'annuaire.</span><span class="sxs-lookup"><span data-stu-id="f1e88-134">Sets whether the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a directory object access control list (ACL).</span></span></summary>
        <value>
          <span data-ttu-id="f1e88-135"><see langword="true" /> si l'objet <see cref="T:System.Security.AccessControl.CommonAcl" /> actuel est une liste de contrôle d'accès d'objets d'annuaire.</span><span class="sxs-lookup"><span data-stu-id="f1e88-135"><see langword="true" /> if the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a directory object ACL.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.GenericAce this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.GenericAce Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides NotOverridable Property Item(index As Integer) As GenericAce" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::GenericAce ^ default[int] { System::Security::AccessControl::GenericAce ^ get(int index); void set(int index, System::Security::AccessControl::GenericAce ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.GenericAce</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f1e88-136">Index de base zéro du <see cref="T:System.Security.AccessControl.CommonAce" /> à obtenir ou définir.</span><span class="sxs-lookup"><span data-stu-id="f1e88-136">The zero-based index of the <see cref="T:System.Security.AccessControl.CommonAce" /> to get or set.</span></span></param>
        <summary><span data-ttu-id="f1e88-137">Obtient ou définit le <see cref="T:System.Security.AccessControl.CommonAce" /> à l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="f1e88-137">Gets or sets the <see cref="T:System.Security.AccessControl.CommonAce" /> at the specified index.</span></span></summary>
        <value><span data-ttu-id="f1e88-138">Objet <see cref="T:System.Security.AccessControl.CommonAce" /> à l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="f1e88-138">The <see cref="T:System.Security.AccessControl.CommonAce" /> at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public void Purge (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Purge(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Purge (sid As SecurityIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Purge(System::Security::Principal::SecurityIdentifier ^ sid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="sid"><span data-ttu-id="f1e88-139">Objet <see cref="T:System.Security.Principal.SecurityIdentifier" /> à vérifier.</span><span class="sxs-lookup"><span data-stu-id="f1e88-139">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> object to check for.</span></span></param>
        <summary><span data-ttu-id="f1e88-140">Supprime toutes les entrées du contrôle d'accès contenues par cet objet <see cref="T:System.Security.AccessControl.CommonAcl" /> et associées à l'objet <see cref="T:System.Security.Principal.SecurityIdentifier" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="f1e88-140">Removes all access control entries (ACEs) contained by this <see cref="T:System.Security.AccessControl.CommonAcl" /> object that are associated with the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInheritedAces">
      <MemberSignature Language="C#" Value="public void RemoveInheritedAces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveInheritedAces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.RemoveInheritedAces" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveInheritedAces ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveInheritedAces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1e88-141">Supprime toutes les entrées du contrôle d'accès héritées de cet objet <see cref="T:System.Security.AccessControl.CommonAcl" />.</span><span class="sxs-lookup"><span data-stu-id="f1e88-141">Removes all inherited access control entries (ACEs) from this <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Revision">
      <MemberSignature Language="C#" Value="public override sealed byte Revision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Revision" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Revision" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Revision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Revision { System::Byte get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1e88-142">Obtient le niveau de révision de <see cref="T:System.Security.AccessControl.CommonAcl" />.</span><span class="sxs-lookup"><span data-stu-id="f1e88-142">Gets the revision level of the <see cref="T:System.Security.AccessControl.CommonAcl" />.</span></span></summary>
        <value><span data-ttu-id="f1e88-143">Valeur d'octet qui spécifie le niveau de révision de <see cref="T:System.Security.AccessControl.CommonAcl" />.</span><span class="sxs-lookup"><span data-stu-id="f1e88-143">A byte value that specifies the revision level of the <see cref="T:System.Security.AccessControl.CommonAcl" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>