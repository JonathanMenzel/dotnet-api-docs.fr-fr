<Type Name="DirectorySecurity" FullName="System.Security.AccessControl.DirectorySecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db235532e666fc14c87a209b32c567a4b1fae119" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56782461" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectorySecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DirectorySecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.DirectorySecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectorySecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectorySecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <TypeSignature Language="F#" Value="type DirectorySecurity = class&#xA;    inherit FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente la sécurité de contrôle d'accès et d'audit pour un répertoire. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.AccessControl.DirectorySecurity> classe spécifie les droits d’accès pour un répertoire du système et la façon dont les tentatives d’accès sont auditées. Cette classe représente des droits d’accès et d’audit sous la forme d’un ensemble de règles. Chaque règle d’accès est représenté par un <xref:System.Security.AccessControl.FileSystemAccessRule> de l’objet, tandis que chaque règle d’audit est représentée par un <xref:System.Security.AccessControl.FileSystemAuditRule> objet.  
  
 Le <xref:System.Security.AccessControl.DirectorySecurity> classe est une abstraction du système de sécurité des fichiers Windows sous-jacent. Dans ce système, chaque répertoire a une liste de contrôle d’accès discrétionnaire (DACL), qui contrôle l’accès au répertoire et une liste de contrôle d’accès système (SACL), qui spécifie les tentatives de contrôle d’accès sont auditées. Le <xref:System.Security.AccessControl.FileSystemAccessRule> et <xref:System.Security.AccessControl.FileSystemAuditRule> classes sont des abstractions des entrées de contrôle d’accès (ACE) qui comprennent les DACL et les SACL.  
  
 Le <xref:System.Security.AccessControl.DirectorySecurity> classe masque de nombreux détails des DACL et les SACL ; vous n’avez pas à vous soucier du classement ACE ou des DACL null.  
  
 Utilisez la <xref:System.Security.AccessControl.FileSecurity> classe à récupérer, ajouter ou modifier les règles d’accès qui représentent le DACL et les SACL d’un fichier.  
  
 Les tableaux suivants répertorie les méthodes que vous pouvez utiliser pour accéder à et mettre à jour de sécurité de répertoire.  
  
|Tâche|Méthodes|  
|----------|-------------|  
|Ajouter des règles|<xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A?displayProperty=nameWithType><br /><br /> <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A?displayProperty=nameWithType>|  
|Supprimer des règles|<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A?displayProperty=nameWithType><br /><br /> <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A?displayProperty=nameWithType>|  
|Récupérer le contrôle d’accès à un répertoire|<xref:System.IO.Directory.GetAccessControl%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.DirectoryInfo.GetAccessControl%2A?displayProperty=nameWithType>|  
|Conserver le contrôle d’accès à un répertoire|<xref:System.IO.Directory.SetAccessControl%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.DirectoryInfo.SetAccessControl%2A?displayProperty=nameWithType>|  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Security.AccessControl.DirectorySecurity> classe à ajouter, puis supprimer une entrée de contrôle d’accès (ACL) de liste à partir d’un répertoire.  Vous devez entrer un compte d'utilisateur ou de groupe valide pour exécuter cet exemple.  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.DirectorySecurity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.DirectorySecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.DirectorySecurity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur lorsque vous souhaitez créer vide <xref:System.Security.AccessControl.DirectorySecurity> objet qui n’est pas basé sur un répertoire existant. Vous pouvez remplir l’objet avec les informations de contrôle d’accès, puis appliquez-le à un répertoire.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Le système d'exploitation actuel n'est pas Microsoft Windows 2000 ou version ultérieure.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySecurity (string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.DirectorySecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySecurity(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.DirectorySecurity : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="new System.Security.AccessControl.DirectorySecurity (name, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="name">Emplacement d'un répertoire à partir duquel créer un objet <see cref="T:System.Security.AccessControl.DirectorySecurity" />.</param>
        <param name="includeSections">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlSections" /> qui spécifie le type d'informations ACL à récupérer.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.DirectorySecurity" /> à partir d'un répertoire spécifié à l'aide des valeurs spécifiées de l'énumération <see cref="T:System.Security.AccessControl.AccessControlSections" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur récupère les informations de contrôle d’accès pour le répertoire spécifié et crée ensuite un <xref:System.Security.AccessControl.DirectorySecurity> objet qui encapsule ces informations. Vous pouvez ensuite inspecter, ajouter ou supprimer les informations de contrôle d’accès pour le répertoire spécifié.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> est une chaîne de longueur nulle, ne contient que des espaces blancs ou contient un ou plusieurs caractères non valides comme défini par <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès spécifié n'est pas valide (il se trouve, par exemple, sur un lecteur non mappé).</exception>
        <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié dans le paramètre <paramref name="name" /> est introuvable.</exception>
        <exception cref="T:System.IO.IOException">Une erreur d'E/S s'est produite lors de l'ouverture du répertoire.</exception>
        <exception cref="T:System.NotSupportedException">Le format du paramètre <paramref name="name" /> n'est pas valide.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Le système d'exploitation actuel n'est pas Microsoft Windows 2000 ou version ultérieure.</exception>
        <exception cref="T:System.IO.PathTooLongException">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">Le compte système actuel n'a pas de privilèges d'administrateur.</exception>
        <exception cref="T:System.SystemException">Le répertoire est introuvable.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le paramètre <paramref name="name" /> a spécifié un répertoire qui est en lecture seule.  
  
ou 
Cette opération n'est pas prise en charge sur la plateforme actuelle.  
  
ou 
L'appelant n'a pas l'autorisation requise.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Pour obtenir l’autorisation d’accès au répertoire spécifié par le <paramref name="name" /> paramètre. Énumérations associées : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" />  
  
Action de sécurité : À la demande</permission>
      </Docs>
    </Member>
  </Members>
</Type>