<Type Name="RegistryAuditRule" FullName="System.Security.AccessControl.RegistryAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f9a178fd0f55f115855c943b600490aac66f873" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36532321" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type RegistryAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a set of access rights to be audited for a user or group. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Security.AccessControl.RegistryAuditRule> classe est d’un jeu de classes .NET Framework fournit pour gérer la sécurité de contrôle d’accès Windows sur les clés de Registre. Pour une vue d’ensemble de ces classes et leur relation avec les structures sous-jacentes de contrôle d’accès Windows, consultez <xref:System.Security.AccessControl.RegistrySecurity>.  
  
> [!NOTE]
>  Sécurité de contrôle d’accès Windows peut être appliquée uniquement aux clés de Registre. Il ne peut pas être appliqué aux paires clé/valeur stockées dans une clé.  
  
 Pour obtenir une liste des règles actuellement appliquée à une clé de Registre, utilisez la <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> méthode pour obtenir un <xref:System.Security.AccessControl.RegistrySecurity> objet, puis utiliser son <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> méthode pour obtenir une collection de <xref:System.Security.AccessControl.RegistryAuditRule> objets.  
  
 <xref:System.Security.AccessControl.RegistryAuditRule> objets ne mappent pas un à un avec les entrées de contrôle d’accès dans la liste de contrôle accès discrétionnaire (DACL) sous-jacent. Lorsque vous obtenez le jeu de toutes les règles d’audit pour une clé de Registre, il contient le nombre minimal de règles actuellement requises pour exprimer toutes les entrées de contrôle d’accès.  
  
> [!NOTE]
>  Les entrées de contrôle d’accès sous-jacentes modifier comme vous appliquer et supprimer des règles. Les informations contenues dans les règles sont fusionnés dans la mesure du possible, pour mettre à jour le plus petit nombre d’entrées de contrôle d’accès. Par conséquent, lors de la lecture de la liste actuelle des règles, il ne ressemble pas forcément exactement à la liste de toutes les règles que vous avez ajouté.  
  
 Utilisez <xref:System.Security.AccessControl.RegistryAuditRule> pour spécifier les droits d’accès à auditer pour un utilisateur ou un groupe d’objets. Pour appliquer une règle à une clé de Registre, utilisez la <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> méthode pour obtenir le <xref:System.Security.AccessControl.RegistrySecurity> objet. Modifier la <xref:System.Security.AccessControl.RegistrySecurity> objet à l’aide de ses méthodes pour ajouter la règle, puis utiliser le <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> méthode pour rattacher l’objet de sécurité.  
  
> [!IMPORTANT]
>  Modifications apportées à un <xref:System.Security.AccessControl.RegistrySecurity> objet n’affectent pas les niveaux d’accès de la clé de Registre jusqu'à ce que vous appeliez la <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> méthode pour attribuer l’objet de sécurité modifié à la clé de Registre.  
  
 <xref:System.Security.AccessControl.RegistryAuditRule> les objets sont immuables. Sécurité d’une clé de Registre est modifiée à l’aide des méthodes de la <xref:System.Security.AccessControl.RegistrySecurity> classe pour ajouter ou supprimer des règles ; comme vous le faites, les entrées de contrôle d’accès sous-jacentes sont modifiées.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="registryRights">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</param>
        <param name="inheritanceFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying whether the audit rule applies to subkeys of the current key.</param>
        <param name="propagationFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that affect the way an inherited audit rule is propagated to subkeys of the current key.</param>
        <param name="flags">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Toutes les clés de Registre sont des conteneurs, donc le seul indicateur d’héritage qui est significatif pour les clés de Registre est la <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> indicateur. Si cet indicateur n’est pas spécifié, les indicateurs de propagation sont ignorés et seule la clé immédiate est affectée. Si l’indicateur est présent, la règle est propagée comme indiqué dans le tableau suivant. Le tableau suppose une sous-clé S avec la sous-clé enfant CS et le sous-clé petit-enfant GS. Autrement dit, le chemin d’accès de la sous-clé petit-enfant est S\CS\GS.  
  
|Indicateurs de propagation|S|CS|GS|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|X|X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|X|X||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X||  
  
 Le modèle pour la sous-clé petit-enfant gouverne toutes les sous-clés contenues dans la sous-clé petit-enfant.  
  
 Par exemple, si le <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> indicateur est spécifié pour `inheritanceFlags` et <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> indicateur de propagation est spécifiée pour `propagationFlags`, cette règle ne s’applique pas à la sous-clé immédiate, mais il s’applique à toutes ses sous-clés enfants immédiats et à toutes les sous-clés elles contiennent.  
  
> [!NOTE]
>  Bien que vous puissiez spécifier le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> indicateur pour `inheritanceFlags`, il est inutile de faire. Dans le cadre du contrôle d’accès, les paires nom/valeur d’une sous-clé ne sont pas des objets distincts. Les droits d’accès pour les paires nom/valeur sont contrôlés par les droits de la sous-clé. En outre, étant donné que toutes les sous-clés sont des conteneurs (autrement dit, ils peuvent contenir d’autres sous-clés), elles ne sont pas affectées par la <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur. Enfin, en spécifiant le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur complique inutilement la maintenance des règles, parce qu’il interfère avec la combinaison normale de règles compatibles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> specifies an invalid value.  -or-  <paramref name="flags" /> specifies an invalid value.  -or-  <paramref name="inheritanceFlags" /> specifies an invalid value.  -or-  <paramref name="propagationFlags" /> specifies an invalid value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> is <see langword="null" />.  -or-  <paramref name="registryRights" /> is zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">The name of the user or group the rule applies to.</param>
        <param name="registryRights">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</param>
        <param name="inheritanceFlags">A combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags that specifies whether the audit rule applies to subkeys of the current key.</param>
        <param name="propagationFlags">A combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags that affect the way an inherited audit rule is propagated to subkeys of the current key.</param>
        <param name="flags">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the name of the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Toutes les clés de Registre sont des conteneurs, donc le seul indicateur d’héritage qui est significatif pour les clés de Registre est la <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> indicateur. Si cet indicateur n’est pas spécifié, les indicateurs de propagation sont ignorés et seule la clé immédiate est affectée. Si l’indicateur est présent, la règle est propagée comme indiqué dans le tableau suivant. Le tableau suppose une sous-clé S avec la sous-clé enfant CS et le sous-clé petit-enfant GS. Autrement dit, le chemin d’accès de la sous-clé petit-enfant est S\CS\GS.  
  
|Indicateurs de propagation|S|CS|GS|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|X|X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|X|X||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X||  
  
 Le modèle pour la sous-clé petit-enfant gouverne toutes les sous-clés contenues dans la sous-clé petit-enfant.  
  
 Par exemple, si le <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> indicateur est spécifié pour `inheritanceFlags` et <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> indicateur de propagation est spécifiée pour `propagationFlags`, cette règle ne s’applique pas à la sous-clé immédiate, mais il s’applique à toutes ses sous-clés enfants immédiats et à toutes les sous-clés elles contiennent.  
  
> [!NOTE]
>  Bien que vous puissiez spécifier le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> indicateur pour `inheritanceFlags`, il est inutile de faire. Dans le cadre du contrôle d’accès, les paires nom/valeur d’une sous-clé ne sont pas des objets distincts. Les droits d’accès pour les paires nom/valeur sont contrôlés par les droits de la sous-clé. En outre, étant donné que toutes les sous-clés sont des conteneurs (autrement dit, ils peuvent contenir d’autres sous-clés), elles ne sont pas affectées par la <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur. Enfin, en spécifiant le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur complique inutilement la maintenance des règles, parce qu’il interfère avec la combinaison normale de règles compatibles.  
  
 Ce constructeur est équivalent à la création d’un <xref:System.Security.Principal.NTAccount> objet, en passant `identity` à la <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructeur et en passant nouvellement créé <xref:System.Security.Principal.NTAccount> de l’objet à le <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> constructeur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> specifies an invalid value.  -or-  <paramref name="flags" /> specifies an invalid value.  -or-  <paramref name="inheritanceFlags" /> specifies an invalid value.  -or-  <paramref name="propagationFlags" /> specifies an invalid value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="registryRights" /> is zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> is <see langword="null" />.  -or-  <paramref name="identity" /> is a zero-length string.  -or-  <paramref name="identity" /> is longer than 512 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the access rights affected by the audit rule.</summary>
        <value>Une combinaison d’opérations de <see cref="T:System.Security.AccessControl.RegistryRights" /> valeurs qui indique les droits affectés par la règle d’audit.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.RegistryAuditRule> les objets sont immuables. Vous pouvez créer une nouvelle règle d’audit qui représente un utilisateur différent, des droits différents ou une combinaison différente de <xref:System.Security.AccessControl.AuditFlags> indicateurs, mais vous ne pouvez pas modifier une règle d’audit existante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>