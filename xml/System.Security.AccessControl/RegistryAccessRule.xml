<Type Name="RegistryAccessRule" FullName="System.Security.AccessControl.RegistryAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="05092fb102436072a910f45f35b944062528182b" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56760829" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistryAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type RegistryAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a390d-101">Représente un jeu de droits d'accès accordés ou refusés à un utilisateur ou à un groupe.</span><span class="sxs-lookup"><span data-stu-id="a390d-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="a390d-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="a390d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a390d-103">Le <xref:System.Security.AccessControl.RegistryAccessRule> classe fait partie d’un jeu de classes .NET Framework fournit pour gérer la sécurité de contrôle d’accès Windows sur les clés de Registre.</span><span class="sxs-lookup"><span data-stu-id="a390d-103">The <xref:System.Security.AccessControl.RegistryAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="a390d-104">Pour une vue d’ensemble de ces classes et leur relation avec les structures sous-jacentes de contrôle d’accès Windows, consultez <xref:System.Security.AccessControl.RegistrySecurity>.</span><span class="sxs-lookup"><span data-stu-id="a390d-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a390d-105">Sécurité de contrôle d’accès Windows peut uniquement être appliquée aux clés de Registre.</span><span class="sxs-lookup"><span data-stu-id="a390d-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="a390d-106">Il ne peut pas être appliqué aux paires clé/valeur individuelle stockées dans une clé.</span><span class="sxs-lookup"><span data-stu-id="a390d-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="a390d-107">Pour obtenir une liste des règles actuellement appliqué à une clé de Registre, utilisez la <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> méthode pour obtenir un <xref:System.Security.AccessControl.RegistrySecurity> objet, puis utiliser son <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> méthode pour obtenir une collection de <xref:System.Security.AccessControl.RegistryAccessRule> objets.</span><span class="sxs-lookup"><span data-stu-id="a390d-107">To get a list of the rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAccessRule> objects.</span></span>  
  
 <span data-ttu-id="a390d-108"><xref:System.Security.AccessControl.RegistryAccessRule> objets ne correspondent pas-à-un avec les entrées de contrôle d’accès dans la liste d’accès sous-jacente contrôle discrétionnaire (DACL).</span><span class="sxs-lookup"><span data-stu-id="a390d-108"><xref:System.Security.AccessControl.RegistryAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary control access list (DACL).</span></span> <span data-ttu-id="a390d-109">Lorsque vous obtenez l’ensemble de toutes les règles d’accès d’une clé de Registre, le jeu contient le nombre minimal de règles actuellement requises pour exprimer toutes les entrées de contrôle d’accès.</span><span class="sxs-lookup"><span data-stu-id="a390d-109">When you get the set of all access rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a390d-110">Les entrées de contrôle d’accès sous-jacent modifier comme vous appliquer et supprimez des règles.</span><span class="sxs-lookup"><span data-stu-id="a390d-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="a390d-111">Les informations dans les règles sont fusionnées dans la mesure du possible, pour maintenir le plus petit nombre d’entrées de contrôle d’accès.</span><span class="sxs-lookup"><span data-stu-id="a390d-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="a390d-112">Par conséquent, lorsque vous lisez la liste actuelle des règles, il ne ressemble pas forcément exactement à la liste de toutes les règles que vous avez ajouté.</span><span class="sxs-lookup"><span data-stu-id="a390d-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="a390d-113">Utilisez <xref:System.Security.AccessControl.RegistryAccessRule> objets pour spécifier les droits d’accès pour autoriser ou refuser à un utilisateur ou un groupe.</span><span class="sxs-lookup"><span data-stu-id="a390d-113">Use <xref:System.Security.AccessControl.RegistryAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="a390d-114">Un <xref:System.Security.AccessControl.RegistryAccessRule> toujours l’objet représente un accès accordé ou refusé d’accès, jamais les deux.</span><span class="sxs-lookup"><span data-stu-id="a390d-114">A <xref:System.Security.AccessControl.RegistryAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="a390d-115">Pour appliquer une règle à une clé de Registre, utilisez la <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> méthode pour obtenir le <xref:System.Security.AccessControl.RegistrySecurity> objet.</span><span class="sxs-lookup"><span data-stu-id="a390d-115">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="a390d-116">Modifier le <xref:System.Security.AccessControl.RegistrySecurity> objet à l’aide de ses méthodes pour ajouter la règle, puis utilisez le <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> méthode rattacher l’objet de sécurité.</span><span class="sxs-lookup"><span data-stu-id="a390d-116">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a390d-117">Modifications apportées à un <xref:System.Security.AccessControl.RegistrySecurity> objet n’affectent pas les niveaux d’accès de la clé de Registre jusqu'à ce que vous appeliez la <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> méthode pour attribuer l’objet de sécurité modifié à la clé de Registre.</span><span class="sxs-lookup"><span data-stu-id="a390d-117">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="a390d-118"><xref:System.Security.AccessControl.RegistryAccessRule> les objets sont immuables.</span><span class="sxs-lookup"><span data-stu-id="a390d-118"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="a390d-119">Sécurité d’une clé de Registre est modifiée à l’aide des méthodes de la <xref:System.Security.AccessControl.RegistrySecurity> classe pour ajouter ou supprimer des règles ; comme vous le faites, les entrées de contrôle d’accès sous-jacentes sont modifiées.</span><span class="sxs-lookup"><span data-stu-id="a390d-119">Security for a registry key is modified using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a390d-120">L’exemple de code suivant montre les règles d’accès avec héritage et de propagation.</span><span class="sxs-lookup"><span data-stu-id="a390d-120">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="a390d-121">L’exemple crée un <xref:System.Security.AccessControl.RegistrySecurity> de l’objet, puis crée et ajoute deux règles qui ont le <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> indicateur.</span><span class="sxs-lookup"><span data-stu-id="a390d-121">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="a390d-122">La première règle n’a aucun indicateur de propagation, tandis que la seconde a <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> et <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="a390d-122">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="a390d-123">Le programme affiche les règles dans le <xref:System.Security.AccessControl.RegistrySecurity> de l’objet et utilise ensuite l’objet pour créer une sous-clé.</span><span class="sxs-lookup"><span data-stu-id="a390d-123">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the object to create a subkey.</span></span> <span data-ttu-id="a390d-124">Le programme crée un enfant de sous-clés et un petit-enfant, puis affiche la sécurité de chaque sous-clé.</span><span class="sxs-lookup"><span data-stu-id="a390d-124">The program creates a child subkey and a grandchild subkey, and then displays the security for each subkey.</span></span> <span data-ttu-id="a390d-125">Enfin, le programme supprime les clés de test.</span><span class="sxs-lookup"><span data-stu-id="a390d-125">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a390d-126">Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />.</span><span class="sxs-lookup"><span data-stu-id="a390d-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="a390d-127">Utilisateur ou groupe auquel s'applique la règle.</span><span class="sxs-lookup"><span data-stu-id="a390d-127">The user or group the rule applies to.</span></span> <span data-ttu-id="a390d-128">Doit être de type <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="a390d-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="registryRights"><span data-ttu-id="a390d-129">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.RegistryRights" /> spécifiant les droits accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-129">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="a390d-130">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="a390d-131">Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />, en spécifiant l'utilisateur ou le groupe auquel la règle s'applique, les droits d'accès, et si les droits d'accès spécifiés sont accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a390d-132">Ce constructeur spécifie l’héritage et propagation de la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="a390d-132">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="a390d-133">Autrement dit, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> et <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a390d-133">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a390d-134"><paramref name="registryRights" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-134"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="a390d-135">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-135">-or-</span></span> 
 <span data-ttu-id="a390d-136"><paramref name="type" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-136"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a390d-137"><paramref name="identity" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a390d-137"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a390d-138">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-138">-or-</span></span> 
 <span data-ttu-id="a390d-139"><paramref name="eventRights" /> est égal à zéro.</span><span class="sxs-lookup"><span data-stu-id="a390d-139"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a390d-140"><paramref name="identity" /> n'est pas du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="a390d-140"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="a390d-141">Nom de l'utilisateur ou du groupe auquel s'applique la règle.</span><span class="sxs-lookup"><span data-stu-id="a390d-141">The name of the user or group the rule applies to.</span></span></param>
        <param name="registryRights"><span data-ttu-id="a390d-142">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.RegistryRights" /> spécifiant les droits accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-142">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="a390d-143">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-143">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="a390d-144">Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />, en spécifiant le nom de l'utilisateur ou du groupe auquel la règle s'applique, les droits d'accès, et si les droits d'accès spécifiés sont accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-144">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a390d-145">Ce constructeur spécifie l’héritage et propagation de la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="a390d-145">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="a390d-146">Autrement dit, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> et <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a390d-146">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a390d-147">Ce constructeur est équivalent à la création d’un <xref:System.Security.Principal.NTAccount> objet, en passant `identity` à la <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructeur et en passant le nouvellement créé <xref:System.Security.Principal.NTAccount> de l’objet à le <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> constructeur.</span><span class="sxs-lookup"><span data-stu-id="a390d-147">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a390d-148">L’exemple de code suivant crée des règles d’accès de Registre et les ajoute à un <xref:System.Security.AccessControl.RegistrySecurity> objet, en montrant comment les règles qui autorisent et refusent des droits restent séparées, lors des règles compatibles du même type est fusionnée.</span><span class="sxs-lookup"><span data-stu-id="a390d-148">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a390d-149"><paramref name="registryRights" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-149"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="a390d-150">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-150">-or-</span></span> 
 <span data-ttu-id="a390d-151"><paramref name="type" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-151"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a390d-152"><paramref name="registryRights" /> est égal à zéro.</span><span class="sxs-lookup"><span data-stu-id="a390d-152"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a390d-153"><paramref name="identity" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a390d-153"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a390d-154">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-154">-or-</span></span> 
 <span data-ttu-id="a390d-155"><paramref name="identity" /> est une chaîne de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="a390d-155"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="a390d-156">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-156">-or-</span></span> 
 <span data-ttu-id="a390d-157"><paramref name="identity" /> fait plus de 512 caractères.</span><span class="sxs-lookup"><span data-stu-id="a390d-157"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="a390d-158">Utilisateur ou groupe auquel s'applique la règle.</span><span class="sxs-lookup"><span data-stu-id="a390d-158">The user or group the rule applies to.</span></span> <span data-ttu-id="a390d-159">Doit être de type <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou d'un type, tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="a390d-159">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="registryRights"><span data-ttu-id="a390d-160">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.RegistryRights" /> spécifiant les droits accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-160">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="a390d-161">Une combinaison d'opérations de bits des indicateurs <see cref="T:System.Security.AccessControl.InheritanceFlags" /> qui spécifient comment les droits d'accès sont hérités d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="a390d-161">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="a390d-162">Une combinaison d'opérations de bits des indicateurs <see cref="T:System.Security.AccessControl.PropagationFlags" /> qui spécifient comment les droits d'accès se propagent vers d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="a390d-162">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span></span></param>
        <param name="type"><span data-ttu-id="a390d-163">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-163">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="a390d-164">Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />, en spécifiant l'utilisateur ou le groupe auquel la règle s'applique, les droits d'accès, les indicateurs d'héritage, les indicateurs de propagation et si ces droits d'accès sont accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-164">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a390d-165">Toutes les clés de Registre sont des conteneurs, donc le seul indicateur d’héritage qui est significatif pour les clés de Registre est le <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="a390d-165">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a390d-166">Si cet indicateur n’est pas spécifié, les indicateurs de propagation sont ignorés et seule la clé immédiate est affectée.</span><span class="sxs-lookup"><span data-stu-id="a390d-166">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="a390d-167">Si l’indicateur est présent, la règle est propagée comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="a390d-167">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="a390d-168">Le tableau suppose une sous-clé S avec la sous-clé enfant CS et la sous-clé petit-enfant GS.</span><span class="sxs-lookup"><span data-stu-id="a390d-168">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="a390d-169">Autrement dit, le chemin d’accès pour la sous-clé petit-enfant est S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="a390d-169">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="a390d-170">Indicateurs de propagation</span><span class="sxs-lookup"><span data-stu-id="a390d-170">Propagation flags</span></span>|<span data-ttu-id="a390d-171">S</span><span class="sxs-lookup"><span data-stu-id="a390d-171">S</span></span>|<span data-ttu-id="a390d-172">CS</span><span class="sxs-lookup"><span data-stu-id="a390d-172">CS</span></span>|<span data-ttu-id="a390d-173">GS</span><span class="sxs-lookup"><span data-stu-id="a390d-173">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="a390d-174">X</span><span class="sxs-lookup"><span data-stu-id="a390d-174">X</span></span>|<span data-ttu-id="a390d-175">X</span><span class="sxs-lookup"><span data-stu-id="a390d-175">X</span></span>|<span data-ttu-id="a390d-176">X</span><span class="sxs-lookup"><span data-stu-id="a390d-176">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="a390d-177">X</span><span class="sxs-lookup"><span data-stu-id="a390d-177">X</span></span>|<span data-ttu-id="a390d-178">X</span><span class="sxs-lookup"><span data-stu-id="a390d-178">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="a390d-179">X</span><span class="sxs-lookup"><span data-stu-id="a390d-179">X</span></span>|<span data-ttu-id="a390d-180">X</span><span class="sxs-lookup"><span data-stu-id="a390d-180">X</span></span>|  
|<span data-ttu-id="a390d-181"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="a390d-181"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="a390d-182">X</span><span class="sxs-lookup"><span data-stu-id="a390d-182">X</span></span>||  
  
 <span data-ttu-id="a390d-183">Le modèle pour la sous-clé petit-enfant gouverne toutes les sous-clés contenues dans la sous-clé petit-enfant.</span><span class="sxs-lookup"><span data-stu-id="a390d-183">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="a390d-184">Par exemple, si le <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> indicateur est spécifié pour `inheritanceFlags` et <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> indicateur de propagation est spécifiée pour `propagationFlags`, cette règle ne s’applique pas à la sous-clé immédiate, mais il s’applique à toutes ses sous-clés enfants immédiates et à toutes les sous-clés elles contiennent.</span><span class="sxs-lookup"><span data-stu-id="a390d-184">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a390d-185">Bien que vous puissiez spécifier le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> indicateur pour `inheritanceFlags`, il est inutile lors de cette opération.</span><span class="sxs-lookup"><span data-stu-id="a390d-185">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="a390d-186">Dans le cadre du contrôle d’accès, les paires nom/valeur dans une sous-clé ne sont pas des objets distincts.</span><span class="sxs-lookup"><span data-stu-id="a390d-186">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="a390d-187">Les droits d’accès pour les paires nom/valeur sont contrôlés par les droits de la sous-clé.</span><span class="sxs-lookup"><span data-stu-id="a390d-187">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="a390d-188">En outre, étant donné que toutes les sous-clés sont des conteneurs (autrement dit, ils peuvent contenir d’autres sous-clés), elles ne sont pas affectées par la <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur.</span><span class="sxs-lookup"><span data-stu-id="a390d-188">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="a390d-189">Enfin, en spécifiant le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur complique inutilement la maintenance des règles, car il interfère avec la combinaison de règles compatibles.</span><span class="sxs-lookup"><span data-stu-id="a390d-189">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a390d-190"><paramref name="registryRights" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-190"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="a390d-191">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-191">-or-</span></span> 
 <span data-ttu-id="a390d-192"><paramref name="type" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-192"><paramref name="type" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="a390d-193">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-193">-or-</span></span> 
 <span data-ttu-id="a390d-194"><paramref name="inheritanceFlags" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-194"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="a390d-195">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-195">-or-</span></span> 
 <span data-ttu-id="a390d-196"><paramref name="propagationFlags" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-196"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a390d-197"><paramref name="identity" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a390d-197"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a390d-198">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-198">-or-</span></span> 
 <span data-ttu-id="a390d-199"><paramref name="registryRights" /> est égal à zéro.</span><span class="sxs-lookup"><span data-stu-id="a390d-199"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a390d-200"><paramref name="identity" /> n'est ni du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="a390d-200"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="a390d-201">Nom de l'utilisateur ou du groupe auquel s'applique la règle.</span><span class="sxs-lookup"><span data-stu-id="a390d-201">The name of the user or group the rule applies to.</span></span></param>
        <param name="registryRights"><span data-ttu-id="a390d-202">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.RegistryRights" /> spécifiant les droits accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-202">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="a390d-203">Une combinaison d'opérations de bits des indicateurs <see cref="T:System.Security.AccessControl.InheritanceFlags" /> qui spécifient comment les droits d'accès sont hérités d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="a390d-203">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="a390d-204">Une combinaison d'opérations de bits des indicateurs <see cref="T:System.Security.AccessControl.PropagationFlags" /> qui spécifient comment les droits d'accès se propagent vers d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="a390d-204">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span></span></param>
        <param name="type"><span data-ttu-id="a390d-205">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-205">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="a390d-206">Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />, en spécifiant le nom de l'utilisateur ou du groupe auquel la règle s'applique, les droits d'accès, les indicateurs d'héritage, les indicateurs de propagation et si ces droits d'accès sont accordés ou refusés.</span><span class="sxs-lookup"><span data-stu-id="a390d-206">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a390d-207">Toutes les clés de Registre sont des conteneurs, donc le seul indicateur d’héritage qui est significatif pour les clés de Registre est le <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="a390d-207">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a390d-208">Si cet indicateur n’est pas spécifié, les indicateurs de propagation sont ignorés et seule la clé immédiate est affectée.</span><span class="sxs-lookup"><span data-stu-id="a390d-208">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="a390d-209">Si l’indicateur est présent, la règle est propagée comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="a390d-209">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="a390d-210">Le tableau suppose une sous-clé S avec la sous-clé enfant CS et la sous-clé petit-enfant GS.</span><span class="sxs-lookup"><span data-stu-id="a390d-210">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="a390d-211">Autrement dit, le chemin d’accès pour la sous-clé petit-enfant est S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="a390d-211">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="a390d-212">Indicateurs de propagation</span><span class="sxs-lookup"><span data-stu-id="a390d-212">Propagation flags</span></span>|<span data-ttu-id="a390d-213">S</span><span class="sxs-lookup"><span data-stu-id="a390d-213">S</span></span>|<span data-ttu-id="a390d-214">CS</span><span class="sxs-lookup"><span data-stu-id="a390d-214">CS</span></span>|<span data-ttu-id="a390d-215">GS</span><span class="sxs-lookup"><span data-stu-id="a390d-215">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="a390d-216">X</span><span class="sxs-lookup"><span data-stu-id="a390d-216">X</span></span>|<span data-ttu-id="a390d-217">X</span><span class="sxs-lookup"><span data-stu-id="a390d-217">X</span></span>|<span data-ttu-id="a390d-218">X</span><span class="sxs-lookup"><span data-stu-id="a390d-218">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="a390d-219">X</span><span class="sxs-lookup"><span data-stu-id="a390d-219">X</span></span>|<span data-ttu-id="a390d-220">X</span><span class="sxs-lookup"><span data-stu-id="a390d-220">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="a390d-221">X</span><span class="sxs-lookup"><span data-stu-id="a390d-221">X</span></span>|<span data-ttu-id="a390d-222">X</span><span class="sxs-lookup"><span data-stu-id="a390d-222">X</span></span>|  
|<span data-ttu-id="a390d-223"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="a390d-223"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="a390d-224">X</span><span class="sxs-lookup"><span data-stu-id="a390d-224">X</span></span>||  
  
 <span data-ttu-id="a390d-225">Le modèle pour la sous-clé petit-enfant gouverne toutes les sous-clés contenues dans la sous-clé petit-enfant.</span><span class="sxs-lookup"><span data-stu-id="a390d-225">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="a390d-226">Par exemple, si le <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> indicateur est spécifié pour `inheritanceFlags` et <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> indicateur de propagation est spécifiée pour `propagationFlags`, cette règle ne s’applique pas à la sous-clé immédiate, mais il s’applique à toutes ses sous-clés enfants immédiates et à toutes les sous-clés elles contiennent.</span><span class="sxs-lookup"><span data-stu-id="a390d-226">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a390d-227">Bien que vous puissiez spécifier le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> indicateur pour `inheritanceFlags`, il est inutile lors de cette opération.</span><span class="sxs-lookup"><span data-stu-id="a390d-227">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="a390d-228">Dans le cadre du contrôle d’accès, les paires nom/valeur dans une sous-clé ne sont pas des objets distincts.</span><span class="sxs-lookup"><span data-stu-id="a390d-228">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="a390d-229">Les droits d’accès pour les paires nom/valeur sont contrôlés par les droits de la sous-clé.</span><span class="sxs-lookup"><span data-stu-id="a390d-229">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="a390d-230">En outre, étant donné que toutes les sous-clés sont des conteneurs (autrement dit, ils peuvent contenir d’autres sous-clés), elles ne sont pas affectées par la <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur.</span><span class="sxs-lookup"><span data-stu-id="a390d-230">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="a390d-231">Enfin, en spécifiant le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur complique inutilement la maintenance des règles, car il interfère avec la combinaison de règles compatibles.</span><span class="sxs-lookup"><span data-stu-id="a390d-231">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 <span data-ttu-id="a390d-232">Ce constructeur est équivalent à la création d’un <xref:System.Security.Principal.NTAccount> objet, en passant `identity` à la <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructeur et en passant le nouvellement créé <xref:System.Security.Principal.NTAccount> de l’objet à le <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> constructeur.</span><span class="sxs-lookup"><span data-stu-id="a390d-232">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a390d-233">L’exemple de code suivant montre les règles d’accès avec héritage et de propagation.</span><span class="sxs-lookup"><span data-stu-id="a390d-233">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="a390d-234">L’exemple crée un <xref:System.Security.AccessControl.RegistrySecurity> de l’objet, puis crée et ajoute deux règles qui ont le <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> indicateur.</span><span class="sxs-lookup"><span data-stu-id="a390d-234">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, and then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="a390d-235">La première règle n’a aucun indicateur de propagation, tandis que la seconde a <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> et <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="a390d-235">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="a390d-236">Le programme affiche les règles dans le <xref:System.Security.AccessControl.RegistrySecurity> objet, puis utilise le <xref:System.Security.AccessControl.RegistrySecurity> objet à créer une sous-clé.</span><span class="sxs-lookup"><span data-stu-id="a390d-236">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="a390d-237">Le programme crée un enfant de sous-clés et un petit-enfant, puis affiche les règles pour chaque sous-clé.</span><span class="sxs-lookup"><span data-stu-id="a390d-237">The program creates a child subkey and a grandchild subkey, and then displays the rules for each subkey.</span></span> <span data-ttu-id="a390d-238">Enfin, le programme supprime les clés de test.</span><span class="sxs-lookup"><span data-stu-id="a390d-238">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a390d-239"><paramref name="registryRights" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-239"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="a390d-240">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-240">-or-</span></span> 
 <span data-ttu-id="a390d-241"><paramref name="type" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-241"><paramref name="type" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="a390d-242">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-242">-or-</span></span> 
 <span data-ttu-id="a390d-243"><paramref name="inheritanceFlags" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-243"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="a390d-244">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-244">-or-</span></span> 
 <span data-ttu-id="a390d-245"><paramref name="propagationFlags" /> spécifie une valeur non valide.</span><span class="sxs-lookup"><span data-stu-id="a390d-245"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a390d-246"><paramref name="eventRights" /> est égal à zéro.</span><span class="sxs-lookup"><span data-stu-id="a390d-246"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a390d-247"><paramref name="identity" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a390d-247"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a390d-248">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-248">-or-</span></span> 
 <span data-ttu-id="a390d-249"><paramref name="identity" /> est une chaîne de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="a390d-249"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="a390d-250">ou</span><span class="sxs-lookup"><span data-stu-id="a390d-250">-or-</span></span> 
 <span data-ttu-id="a390d-251"><paramref name="identity" /> fait plus de 512 caractères.</span><span class="sxs-lookup"><span data-stu-id="a390d-251"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a390d-252">Obtient les droits accordés ou refusés par la règle d'accès.</span><span class="sxs-lookup"><span data-stu-id="a390d-252">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="a390d-253">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.RegistryRights" /> spécifiant les droits accordés ou refusés par la règle d'accès.</span><span class="sxs-lookup"><span data-stu-id="a390d-253">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a390d-254"><xref:System.Security.AccessControl.RegistryAccessRule> les objets sont immuables.</span><span class="sxs-lookup"><span data-stu-id="a390d-254"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="a390d-255">Vous pouvez créer une nouvelle règle d’accès qui représente un utilisateur différent, des droits différents ou un autre <xref:System.Security.AccessControl.AccessControlType>, mais vous ne pouvez pas modifier une règle d’accès existant.</span><span class="sxs-lookup"><span data-stu-id="a390d-255">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>