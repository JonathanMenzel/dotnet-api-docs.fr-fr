<Type Name="RegistrySecurity" FullName="System.Security.AccessControl.RegistrySecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e52f3b248c05ba047d59c24d923733a12bfa7839" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistrySecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistrySecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistrySecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistrySecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistrySecurity sealed : System::Security::AccessControl::NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f70d3-101">Représente la sécurité du contrôle d'accès Windows d'une clé de Registre.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f70d3-101">Represents the Windows access control security for a registry key.</span>
      </span>
      <span data-ttu-id="f70d3-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f70d3-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-103">A <xref:System.Security.AccessControl.RegistrySecurity> objet spécifie les droits d’accès d’une clé de Registre et qu’il spécifie également la manière dont les tentatives d’accès sont auditées.</span><span class="sxs-lookup"><span data-stu-id="f70d3-103">A <xref:System.Security.AccessControl.RegistrySecurity> object specifies access rights for a registry key, and also specifies how access attempts are audited.</span></span> <span data-ttu-id="f70d3-104">Droits d’accès à la clé de Registre sont exprimées sous forme de règles, chaque règle d’accès représenté par un <xref:System.Security.AccessControl.RegistryAccessRule> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-104">Access rights to the registry key are expressed as rules, with each access rule represented by a <xref:System.Security.AccessControl.RegistryAccessRule> object.</span></span> <span data-ttu-id="f70d3-105">Chaque règle d’audit est représentée par un <xref:System.Security.AccessControl.RegistryAuditRule> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-105">Each auditing rule is represented by a <xref:System.Security.AccessControl.RegistryAuditRule> object.</span></span>  
  
 <span data-ttu-id="f70d3-106">Cela reflète le système de sécurité Windows sous-jacent, dans lequel chaque objet sécurisable a au plus une liste discretionary access control (DACL) qui contrôle l’accès à l’objet sécurisé et au plus un système liste contrôle d’accès (SACL) qui spécifie les accès les tentatives sont auditées.</span><span class="sxs-lookup"><span data-stu-id="f70d3-106">This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</span></span> <span data-ttu-id="f70d3-107">La liste DACL et SACL sont les listes ordonnées d’entrées de contrôle d’accès (ACE) qui spécifient les accès et audit pour les utilisateurs et groupes.</span><span class="sxs-lookup"><span data-stu-id="f70d3-107">The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</span></span> <span data-ttu-id="f70d3-108">A <xref:System.Security.AccessControl.RegistryAccessRule> ou <xref:System.Security.AccessControl.RegistryAuditRule> objet peut représenter plusieurs ACE.</span><span class="sxs-lookup"><span data-stu-id="f70d3-108">A <xref:System.Security.AccessControl.RegistryAccessRule> or <xref:System.Security.AccessControl.RegistryAuditRule> object might represent more than one ACE.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f70d3-109">Sécurité de contrôle d’accès Windows peut être appliquée uniquement aux clés de Registre.</span><span class="sxs-lookup"><span data-stu-id="f70d3-109">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="f70d3-110">Il ne peut pas être appliqué aux paires clé/valeur stockées dans une clé.</span><span class="sxs-lookup"><span data-stu-id="f70d3-110">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="f70d3-111">Le <xref:System.Security.AccessControl.RegistrySecurity>, <xref:System.Security.AccessControl.RegistryAccessRule>, et <xref:System.Security.AccessControl.RegistryAuditRule> classes masquent les détails d’implémentation des ACL et des entrées.</span><span class="sxs-lookup"><span data-stu-id="f70d3-111">The <xref:System.Security.AccessControl.RegistrySecurity>, <xref:System.Security.AccessControl.RegistryAccessRule>, and <xref:System.Security.AccessControl.RegistryAuditRule> classes hide the implementation details of ACLs and ACEs.</span></span> <span data-ttu-id="f70d3-112">Ils permettent d’ignorer les différents types d’ACE dix-sept et la complexité de la maintenance d’héritage et la propagation de droits d’accès.</span><span class="sxs-lookup"><span data-stu-id="f70d3-112">They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</span></span> <span data-ttu-id="f70d3-113">Ces objets sont également conçues pour éviter les erreurs de contrôle d’accès courantes suivantes :</span><span class="sxs-lookup"><span data-stu-id="f70d3-113">These objects are also designed to prevent the following common access control errors:</span></span>  
  
-   <span data-ttu-id="f70d3-114">Création d’un descripteur de sécurité avec une liste DACL null.</span><span class="sxs-lookup"><span data-stu-id="f70d3-114">Creating a security descriptor with a null DACL.</span></span> <span data-ttu-id="f70d3-115">Une référence null à une liste DACL permet à tout utilisateur d’ajouter des règles d’accès à un objet, qui crée une attaque par déni de service.</span><span class="sxs-lookup"><span data-stu-id="f70d3-115">A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</span></span> <span data-ttu-id="f70d3-116">Un nouveau <xref:System.Security.AccessControl.RegistrySecurity> objet commence toujours par une liste DACL vide, ce qui refuse tout accès à tous les utilisateurs.</span><span class="sxs-lookup"><span data-stu-id="f70d3-116">A new <xref:System.Security.AccessControl.RegistrySecurity> object always starts with an empty DACL, which denies all access for all users.</span></span>  
  
-   <span data-ttu-id="f70d3-117">Violation de l’ordre canonique d’ACE.</span><span class="sxs-lookup"><span data-stu-id="f70d3-117">Violating the canonical ordering of ACEs.</span></span> <span data-ttu-id="f70d3-118">Si la liste ACE dans la liste DACL n’est pas conservée dans l’ordre canonique, les utilisateurs peuvent par inadvertance données accès à l’objet sécurisé.</span><span class="sxs-lookup"><span data-stu-id="f70d3-118">If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</span></span> <span data-ttu-id="f70d3-119">Par exemple, des droits d’accès refusé doivent toujours apparaître avant droits d’accès autorisés.</span><span class="sxs-lookup"><span data-stu-id="f70d3-119">For example, denied access rights must always appear before allowed access rights.</span></span> <span data-ttu-id="f70d3-120"><xref:System.Security.AccessControl.RegistrySecurity> objets conservent l’ordre correct en interne.</span><span class="sxs-lookup"><span data-stu-id="f70d3-120"><xref:System.Security.AccessControl.RegistrySecurity> objects maintain the correct order internally.</span></span>  
  
-   <span data-ttu-id="f70d3-121">Manipulation des indicateurs de descripteurs de sécurité, qui doivent se trouver sous le contrôle de gestionnaire de ressources uniquement.</span><span class="sxs-lookup"><span data-stu-id="f70d3-121">Manipulating security descriptor flags, which should be under resource manager control only.</span></span>  
  
-   <span data-ttu-id="f70d3-122">Création de combinaisons non valides d’indicateurs ACE.</span><span class="sxs-lookup"><span data-stu-id="f70d3-122">Creating invalid combinations of ACE flags.</span></span>  
  
-   <span data-ttu-id="f70d3-123">La manipulation de héritées.</span><span class="sxs-lookup"><span data-stu-id="f70d3-123">Manipulating inherited ACEs.</span></span> <span data-ttu-id="f70d3-124">Héritage et propagation sont gérés par le Gestionnaire de ressources, en réponse aux modifications apportées aux règles d’accès et d’audit.</span><span class="sxs-lookup"><span data-stu-id="f70d3-124">Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</span></span>  
  
-   <span data-ttu-id="f70d3-125">L’insertion sans signification ACE dans l’ACL.</span><span class="sxs-lookup"><span data-stu-id="f70d3-125">Inserting meaningless ACEs into ACLs.</span></span>  
  
 <span data-ttu-id="f70d3-126">Les seules fonctionnalités non prises en charge par les objets de sécurité .NET sont des activités dangereuses qui doivent être évitées par la majorité des développeurs d’applications, telles que les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="f70d3-126">The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</span></span>  
  
-   <span data-ttu-id="f70d3-127">Tâches de bas niveau qui sont normalement effectuées par le Gestionnaire de ressources.</span><span class="sxs-lookup"><span data-stu-id="f70d3-127">Low-level tasks that are normally performed by the resource manager.</span></span>  
  
-   <span data-ttu-id="f70d3-128">Ajout ou suppression d’entrées de contrôle d’accès d’une manière qui ne conserve pas l’ordre canonique.</span><span class="sxs-lookup"><span data-stu-id="f70d3-128">Adding or removing access control entries in ways that do not maintain the canonical ordering.</span></span>  
  
 <span data-ttu-id="f70d3-129">Pour modifier la sécurité de contrôle d’accès Windows pour une clé de Registre, utilisez la <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> méthode pour obtenir le <xref:System.Security.AccessControl.RegistrySecurity> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-129">To modify Windows access control security for a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="f70d3-130">Modifier l’objet de sécurité en ajoutant et supprimant des règles et ensuite utiliser le <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> méthode pour le rattacher.</span><span class="sxs-lookup"><span data-stu-id="f70d3-130">Modify the security object by adding and removing rules, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach it.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f70d3-131">Modifications apportées à un <xref:System.Security.AccessControl.RegistrySecurity> objet n’affectent pas les niveaux d’accès de la clé de Registre jusqu'à ce que vous appeliez la <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> méthode pour attribuer l’objet de sécurité modifié à la clé de Registre.</span><span class="sxs-lookup"><span data-stu-id="f70d3-131">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="f70d3-132">Pour copier la sécurité de contrôle d’accès à partir d’une clé de Registre à l’autre, utilisez la <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> méthode pour obtenir un <xref:System.Security.AccessControl.RegistrySecurity> représentant les règles d’accès et d’audit pour la première clé de Registre de l’objet, puis utilisez le <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> méthode pour attribuer ces règles à la deuxième clé de Registre.</span><span class="sxs-lookup"><span data-stu-id="f70d3-132">To copy access control security from one registry key to another, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object representing the access and audit rules for the first registry key, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign those rules to the second registry key.</span></span> <span data-ttu-id="f70d3-133">Vous pouvez également assigner les règles à une deuxième clé de Registre avec une <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A?displayProperty=nameWithType> ou <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A?displayProperty=nameWithType> méthode qui accepte un <xref:System.Security.AccessControl.RegistrySecurity> paramètre d’objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-133">You can also assign the rules to a second registry key with an <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A?displayProperty=nameWithType> method that takes a <xref:System.Security.AccessControl.RegistrySecurity> object parameter.</span></span>  
  
 <span data-ttu-id="f70d3-134">Les utilisateurs avec un investissement dans le langage de définition de descripteur de sécurité (SDDL) peuvent utiliser le <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> pour définir des règles d’accès pour une clé de Registre et les <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> méthode pour obtenir une chaîne qui représente les règles d’accès au format SDDL.</span><span class="sxs-lookup"><span data-stu-id="f70d3-134">Users with an investment in the security descriptor definition language (SDDL) can use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to set access rules for a registry key, and the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method to obtain a string that represents the access rules in SDDL format.</span></span> <span data-ttu-id="f70d3-135">Cela n’est pas recommandé pour un nouveau développement.</span><span class="sxs-lookup"><span data-stu-id="f70d3-135">This is not recommended for new development.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f70d3-136">Cette section contient deux exemples de code.</span><span class="sxs-lookup"><span data-stu-id="f70d3-136">This section contains two code examples.</span></span> <span data-ttu-id="f70d3-137">Le premier exemple montre comment compatible de fusion de règles lorsque ajoutés et supprimés et le second illustre comment les indicateurs d’héritage et de propagation affectent l’ajout et la suppression de règles.</span><span class="sxs-lookup"><span data-stu-id="f70d3-137">The first example shows how compatible rules merge when added and removed, and the second shows how inheritance and propagation flags affect the addition and deletion of rules.</span></span>  
  
 <span data-ttu-id="f70d3-138">Exemple 1</span><span class="sxs-lookup"><span data-stu-id="f70d3-138">Example 1</span></span>  
  
 <span data-ttu-id="f70d3-139">Le code suivant montre d’exemple comment la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> méthode supprime les droits à partir d’une règle compatible et comment la <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> méthode fusionne des droits avec les règles compatibles.</span><span class="sxs-lookup"><span data-stu-id="f70d3-139">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method removes rights from a compatible rule, and how the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method merges rights with compatible rules.</span></span>  
  
 <span data-ttu-id="f70d3-140">L’exemple crée un <xref:System.Security.AccessControl.RegistrySecurity> de l’objet et ajoute une règle qui autorise l’utilisateur actuel <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> droits.</span><span class="sxs-lookup"><span data-stu-id="f70d3-140">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds a rule that allows the current user <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> rights.</span></span> <span data-ttu-id="f70d3-141">L’exemple crée ensuite une règle qui accorde à l’utilisateur <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>avec le même héritage et les droits de propagation que la première règle et utilise le <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> méthode pour supprimer cette nouvelle règle de la <xref:System.Security.AccessControl.RegistrySecurity> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-141">The example then creates a rule that grants the user <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, with the same inheritance and propagation rights as the first rule, and uses the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to remove this new rule from the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="f70d3-142"><xref:System.Security.AccessControl.RegistryRights.SetValue> est un composant de <xref:System.Security.AccessControl.RegistryRights.ReadKey>par conséquent, il est supprimé de la règle compatible.</span><span class="sxs-lookup"><span data-stu-id="f70d3-142"><xref:System.Security.AccessControl.RegistryRights.SetValue> is a constituent of <xref:System.Security.AccessControl.RegistryRights.ReadKey>, so it is removed from the compatible rule.</span></span> <span data-ttu-id="f70d3-143">Les règles dans le <xref:System.Security.AccessControl.RegistrySecurity> objet s’affichent, présentent les composants restants du <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span><span class="sxs-lookup"><span data-stu-id="f70d3-143">The rules in the <xref:System.Security.AccessControl.RegistrySecurity> object are displayed, showing the remaining constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span></span>  
  
 <span data-ttu-id="f70d3-144">L’exemple de code appelle ensuite la <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> méthode pour fusionner le <xref:System.Security.AccessControl.RegistryRights.SetValue> avec le bouton droit dans la règle de la <xref:System.Security.AccessControl.RegistrySecurity> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-144">The example code then calls the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method to merge the <xref:System.Security.AccessControl.RegistryRights.SetValue> right back into the rule in the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f70d3-145">Cet exemple n’attache pas l’objet de sécurité à un <xref:Microsoft.Win32.RegistryKey> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-145">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="f70d3-146">Le deuxième exemple de cette section attache un objet de sécurité, et comme les exemples de <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> et <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f70d3-146">The second example in this section attaches a security object, and so do the examples in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> and <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 <span data-ttu-id="f70d3-147">Exemple 2</span><span class="sxs-lookup"><span data-stu-id="f70d3-147">Example 2</span></span>  
  
 <span data-ttu-id="f70d3-148">L’exemple de code suivant illustre les règles d’accès avec héritage et de propagation.</span><span class="sxs-lookup"><span data-stu-id="f70d3-148">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="f70d3-149">L’exemple crée un <xref:System.Security.AccessControl.RegistrySecurity> de l’objet, puis crée et ajoute deux règles qui ont le <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> indicateur.</span><span class="sxs-lookup"><span data-stu-id="f70d3-149">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="f70d3-150">La première règle ne comporte aucun indicateur de propagation, tandis que la seconde a <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> et <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="f70d3-150">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="f70d3-151">Le programme affiche les règles de la <xref:System.Security.AccessControl.RegistrySecurity> objet, puis utilise le <xref:System.Security.AccessControl.RegistrySecurity> objet pour créer une sous-clé.</span><span class="sxs-lookup"><span data-stu-id="f70d3-151">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="f70d3-152">Le programme crée un enfant de sous-clés et un petit-enfant, puis affiche la sécurité de chaque sous-clé.</span><span class="sxs-lookup"><span data-stu-id="f70d3-152">The program creates a child subkey and a grandchild subkey, then displays the security for each subkey.</span></span> <span data-ttu-id="f70d3-153">Enfin, le programme supprime les clés de test.</span><span class="sxs-lookup"><span data-stu-id="f70d3-153">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistrySecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistrySecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f70d3-154">Initialise une nouvelle instance de la classe <see cref="T:System.Security.AccessControl.RegistrySecurity" /> avec des valeurs par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-154">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-155">Un nouveau <xref:System.Security.AccessControl.RegistrySecurity> objet commence toujours par une liste vide accès discrétionnaire (DACL), ce qui refuse tout accès à tous les utilisateurs.</span><span class="sxs-lookup"><span data-stu-id="f70d3-155">A new <xref:System.Security.AccessControl.RegistrySecurity> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f70d3-156">Obtient le type d'énumération utilisé par la classe <see cref="T:System.Security.AccessControl.RegistrySecurity" /> pour représenter des droits d'accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-156">Gets the enumeration type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent access rights.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f70d3-157">Objet <see cref="T:System.Type" /> représentant l'énumération <see cref="T:System.Security.AccessControl.RegistryRights" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-157">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryRights" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-158">Classes dérivées de la <xref:System.Security.AccessControl.ObjectSecurity> classe de remplacement le <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> propriété et retourner le type qu’elles utilisent pour représenter des droits d’accès.</span><span class="sxs-lookup"><span data-stu-id="f70d3-158">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="f70d3-159">Lorsque vous travaillez avec des tableaux ou collections contenant plusieurs types d’objets de sécurité, utilisez cette propriété pour déterminer le type d’énumération correct à utiliser avec chaque objet de sécurité.</span><span class="sxs-lookup"><span data-stu-id="f70d3-159">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="f70d3-160">
            <see cref="T:System.Security.Principal.IdentityReference" /> qui identifie l'utilisateur ou le groupe auquel s'applique la règle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-160">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="f70d3-161">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.RegistryRights" /> qui spécifient les droits d'accès à accorder ou refuser, castés en entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-161">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the access rights to allow or deny, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="f70d3-162">Valeur booléenne spécifiant si la règle est héritée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-162">A Boolean value specifying whether the rule is inherited.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="f70d3-163">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.InheritanceFlags" /> spécifiant la façon dont les sous-clés héritent de la règle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-163">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying how the rule is inherited by subkeys.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="f70d3-164">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.PropagationFlags" /> qui modifient la façon dont les sous-clés héritent de la règle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-164">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that modify the way the rule is inherited by subkeys.</span>
          </span>
          <span data-ttu-id="f70d3-165">Sans utilité si la valeur de <c>inheritanceFlags</c> est <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-165">Meaningless if the value of <c>inheritanceFlags</c> is <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="f70d3-166">Une des valeurs <see cref="T:System.Security.AccessControl.AccessControlType" /> spécifiant si les droits sont accordés ou refusés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-166">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-167">Crée une règle de contrôle d'accès pour l'utilisateur spécifié, avec les droits d'accès, le contrôle d'accès et les indicateurs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-167">Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f70d3-168">Objet <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> représentant les droits spécifiés pour l'utilisateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-168">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> object representing the specified rights for the specified user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-169">La méthode recommandée pour créer des règles de contrôle d’accès est d’utiliser les constructeurs de la <xref:System.Security.AccessControl.RegistryAccessRule> classe.</span><span class="sxs-lookup"><span data-stu-id="f70d3-169">The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.RegistryAccessRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f70d3-170">Bien que vous puissiez spécifier le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> indicateur, il est inutile de faire.</span><span class="sxs-lookup"><span data-stu-id="f70d3-170">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag, there is no point in doing so.</span></span> <span data-ttu-id="f70d3-171">Dans le cadre du contrôle d’accès, les paires nom/valeur d’une sous-clé ne sont pas des objets distincts.</span><span class="sxs-lookup"><span data-stu-id="f70d3-171">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="f70d3-172">Les droits d’accès pour les paires nom/valeur sont contrôlés par les droits de la sous-clé.</span><span class="sxs-lookup"><span data-stu-id="f70d3-172">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="f70d3-173">En outre, étant donné que toutes les sous-clés sont des conteneurs (autrement dit, ils peuvent contenir d’autres sous-clés), elles ne sont pas affectées par la <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur.</span><span class="sxs-lookup"><span data-stu-id="f70d3-173">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="f70d3-174">Enfin, en spécifiant le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur complique inutilement la maintenance des règles, parce qu’il interfère avec la combinaison normale de règles compatibles.</span><span class="sxs-lookup"><span data-stu-id="f70d3-174">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f70d3-175">
            <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="type" /> spécifie une valeur non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-175">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f70d3-176">
            <paramref name="identityReference" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-176">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f70d3-177">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-177">-or-</span>
          </span>
          <span data-ttu-id="f70d3-178">
            <paramref name="accessMask" /> est égal à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-178">
              <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f70d3-179">
            <paramref name="identityReference" /> n'est ni du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-179">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f70d3-180">Obtient le type utilisé par la classe <see cref="T:System.Security.AccessControl.RegistrySecurity" /> pour représenter des règles d'accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-180">Gets the type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent access rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f70d3-181">Objet <see cref="T:System.Type" /> représentant la classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-181">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-182">Classes dérivées de la <xref:System.Security.AccessControl.ObjectSecurity> classe de remplacement le <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> propriété et retourner le type qu’elles utilisent pour représenter des règles d’accès.</span><span class="sxs-lookup"><span data-stu-id="f70d3-182">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rules.</span></span> <span data-ttu-id="f70d3-183">Lorsque vous travaillez avec des tableaux ou collections contenant plusieurs types d’objets de sécurité, utilisez cette propriété pour déterminer le type de règle d’accès correct à utiliser avec chaque objet de sécurité.</span><span class="sxs-lookup"><span data-stu-id="f70d3-183">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="f70d3-184">Règle de contrôle d'accès à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-184">The access control rule to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-185">Recherche une règle de contrôle d'accès correspondante avec laquelle la nouvelle règle peut être fusionnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-185">Searches for a matching access control with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="f70d3-186">Ajoute la nouvelle règle en cas de recherche infructueuse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-186">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-187">Le <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> méthode recherche des règles ayant le même utilisateur ou groupe et le même <xref:System.Security.AccessControl.AccessControlType> comme `rule`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-187">The <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method searches for rules with the same user or group and the same <xref:System.Security.AccessControl.AccessControlType> as `rule`.</span></span> <span data-ttu-id="f70d3-188">Si aucune n’est trouvée, `rule` est ajouté.</span><span class="sxs-lookup"><span data-stu-id="f70d3-188">If none are found, `rule` is added.</span></span> <span data-ttu-id="f70d3-189">Si une règle de correspondance est trouvée, les droits dans `rule` sont fusionnés avec la règle existante.</span><span class="sxs-lookup"><span data-stu-id="f70d3-189">If a matching rule is found, the rights in `rule` are merged with the existing rule.</span></span>  
  
 <span data-ttu-id="f70d3-190">Règles ne peuvent pas être fusionnées si elles ont des indicateurs d’héritage différent.</span><span class="sxs-lookup"><span data-stu-id="f70d3-190">Rules cannot be merged if they have different inheritance flags.</span></span> <span data-ttu-id="f70d3-191">Par exemple, si un utilisateur a un accès en lecture sans indicateurs d’héritage, et <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> est utilisé pour ajouter une règle donnant l’accès en écriture avec héritage de sous-clés utilisateur (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), les deux règles ne peuvent pas être fusionnées.</span><span class="sxs-lookup"><span data-stu-id="f70d3-191">For example, if a user is allowed read access with no inheritance flags, and <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> is used to add a rule giving the user write access with inheritance for subkeys (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), the two rules cannot be merged.</span></span>  
  
 <span data-ttu-id="f70d3-192">Règles avec différents <xref:System.Security.AccessControl.AccessControlType> valeurs ne sont jamais fusionnées.</span><span class="sxs-lookup"><span data-stu-id="f70d3-192">Rules with different <xref:System.Security.AccessControl.AccessControlType> values are never merged.</span></span>  
  
 <span data-ttu-id="f70d3-193">Règles d’exprimer des droits de la façon la plus économique.</span><span class="sxs-lookup"><span data-stu-id="f70d3-193">Rules express rights in the most economical way.</span></span> <span data-ttu-id="f70d3-194">Par exemple, si un utilisateur a <xref:System.Security.AccessControl.RegistryRights.QueryValues>, <xref:System.Security.AccessControl.RegistryRights.Notify> et <xref:System.Security.AccessControl.RegistryRights.ReadPermissions> droits et que vous ajoutez une règle autorisant <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> des droits, l’utilisateur dispose de tous les éléments constitutifs de <xref:System.Security.AccessControl.RegistryRights.ReadKey> droits.</span><span class="sxs-lookup"><span data-stu-id="f70d3-194">For example, if a user has <xref:System.Security.AccessControl.RegistryRights.QueryValues>, <xref:System.Security.AccessControl.RegistryRights.Notify> and <xref:System.Security.AccessControl.RegistryRights.ReadPermissions> rights, and you add a rule allowing <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> rights, the user has all the constituent parts of <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights.</span></span> <span data-ttu-id="f70d3-195">Si vous interrogez les droits d’utilisateur, vous verrez une règle contenant <xref:System.Security.AccessControl.RegistryRights.ReadKey> droits.</span><span class="sxs-lookup"><span data-stu-id="f70d3-195">If you query the user's rights, you will see a rule containing <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights.</span></span> <span data-ttu-id="f70d3-196">De même, si vous supprimez <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> des droits, les autres composants des <xref:System.Security.AccessControl.RegistryRights.ReadKey> droits réapparaît.</span><span class="sxs-lookup"><span data-stu-id="f70d3-196">Similarly, if you remove <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> rights, the other constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights will reappear.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f70d3-197">L’exemple de code suivant crée des règles d’accès du Registre et les ajoute à une <xref:System.Security.AccessControl.RegistrySecurity> objet, en montrant comment les règles autorisent et refusent des droits restent distincts, tout en les règles compatibles du même type est fusionnée.</span><span class="sxs-lookup"><span data-stu-id="f70d3-197">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f70d3-198">Cet exemple n’attache pas l’objet de sécurité à un <xref:Microsoft.Win32.RegistryKey> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-198">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="f70d3-199">Vous trouverez des exemples qui attachent des objets de sécurité dans <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> et <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f70d3-199">Examples that attach security objects can be found in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> and <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f70d3-200">Vous trouverez un exemple de code illustrant les indicateurs d’héritage et la propagation dans le <xref:System.Security.AccessControl.RegistryAccessRule> classe.</span><span class="sxs-lookup"><span data-stu-id="f70d3-200">A code example that demonstrates inheritance and propagation flags can be found in the <xref:System.Security.AccessControl.RegistryAccessRule> class.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f70d3-201">
            <paramref name="rule" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-201">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="f70d3-202">Règle d’audit à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-202">The audit rule to add.</span>
          </span>
          <span data-ttu-id="f70d3-203">L'utilisateur spécifié par cette règle détermine la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-203">The user specified by this rule determines the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-204">Recherche une règle d'audit avec laquelle la nouvelle règle peut être fusionnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-204">Searches for an audit rule with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="f70d3-205">Ajoute la nouvelle règle en cas de recherche infructueuse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-205">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-206">Le <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> méthode recherche des règles ayant le même utilisateur ou groupe en tant que `rule`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-206">The <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> method searches for rules with the same user or group as `rule`.</span></span> <span data-ttu-id="f70d3-207">Si aucune n’est trouvée, `rule` est ajouté.</span><span class="sxs-lookup"><span data-stu-id="f70d3-207">If none are found, `rule` is added.</span></span> <span data-ttu-id="f70d3-208">Si une règle de correspondance est trouvée, les indicateurs de `rule` sont fusionnées dans la règle existante.</span><span class="sxs-lookup"><span data-stu-id="f70d3-208">If a matching rule is found, the flags in `rule` are merged into the existing rule.</span></span>  
  
 <span data-ttu-id="f70d3-209">Règles ne peuvent pas être fusionnées si elles ont des indicateurs d’héritage différent.</span><span class="sxs-lookup"><span data-stu-id="f70d3-209">Rules cannot be merged if they have different inheritance flags.</span></span> <span data-ttu-id="f70d3-210">Par exemple, en cas d’échec des tentatives d’écriture à une clé sont auditées pour un utilisateur particulier, sans indicateurs d’héritage, et <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> est utilisée pour ajouter une règle en spécifiant que les tentatives ayant échoué pour changer les autorisations sont vérifiés pour le même utilisateur, mais avec l’héritage pour sous-clés (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), les deux règles ne peuvent pas être fusionnées.</span><span class="sxs-lookup"><span data-stu-id="f70d3-210">For example, if failed attempts to write to a key are audited for a particular user, with no inheritance flags, and <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> is used to add a rule specifying that failed attempts to change permissions are to be audited for the same user, but with inheritance for subkeys (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), the two rules cannot be merged.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="f70d3-211">
            <see cref="T:System.Security.Principal.IdentityReference" /> qui identifie l'utilisateur ou le groupe auquel s'applique la règle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-211">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="f70d3-212">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.RegistryRights" /> spécifiant les droits d'accès à auditer, castés en entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-212">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the access rights to audit, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="f70d3-213">Valeur booléenne spécifiant si la règle est héritée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-213">A Boolean value specifying whether the rule is inherited.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="f70d3-214">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.InheritanceFlags" /> spécifiant la façon dont les sous-clés héritent de la règle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-214">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying how the rule is inherited by subkeys.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="f70d3-215">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.PropagationFlags" /> qui modifient la façon dont les sous-clés héritent de la règle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-215">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that modify the way the rule is inherited by subkeys.</span>
          </span>
          <span data-ttu-id="f70d3-216">Sans utilité si la valeur de <c>inheritanceFlags</c> est <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-216">Meaningless if the value of <c>inheritanceFlags</c> is <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="f70d3-217">Combinaison d'opérations de bits de valeurs <see cref="T:System.Security.AccessControl.AuditFlags" /> spécifiant s'il faut auditer les accès réussis, les échecs d'accès ou les deux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-217">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit successful access, failed access, or both.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-218">Crée une règle d'audit, en spécifiant l'utilisateur auquel elle s'applique, les droits d'accès à auditer, l'héritage et la propagation de la règle, ainsi que le résultat qui déclenche la règle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-218">Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, the inheritance and propagation of the rule, and the outcome that triggers the rule.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f70d3-219">Objet <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> représentant la règle d'audit spécifiée, pour l'utilisateur spécifié, avec les indicateurs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-219">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> object representing the specified audit rule for the specified user, with the specified flags.</span>
          </span>
          <span data-ttu-id="f70d3-220">Le type de retour de la méthode est la classe de base, <see cref="T:System.Security.AccessControl.AuditRule" />, mais la valeur de retour peut être castée sans risque en classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-220">The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-221">La méthode recommandée pour créer des règles d’audit consiste à utiliser les constructeurs de la <xref:System.Security.AccessControl.RegistryAuditRule> classe.</span><span class="sxs-lookup"><span data-stu-id="f70d3-221">The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.RegistryAuditRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f70d3-222">Bien que vous puissiez spécifier le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> indicateur, il est inutile de faire.</span><span class="sxs-lookup"><span data-stu-id="f70d3-222">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag, there is no point in doing so.</span></span> <span data-ttu-id="f70d3-223">Dans le cadre du contrôle de l’audit, les paires nom/valeur d’une sous-clé ne sont pas des objets distincts.</span><span class="sxs-lookup"><span data-stu-id="f70d3-223">For the purposes of audit control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="f70d3-224">Les droits d’audit des paires nom/valeur sont contrôlés par les droits de la sous-clé.</span><span class="sxs-lookup"><span data-stu-id="f70d3-224">The audit rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="f70d3-225">En outre, étant donné que toutes les sous-clés sont des conteneurs (autrement dit, ils peuvent contenir d’autres sous-clés), elles ne sont pas affectées par la <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur.</span><span class="sxs-lookup"><span data-stu-id="f70d3-225">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="f70d3-226">Enfin, en spécifiant le <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> indicateur complique inutilement la maintenance des règles, parce qu’il interfère avec la combinaison normale de règles compatibles.</span><span class="sxs-lookup"><span data-stu-id="f70d3-226">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f70d3-227">
            <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="flags" /> spécifie une valeur non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-227">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f70d3-228">
            <paramref name="identityReference" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-228">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f70d3-229">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-229">-or-</span>
          </span>
          <span data-ttu-id="f70d3-230">
            <paramref name="accessMask" /> est égal à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-230">
              <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f70d3-231">
            <paramref name="identityReference" /> n'est ni du type <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni d'un type tel que <see cref="T:System.Security.Principal.NTAccount" /> qui peut être converti en type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-231">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f70d3-232">Obtient le type utilisé par la classe <see cref="T:System.Security.AccessControl.RegistrySecurity" /> pour représenter des règles d'audit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-232">Gets the type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent audit rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f70d3-233">Objet <see cref="T:System.Type" /> représentant la classe <see cref="T:System.Security.AccessControl.RegistryAuditRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-233">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-234">Classes dérivées de la <xref:System.Security.AccessControl.ObjectSecurity> classe de remplacement le <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> propriété et retourner le type qu’elles utilisent pour représenter des droits d’audit.</span><span class="sxs-lookup"><span data-stu-id="f70d3-234">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights.</span></span> <span data-ttu-id="f70d3-235">Lorsque vous travaillez avec des tableaux ou collections contenant plusieurs types d’objets de sécurité, utilisez cette propriété pour déterminer le type de règle d’audit correct à utiliser avec chaque objet de sécurité.</span><span class="sxs-lookup"><span data-stu-id="f70d3-235">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As RegistryAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="f70d3-236">
            <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> qui spécifie l'utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> à rechercher, ainsi qu'un jeu d'indicateurs d'héritage et de propagation avec lesquels une règle correspondante, si elle est trouvée, doit être compatible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-236">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="f70d3-237">Spécifie les droits à supprimer de la règle compatible, le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-237">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-238">Recherche une règle de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle d'accès spécifiée et ayant des indicateurs d'héritage et de propagation compatibles ; si une telle règle est trouvée, les droits contenus dans la règle d'accès spécifiée en sont supprimés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-238">Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified access rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f70d3-239">
            <see langword="true" /> si une règle compatible est trouvée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-239">
              <see langword="true" /> if a compatible rule is found; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-240">En cours <xref:System.Security.AccessControl.RegistrySecurity> est recherché dans une règle qui a le même utilisateur et le même <xref:System.Security.AccessControl.AccessControlType> valeur en tant que `rule`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-240">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for a rule that has the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="f70d3-241">Si aucune règle n’est trouvée, aucune action n’est effectuée et la méthode retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-241">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="f70d3-242">Si des règles correspondantes sont trouvées, les indicateurs d’héritage et de compatibilité sont vérifiées pour la compatibilité avec les indicateurs spécifiés dans `rule`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-242">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="f70d3-243">Si aucune règle compatible n’est trouvée, aucune action n’est effectuée et la méthode retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-243">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="f70d3-244">Si une règle avec des indicateurs compatibles est trouvée, les droits spécifiés dans `rule` sont supprimés de la règle compatible, et la méthode retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-244">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="f70d3-245">Si `rule` spécifie des droits non contenus dans la règle compatible, aucune action n’est effectuée en ce qui concerne ces droits.</span><span class="sxs-lookup"><span data-stu-id="f70d3-245">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="f70d3-246">Si tous les droits sont supprimés de la règle compatible, la règle entière est supprimée à partir du <xref:System.Security.AccessControl.RegistrySecurity> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-246">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f70d3-247">Le code suivant montre d’exemple comment la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> méthode supprime les droits à partir d’une règle compatible et comment la <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> méthode fusionne des droits avec les règles compatibles.</span><span class="sxs-lookup"><span data-stu-id="f70d3-247">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method removes rights from a compatible rule, and how the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method merges rights with compatible rules.</span></span>  
  
 <span data-ttu-id="f70d3-248">L’exemple crée un <xref:System.Security.AccessControl.RegistrySecurity> de l’objet et ajoute une règle qui autorise l’utilisateur actuel <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> droits.</span><span class="sxs-lookup"><span data-stu-id="f70d3-248">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds a rule that allows the current user <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> rights.</span></span> <span data-ttu-id="f70d3-249">L’exemple crée ensuite une règle qui accorde à l’utilisateur <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>avec le même héritage et les droits de propagation que la première règle et utilise le <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> méthode pour supprimer cette nouvelle règle de la <xref:System.Security.AccessControl.RegistrySecurity> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-249">The example then creates a rule that grants the user <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, with the same inheritance and propagation rights as the first rule, and uses the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to remove this new rule from the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="f70d3-250"><xref:System.Security.AccessControl.RegistryRights.SetValue> est un composant de <xref:System.Security.AccessControl.RegistryRights.ReadKey>par conséquent, il est supprimé de la règle compatible.</span><span class="sxs-lookup"><span data-stu-id="f70d3-250"><xref:System.Security.AccessControl.RegistryRights.SetValue> is a constituent of <xref:System.Security.AccessControl.RegistryRights.ReadKey>, so it is removed from the compatible rule.</span></span> <span data-ttu-id="f70d3-251">Les règles dans le <xref:System.Security.AccessControl.RegistrySecurity> objet s’affichent, présentent les composants restants du <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span><span class="sxs-lookup"><span data-stu-id="f70d3-251">The rules in the <xref:System.Security.AccessControl.RegistrySecurity> object are displayed, showing the remaining constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span></span>  
  
 <span data-ttu-id="f70d3-252">L’exemple de code appelle ensuite la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> méthode pour fusionner le <xref:System.Security.AccessControl.RegistryRights.SetValue> avec le bouton droit dans la règle de la <xref:System.Security.AccessControl.RegistrySecurity> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-252">The example code then calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to merge the <xref:System.Security.AccessControl.RegistryRights.SetValue> right back into the rule in the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f70d3-253">Cet exemple n’attache pas l’objet de sécurité à un <xref:Microsoft.Win32.RegistryKey> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-253">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="f70d3-254">Le deuxième exemple de cette section attache un objet de sécurité, et comme les exemples de <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f70d3-254">The second example in this section attaches a security object, and so do the examples in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType><xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f70d3-255">
            <paramref name="rule" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-255">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="f70d3-256">
            <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> qui spécifie l'utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-256">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for.</span>
          </span>
          <span data-ttu-id="f70d3-257">Les droits et les indicateurs d'héritage ou de propagation spécifiés par cette règle sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-257">Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-258">Recherche toutes les règles de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle spécifiée et, s'il en existe, les supprime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-258">Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-259">En cours <xref:System.Security.AccessControl.RegistrySecurity> recherche est effectuée pour les règles qui ont le même utilisateur et le même <xref:System.Security.AccessControl.AccessControlType> valeur en tant que `rule`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-259">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for rules that have the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="f70d3-260">Des droits, les indicateurs d’héritage ou les indicateurs de propagation spécifiés par `rule` sont ignorés lors de l’exécution de cette recherche.</span><span class="sxs-lookup"><span data-stu-id="f70d3-260">Any rights, inheritance flags, or propagation flags specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="f70d3-261">Si aucune règle correspondante n’est trouvée, aucune action n’est effectuée.</span><span class="sxs-lookup"><span data-stu-id="f70d3-261">If no matching rules are found, no action is taken.</span></span>  
  
 <span data-ttu-id="f70d3-262">Par exemple, si un utilisateur dispose de plusieurs règles qui autorisent divers droits avec héritage différent et indicateurs de propagation, vous pouvez supprimer toutes ces règles en créant un <xref:System.Security.AccessControl.RegistryAccessRule> objet qui spécifie l’utilisateur et <xref:System.Security.AccessControl.AccessControlType.Allow?displayProperty=nameWithType>, avec les droits arbitraires et les indicateurs, et en passant cette règle à la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f70d3-262">For example, if a user has multiple rules that allow various rights with different inheritance and propagation flags, you can remove all those rules by creating a <xref:System.Security.AccessControl.RegistryAccessRule> object that specifies the user and <xref:System.Security.AccessControl.AccessControlType.Allow?displayProperty=nameWithType>, with any arbitrary rights and flags, and passing that rule to the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f70d3-263">L’exemple de code suivant montre que le <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> méthode supprime toutes les règles qui correspondent à l’utilisateur et <xref:System.Security.AccessControl.AccessControlType>, en ignorant les droits et les indicateurs.</span><span class="sxs-lookup"><span data-stu-id="f70d3-263">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method removes all rules that match user and <xref:System.Security.AccessControl.AccessControlType>, ignoring rights and flags.</span></span>  
  
 <span data-ttu-id="f70d3-264">L’exemple crée un <xref:System.Security.AccessControl.RegistrySecurity> de l’objet et ajoute des règles qui accordent et refusent divers droits à l’utilisateur actuel, avec différents indicateurs d’héritage et de propagation.</span><span class="sxs-lookup"><span data-stu-id="f70d3-264">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="f70d3-265">L’exemple crée ensuite une règle qui permet à l’utilisateur actuel de prendre possession, puis passe cette règle à la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> méthode pour supprimer les deux règles qui autorisent l’accès.</span><span class="sxs-lookup"><span data-stu-id="f70d3-265">The example then creates a new rule that allows the current user to take ownership, and passes that rule to the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method to remove the two rules that allow access.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f70d3-266">Cet exemple n’attache pas l’objet de sécurité à un <xref:Microsoft.Win32.RegistryKey> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-266">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="f70d3-267">Consultez le <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> (méthode) et le <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f70d3-267">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f70d3-268">
            <paramref name="rule" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-268">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="f70d3-269">
            <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-269">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-270">Recherche une règle de contrôle d'accès qui correspond exactement à la règle spécifiée et, si une telle règle est trouvée, la supprime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-270">Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-271">La règle est supprimée uniquement si celle-ci correspond exactement à `rule` dans tous les détails, y compris les indicateurs.</span><span class="sxs-lookup"><span data-stu-id="f70d3-271">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="f70d3-272">Autres règles ayant le même utilisateur et <xref:System.Security.AccessControl.AccessControlType> ne sont pas affectées.</span><span class="sxs-lookup"><span data-stu-id="f70d3-272">Other rules with the same user and <xref:System.Security.AccessControl.AccessControlType> are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f70d3-273">Une règle représente une ou plus sous-jacent entrées contrôle d’accès (ACE) et ces entrées sont combinées si nécessaire, lorsque vous modifiez les règles de sécurité d’accès pour un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="f70d3-273">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</span></span> <span data-ttu-id="f70d3-274">Par conséquent, une règle n’existe plus sous la forme qu’elle avait lorsqu’elle a été ajoutée et dans ce cas le <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> méthode ne peut pas le supprimer.</span><span class="sxs-lookup"><span data-stu-id="f70d3-274">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method cannot remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f70d3-275">L’exemple de code suivant montre que le <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> méthode supprime une règle uniquement si elle correspond à exactement.</span><span class="sxs-lookup"><span data-stu-id="f70d3-275">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method removes a rule only if it matches exactly.</span></span>  
  
 <span data-ttu-id="f70d3-276">L’exemple crée deux règles qui accordent des droits différents.</span><span class="sxs-lookup"><span data-stu-id="f70d3-276">The example creates two rules that allow different rights.</span></span> <span data-ttu-id="f70d3-277">Les règles ont des indicateurs d’héritage et de propagation compatibles, donc lorsque la deuxième règle est ajoutée, elle fusionne avec la première.</span><span class="sxs-lookup"><span data-stu-id="f70d3-277">The rules have compatible inheritance and propagation flags, so when the second rule is added it merges with the first.</span></span> <span data-ttu-id="f70d3-278">L’exemple appelle la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> méthode, en spécifiant la première règle, mais étant donné que les règles sont fusionnées il n’existe aucune règle correspondant.</span><span class="sxs-lookup"><span data-stu-id="f70d3-278">The example calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method, specifying the first rule, but because the rules are merged there is no rule that matches.</span></span> <span data-ttu-id="f70d3-279">L’exemple appelle ensuite la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> méthode pour supprimer la deuxième règle de la règle fusionnée et enfin appelle la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> méthode pour supprimer la première règle.</span><span class="sxs-lookup"><span data-stu-id="f70d3-279">The example then calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to the remove the second rule from the merged rule, and finally calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method to remove the first rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f70d3-280">Cet exemple n’attache pas l’objet de sécurité à un <xref:Microsoft.Win32.RegistryKey> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-280">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="f70d3-281">Consultez le <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> (méthode) et le <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f70d3-281">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f70d3-282">
            <paramref name="rule" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-282">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As RegistryAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="f70d3-283">
            <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> qui spécifie l'utilisateur à rechercher, ainsi qu'un jeu d'indicateurs d'héritage et de propagation avec lesquels une règle correspondante, si elle est trouvée, doit être compatible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-283">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="f70d3-284">Spécifie les droits à supprimer de la règle compatible, le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-284">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-285">Recherche une règle de contrôle d'audit ayant le même utilisateur que la règle spécifiée et ayant des indicateurs d'héritage et de propagation compatibles ; si une règle compatible est trouvée, les droits contenus dans la règle spécifiée en sont supprimés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-285">Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f70d3-286">
            <see langword="true" /> si une règle compatible est trouvée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-286">
              <see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-287">En cours <xref:System.Security.AccessControl.RegistrySecurity> est recherché dans une règle d’audit ayant le même utilisateur que `rule`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-287">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for an audit rule that has the same user as `rule`.</span></span> <span data-ttu-id="f70d3-288">Si aucune règle n’est trouvée, aucune action n’est effectuée et la méthode retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-288">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="f70d3-289">Si des règles correspondantes sont trouvées, les indicateurs d’héritage et de compatibilité sont vérifiées pour la compatibilité avec les indicateurs spécifiés dans `rule`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-289">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="f70d3-290">Si aucune règle compatible n’est trouvée, aucune action n’est effectuée et la méthode retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-290">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="f70d3-291">Si une règle avec des indicateurs compatibles est trouvée, les droits spécifiés dans `rule` sont supprimés de la règle compatible, et la méthode retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-291">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="f70d3-292">Si `rule` spécifie des droits non contenus dans la règle compatible, aucune action n’est effectuée en ce qui concerne ces droits.</span><span class="sxs-lookup"><span data-stu-id="f70d3-292">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="f70d3-293">Si tous les droits sont supprimés de la règle compatible, la règle entière est supprimée à partir du <xref:System.Security.AccessControl.RegistrySecurity> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-293">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f70d3-294">
            <paramref name="rule" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-294">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="f70d3-295">
            <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> qui spécifie l'utilisateur à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-295">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> that specifies the user to search for.</span>
          </span>
          <span data-ttu-id="f70d3-296">Les droits et les indicateurs d'héritage ou de propagation spécifiés par cette règle sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-296">Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-297">Recherche toutes les règles d'audit ayant le même utilisateur que la règle spécifiée et, s'il en existe, les supprime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-297">Searches for all audit rules with the same user as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-298">En cours <xref:System.Security.AccessControl.RegistrySecurity> est recherchée dans les règles d’audit qui ont le même utilisateur que `rule`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-298">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for audit rules that have the same user as `rule`.</span></span> <span data-ttu-id="f70d3-299">Des droits, les indicateurs d’héritage ou les indicateurs de propagation spécifiés par `rule` sont ignorés lors de l’exécution de cette recherche.</span><span class="sxs-lookup"><span data-stu-id="f70d3-299">Any rights, inheritance flags, or propagation flags specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="f70d3-300">Si aucune règle correspondante n’est trouvée, aucune action n’est effectuée.</span><span class="sxs-lookup"><span data-stu-id="f70d3-300">If no matching rules are found, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f70d3-301">
            <paramref name="rule" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-301">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="f70d3-302">
            <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-302">The <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-303">Recherche une règle d'audit qui correspond exactement à la règle spécifiée et, si une telle règle est trouvée, la supprime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-303">Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-304">La règle est supprimée uniquement si celle-ci correspond exactement à `rule` dans tous les détails, y compris les indicateurs.</span><span class="sxs-lookup"><span data-stu-id="f70d3-304">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="f70d3-305">Autres règles d’audit pour le même utilisateur ne sont pas affectées.</span><span class="sxs-lookup"><span data-stu-id="f70d3-305">Other audit rules for the same user are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f70d3-306">Une règle représente une ou plus sous-jacent entrées contrôle d’accès (ACE) et ces entrées sont combinées si nécessaire, lorsque vous modifiez les règles de sécurité d’audit pour un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="f70d3-306">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</span></span> <span data-ttu-id="f70d3-307">Par conséquent, une règle n’existe plus sous la forme qu’elle avait lorsqu’elle a été ajoutée et dans ce cas le <xref:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific%2A> méthode ne peut pas le supprimer.</span><span class="sxs-lookup"><span data-stu-id="f70d3-307">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific%2A> method cannot remove it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f70d3-308">
            <paramref name="rule" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-308">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="f70d3-309">
            <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-309">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="f70d3-310">L'utilisateur spécifié par cette règle détermine les règles à supprimer avant l'ajout de celle-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-310">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-311">Supprime toutes les règles de contrôle d'accès ayant le même utilisateur que la règle spécifiée, indépendamment de <see cref="T:System.Security.AccessControl.AccessControlType" />, puis ajoute la règle spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-311">Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-312">Si aucune règle d’accès dont l’utilisateur correspond à la règle spécifiée, `rule` est ajouté.</span><span class="sxs-lookup"><span data-stu-id="f70d3-312">If there are no access rules whose user matches the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f70d3-313">Le code suivant exemple montre comment la <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> méthode remplace toutes les règles de l’utilisateur correspondant à la règle de correspondance spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f70d3-313">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> method replaces all rules for the matching user with the rule specified for the match.</span></span>  
  
 <span data-ttu-id="f70d3-314">L’exemple crée un <xref:System.Security.AccessControl.RegistrySecurity> de l’objet et ajoute des règles qui accordent et refusent divers droits à l’utilisateur actuel, avec différents indicateurs d’héritage et de propagation.</span><span class="sxs-lookup"><span data-stu-id="f70d3-314">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="f70d3-315">L’exemple crée ensuite une règle qui permet à l’utilisateur actuel uniquement de lire la clé et utilise le <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> méthode pour supprimer toutes les règles de l’utilisateur et de les remplacer par la nouvelle règle.</span><span class="sxs-lookup"><span data-stu-id="f70d3-315">The example then creates a new rule that allows the current user only to read the key, and uses the <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> method to remove the all rules for the user and replace them with the new rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f70d3-316">Cet exemple n’attache pas l’objet de sécurité à un <xref:Microsoft.Win32.RegistryKey> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-316">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="f70d3-317">Consultez le <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> (méthode) et le <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f70d3-317">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.ResetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.ResetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.ResetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.ResetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="f70d3-318">
            <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-318">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="f70d3-319">L'utilisateur et le <see cref="T:System.Security.AccessControl.AccessControlType" /> de cette règle déterminent les règles à supprimer avant l'ajout de celle-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-319">The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-320">Supprime toutes les règles de contrôle d'accès ayant les mêmes utilisateur et <see cref="T:System.Security.AccessControl.AccessControlType" /> (autorisation ou refus) que la règle spécifiée, puis ajoute la règle spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-320">Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-321">Si la règle spécifiée a <xref:System.Security.AccessControl.AccessControlType.Allow>, l’effet de cette méthode consiste à supprimer tous les <xref:System.Security.AccessControl.AccessControlType.Allow> règles pour l’utilisateur spécifié, en les remplaçant par la règle spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f70d3-321">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Allow>, the effect of this method is to remove all <xref:System.Security.AccessControl.AccessControlType.Allow> rules for the specified user, replacing them with the specified rule.</span></span> <span data-ttu-id="f70d3-322">Si la règle spécifiée a <xref:System.Security.AccessControl.AccessControlType.Deny>, tous les <xref:System.Security.AccessControl.AccessControlType.Deny> règles pour l’utilisateur spécifié sont remplacées par la règle spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f70d3-322">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Deny>, all <xref:System.Security.AccessControl.AccessControlType.Deny> rules for the specified user are replaced with the specified rule.</span></span>  
  
 <span data-ttu-id="f70d3-323">S’il en existe pas de règles dont l’utilisateur et <xref:System.Security.AccessControl.AccessControlType> correspond à la règle spécifiée, `rule` est ajouté.</span><span class="sxs-lookup"><span data-stu-id="f70d3-323">If there are no rules whose user and <xref:System.Security.AccessControl.AccessControlType> match the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f70d3-324">L’exemple de code suivant montre que le <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> méthode supprime toutes les règles qui correspondent à la fois à l’utilisateur et le <xref:System.Security.AccessControl.AccessControlType> de `rule`, en ignorant les droits et les indicateurs et les remplace par `rule`.</span><span class="sxs-lookup"><span data-stu-id="f70d3-324">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> method removes all rules that match both the user and the <xref:System.Security.AccessControl.AccessControlType> of `rule`, ignoring rights and flags, and replaces them with `rule`.</span></span>  
  
 <span data-ttu-id="f70d3-325">L’exemple crée un <xref:System.Security.AccessControl.RegistrySecurity> de l’objet et ajoute des règles qui accordent et refusent divers droits à l’utilisateur actuel, avec différents indicateurs d’héritage et de propagation.</span><span class="sxs-lookup"><span data-stu-id="f70d3-325">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="f70d3-326">L’exemple crée ensuite une règle qui permet à l’utilisateur actuel uniquement de lire la clé et utilise le <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> méthode pour supprimer les deux règles qui autorisent l’accès et les remplacer par la nouvelle règle.</span><span class="sxs-lookup"><span data-stu-id="f70d3-326">The example then creates a new rule that allows the current user only to read the key, and uses the <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> method to remove the two rules that allow access and to replace them with the new rule.</span></span> <span data-ttu-id="f70d3-327">La règle qui refuse l’accès n’est pas affectée.</span><span class="sxs-lookup"><span data-stu-id="f70d3-327">The rule that denies access is not affected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f70d3-328">Cet exemple n’attache pas l’objet de sécurité à un <xref:Microsoft.Win32.RegistryKey> objet.</span><span class="sxs-lookup"><span data-stu-id="f70d3-328">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="f70d3-329">Consultez le <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> (méthode) et le <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f70d3-329">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.SetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.SetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.SetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.SetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f70d3-330">
            <paramref name="rule" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-330">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.SetAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="f70d3-331">
            <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-331">The <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> to add.</span>
          </span>
          <span data-ttu-id="f70d3-332">L'utilisateur spécifié par cette règle détermine les règles à supprimer avant l'ajout de celle-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-332">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f70d3-333">Supprime toutes les règles d'audit ayant le même utilisateur que la règle spécifiée, quelle que soit la valeur de <see cref="T:System.Security.AccessControl.AuditFlags" />, puis ajoute la règle spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-333">Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f70d3-334">Si aucune règle d’audit dont l’utilisateur correspond à la règle spécifiée, `rule` est ajouté.</span><span class="sxs-lookup"><span data-stu-id="f70d3-334">If there are no audit rules whose user matches the specified rule, `rule` is added.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f70d3-335">
            <paramref name="rule" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f70d3-335">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>