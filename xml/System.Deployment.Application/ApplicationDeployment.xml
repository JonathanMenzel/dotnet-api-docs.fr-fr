<Type Name="ApplicationDeployment" FullName="System.Deployment.Application.ApplicationDeployment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f9e1fd8a5a955ed0e85469506d05a03f3e7514d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37667644" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ApplicationDeployment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationDeployment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.ApplicationDeployment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationDeployment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationDeployment sealed" />
  <TypeSignature Language="F#" Value="type ApplicationDeployment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Prend en charge les mises à jour du déploiement actuel par programme, et gère le téléchargement de fichiers à la demande. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez configurer votre [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application pour vérifier les mises à jour et les installer automatiquement via le `subscription` élément du manifeste de déploiement. Certaines applications, toutefois, peut-être mieux contrôler leurs mises à jour. Voulez-vous installer les mises à jour requises par programme et inviter les utilisateurs à installer les mises à jour facultatives à leur convenance. En désactivant les mises à jour de l’abonnement dans le manifeste de déploiement, vous pouvez prendre le contrôle intégral des stratégies de mise à jour de votre application. Vous pouvez également utiliser l’abonnement automatique conjointement avec <xref:System.Deployment.Application.ApplicationDeployment>, ce qui permet [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] régulièrement à jour l’application, mais utilise <xref:System.Deployment.Application.ApplicationDeployment> pour télécharger les mises à jour critiques peu de temps après leur publication.  
  
 Vous pouvez tester si votre déploiement possède une mise à jour disponible à l’aide la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> ou <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> méthode ; cette dernière méthode déclenche le <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> événements de réussite. <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> Retourne des informations importantes sur la mise à jour, telles que son numéro de version et s’il s’agit d’une mise à jour requise pour les utilisateurs actuels. Si une mise à jour est disponible, vous pouvez l’installer à l’aide de <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> ou <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; la dernière méthode déclenche la <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> événement après l’installation de la mise à jour est terminée. Pour les mises à jour volumineuses, vous pouvez recevoir des notifications de progression via le <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> et <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> événements et utilisez les informations de <xref:System.ComponentModel.ProgressChangedEventArgs> pour notifier l’utilisateur de l’état de téléchargement.  
  
 Vous pouvez également utiliser <xref:System.Deployment.Application.ApplicationDeployment> pour télécharger des fichiers volumineux et des assemblys à la demande. Ces fichiers doivent être marqués comme « facultatifs » dans le manifeste de déploiement application afin qu’ils ne sont pas téléchargés lors de l’installation. Vous pouvez télécharger les fichiers à tout moment pendant la durée de l’application à l’aide de la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> ou <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> (méthode). Vous pouvez télécharger des assemblys avant qu’ils sont chargés en mémoire en fournissant un gestionnaire d’événements pour le <xref:System.AppDomain.AssemblyResolve> événement sur le <xref:System.AppDomain> classe. Pour plus d’informations, consultez [Procédure pas à pas : téléchargement d’assemblys à la demande avec l’API du déploiement ClickOnce à l’aide du concepteur](http://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5).  
  
> [!NOTE]
>  Si vous mettez à jour un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application pendant l’exécution de l’application, l’utilisateur ne voit pas les mises à jour jusqu'à ce que vous appeliez la <xref:System.Windows.Forms.Application.Restart%2A> méthode de la <xref:System.Windows.Forms.Application>, qui ferme l’instance en cours d’exécution actuel de l’application et redémarrer immédiatement Il.  
  
 <xref:System.Deployment.Application.ApplicationDeployment> n’a aucun constructeur public ; vous obtenez des instances de la classe au sein d’un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application via le <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propriété. Vous utilisez le <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> propriété pour vérifier que l’application actuelle est une [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application.  
  
 <xref:System.Deployment.Application.ApplicationDeployment> prend en charge la vérification des mises à jour et le téléchargement de fichiers mis à jour en mode asynchrone à l’aide de la nouvelle [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), qui expose les rappels d’exécution en tant qu’événements de classe. <xref:System.Deployment.Application.ApplicationDeployment> démarre et gère les threads pour vous et rappelle votre application sur le thread d’interface utilisateur approprié. Par cette classe, vous pouvez mettre à jour sans blocage de l’application, afin que l’utilisateur puisse continuer à travailler pendant l’installation de la mise à jour. Si l’utilisateur doit arrêter de travailler lorsqu’une mise à jour a lieu, envisagez plutôt d’utiliser les méthodes synchrones.  
  
> [!NOTE]
>  Mise à jour asynchrone requiert que votre application importer les deux le <xref:System.Deployment.Application> et <xref:System.ComponentModel> espaces de noms.  
  
   
  
## Examples  
 L’exemple de code suivant détermine au moment du chargement application si une nouvelle mise à jour est disponible ; Si une mise à jour requise est disponible, l’exemple de code installe la mise à jour de façon asynchrone. Ce code doit être ajouté à un formulaire qui contient un <xref:System.Windows.Forms.TextBox> nommé `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivationUri">
      <MemberSignature Language="C#" Value="public Uri ActivationUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ActivationUri" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ActivationUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationUri : Uri" Usage="System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'URL utilisée pour lancer le manifeste de déploiement de l'application.</summary>
        <value>Chaîne de longueur nulle si la <c>TrustUrlParameters</c> propriété dans le manifeste de déploiement est <see langword="false" />, ou si l’utilisateur a fourni une convention UNC pour ouvrir le déploiement ou l’a ouvert localement. Sinon, la valeur de retour est l'URL complète utilisée pour lancer l'application, y compris tous les paramètres.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fonctionne dans les applications de confiance totale et confiance partielle.  
  
   
  
## Examples  
 Le code suivant montre comment récupérer les paramètres d’URL à l’aide de <xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A>et comment utiliser le <xref:System.Web.HttpUtility> classe pour analyser la chaîne de requête en toute sécurité. Plusieurs occurrences de la même variable de chaîne de requête sont consolidées dans une entrée de retourné <xref:System.Collections.Specialized.NameValueCollection>.  
  
 [!code-csharp[ClickOnceQueryString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceQueryString/CS/Form1.cs#1)]
 [!code-vb[ClickOnceQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceQueryString/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForDetailedUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Exécute la même opération que <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, mais retourne des informations détaillées sur la mise à jour disponible.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate () As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : unit -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exécute la même opération que <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, mais retourne des informations détaillées sur la mise à jour disponible.</summary>
        <returns>
          <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> pour la mise à jour disponible.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> permet de méthode aux appelants synchrones obtenez la même étendue informations appelants asynchrones obtenir à l’aide la <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> classe.  
  
   
  
## Examples  
 Le code suivant exemple utilise <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> pour extraire des informations sur la dernière mise à jour. Si une mise à jour existe, il l’installe automatiquement uniquement si elle est requise ; Sinon, il invite l’utilisateur.  
  
 [!code-cpp[ClickOnceAPI#7](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#7)]
 [!code-csharp[ClickOnceAPI#7](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#7)]
 [!code-vb[ClickOnceAPI#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Soit l'application actuelle n'est pas configurée pour prendre en charge les mises à jour, soit une opération de vérification des mises à jour est déjà en cours.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Le manifeste de déploiement ne peut pas être téléchargé. Cette exception apparaît dans la propriété <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> de l'événement <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Le manifeste de déploiement est endommagé. Régénérez-le avant d'essayer de déployer cette application chez les utilisateurs. Cette exception apparaît dans la propriété <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> de l'événement <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate (persistUpdateCheckResult As Boolean) As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : bool -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">Si la valeur est <see langword="false" />, la mise à jour sera appliquée silencieusement et aucune boîte de dialogue ne s'affichera.</param>
        <summary>Exécute la même opération que <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, mais retourne des informations détaillées sur la mise à jour disponible.</summary>
        <returns>
          <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> pour la mise à jour disponible.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Vérifie <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> pour déterminer si une nouvelle mise à jour est disponible.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : unit -&gt; bool" Usage="applicationDeployment.CheckForUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Vérifie <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> pour déterminer si une nouvelle mise à jour est disponible.</summary>
        <returns>
          <see langword="true" /> si une nouvelle mise à jour est disponible ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> méthode compare la version du déploiement actuellement installé avec la version spécifiée dans le manifeste de déploiement, consultez <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>. Si la version sur le serveur est différente de la version installée, elle retourne `true`.  
  
 Cette méthode se bloque jusqu'à ce que la vérification est terminée. Pour vérifier de façon asynchrone pour une mise à jour, utilisez la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> méthode à la place.  
  
> [!NOTE]
>  Si <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> découvre qu’une mise à jour est disponible et que l’utilisateur choisit de ne pas l’installer, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] invitera l’utilisateur une mise à jour est disponible à la prochaine fois que l’application est exécutée. Il n’existe aucun moyen de désactiver cette invite. (Si l’application est une mise à jour requise, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] installera sans demander confirmation.)  
  
   
  
## Examples  
 L’exemple de code suivant vérifie une mise à jour de l’application ; s’il est disponible, il l’installe de manière synchrone.  
  
 [!code-cpp[ClickOnceAPI#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#5)]
 [!code-csharp[ClickOnceAPI#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#5)]
 [!code-vb[ClickOnceAPI#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] lève immédiatement cette exception si vous appelez la méthode <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> lorsqu'une mise à jour est déjà en cours.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Le manifeste de déploiement ne peut pas être téléchargé.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Le manifeste de déploiement est endommagé. Vous devrez vraisemblablement redéployer l'application pour résoudre ce problème.</exception>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate (persistUpdateCheckResult As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : bool -&gt; bool" Usage="applicationDeployment.CheckForUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">Si la valeur est <see langword="false" />, la mise à jour sera appliquée silencieusement et aucune boîte de dialogue ne s'affichera.</param>
        <summary>Vérifie <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> pour déterminer si une nouvelle mise à jour est disponible.</summary>
        <returns>
          <see langword="true" /> si une nouvelle mise à jour est disponible ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsync">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsync : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Contrôle <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> de façon asynchrone pour déterminer si une nouvelle mise à jour est disponible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> retourne immédiatement et démarre un thread séparé pour le téléchargement de l’application mis à jour. Lorsque la méthode se termine ou est annulée, il déclenche le <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> événement. Vous pouvez utiliser <xref:System.ComponentModel.AsyncCompletedEventArgs> dans ce gestionnaire d’événements pour déterminer si l’opération a été annulée, ou si une exception a été levée pendant la mise à jour.  
  
 Vous pouvez annuler une mise à jour asynchrone en appelant <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>.  
  
> [!NOTE]
>  Si <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> découvre qu’une mise à jour est disponible et que l’utilisateur choisit de ne pas l’installer, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] invitera l’utilisateur une mise à jour est disponible à la prochaine fois que l’application est exécutée. Il n’existe aucun moyen de désactiver cette invite. (Si l’application est une mise à jour requise, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] installera sans demander confirmation.)  
  
   
  
## Examples  
 L’exemple suivant vérifie de façon asynchrone pour une mise à jour et installe la mise à jour s’il en existe.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] lève immédiatement cette exception si vous appelez la méthode <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> lorsqu'une mise à jour est déjà en cours.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Le manifeste de déploiement ne peut pas être téléchargé. Cette exception apparaît dans la propriété <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> de l'événement <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Le manifeste de déploiement est endommagé. Vous devrez vraisemblablement redéployer l'application pour résoudre ce problème. Cette exception apparaît dans la propriété <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> de l'événement <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule la vérification de la disponibilité des mises à jour de façon asynchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour annuler une recherche de mise à jour lancée avec le <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> (méthode).  
  
 Cette méthode n’annule pas une mise à jour en arrière-plan qui peut-être déjà être en cours d’exécution, comme une mise à jour a démarré en tant que partie d’un abonnement. Pour plus d’informations sur les abonnements, consultez [choix d’une stratégie de mise à jour ClickOnce](http://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateCompleted As CheckForUpdateCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::CheckForUpdateCompletedEventHandler ^ CheckForUpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " Usage="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.CheckForUpdateCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> est terminé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> classe indique, entre autres choses, la version de la mise à jour, la taille est de la mise à jour, et si la mise à jour disponible est requise ou facultative.  
  
   
  
## Examples  
 Le code suivant exemple utilise <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> pour décider s’il faut demander à l’utilisateur pour installer la mise à jour disponibles pour les applications. Si la mise à jour est une mise à niveau obligatoire, le <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> Gestionnaire d’événements n’invite pas l’utilisateur. L’exemple nécessite que vous déployez une application Windows Forms qui inclut un <xref:System.Windows.Forms.StatusStrip> contrôle et que ce contrôle contienne un <xref:System.Windows.Forms.ToolStripStatusLabel> contrôle nommé `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ CheckForUpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une mise à jour est disponible sur un appel <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> rapports sur l’état de téléchargement du déploiement de l’application du manifeste. Il peut s’agir des informations importantes pour les utilisateurs qui téléchargent le déploiement sur des connexions réseau lentes.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> événements pour informer l’utilisateur à la quantité du manifeste de déploiement qui reste à télécharger. L’exemple nécessite que vous déployez une application Windows Forms qui inclut un <xref:System.Windows.Forms.StatusStrip> contrôle et que ce contrôle contienne un <xref:System.Windows.Forms.ToolStripStatusLabel> contrôle nommé `downloadStatus`...  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDeployment">
      <MemberSignature Language="C#" Value="public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Deployment.Application.ApplicationDeployment CurrentDeployment" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDeployment As ApplicationDeployment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Deployment::Application::ApplicationDeployment ^ CurrentDeployment { System::Deployment::Application::ApplicationDeployment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDeployment : System.Deployment.Application.ApplicationDeployment" Usage="System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.ApplicationDeployment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne le <see cref="T:System.Deployment.Application.ApplicationDeployment" /> actuel de ce déploiement.</summary>
        <value>Déploiement en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas créer des instances de <xref:System.Deployment.Application.ApplicationDeployment> directement dans votre application, vous devez récupérer une instance valide via la <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propriété.  
  
 Le <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propriété statique est valide uniquement à partir d’une application qui a été déployée à l’aide de [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. Tente d’appeler cette propriété à partir de non -[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications lèvera une exception. Si vous développez une application qui peut ou ne peut pas être déployée à l’aide de [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], utilisez le <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> propriété pour tester si le programme en cours est un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application.  
  
   
  
## Examples  
 Le code suivant récupère d’exemple <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> et vérifications pour déterminer si l’application a été mis à jour au cours des trois derniers jours.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Vous avez tenté d'appeler cette propriété statique à partir d'une application qui n'est pas une application [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</exception>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentVersion">
      <MemberSignature Language="C#" Value="public Version CurrentVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version CurrentVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ CurrentVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la version du déploiement pour l'instance de l'application en cours d'exécution.</summary>
        <value>Version du déploiement en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> différera de <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> si une nouvelle mise à jour a été installé, mais vous n’avez pas encore appelé <xref:System.Windows.Forms.Application.Restart%2A>. Si le manifeste de déploiement est configuré pour effectuer des mises à jour automatiques, vous pouvez comparer ces deux valeurs pour déterminer si vous devez redémarrer l’application.  
  
   
  
## Examples  
 L’exemple de code suivant définit une méthode qui détermine si [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] a de mise à jour l’application.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public string DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataDirectory : string" Usage="System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le chemin d'accès au répertoire de données [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</summary>
        <value>Chaîne contenant le chemin d'accès au répertoire de données de l'application sur le disque local.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroup">
      <MemberSignature Language="C#" Value="public void DownloadFileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroup (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroup : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Groupe nommé de fichiers à télécharger. Tous les fichiers marqués comme "facultatifs" dans une application [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] nécessitent un nom de groupe.</param>
        <summary>Télécharge un ensemble de fichiers facultatifs à la demande.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, les fichiers marqués comme « facultatifs » dans le manifeste d’application ne sont pas téléchargées pendant l’initialisation ou de mise à jour. Vous pouvez utiliser la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> méthode pour télécharger tous les fichiers appartenant à un groupe nommé à la demande, afin de ne pas consommer les ressources réseau et l’espace disque jusqu'à ce que vous êtes sûr que l’utilisateur a besoin. Par exemple, certains utilisateurs devront peut-être utiliser un package d’analyse de données inclus dans votre application sur une base quotidienne, tandis que les autres utilisateurs peuvent l’appeler jamais.  
  
 Pour utiliser un assembly que vous avez téléchargé avec <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>, vous attachez un écouteur d’événements pour le <xref:System.AppDomain.AssemblyResolve> événement sur le <xref:System.AppDomain.CurrentDomain%2A>. Pour obtenir un exemple, consultez =[procédure pas à pas : téléchargement d’assemblys à la demande avec le ClickOnce déploiement API en utilisant le concepteur](http://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5).  
  
 Tous les fichiers sont téléchargés vers le [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] cache d’application et sont donc séparés de la version actuelle de l’application. Supposons qu’après le téléchargement d’un groupe de fichiers par une application, l’utilisateur installe une nouvelle version de l’application, mais rétablit ensuite la version précédente de l’application. Dans ce cas, la version précédente gardent les copies des fichiers qu’elle avait téléchargés. Pour plus d’informations sur l’accès aux fichiers de données, consultez [l’accès aux données locales et distantes dans les Applications ClickOnce](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> fonctionne dans les applications partiellement fiables, autrement dit, dans les [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application qui s’exécute avec une autorisation restreinte. Toutefois, si vous essayez de charger dynamiquement des assemblys, votre application nécessitent une confiance totale.  
  
 À la demande sur le téléchargement de fichiers de données n’est pas pris en charge actuellement.  
  
 Votre application ne sera pas réactive aux entrées d’utilisateur jusqu'à ce que le <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> méthode retourne. Si vous avez besoin télécharger les fichiers sans interrompre le flux de travail de l’utilisateur, utilisez la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> méthode à la place.  
  
 Vous ne pouvez pas télécharger un fichier unique par son seul nom de fichier. Pour télécharger un fichier unique, attribuez-lui un nom de groupe dans votre [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] déploiement et le groupe à l’aide de cette méthode de téléchargement.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment charger un assembly à la demande en écoutant les <xref:System.AppDomain.AssemblyResolve> événement.  
  
 [!code-csharp[ClickOnceOnDemandCmdLine#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceOnDemandCmdLine/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="groupName" /> est null ou de longueur nulle.</exception>
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileGroupAsync">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Télécharge, à la demande, un ensemble de fichiers facultatifs en arrière-plan.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Groupe nommé de fichiers à télécharger. Tous les fichiers marqués comme "facultatifs" dans une application [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] nécessitent un nom de groupe.</param>
        <summary>Télécharge, à la demande, un ensemble de fichiers facultatifs en arrière-plan.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, les fichiers marqués comme « facultatifs » dans le manifeste d’application ne sont pas téléchargées pendant l’initialisation ou de mise à jour. Vous pouvez utiliser la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> méthode pour télécharger tous les fichiers appartenant à un groupe nommé à la demande, afin de ne pas consommer les ressources réseau et l’espace disque jusqu'à ce que vous êtes sûr que l’utilisateur a besoin. Cette approche fonctionne non seulement pour les fichiers statiques, mais également aux assemblys qu’une application peut exiger ou non. Par exemple, certains utilisateurs devront peut-être utiliser un package d’analyse de données inclus dans votre application sur une base quotidienne, tandis que les autres utilisateurs peuvent l’appeler jamais.  
  
 Pour télécharger les assemblys à la demande, joignez un écouteur d’événements pour le <xref:System.AppDomain.AssemblyResolve> événement sur le <xref:System.AppDomain.CurrentDomain%2A>. Pour obtenir un exemple, consultez [procédure pas à pas : téléchargement d’assemblys à la demande avec l’API de déploiement ClickOnce](http://msdn.microsoft.com/library/d20e2789-8621-4806-b5b7-841122da1456).  
  
 Tous les assemblys sont téléchargés vers le [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] cache d’application.  
  
 Tous les fichiers statiques sont téléchargés vers le [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] du application répertoire de données et sont par conséquent isolé vers la version actuelle de l’application. Supposons qu’après le téléchargement d’un groupe de fichiers par une application, l’utilisateur installe une nouvelle version de l’application, mais rétablit ensuite la version précédente de l’application. Dans ce cas, la version précédente gardent les copies des fichiers qu’elle avait téléchargés. Pour plus d’informations sur l’accès aux fichiers statiques, consultez [l’accès aux données locales et distantes dans les Applications ClickOnce](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 Vous pouvez télécharger simultanément à l’aide de plusieurs groupes de fichiers <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>. Vous pouvez faire la distinction entre eux à l’aide de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> propriété de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> (classe), qui est passée à la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> événement. Si vous avez besoin de passer à un état plus complexe, vous pouvez utiliser <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> pour transmettre un `state` objet.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> fonctionne dans les applications partiellement fiables, autrement dit, dans les [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application qui s’exécute avec une autorisation restreinte. Toutefois, si vous tentez de charger dynamiquement des assemblys, votre application nécessitent une confiance totale.  
  
 À la demande sur le téléchargement de fichiers de données n’est pas pris en charge actuellement.  
  
 Vous ne pouvez pas télécharger un fichier unique par son seul nom de fichier. Pour télécharger un fichier unique, attribuez-lui un nom de groupe dans votre [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] déploiement et le groupe à l’aide de cette méthode de téléchargement.  
  
 Pour annuler un téléchargement asynchrone, appelez le <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="groupName" /> est null ou de longueur nulle.</exception>
        <exception cref="T:System.InvalidOperationException">Vous ne pouvez pas lancer plusieurs téléchargements de <paramref name="groupName" /> à la fois.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string * obj -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync (groupName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="groupName">Groupe nommé de fichiers à télécharger. Tous les fichiers marqués comme "facultatifs" dans une application [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] nécessitent un nom de groupe.</param>
        <param name="userState">Objet arbitraire contenant les informations d'état de cette opération asynchrone.</param>
        <summary>Télécharge, à la demande, un ensemble de fichiers facultatifs en arrière-plan, et passe une partie de l'état de l'application aux rappels d'événements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, les fichiers marqués comme « facultatifs » dans le manifeste d’application ne sont pas téléchargées pendant l’initialisation ou de mise à jour. Vous pouvez utiliser la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> méthode pour télécharger tous les fichiers appartenant à un groupe nommé à la demande, afin de ne pas consommer les ressources réseau et l’espace disque jusqu'à ce que vous êtes sûr que l’utilisateur a besoin. Cette approche fonctionne non seulement pour les fichiers statiques, mais également aux assemblys qu’une application peut exiger ou non. Par exemple, certains utilisateurs devront peut-être utiliser un package d’analyse de données inclus dans votre application sur une base quotidienne, tandis que les autres utilisateurs peuvent l’appeler jamais. Pour télécharger les assemblys à la demande, joignez un écouteur d’événements pour le <xref:System.AppDomain.AssemblyResolve> événement sur le <xref:System.AppDomain.CurrentDomain%2A>.  
  
 Vous pouvez télécharger simultanément plusieurs groupes de fichiers à l’aide de la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> (méthode). Vous pouvez faire la distinction entre eux à l’aide de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> propriété de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> (classe), qui est passée à la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> événement. Si vous avez besoin passer un état plus complexe, vous pouvez utiliser  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> pour transmettre un `state` objet.  
  
 Tous les fichiers statiques sont téléchargés vers le [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] du application répertoire de données et sont par conséquent isolé vers la version actuelle de l’application. Pour plus d’informations sur l’accès aux fichiers statiques, consultez [l’accès aux données locales et distantes dans les Applications ClickOnce](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d). . Supposons qu’après une application télécharge un groupe de fichiers, l’utilisateur installe une nouvelle version de l’application, mais il rétablit ensuite la version précédente de l’application. Dans ce cas, la version précédente gardent les copies des fichiers qu’elle avait téléchargés.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> fonctionne dans les applications partiellement fiables, autrement dit, dans les [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application qui s’exécute avec une autorisation restreinte. Toutefois, si vous tentez de charger dynamiquement des assemblys, votre application nécessitent une confiance totale.  
  
 À la demande sur le téléchargement de fichiers de données n’est pas pris en charge actuellement.  
  
 Pour annuler un téléchargement asynchrone, appelez le <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="groupName" /> est null ou de longueur nulle.</exception>
        <exception cref="T:System.InvalidOperationException">Vous ne pouvez pas lancer plusieurs téléchargements de <paramref name="groupName" /> à la fois.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsyncCancel">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsyncCancel (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsyncCancel(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsyncCancel (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsyncCancel(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsyncCancel : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsyncCancel groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Groupe nommé de fichiers à télécharger. Tous les fichiers marqués comme "facultatifs" dans une application [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] nécessitent un nom de groupe.</param>
        <summary>Annule un téléchargement de fichier asynchrone.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupCompleted As DownloadFileGroupCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DownloadFileGroupCompletedEventHandler ^ DownloadFileGroupCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " Usage="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DownloadFileGroupCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit sur le thread d'application principal lorsqu'un téléchargement de fichier est terminé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted> événement est appelé sur le thread principal de l’application. Il est thread-safe à appeler les contrôles de votre application Windows Forms directement au sein de ce rappel.  
  
 Vérifier le <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propriété de le <xref:System.ComponentModel.AsyncCompletedEventArgs> fourni à ce rappel. Si cette propriété est `null`, le téléchargement a réussi ; si elle n’est pas `null`, l’installation n’a pas réussi, et vous trouverez plus d’informations sur l’échec d’installation via le <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant télécharge un groupe de fichiers d’aide en arrière-plan. L’exemple nécessite que vous déployez une application Windows Forms qui inclut un <xref:System.Windows.Forms.StatusStrip> contrôle et que ce contrôle contienne un <xref:System.Windows.Forms.ToolStripStatusLabel> contrôle nommé `downloadStatus`...  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque des informations d'état sont disponibles sur une opération de téléchargement de fichier lancée par un appel à <see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> événement est appelé sur le thread principal de l’application. Il est thread-safe à appeler les contrôles de votre application Windows Forms directement au sein de ce rappel.  
  
 Utilisez les informations fournies dans <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> pour communiquer des informations sur la progression de vos utilisateurs.  
  
   
  
## Examples  
 L’exemple de code suivant télécharge un groupe de fichiers d’aide en arrière-plan. L’exemple nécessite que vous déployez une application Windows Forms qui inclut un <xref:System.Windows.Forms.StatusStrip> contrôle et que ce contrôle contienne un <xref:System.Windows.Forms.ToolStripStatusLabel> contrôle nommé `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileGroupDownloaded">
      <MemberSignature Language="C#" Value="public bool IsFileGroupDownloaded (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFileGroupDownloaded(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFileGroupDownloaded (groupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFileGroupDownloaded(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.IsFileGroupDownloaded : string -&gt; bool" Usage="applicationDeployment.IsFileGroupDownloaded groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Groupe nommé de fichiers à télécharger. Tous les fichiers marqués comme "facultatifs" dans une application [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] nécessitent un nom de groupe.</param>
        <summary>Vérifie si le groupe nommé de fichiers a déjà été téléchargé sur l'ordinateur client.</summary>
        <returns>
          <see langword="true" /> si le groupe de fichiers a déjà été téléchargé pour la version actuelle de cette application ; sinon, <see langword="false" />. Si une nouvelle version de l'application a été installée, et que la nouvelle version n'a pas ajouté, supprimé ou modifié de fichiers appartenant au groupe de fichiers, <see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /> retourne <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded%2A> fonctionne dans une application de confiance partielle sans toutes les demandes de sécurité.  
  
 Lorsque vous mettez à jour une application, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] copie des fichiers de données de la demande à partir de la version précédente dans le répertoire de données de la nouvelle version. Si vous téléchargez une nouvelle version de ces fichiers, vous devez supprimer les données que vous souhaitez conserver de l’ancienne version et le déplacer vers la nouvelle version.  
  
   
  
## Examples  
 L’exemple de code suivant télécharge tous les fichiers dans le `HelpFiles` groupe sur le disque.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">
          <paramref name="groupName" /> n'est pas un groupe de fichiers défini dans le manifeste d'application.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstRun">
      <MemberSignature Language="C#" Value="public bool IsFirstRun { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstRun" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstRun As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstRun { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstRun : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si c'est la première fois que cette application s'exécute sur l'ordinateur client.</summary>
        <value>
          <see langword="true" /> si cette version de l'application ne s'est jamais exécutée sur l'ordinateur client auparavant ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> pour déterminer si vous avez besoin d’effectuer des opérations de l’initialisation unique lors de la première exécution de votre application.  
  
 Ne supposez pas qu’un <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> paramètre `true` indique que cette instance d’une application est la première à afficher son interface utilisateur à l’utilisateur. En raison de la façon dont le système planifie les processus, une instance de l’application peut avoir son <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> propriété définie sur `true`, mais une autre instance peut être la première à restituer sur l’écran. La valeur de cette propriété est réinitialisée chaque fois que l’utilisateur met à niveau d’une version à l’autre. Si vous souhaitez effectuer une opération uniquement lors de la première heure de n’importe quelle version de l’application est exécutée, vous devez effectuer un test supplémentaires, telles que vérifier l’existence d’un fichier que vous avez créé la première fois, ou stocker un indicateur à l’aide **Application Paramètres**.  
  
   
  
## Examples  
 Le code suivant exemple utilise <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> pour décider s’il faut vérifier pour une mise à jour le groupe de fichiers `HelpFiles`. Si un ou plusieurs des fichiers ont été mis à jour, elle appelle <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> pour obtenir les nouvelles versions.  
  
 [!code-csharp[ClickOnceAPI#9](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#9)]
 [!code-vb[ClickOnceAPI#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsNetworkDeployed">
      <MemberSignature Language="C#" Value="public static bool IsNetworkDeployed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsNetworkDeployed" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsNetworkDeployed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsNetworkDeployed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNetworkDeployed : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'application actuelle est une application [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</summary>
        <value>
          <see langword="true" /> s'il s'agit d'une application [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous souhaitez que votre application s’exécute à la fois à l’intérieur et en dehors d’un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] déploiement (par exemple, si vous avez besoin de déboguer votre application sur l’ordinateur local avant de le déployer), de test <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> avant d’accéder à la <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propriété.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> retournera `true` que l’application soit installée ou hébergée en ligne et qu’elle ait a été installée à partir d’un site Web, le partage de fichiers ou le CD-ROM.  
  
   
  
## Examples  
 Le code suivant récupère d’exemple <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> à l’aide de <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> pour s’assurer que la référence n’est pas `null`.  
  
 [!code-cpp[ClickOnceAPI#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#2)]
 [!code-csharp[ClickOnceAPI#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="TimeOfLastUpdateCheck">
      <MemberSignature Language="C#" Value="public DateTime TimeOfLastUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfLastUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfLastUpdateCheck As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfLastUpdateCheck { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfLastUpdateCheck : DateTime" Usage="System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la date et l'heure de la dernière vérification, par [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], de la disponibilité d'une mise à jour de l'application.</summary>
        <value>
          <see cref="T:System.DateTime" /> de la dernière vérification des mises à jour.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application peut être configurée pour les mises à jour de l’abonnement. Dans ce scénario, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] interroge l’emplacement de déploiement d’une application automatiquement à des intervalles définis dans le manifeste de déploiement et détermine si une mise à jour est disponible. <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> Retourne l’heure de la dernière vérification de mise à jour indépendamment de si elle a été initié par un abonnement ou par une vérification explicite à l’aide de la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>, ou <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> (méthode).  
  
 Si aucune vérification de mise à jour n’a été effectuée dans la mesure où l’application a été installée, <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> renvoie l’heure d’installation.  
  
   
  
## Examples  
 Le code suivant exemple vérifie si un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application a été activée pour les mises à jour disponibles au cours des trois derniers jours.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public bool Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; bool" Usage="applicationDeployment.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Démarre un téléchargement synchrone et l'installation de la version la plus récente de cette application.</summary>
        <returns>
          <see langword="true" /> si une application a été mise à jour ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une application est considérée comme mise à jour lorsque vous publiez une nouvelle version de l’application à l’emplacement spécifié par <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, et le numéro de version dans le manifeste de déploiement de l’application est actuellement supérieur au numéro de version de l’application installé sur l’ordinateur de l’utilisateur.  
  
 Le <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> appel bloquera jusqu'à ce que la mise à jour a été téléchargée sur l’ordinateur client et installé dans le [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] mettre en cache ; pendant ce temps, l’application sera pas réactive à l’utilisateur. Si vous souhaitez maintenir la réactivité de l’application ou afficher un rapport de progression pendant le téléchargement, utilisez la <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> méthode à la place.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> télécharge tous les fichiers qui ne sont pas marqués comme « facultatifs » dans le manifeste d’application. Vous pouvez télécharger les fichiers facultatifs à la demande à l’aide de la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> ou <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> (méthode).  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] peut déjà être mise à jour l’application automatiquement lorsque vous appelez le <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> méthode ; si cela se produit, les appels à cette méthode lève un <xref:System.InvalidOperationException>.  
  
 Si vous avez mis à jour un ou plusieurs fichiers dans votre déploiement, mais vous n’avez pas actualisé votre manifeste d’application, vous recevrez un <xref:System.Deployment.Application.InvalidDeploymentException>. La plupart du temps, avoir à redéployer votre [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application résout ce problème. Vous recevez également cette exception si une signature de clé publique sur un manifeste de déploiement ou d’un manifeste d’application est non valide ou manquant.  
  
 Une mise à jour peut nécessiter un niveau supérieur de confiance sur l’ordinateur local que la version précédente de l’application. Si l’application utilise le déploiement d’applications approuvées, le Gestionnaire de confiance du common language runtime (CLR) examine le manifeste de déploiement pour déterminer s’il contient une licence de confiance valide. Si le manifeste de déploiement ne contient-elle pas de licence de confiance valide, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] arrête l’installation et lève un <xref:System.Deployment.Application.TrustNotGrantedException>. Le <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> méthode jamais affiche une invite demandant à l’utilisateur s’il souhaite autoriser l’application à exécuter.  
  
   
  
## Examples  
 L’exemple de code suivant vérifie une mise à jour de l’application ; Si une mise à jour est disponible, il l’installe de manière synchrone.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">L'ordinateur local n'a pas accordé à l'application le niveau d'autorisation qu'elle demandait pour s'exécuter.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Votre déploiement [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] est endommagé. Pour obtenir des conseils sur la façon de diagnostiquer et de résoudre le problème, consultez [Dépannage des déploiements ClickOnce](http://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Le nouveau déploiement n'a pas pu être téléchargé à partir de son emplacement sur le réseau.</exception>
        <exception cref="T:System.InvalidOperationException">L'application est en cours de mise à jour.</exception>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public void UpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsync : unit -&gt; unit" Usage="applicationDeployment.UpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Démarre un téléchargement asynchrone et l'installation de la version la plus récente de cette application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une application est considérée comme mise à jour lorsque vous publiez une nouvelle version de l’application à l’emplacement spécifié par <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, et le numéro de version dans le manifeste de déploiement de l’application est actuellement supérieur au numéro de version de l’application installé sur l’ordinateur de l’utilisateur.  
  
 Lors du téléchargement de la mise à jour, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] déclenchera le <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> Gestionnaire d’événements sur le thread principal de l’application pour vous informer de l’état du téléchargement. Lorsque la mise à jour asynchrone se termine ou rencontre une exception, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] déclenchera le <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> événement sur le thread principal de l’application. Examiner le <xref:System.ComponentModel.AsyncCompletedEventArgs> fourni à cet événement pour déterminer si la mise à jour a réussi.  
  
 Si <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> lève une exception, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] appels <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> et définit le <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propriété du <xref:System.ComponentModel.AsyncCompletedEventArgs> à l’exception qui a été levée.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> télécharge tous les fichiers dans un déploiement ne pas marquée comme « facultatifs » dans le manifeste d’application. Vous pouvez télécharger les fichiers facultatifs à la demande à l’aide de la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> ou <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> (méthode).  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] peut déjà être mise à jour l’application automatiquement lorsque vous appelez le <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> méthode ; si cela se produit, les appels à cette méthode lève un <xref:System.InvalidOperationException>.  
  
 Si vous avez mis à jour un ou plusieurs fichiers dans votre déploiement, mais vous n’avez pas actualisé votre manifeste d’application, vous recevrez un <xref:System.Deployment.Application.InvalidDeploymentException>. La plupart du temps, la reconstruction de votre manifeste d’application résout ce problème. Vous recevez également cette exception si une signature de clé publique sur un manifeste de déploiement ou d’un manifeste d’application est non valide ou manquant.  
  
 Une mise à jour peut nécessiter un niveau supérieur de confiance sur l’ordinateur local que la version précédente de l’application. Si l’application utilise le déploiement d’applications approuvées, le Gestionnaire de confiance du common language runtime (CLR) examine le manifeste de déploiement pour déterminer s’il contient une licence de confiance valide. Si le manifeste de déploiement ne contient-elle pas de licence de confiance valide, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] arrête l’installation et lève un <xref:System.Deployment.Application.TrustNotGrantedException>. <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> n’affichera jamais une invite demandant à l’utilisateur s’ils souhaitent autoriser l’application à exécuter.  
  
   
  
## Examples  
 L’exemple de code suivant détermine si une nouvelle mise à jour est disponible au moment du chargement application ; Si une mise à jour requise est disponible, il installe la mise à jour de façon asynchrone. L’exemple nécessite que vous déployez une application Windows Forms qui inclut un <xref:System.Windows.Forms.StatusStrip> contrôle et que ce contrôle contienne un <xref:System.Windows.Forms.ToolStripStatusLabel> contrôle nommé `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">L'ordinateur local n'a pas accordé à cette application le niveau d'autorisation qu'elle demandait pour s'exécuter.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Votre déploiement [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] est endommagé. Pour obtenir des conseils sur la façon de diagnostiquer et de résoudre le problème, consultez [Dépannage des déploiements ClickOnce](http://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">Le nouveau déploiement n'a pas pu être téléchargé à partir de son emplacement sur le réseau.</exception>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      </Docs>
    </Member>
    <Member MemberName="UpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void UpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.UpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule une mise à jour asynchrone lancée par <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A> annule uniquement une mise à jour lancée par un appel à <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; elle n’annule pas une mise à jour démarrée dans le cadre d’un abonnement.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ UpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] a fini de mettre à niveau l'application après avoir appelé <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> événement est appelé sur le thread principal de l’application. Vous pouvez appeler des contrôles Windows Forms de votre application directement dans ce rappel sans lever d’exception.  
  
 Vérifier le <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propriété de le <xref:System.ComponentModel.AsyncCompletedEventArgs> fourni à ce rappel. Si cette propriété est `null`, l’installation a réussi ; si elle n’est pas `null`, l’installation n’a pas réussi, et vous trouverez plus d’informations sur cet échec d’installation via le <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propriété. Une fois la mise à jour a été téléchargée, vous devez appeler la <xref:System.Windows.Forms.Application.Restart%2A> méthode sur le <xref:System.Windows.Forms.Application> à utiliser la version la plus récente de l’application.  
  
 Si l’installation de la mise à jour a été annulée par un appel à <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>, le <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> propriété de la <xref:System.ComponentModel.AsyncCompletedEventArgs> classe sera `true`.  
  
 Pour utiliser ce gestionnaire d’événements, votre application doit importer les deux le <xref:System.Deployment.Application> et <xref:System.ComponentModel> espaces de noms.  
  
   
  
## Examples  
 L’exemple de code suivant détermine au moment du chargement application si une nouvelle mise à jour est disponible ; Si une mise à jour requise est disponible, il installe la mise à jour de façon asynchrone. L’exemple nécessite que vous déployez une application Windows Forms qui inclut un <xref:System.Windows.Forms.StatusStrip> contrôle et que ce contrôle contienne un <xref:System.Windows.Forms.ToolStripStatusLabel> contrôle nommé `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedApplicationFullName">
      <MemberSignature Language="C#" Value="public string UpdatedApplicationFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdatedApplicationFullName" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedApplicationFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdatedApplicationFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedApplicationFullName : string" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom complet de l'application une fois qu'elle a été mise à jour.</summary>
        <value>
          <see cref="T:System.String" /> qui contient le nom complet de l'application.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedVersion">
      <MemberSignature Language="C#" Value="public Version UpdatedVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version UpdatedVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ UpdatedVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la version de la mise à jour qui a été téléchargée récemment.</summary>
        <value>
          <see cref="T:System.Version" /> décrivant la version de la mise à jour.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> diffère <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> si une nouvelle mise à jour a été installé, mais vous n’avez pas encore appelé <xref:System.Windows.Forms.Application.Restart%2A> sur le <xref:System.Windows.Forms.Application>. Si le manifeste de déploiement de l’application est configuré pour effectuer des mises à jour automatiques, vous pouvez comparer ces deux valeurs pour déterminer si vous devez redémarrer l’application.  
  
 Si l’application n’a pas été mis à jour, <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> retourne la même valeur que <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>.  
  
   
  
## Examples  
 L’exemple de code suivant définit une méthode qui détermine si [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] a de mise à jour l’application.  
  
 [!code-cpp[ClickOnceAPI#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#4)]
 [!code-csharp[ClickOnceAPI#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#4)]
 [!code-vb[ClickOnceAPI#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocation">
      <MemberSignature Language="C#" Value="public Uri UpdateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UpdateLocation" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UpdateLocation { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateLocation : Uri" Usage="System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le site Web ou le partage de fichiers à partir duquel cette application se met à jour.</summary>
        <value>Chemin d'accès à la mise à jour, exprimé comme URL HTTP, HTTPS ou URL de fichier, ou comme un chemin de fichier de réseau Windows (UNC).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> peut être différent du site Web utilisé initialement pour télécharger l’application si le déploiement de l’application est configuré pour utiliser la redirection de la mise à jour.  
  
 Cette valeur peut être modifiée uniquement dans le manifeste de déploiement de l’application.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Pour un accès complet à l’ordinateur local. Énumération associée : <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ UpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] a de nouvelles informations d'état à propos d'une opération de mise à jour lancée en appelant la méthode <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> événement est appelé sur le thread principal de l’application. Vous pouvez appeler des contrôles Windows Forms de votre application directement dans ce rappel sans lever d’exception.  
  
   
  
## Examples  
 L’exemple de code suivant détermine au moment du chargement application si une nouvelle mise à jour est disponible ; Si une mise à jour requise est disponible, il installe la mise à jour de façon asynchrone.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>