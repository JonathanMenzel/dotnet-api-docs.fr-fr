<Type Name="UpdateCheckInfo" FullName="System.Deployment.Application.UpdateCheckInfo">
  <TypeSignature Language="C#" Value="public class UpdateCheckInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdateCheckInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.UpdateCheckInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdateCheckInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdateCheckInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="67efa-101">Représente des informations de mise à jour détaillées obtenues par l'intermédiaire d'un appel à <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />.</span><span class="sxs-lookup"><span data-stu-id="67efa-101">Represents detailed update information obtained through a call to <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67efa-102">Avec <xref:System.Deployment.Application.UpdateCheckInfo>, vous pouvez décider s’il faut mettre à niveau votre application ClickOnce en fonction des informations sur la version la plus récente.</span><span class="sxs-lookup"><span data-stu-id="67efa-102">With <xref:System.Deployment.Application.UpdateCheckInfo>, you can decide whether to upgrade your ClickOnce application based on information about the newest version.</span></span> <span data-ttu-id="67efa-103"><xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> Retourne une valeur booléenne indiquant s’il existe une nouvelle mise à jour du tout.</span><span class="sxs-lookup"><span data-stu-id="67efa-103"><xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> will return a Boolean value indicating whether there is a new update at all.</span></span> <span data-ttu-id="67efa-104">Le <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> propriété fournit le numéro de version de la nouvelle version, tandis que <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> fournit la version la plus ancienne que l’utilisateur doit avoir installée.</span><span class="sxs-lookup"><span data-stu-id="67efa-104">The <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> property provides the version number of the new version, while <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> provides the earliest version that the user should have installed.</span></span> <span data-ttu-id="67efa-105"><xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> Indique si la mise à jour disponible la plus récente est obligatoire de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="67efa-105"><xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> expresses whether the latest available update is required of the user.</span></span> <span data-ttu-id="67efa-106">Enfin, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> indique la taille totale de la mise à jour.</span><span class="sxs-lookup"><span data-stu-id="67efa-106">Finally, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> expresses the total size of the update.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67efa-107">Visual Studio ajoute le `<deploymentProvider>` élément au manifeste uniquement si l’application est définie pour vérifier les mises à jour, vous devez vérifier **l’application doit vérifier les mises à jour** ou spécifier une URL de mise à jour dans **mettre à jour emplacement** dans les [boîte de dialogue mises à jour Application](http://msdn.microsoft.com/library/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f).</span><span class="sxs-lookup"><span data-stu-id="67efa-107">Visual Studio adds the `<deploymentProvider>` element to the manifest only if the application is set to check for updates, so you either have to check **The application should check for updates** or specify an update URL in **Update location** in the [Application Updates Dialog Box](http://msdn.microsoft.com/library/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67efa-108">Le code suivant utilise des exemple <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> pour déterminer s’il existe une nouvelle mise à jour d’application, et <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> pour déterminer s’il faut demander à l’utilisateur d’installer la mise à jour.</span><span class="sxs-lookup"><span data-stu-id="67efa-108">The following code example uses <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> to determine if there is a new application update, and <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> to determine whether to ask the user to install the update.</span></span>  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AvailableVersion">
      <MemberSignature Language="C#" Value="public Version AvailableVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version AvailableVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.AvailableVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ AvailableVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67efa-109">Obtient le numéro de version de la dernière version désinstallée.</span><span class="sxs-lookup"><span data-stu-id="67efa-109">Gets the version number of the latest uninstalled version.</span></span></summary>
        <value><span data-ttu-id="67efa-110"><see cref="T:System.Version" /> exprimant les numéros de la version principale, secondaire, de build et de révision de la dernière version.</span><span class="sxs-lookup"><span data-stu-id="67efa-110">The <see cref="T:System.Version" /> expressing the major and minor build and revision numbers of the latest version.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67efa-111">Vous pouvez utiliser <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> pour décider si vous devez installer la mise à jour en fonction de la gravité de la mise à jour.</span><span class="sxs-lookup"><span data-stu-id="67efa-111">You can use <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> to decide whether to install the update based on the severity of the update.</span></span> <span data-ttu-id="67efa-112">Par exemple, si seule la <xref:System.Version.Build%2A> ou <xref:System.Version.Revision%2A> propriétés de version ont été modifiés, votre application peut être pas nécessaire mettre à jour jusqu'à ce que le <xref:System.Version.Minor%2A> ou <xref:System.Version.Major%2A> modification des propriétés.</span><span class="sxs-lookup"><span data-stu-id="67efa-112">For example, if only the <xref:System.Version.Build%2A> or <xref:System.Version.Revision%2A> version properties have changed, your application may not need to update until either the <xref:System.Version.Minor%2A> or <xref:System.Version.Major%2A> properties change.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      </Docs>
    </Member>
    <Member MemberName="IsUpdateRequired">
      <MemberSignature Language="C#" Value="public bool IsUpdateRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUpdateRequired" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUpdateRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUpdateRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67efa-113">Obtient une valeur indiquant si la mise à jour doit être installée.</span><span class="sxs-lookup"><span data-stu-id="67efa-113">Gets a value indicating whether the update must be installed.</span></span></summary>
        <value>
          <span data-ttu-id="67efa-114"><see langword="true" /> si la mise à jour est obligatoire ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="67efa-114"><see langword="true" /> if the update is required; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67efa-115">Lorsque vous déployez une mise à jour de votre application ClickOnce, vous pouvez le marquer comme une mise à jour requise, signalisation à votre application qu’elle doit mettre à niveau immédiatement.</span><span class="sxs-lookup"><span data-stu-id="67efa-115">When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately.</span></span> <span data-ttu-id="67efa-116">Vous souhaitez marquer l’application si la dernière version contient une mise à jour critique, ou si elle n’est pas compatible avec les formats de fichiers ou les sources de données back-end utilisés par la version précédente.</span><span class="sxs-lookup"><span data-stu-id="67efa-116">You want to mark the application if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67efa-117">Le code suivant utilise des exemple <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> pour déterminer s’il faut demander à l’utilisateur d’installer la mise à jour, ou l’installer sans demander confirmation.</span><span class="sxs-lookup"><span data-stu-id="67efa-117">The following code example uses <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> to determine whether to ask the user to install the update, or to install it without prompting.</span></span>  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinimumRequiredVersion">
      <MemberSignature Language="C#" Value="public Version MinimumRequiredVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MinimumRequiredVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumRequiredVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MinimumRequiredVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67efa-118">Obtient la version minimale que l'utilisateur doit avoir installée sur l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="67efa-118">Gets the minimum version that the user must have installed on the computer.</span></span></summary>
        <value><span data-ttu-id="67efa-119"><see cref="T:System.Version" /> exprimant la version minimale que l'utilisateur doit installer.</span><span class="sxs-lookup"><span data-stu-id="67efa-119">A <see cref="T:System.Version" /> expressing the least version that the user must install.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67efa-120">Applications peuvent manquer des mises à jour requises lorsque l’utilisateur accepte d’un détachement ou s’éloigne de l’ordinateur pour les semaines ou en mois.</span><span class="sxs-lookup"><span data-stu-id="67efa-120">Applications can miss required updates when the user takes on a special assignment or is away from the computer for weeks or months.</span></span> <span data-ttu-id="67efa-121">Utilisez</span><span class="sxs-lookup"><span data-stu-id="67efa-121">Use</span></span>  
  
 <span data-ttu-id="67efa-122"><xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> pour déterminer si l’utilisateur n’a pas mis à niveau l’application dans un certain temps et a manqué une ou plusieurs mises à jour obligatoires.</span><span class="sxs-lookup"><span data-stu-id="67efa-122"><xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> to determine if the user has not upgraded the application in a while, and has missed one or more required updates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67efa-123">L’exemple de code suivant illustre l’affichage le <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> propriété à l’utilisateur lorsqu’une mise à jour requise est disponible.</span><span class="sxs-lookup"><span data-stu-id="67efa-123">The following code example demonstrates displaying the <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> property to the user when there is a required update available.</span></span>  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="67efa-124">Il n'y a aucune nouvelle version disponible à installer.</span><span class="sxs-lookup"><span data-stu-id="67efa-124">There is no new version available to install.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAvailable">
      <MemberSignature Language="C#" Value="public bool UpdateAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67efa-125">Obtient si une mise à jour désinstallée est disponible.</span><span class="sxs-lookup"><span data-stu-id="67efa-125">Gets whether an uninstalled update is available.</span></span></summary>
        <value>
          <span data-ttu-id="67efa-126"><see langword="true" /> si la nouvelle version de l'application est disponible ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="67efa-126"><see langword="true" /> if new version of the application is available; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67efa-127">L’exemple de code suivant inspecte <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> pour déterminer s’il existe une mise à jour à installer.</span><span class="sxs-lookup"><span data-stu-id="67efa-127">The following code example inspects <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> to determine whether there is an update to install.</span></span>  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSizeBytes">
      <MemberSignature Language="C#" Value="public long UpdateSizeBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UpdateSizeBytes" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateSizeBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long UpdateSizeBytes { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67efa-128">Obtient la taille de la mise à jour disponible.</span><span class="sxs-lookup"><span data-stu-id="67efa-128">Gets the size of the available update.</span></span></summary>
        <value><span data-ttu-id="67efa-129"><see cref="T:System.Int64" /> décrivant la taille, en octets, de la mise à jour disponible.</span><span class="sxs-lookup"><span data-stu-id="67efa-129">An <see cref="T:System.Int64" /> describing the size, in bytes, of the available update.</span></span> <span data-ttu-id="67efa-130">Si aucune mise à jour n'est disponible, retourne 0.</span><span class="sxs-lookup"><span data-stu-id="67efa-130">If no update is available, returns 0.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>