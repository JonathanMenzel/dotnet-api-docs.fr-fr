<Type Name="ApplicationSettingsBase" FullName="System.Configuration.ApplicationSettingsBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81e0b3e822204b77302e8c6a560b29fc4205f991" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52915950" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ApplicationSettingsBase extends System.Configuration.SettingsBase implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ApplicationSettingsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ApplicationSettingsBase&#xA;Inherits SettingsBase&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSettingsBase abstract : System::Configuration::SettingsBase, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ApplicationSettingsBase = class&#xA;    inherit SettingsBase&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="11b53-101">Agit comme classe de base pour la dérivation des classes wrapper concrètes afin d'implémenter la fonctionnalité de paramètres d'application dans les applications Windows Forms.</span>
      <span class="sxs-lookup">
        <span data-stu-id="11b53-101">Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-102"><xref:System.Configuration.ApplicationSettingsBase> Ajoute les fonctionnalités suivantes à la <xref:System.Configuration.SettingsBase> (classe), qui est utilisé par les applications basées sur le Web :</span><span class="sxs-lookup"><span data-stu-id="11b53-102"><xref:System.Configuration.ApplicationSettingsBase> adds the following functionality to the <xref:System.Configuration.SettingsBase> class, which is used by Web-based applications:</span></span>  
  
-   <span data-ttu-id="11b53-103">La capacité à détecter des attributs sur une classe dérivée, wrapper de paramètres.</span><span class="sxs-lookup"><span data-stu-id="11b53-103">The ability to detect attributes on a derived, settings wrapper class.</span></span> <span data-ttu-id="11b53-104"><xref:System.Configuration.ApplicationSettingsBase> prend en charge le modèle déclaratif utilisé pour les propriétés de classe wrapper, comme décrit plus loin.</span><span class="sxs-lookup"><span data-stu-id="11b53-104"><xref:System.Configuration.ApplicationSettingsBase> supports the declarative model used for wrapper class properties, as described later.</span></span>  
  
-   <span data-ttu-id="11b53-105">Niveau supérieur <xref:System.Configuration.ApplicationSettingsBase.Save%2A> et <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="11b53-105">Higher-level <xref:System.Configuration.ApplicationSettingsBase.Save%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="11b53-106">Événements de validation supplémentaires que vous pouvez gérer pour garantir l’exactitude des paramètres individuels.</span><span class="sxs-lookup"><span data-stu-id="11b53-106">Additional validation events that you can handle to ensure the correctness of individual settings.</span></span>  
  
 <span data-ttu-id="11b53-107">Dans l’architecture des paramètres d’application, pour accéder à un groupe de propriétés de paramètres que vous devez dériver une classe wrapper concrètes à partir de <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="11b53-107">In the application settings architecture, to access a group of settings properties you need to derive a concrete wrapper class from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="11b53-108">La classe wrapper personnalise <xref:System.Configuration.ApplicationSettingsBase> comme suit :</span><span class="sxs-lookup"><span data-stu-id="11b53-108">The wrapper class customizes <xref:System.Configuration.ApplicationSettingsBase> in the following ways:</span></span>  
  
-   <span data-ttu-id="11b53-109">Pour chaque propriété de paramètres accessible, une propriété publique fortement typée correspondante est ajoutée à la classe wrapper.</span><span class="sxs-lookup"><span data-stu-id="11b53-109">For every settings property to be accessed, a corresponding strongly typed public property is added to the wrapper class.</span></span> <span data-ttu-id="11b53-110">Cette propriété a `get` et `set` accesseurs pour les paramètres de l’application en lecture/écriture, mais uniquement un `get` accesseur pour les paramètres en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="11b53-110">This property has `get` and `set` accessors for read/write application settings, but only a `get` accessor for read-only settings.</span></span>  
  
-   <span data-ttu-id="11b53-111">Attributs appropriés doivent être appliqués aux propriétés publiques de la classe wrapper pour indiquer les caractéristiques de la propriété de paramètres, tels que la portée du paramètre (application ou utilisateur), si le paramètre doit prendre en charge l’itinérance, la valeur par défaut pour le définition, le fournisseur de paramètres à utiliser et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="11b53-111">Appropriated attributes must be applied to the wrapper class's public properties to indicate characteristics of the settings property, such as the setting's scope (application or user), whether the setting should support roaming, the default value for the setting, the settings provider to be used, and so on.</span></span> <span data-ttu-id="11b53-112">Chaque propriété est requise pour spécifier sa portée à l’aide <xref:System.Configuration.ApplicationScopedSettingAttribute> ou <xref:System.Configuration.UserScopedSettingAttribute>.</span><span class="sxs-lookup"><span data-stu-id="11b53-112">Each property is required to specify its scope, using either <xref:System.Configuration.ApplicationScopedSettingAttribute> or <xref:System.Configuration.UserScopedSettingAttribute>.</span></span> <span data-ttu-id="11b53-113">Paramètres de portée application sont en lecture seule si la valeur par défaut <xref:System.Configuration.LocalFileSettingsProvider> est utilisé.</span><span class="sxs-lookup"><span data-stu-id="11b53-113">Application-scoped settings are read-only if the default <xref:System.Configuration.LocalFileSettingsProvider> is used.</span></span>  
  
 <span data-ttu-id="11b53-114">Le <xref:System.Configuration.ApplicationSettingsBase> classe utilise la réflexion pour détecter ces attributs au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="11b53-114">The <xref:System.Configuration.ApplicationSettingsBase> class uses reflection to detect these attributes at run time.</span></span> <span data-ttu-id="11b53-115">La plupart de ces informations est passé à la couche de fournisseur de paramètres, qui est responsable du stockage, format de persistance et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="11b53-115">Most of this information gets passed to the settings provider layer, which is responsible for storage, persistence format, and so on.</span></span>  
  
 <span data-ttu-id="11b53-116">Quand une application a plusieurs classes wrapper de paramètres, chaque classe définit un *groupe de paramètres*.</span><span class="sxs-lookup"><span data-stu-id="11b53-116">When an application has multiple settings wrapper classes, each class defines a *settings group*.</span></span> <span data-ttu-id="11b53-117">Chaque groupe a les caractéristiques suivantes :</span><span class="sxs-lookup"><span data-stu-id="11b53-117">Each group has the following characteristics:</span></span>  
  
-   <span data-ttu-id="11b53-118">Un groupe peut contenir n’importe quel nombre ou le type des paramètres de propriété.</span><span class="sxs-lookup"><span data-stu-id="11b53-118">A group can contain any number or type of property settings.</span></span>  
  
-   <span data-ttu-id="11b53-119">Si le nom du groupe n’est pas défini explicitement par la décoration de la classe wrapper avec un <xref:System.Configuration.SettingsGroupNameAttribute>, puis un nom est généré automatiquement.</span><span class="sxs-lookup"><span data-stu-id="11b53-119">If the group name is not explicitly set by the decorating the wrapper class with a <xref:System.Configuration.SettingsGroupNameAttribute>, then a name is automatically generated.</span></span>  
  
 <span data-ttu-id="11b53-120">Par défaut, toutes les applications clientes utilisent le <xref:System.Configuration.LocalFileSettingsProvider> pour fournir le stockage.</span><span class="sxs-lookup"><span data-stu-id="11b53-120">By default, all client-based applications use the <xref:System.Configuration.LocalFileSettingsProvider> to provide storage.</span></span> <span data-ttu-id="11b53-121">Si un autre fournisseur de paramètres est souhaité, la classe wrapper ou la propriété doit être décorée avec un correspondant <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="11b53-121">If an alternate settings provider is desired, then the wrapper class or property must be decorated with a corresponding <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="11b53-122">Pour plus d’informations sur l’utilisation de paramètres d’application, consultez [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="11b53-122">For more information about using application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11b53-123">L’exemple de code suivant illustre l’utilisation de paramètres d’application pour conserver les attributs suivants du formulaire principal : emplacement, la taille, couleur d’arrière-plan et texte de barre de titre.</span><span class="sxs-lookup"><span data-stu-id="11b53-123">The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text.</span></span> <span data-ttu-id="11b53-124">Tous ces attributs sont conservés en tant que propriétés de paramètres d’application unique dans le `FormSettings` classe, nommée `FormLocation`, `FormSize`, `FormBackColor` et `FormText`, respectivement.</span><span class="sxs-lookup"><span data-stu-id="11b53-124">All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively.</span></span> <span data-ttu-id="11b53-125">Tout à l’exception de `FormText` et `Size` sont des données liées à leurs propriétés de formulaire associé et ont un paramètre appliqué à l’aide de valeur par défaut <xref:System.Configuration.DefaultSettingValueAttribute>.</span><span class="sxs-lookup"><span data-stu-id="11b53-125">All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span>  
  
 <span data-ttu-id="11b53-126">Le formulaire contient quatre contrôles enfants qui ont les noms et les fonctions suivantes :</span><span class="sxs-lookup"><span data-stu-id="11b53-126">The form contains four child controls that have the following names and functions:</span></span>  
  
-   <span data-ttu-id="11b53-127">Un bouton nommé `btnBackColor` utilisée pour afficher le **couleur** boîte de dialogue commune.</span><span class="sxs-lookup"><span data-stu-id="11b53-127">A button named `btnBackColor` used to display the **Color** common dialog box.</span></span>  
  
-   <span data-ttu-id="11b53-128">Un bouton nommé `btnReload` utilisé pour <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> les paramètres d’application.</span><span class="sxs-lookup"><span data-stu-id="11b53-128">A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="11b53-129">Un bouton nommé `btnReset` utilisé pour <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> les paramètres d’application.</span><span class="sxs-lookup"><span data-stu-id="11b53-129">A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="11b53-130">Une zone de texte nommée `tbStatus` permettant d’afficher des informations d’état sur le programme.</span><span class="sxs-lookup"><span data-stu-id="11b53-130">A textbox named `tbStatus` used to display status information about the program.</span></span>  
  
 <span data-ttu-id="11b53-131">Notez que, après chaque exécution de l’application, un point supplémentaire est ajouté au texte du titre du formulaire.</span><span class="sxs-lookup"><span data-stu-id="11b53-131">Notice that after every execution of the application, an additional period character is appended to the title text of the form.</span></span>  
  
 <span data-ttu-id="11b53-132">Cet exemple de code nécessite un formulaire avec un <xref:System.Windows.Forms.ColorDialog> classe nommée `colorDialog1`et un <xref:System.Windows.Forms.StatusStrip> contrôler avec un <xref:System.Windows.Forms.ToolStripStatusLabel> nommé `tbStatus`.</span><span class="sxs-lookup"><span data-stu-id="11b53-132">This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`.</span></span> <span data-ttu-id="11b53-133">En outre, il requiert trois <xref:System.Windows.Forms.Button> objets nommés `btnReload`, `btnReset`, et `btnBackColor`.</span><span class="sxs-lookup"><span data-stu-id="11b53-133">Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.</span></span>  
  
 [!code-cpp[AppSettingsSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#1)]
 [!code-csharp[AppSettingsSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#1)]
 [!code-vb[AppSettingsSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.SettingsGroupNameAttribute" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/64090a34-8556-4904-8ea0-20efe9f8c886">
      <span data-ttu-id="11b53-134">Paramètres d'application pour les Windows Forms</span>
      <span class="sxs-lookup">
        <span data-stu-id="11b53-134">Application Settings for Windows Forms</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="11b53-135">Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-135">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="11b53-136">Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> dans son état par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-136">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class to its default state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-137">Le constructeur par défaut a été conçu pour fonctionner avec l’hypothèse qu’il n’existe aucun composant associé à la classe wrapper de paramètres en cours, qui dérive de <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="11b53-137">The default constructor was designed to work under the assumption that there is no component associated with the current settings wrapper class, which derives from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 <span data-ttu-id="11b53-138">Lorsqu’une instance d’une classe wrapper est créée, code hérité effectuera automatiquement les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="11b53-138">When an instance of a wrapper class is created, inherited code will automatically perform the following actions:</span></span>  
  
1.  <span data-ttu-id="11b53-139">Réflexion sur la classe.</span><span class="sxs-lookup"><span data-stu-id="11b53-139">Reflect over the class.</span></span>  
  
2.  <span data-ttu-id="11b53-140">Pour chaque propriété sur le wrapper marquée avec `[UserScopedSettingAttribute]` ou `[ApplicationScopedSettingAttribute]`, correspondante <xref:System.Configuration.SettingsProperty> est créé.</span><span class="sxs-lookup"><span data-stu-id="11b53-140">For each property on the wrapper marked with either `[UserScopedSettingAttribute]` or `[ApplicationScopedSettingAttribute]`, a corresponding <xref:System.Configuration.SettingsProperty> is created.</span></span>  
  
3.  <span data-ttu-id="11b53-141">Chaque <xref:System.Configuration.SettingsProperty> a certaines de ses propriétés définies selon d’autres attributs éventuellement présents sur les propriétés du wrapper, telles que la valeur par défaut ou le fournisseur de paramètres.</span><span class="sxs-lookup"><span data-stu-id="11b53-141">Each <xref:System.Configuration.SettingsProperty> has some of its properties set based on other attributes that are optionally present on the wrapper's properties, such as the default value or the settings provider.</span></span>  
  
4.  <span data-ttu-id="11b53-142">Tous les autres attributs sont simplement placés dans un jeu d’attribut, le <xref:System.Configuration.SettingsProperty.Attributes%2A> propriété de la <xref:System.Configuration.SettingsProperty> classe.</span><span class="sxs-lookup"><span data-stu-id="11b53-142">All other attributes are simply put into an attribute bag, the <xref:System.Configuration.SettingsProperty.Attributes%2A> property of the <xref:System.Configuration.SettingsProperty> class.</span></span>  
  
5.  <span data-ttu-id="11b53-143">Tous les <xref:System.Configuration.SettingsProperty> objets sont ajoutés à un <xref:System.Configuration.SettingsPropertyCollection> représenté par le <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> propriété de la <xref:System.Configuration.ApplicationSettingsBase> classe.</span><span class="sxs-lookup"><span data-stu-id="11b53-143">All <xref:System.Configuration.SettingsProperty> objects are added to a <xref:System.Configuration.SettingsPropertyCollection> represented by the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span> <span data-ttu-id="11b53-144">Cette collection est ensuite transmise à la <xref:System.Configuration.SettingsBase.Initialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="11b53-144">This collection is then passed to the <xref:System.Configuration.SettingsBase.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="11b53-145">Comme suggéré par l’étape 3 mentionné précédemment, <xref:System.Configuration.ApplicationSettingsBase> fonctionne en mode natif avec plusieurs attributs de propriété, en particulier les éléments suivants : <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, et <xref:System.Configuration.SettingsSerializeAsAttribute>.</span><span class="sxs-lookup"><span data-stu-id="11b53-145">As implied by step 3 mentioned previously, <xref:System.Configuration.ApplicationSettingsBase> natively works with several property attributes, specifically the following: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, and <xref:System.Configuration.SettingsSerializeAsAttribute>.</span></span> <span data-ttu-id="11b53-146">Tous les autres attributs de paramètres sont simplement transmises au fournisseur sous-jacent approprié.</span><span class="sxs-lookup"><span data-stu-id="11b53-146">All other settings attributes are simply passed through to the appropriate underlying provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="T:System.Configuration.SettingsPropertyCollection" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="11b53-147">Composant qui agira comme propriétaire de l'objet de paramètres d'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-147">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11b53-148">Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> à l'aide du composant propriétaire fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-148">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-149">Ce constructeur équivaut exactement à la <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> à l’aide de l’appel de constructeur :</span><span class="sxs-lookup"><span data-stu-id="11b53-149">This constructor is exactly equivalent to the <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> constructor using the invocation:</span></span>  
  
 `ApplicationSettingsBase(owner, String.Empty)`  
  
 <span data-ttu-id="11b53-150">Pour plus d’informations sur l’utilisation de la réflexion lors de l’instanciation d’une classe wrapper, consultez la valeur par défaut <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructeur.</span><span class="sxs-lookup"><span data-stu-id="11b53-150">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="11b53-151">
            <paramref name="owner" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-151">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase settingsKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="settingsKey">
          <span data-ttu-id="11b53-152">
            <see cref="T:System.String" /> qui  identifie de manière unique des instances distinctes de la classe wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-152">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11b53-153">Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> à l'aide de la clé de paramètres fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-153">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-154">Ce constructeur initialise la <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> propriété à la valeur de la `settingsKey` paramètre.</span><span class="sxs-lookup"><span data-stu-id="11b53-154">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="11b53-155">Cette propriété est utile dans la résolution des ambiguïtés pour différentes instances de la classe wrapper de paramètres dans le même domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="11b53-155">This property is useful in disambiguating different instances of the settings wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="11b53-156">Pour plus d’informations sur l’utilisation de la réflexion lors de l’instanciation d’une classe wrapper, consultez la valeur par défaut <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructeur.</span><span class="sxs-lookup"><span data-stu-id="11b53-156">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner, string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent, settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner, System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent * string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase (owner, settingsKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="11b53-157">Composant qui agira comme propriétaire de l'objet de paramètres d'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-157">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <param name="settingsKey">
          <span data-ttu-id="11b53-158">
            <see cref="T:System.String" /> qui  identifie de manière unique des instances distinctes de la classe wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-158">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11b53-159">Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> à l'aide du composant propriétaire et de la clé de paramètres fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-159">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component and settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-160">Le <xref:System.ComponentModel.IComponent> objet spécifié par le `owner` paramètre agit comme le propriétaire de l’instance actuelle de cette classe de paramètres d’application.</span><span class="sxs-lookup"><span data-stu-id="11b53-160">The <xref:System.ComponentModel.IComponent> object specified by the `owner` parameter acts as the owner of the current instance of this applications settings class.</span></span> <span data-ttu-id="11b53-161">Pendant l’initialisation des paramètres de classe wrapper dérivée de <xref:System.Configuration.ApplicationSettingsBase>, le site du propriétaire est interrogé pour un <xref:System.Configuration.ISettingsProviderService>.</span><span class="sxs-lookup"><span data-stu-id="11b53-161">During the initialization of the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>, the owner's site is queried for a <xref:System.Configuration.ISettingsProviderService>.</span></span> <span data-ttu-id="11b53-162">S’il en existe, il est utilisé plutôt que de fournisseur de paramètres natif pour toutes les propriétés de la classe wrapper, tel que spécifié par le <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="11b53-162">If one exists, it is used in preference to native settings provider for all the properties of the wrapper class, as specified by the <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="11b53-163">Ce constructeur initialise la <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> propriété à la valeur de la `settingsKey` paramètre.</span><span class="sxs-lookup"><span data-stu-id="11b53-163">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="11b53-164">Cette propriété est utile dans la résolution des ambiguïtés pour différentes instances de la classe wrapper dans le même domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="11b53-164">This property is useful in disambiguating different instances of the wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="11b53-165">Pour plus d’informations sur l’utilisation de la réflexion lors de l’instanciation d’une classe wrapper, consultez la valeur par défaut <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructeur.</span><span class="sxs-lookup"><span data-stu-id="11b53-165">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="11b53-166">
            <paramref name="owner" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-166">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Context As SettingsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsContext ^ Context { System::Configuration::SettingsContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Configuration.SettingsContext" Usage="System.Configuration.ApplicationSettingsBase.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11b53-167">Obtient le contexte de paramètres d'application associé au groupe de paramètres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-167">Gets the application settings context associated with the settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11b53-168">
            <see cref="T:System.Configuration.SettingsContext" /> associé au groupe de paramètres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-168">A <see cref="T:System.Configuration.SettingsContext" /> associated with the settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-169">Chaque classe wrapper de paramètres dérivée de <xref:System.Configuration.ApplicationSettingsBase> a associée à un contexte.</span><span class="sxs-lookup"><span data-stu-id="11b53-169">Each settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase> has a context associated with it.</span></span> <span data-ttu-id="11b53-170">Le contexte est passé au fournisseur de paramètres pour chaque propriété pour identifier la manière dont la propriété est utilisée.</span><span class="sxs-lookup"><span data-stu-id="11b53-170">The context is passed to the settings provider for each property to identify how the property is used.</span></span> <span data-ttu-id="11b53-171">Par conséquent, contexte agit en tant qu’indicateur pour déterminer le fournisseur de paramètres la meilleure façon de rendre persistantes les valeurs de paramètres d’application associée.</span><span class="sxs-lookup"><span data-stu-id="11b53-171">Context therefore acts as a hint to help the settings provider determine how best to persist the associated application settings values.</span></span>  
  
 <span data-ttu-id="11b53-172">En revanche, le <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> propriété permet au fournisseur de paramètres de lever l’ambiguïté entre plusieurs instances de la même classe wrapper.</span><span class="sxs-lookup"><span data-stu-id="11b53-172">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property enables the settings provider to disambiguate multiple instances of the same wrapper class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="T:System.Configuration.SettingsContext" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.ApplicationSettingsGroup" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public object GetPreviousVersion (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPreviousVersion(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPreviousVersion(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousVersion : string -&gt; obj" Usage="applicationSettingsBase.GetPreviousVersion propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="11b53-173">
            <see cref="T:System.String" /> contenant le nom de la propriété de paramètres dont la valeur sera retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-173">A <see cref="T:System.String" /> containing the name of the settings property whose value is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11b53-174">Retourne la valeur de la propriété de paramètres nommée pour la version antérieure de la même application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-174">Returns the value of the named settings property for the previous version of the same application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="11b53-175">
            <see cref="T:System.Object" /> contenant la valeur du <see cref="T:System.Configuration.SettingsProperty" /> spécifié s'il est trouvé ; sinon, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-175">An <see cref="T:System.Object" /> containing the value of the specified <see cref="T:System.Configuration.SettingsProperty" /> if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-176">Le <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> méthode est souvent utilisée conjointement avec la <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> méthode lors de la migration des paramètres d’application pendant l’installation d’une nouvelle version d’une application.</span><span class="sxs-lookup"><span data-stu-id="11b53-176">The <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method when migrating application settings during the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="11b53-177">La propriété n'existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-177">The property does not exist.</span>
          </span>
          <span data-ttu-id="11b53-178">Le compte de propriété est zéro ou la propriété est introuvable dans le magasin de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-178">The property count is zero or the property cannot be found in the data store.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Configuration.ApplicationSettingsBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="11b53-179">
            <see cref="T:System.String" /> contenant le nom de la propriété à accéder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-179">A <see cref="T:System.String" /> containing the name of the property to access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11b53-180">Obtient ou définit la valeur de la propriété de paramètres d'application spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-180">Gets or sets the value of the specified application settings property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11b53-181">Si elle est trouvée, correspond au nom de la propriété de paramètres nommée ; sinon, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-181">If found, the value of the named settings property; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-182">Le <xref:System.Configuration.ApplicationSettingsBase.Item%2A> propriété, également connu sous le nom de l’indexeur, est régulièrement utilisée dans les paramètres de classe wrapper dérivée de <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="11b53-182">The <xref:System.Configuration.ApplicationSettingsBase.Item%2A> property, also known as the indexer, is routinely used in the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="11b53-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> lie la propriété publique de la classe wrapper à la propriété de paramètres correspondante.</span><span class="sxs-lookup"><span data-stu-id="11b53-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> binds the public property of the wrapper class to the corresponding settings property.</span></span>  
  
 <span data-ttu-id="11b53-184"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> déclenche plusieurs événements en fonction de l’opération en cours :</span><span class="sxs-lookup"><span data-stu-id="11b53-184"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> raises several events depending on the operation being performed:</span></span>  
  
-   <span data-ttu-id="11b53-185">La première fois qu’une propriété est récupérée, la <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="11b53-185">The first time a property is retrieved, the <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event is raised.</span></span>  
  
-   <span data-ttu-id="11b53-186">Lorsqu’une propriété est définie, le <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="11b53-186">When a property is set, the <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> event is raised.</span></span> <span data-ttu-id="11b53-187">Si le gestionnaire n’annule pas l’événement, la valeur de propriété est définie et le <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="11b53-187">If the handler does not cancel the event, then the property value is set and the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="11b53-188">Il n'y a pas de propriété associée au wrapper actuel ou la propriété spécifiée est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-188">There are no properties associated with the current wrapper or the specified property could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">
          <span data-ttu-id="11b53-189">Une tentative de définition de propriété en lecture seule a été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-189">An attempt was made to set a read-only property.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">
          <span data-ttu-id="11b53-190">La valeur fournie est d'un type incompatible avec la propriété de paramètres, durant une opération de définition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-190">The value supplied is of a type incompatible with the settings property, during a set operation.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="11b53-191">Le fichier de configuration n'a pas pu être analysé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-191">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="P:System.Configuration.SettingsProperty.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (sender As Object, e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnPropertyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="11b53-192">Source de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-192">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="11b53-193">
            <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-193">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11b53-194">Déclenche l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-194">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-195">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="11b53-195">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="11b53-196">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="11b53-196">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="11b53-197">La méthode <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="11b53-197">The <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="11b53-198">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="11b53-198">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="11b53-199">Lors de la substitution de <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11b53-199">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingChanging(object sender, class System.Configuration.SettingChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingChanging (sender As Object, e As SettingChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingChanging(System::Object ^ sender, System::Configuration::SettingChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit&#xA;override this.OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingChanging (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="11b53-200">Source de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-200">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="11b53-201">
            <see cref="T:System.Configuration.SettingChangingEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-201">A <see cref="T:System.Configuration.SettingChangingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11b53-202">Déclenche l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-202">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-203">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="11b53-203">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="11b53-204">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="11b53-204">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="11b53-205">La méthode <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="11b53-205">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="11b53-206">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="11b53-206">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="11b53-207">Lors de la substitution de <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11b53-207">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsLoaded(object sender, class System.Configuration.SettingsLoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsLoaded (sender As Object, e As SettingsLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsLoaded(System::Object ^ sender, System::Configuration::SettingsLoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit&#xA;override this.OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsLoaded (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="11b53-208">Source de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-208">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="11b53-209">
            <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-209">A <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11b53-210">Déclenche l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-210">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-211">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="11b53-211">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="11b53-212">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="11b53-212">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="11b53-213">La méthode <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="11b53-213">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="11b53-214">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="11b53-214">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="11b53-215">Lors de la substitution de <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11b53-215">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsSaving">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsSaving(object sender, class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsSaving (sender As Object, e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsSaving(System::Object ^ sender, System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsSaving (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="11b53-216">Source de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-216">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="11b53-217">
            <see cref="T:System.ComponentModel.CancelEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-217">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11b53-218">Déclenche l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-218">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-219">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="11b53-219">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="11b53-220">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="11b53-220">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="11b53-221">La méthode <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="11b53-221">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="11b53-222">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="11b53-222">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="11b53-223">Lors de la substitution de <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11b53-223">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11b53-224">Obtient la collection de propriétés de paramètres dans le wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-224">Gets the collection of settings properties in the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11b53-225">
            <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant tous les objets <see cref="T:System.Configuration.SettingsProperty" /> utilisés dans le wrapper actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-225">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing all the <see cref="T:System.Configuration.SettingsProperty" /> objects used in the current wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-226">Le `get` l’accesseur de la <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> propriété reflète sur les métadonnées de la classe wrapper de paramètres, qui est dérivée de <xref:System.Configuration.ApplicationSettingsBase>, afin de déterminer dynamiquement le jeu de propriétés de paramètres d’application disponible.</span><span class="sxs-lookup"><span data-stu-id="11b53-226">The `get` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property reflects over the metadata of the settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, to dynamically determine the set of available application settings properties.</span></span>  
  
 <span data-ttu-id="11b53-227">Le <xref:System.Configuration.ApplicationSettingsBase> classe reconnaît en mode natif certaines caractéristiques d’un paramètre d’application, telles que son nom, le type de propriété, le fournisseur de paramètres, le valeur par défaut, état de lecture uniquement et une préférence de sérialisation.</span><span class="sxs-lookup"><span data-stu-id="11b53-227">The <xref:System.Configuration.ApplicationSettingsBase> class natively recognizes certain characteristics of an application setting, such as its name, property type, settings provider, default value, read only status, and a serialization preference.</span></span> <span data-ttu-id="11b53-228">Ces caractéristiques sont mises en miroir en tant que propriétés dans la <xref:System.Configuration.SettingsProperty> classe.</span><span class="sxs-lookup"><span data-stu-id="11b53-228">These characteristics are mirrored as properties in the <xref:System.Configuration.SettingsProperty> class.</span></span> <span data-ttu-id="11b53-229">Tous les autres attributs de la propriété de paramètres sont simplement passés à son fournisseur de paramètres associés.</span><span class="sxs-lookup"><span data-stu-id="11b53-229">All other attributes of the settings property are just passed through to its associated settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="11b53-230">Le fournisseur de paramètres associé est introuvable ou son instanciation a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-230">The associated settings provider could not be found or its instantiation failed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="T:System.Configuration.SettingsProperty" />
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11b53-231">Se produit après que la valeur d'une propriété de paramètres d'application a été modifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-231">Occurs after the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-232">Le <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> événement est déclenché lorsqu’une propriété de paramètres est modifiée par le biais le `set` l’accesseur de la <xref:System.Configuration.ApplicationSettingsBase.Item%2A> (méthode), ou pour chaque propriété qui est restaurée lorsqu’un appel est effectué à la <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> ou <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="11b53-232">The <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised when a settings property is changed through the `set` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method, or for every property that is restored when a call is made to the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="11b53-233">Il n’est pas correspondante `PropertyChanging` événement pour cette classe ; au lieu de cela, consultez le <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> événement.</span><span class="sxs-lookup"><span data-stu-id="11b53-233">There is no corresponding `PropertyChanging` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <altmember cref="T:System.ComponentModel.PropertyChangedEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="PropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyValues As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyValueCollection ^ PropertyValues { System::Configuration::SettingsPropertyValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyValues : System.Configuration.SettingsPropertyValueCollection" Usage="System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11b53-234">Obtient une collection de valeurs de propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-234">Gets a collection of property values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11b53-235">
            <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> de valeurs de propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-235">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> of property values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Providers As SettingsProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsProviderCollection ^ Providers { System::Configuration::SettingsProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.SettingsProviderCollection" Usage="System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11b53-236">Obtient la collection de fournisseurs de paramètres d'application utilisée par le wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-236">Gets the collection of application settings providers used by the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11b53-237">
            <see cref="T:System.Configuration.SettingsProviderCollection" /> contenant tous les objets <see cref="T:System.Configuration.SettingsProvider" /> utilisés par les propriétés de paramètres du wrapper de paramètres actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-237">A <see cref="T:System.Configuration.SettingsProviderCollection" /> containing all the <see cref="T:System.Configuration.SettingsProvider" /> objects used by the settings properties of the current settings wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-238">Le <xref:System.Configuration.SettingsProviderAttribute> détermine quel fournisseur de paramètres est utilisé par une classe wrapper de paramètres ou une propriété de paramètre.</span><span class="sxs-lookup"><span data-stu-id="11b53-238">The <xref:System.Configuration.SettingsProviderAttribute> determines what setting provider is used by a settings wrapper class or an individual setting property.</span></span> <span data-ttu-id="11b53-239">Si cet attribut n’est pas spécifié, une application cliente utilise le <xref:System.Configuration.LocalFileSettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="11b53-239">If this attribute is not specified, a client application will use the <xref:System.Configuration.LocalFileSettingsProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reload();" />
      <MemberSignature Language="F#" Value="member this.Reload : unit -&gt; unit" Usage="applicationSettingsBase.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="11b53-240">Actualise les valeurs de propriétés de paramètres d'application à partir du stockage persistant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-240">Refreshes the application settings property values from persistent storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-241">Le <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> méthode efface les valeurs de propriété actuellement mis en cache, provoquant un rechargement de ces valeurs à partir du stockage persistant lorsqu’ils sont accessibles par la suite.</span><span class="sxs-lookup"><span data-stu-id="11b53-241">The <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method clears the currently cached property values, causing a reload of these values from persistent storage when they are subsequently accessed.</span></span> <span data-ttu-id="11b53-242">Cette méthode effectue les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="11b53-242">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="11b53-243">Elle efface les propriétés actuellement mises en cache en effaçant la collection représentée par le <xref:System.Configuration.SettingsBase.PropertyValues%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="11b53-243">It clears the currently cached properties by clearing the collection represented by the <xref:System.Configuration.SettingsBase.PropertyValues%2A> property.</span></span>  
  
-   <span data-ttu-id="11b53-244">Il déclenche le <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> événement pour chaque membre de la <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="11b53-244">It raises the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event for every member of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> collection.</span></span>  
  
 <span data-ttu-id="11b53-245"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contraste avec <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> dans la mesure où le premier chargera le dernier ensemble de valeurs de paramètres d’application enregistré, tandis que le second chargera les valeurs par défaut enregistrées.</span><span class="sxs-lookup"><span data-stu-id="11b53-245"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11b53-246">Le code suivant montre l’exemple le <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> méthode invoquée dans le corps de la <xref:System.Windows.Forms.Control.Click> Gestionnaire d’événements pour un bouton nommé `btnReload`.</span><span class="sxs-lookup"><span data-stu-id="11b53-246">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`.</span></span> <span data-ttu-id="11b53-247">Suite à cet appel, les valeurs actuellement stockées pour les paramètres d’application sont rechargées dans leurs propriétés correspondantes.</span><span class="sxs-lookup"><span data-stu-id="11b53-247">As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="11b53-248">L’exemple de code complet est répertorié dans le <xref:System.Configuration.ApplicationSettingsBase> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="11b53-248">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#6)]
 [!code-csharp[AppSettingsSample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#6)]
 [!code-vb[AppSettingsSample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="applicationSettingsBase.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="11b53-249">Restaure les valeurs de paramètre d'application persistantes à leurs propriétés par défaut correspondantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-249">Restores the persisted application settings values to their corresponding default properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-250">Le <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> méthode le remplace les propriétés de paramètres de portée utilisateur en restaurant la valeur de chaque paramètre d’application actuellement persistant.</span><span class="sxs-lookup"><span data-stu-id="11b53-250">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method overwrites the user-scoped settings properties by restoring the currently persisted value of each application settings.</span></span> <span data-ttu-id="11b53-251">Cette méthode effectue les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="11b53-251">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="11b53-252">Il appelle le <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> méthode sur chaque fournisseur de paramètres qui prend en charge cette méthode facultative.</span><span class="sxs-lookup"><span data-stu-id="11b53-252">It calls the <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> method on every settings provider that supports this optional method.</span></span>  
  
-   <span data-ttu-id="11b53-253">Il appelle le <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> méthode pour forcer une actualisation des valeurs de propriété de paramètres.</span><span class="sxs-lookup"><span data-stu-id="11b53-253">It calls the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method to force a refresh of the settings property values.</span></span>  
  
 <span data-ttu-id="11b53-254"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contraste avec <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> dans la mesure où le premier chargera le dernier ensemble de valeurs de paramètres d’application enregistré, tandis que le second chargera les valeurs par défaut enregistrées.</span><span class="sxs-lookup"><span data-stu-id="11b53-254"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11b53-255">Le code suivant montre l’exemple le <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> méthode invoquée dans le corps de la <xref:System.Windows.Forms.Control.Click> Gestionnaire d’événements pour un bouton nommé `btnReset`.</span><span class="sxs-lookup"><span data-stu-id="11b53-255">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`.</span></span> <span data-ttu-id="11b53-256">Suite à cet appel, les valeurs stockées par défaut pour les paramètres d’application sont rechargées dans leurs propriétés correspondantes.</span><span class="sxs-lookup"><span data-stu-id="11b53-256">As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="11b53-257">L’exemple de code complet est répertorié dans le <xref:System.Configuration.ApplicationSettingsBase> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="11b53-257">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#5)]
 [!code-csharp[AppSettingsSample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#5)]
 [!code-vb[AppSettingsSample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="11b53-258">Le fichier de configuration n'a pas pu être analysé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-258">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="override this.Save : unit -&gt; unit" Usage="applicationSettingsBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="11b53-259">Stocke les valeurs actuelles des propriétés de paramètres d'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-259">Stores the current values of the application settings properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-260">Le <xref:System.Configuration.ApplicationSettingsBase.Save%2A> méthode écrit la valeur actuelle de chaque propriété de paramètres dans son magasin de données associé.</span><span class="sxs-lookup"><span data-stu-id="11b53-260">The <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method writes the current value of each settings property to its associated data store.</span></span> <span data-ttu-id="11b53-261">Pour chaque propriété, cette méthode appelle la <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> méthode sur le fournisseur de paramètres associé.</span><span class="sxs-lookup"><span data-stu-id="11b53-261">For each property, this method calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method on the associated settings provider.</span></span>  
  
 <span data-ttu-id="11b53-262">Cette méthode diffère de l’implémentation de classe de base, car il déclenche le <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> événement avant que les valeurs sont écrites.</span><span class="sxs-lookup"><span data-stu-id="11b53-262">This method differs from the base class implementation in that it raises the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event before the values are written.</span></span>  
  
 <span data-ttu-id="11b53-263">Si les seuls paramètres définis sont des paramètres de portée application, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> n’aura aucun effet et ne retournera aucune erreur si elle est appelée avec la valeur par défaut <xref:System.Configuration.LocalFileSettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="11b53-263">If the only settings defined are application-scoped settings, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> will have no effect and return no error if called with the default <xref:System.Configuration.LocalFileSettingsProvider>.</span></span> <span data-ttu-id="11b53-264"><xref:System.Configuration.LocalFileSettingsProvider> enregistre uniquement les paramètres de portée utilisateur.</span><span class="sxs-lookup"><span data-stu-id="11b53-264"><xref:System.Configuration.LocalFileSettingsProvider> only saves user-scoped settings.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="11b53-265">Il n’existe aucune méthode correspondante de la charge, car les valeurs de paramètres d’application sont chargés automatiquement lors de l’initialisation de classe wrapper.</span><span class="sxs-lookup"><span data-stu-id="11b53-265">There is no corresponding Load method because the values of application settings are automatically loaded during wrapper class initialization.</span></span> <span data-ttu-id="11b53-266">En revanche, ces valeurs ne sont pas enregistrées automatiquement lorsqu’une application se termine.</span><span class="sxs-lookup"><span data-stu-id="11b53-266">In contrast, these values are not automatically saved when an application ends.</span></span> <span data-ttu-id="11b53-267">Par conséquent, vous devez appeler explicitement la <xref:System.Configuration.ApplicationSettingsBase.Save%2A> méthode pour rendre persistantes les valeurs actuelles des paramètres d’application.</span><span class="sxs-lookup"><span data-stu-id="11b53-267">Therefore, you must explicitly call the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method to persist the current values of the application settings.</span></span> <span data-ttu-id="11b53-268">Cette opération est généralement effectuée dans le <xref:System.Windows.Forms.Form.Closing> Gestionnaire d’événements du principal ou conteneur <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="11b53-268">This is typically performed in the <xref:System.Windows.Forms.Form.Closing> event handler of the primary or containing <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11b53-269">Le code suivant montre l’exemple le <xref:System.Configuration.ApplicationSettingsBase.Save%2A> méthode appelée à partir de la <xref:System.Windows.Forms.Form.Closing> Gestionnaire d’événements pour le formulaire principal.</span><span class="sxs-lookup"><span data-stu-id="11b53-269">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form.</span></span> <span data-ttu-id="11b53-270">Cette méthode ajoute également un point supplémentaire à la propriété de paramètres associé du formulaire <xref:System.Windows.Forms.Control.Text%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="11b53-270">This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 <span data-ttu-id="11b53-271">L’exemple de code complet est répertorié dans le <xref:System.Configuration.ApplicationSettingsBase> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="11b53-271">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#3)]
 [!code-csharp[AppSettingsSample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#3)]
 [!code-vb[AppSettingsSample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SettingChanging">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingChangingEventHandler SettingChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingChangingEventHandler SettingChanging" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingChanging As SettingChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingChangingEventHandler ^ SettingChanging;" />
      <MemberSignature Language="F#" Value="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " Usage="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11b53-272">Se produit avant que la valeur d'une propriété de paramètres d'application ait été modifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-272">Occurs before the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-273">Le <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> événement se produit avant la modification d’une propriété de valeur de paramètre application via le <xref:System.Configuration.ApplicationSettingsBase.Item%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="11b53-273">The <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event occurs before an application setting value property is changed through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="11b53-274">Cet événement n’est pas déclenché lorsque le <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> ou <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> méthodes sont appelées.</span><span class="sxs-lookup"><span data-stu-id="11b53-274">This event is not raised when the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods are called.</span></span> <span data-ttu-id="11b53-275"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> peut être annulé via la <xref:System.Configuration.SettingChangingEventArgs> classe de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="11b53-275"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> can be canceled through the <xref:System.Configuration.SettingChangingEventArgs> event data class.</span></span>  
  
 <span data-ttu-id="11b53-276">Vous utilisez généralement le <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> événement à gérer la validation immédiate d’une propriété de paramètres.</span><span class="sxs-lookup"><span data-stu-id="11b53-276">You typically use the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event to handle immediate validation of an individual settings property.</span></span> <span data-ttu-id="11b53-277">Pour plus d’informations sur la validation, consultez [Comment : valider les paramètres d’Application](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).</span><span class="sxs-lookup"><span data-stu-id="11b53-277">For more information about validation, see [How to: Validate Application Settings](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).</span></span>  
  
 <span data-ttu-id="11b53-278">Il n’est pas correspondante `SettingChanged` événement pour cette classe ; au lieu de cela, consultez le <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="11b53-278">There is no corresponding `SettingChanged` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11b53-279">Le code suivant montre l’exemple le <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> Gestionnaire d’événements pour l’objet de type `FormSettings`, qui est une classe wrapper dérivée de <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="11b53-279">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="11b53-280">Le gestionnaire affiche les informations d’événement dans une zone de texte nommé `tbStatus`.</span><span class="sxs-lookup"><span data-stu-id="11b53-280">The handler displays the event information in a textbox named `tbStatus`.</span></span> <span data-ttu-id="11b53-281">L’exemple de code complet est répertorié dans le <xref:System.Configuration.ApplicationSettingsBase> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="11b53-281">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#7)]
 [!code-csharp[AppSettingsSample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#7)]
 [!code-vb[AppSettingsSample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/9f145ada-4267-436a-aa4c-c4dcffd0afb7">
          <span data-ttu-id="11b53-282">Comment : valider des paramètres d'application</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-282">How to: Validate Application Settings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11b53-283">Obtient ou définit la clé de paramètres pour le groupe de paramètres d'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-283">Gets or sets the settings key for the application settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11b53-284">
            <see cref="T:System.String" /> contenant la clé de paramètres pour le groupe de paramètres actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-284">A <see cref="T:System.String" /> containing the settings key for the current settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-285">Le <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> propriété est fournie pour permettre au code client et en particulier le fournisseur de paramètres pour lever l’ambiguïté entre plusieurs instances de la même classe de paramètres d’application.</span><span class="sxs-lookup"><span data-stu-id="11b53-285">The <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property is provided to enable client code, and in particular the settings provider, to disambiguate between multiple instances of the same application settings class.</span></span>  
  
 <span data-ttu-id="11b53-286">À moins que la classe wrapper de paramètres est conçue à l’aide du modèle de singleton, il peut y avoir plusieurs instances de la même classe de paramètres d’application dans une application unique.</span><span class="sxs-lookup"><span data-stu-id="11b53-286">Unless the settings wrapper class is designed using the singleton pattern, there can be multiple instances of the same application settings class in a single application.</span></span> <span data-ttu-id="11b53-287">La valeur de <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> doivent être définis en fonction de la façon dont les valeurs de propriété sont destinées à être partagées.</span><span class="sxs-lookup"><span data-stu-id="11b53-287">The value of <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should be set according to how the property values are intended to be shared.</span></span>  
  
-   <span data-ttu-id="11b53-288">Si les propriétés des paramètres du wrapper sont destinées à être partagées entre toutes les instances du wrapper dans la même application, puis <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> doit avoir la même valeur dans toutes les instances.</span><span class="sxs-lookup"><span data-stu-id="11b53-288">If the settings properties of the wrapper are intended to be shared across all instances of the wrapper in the same application, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have the same value in all of the instances.</span></span> <span data-ttu-id="11b53-289">Il s’agit du comportement par défaut de la <xref:System.Configuration.ApplicationSettingsBase> classe.</span><span class="sxs-lookup"><span data-stu-id="11b53-289">This is the default behavior of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span>  
  
-   <span data-ttu-id="11b53-290">Si les propriétés des paramètres du wrapper sont destinées à être par instance, puis <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> doit avoir une valeur unique pour chaque instance.</span><span class="sxs-lookup"><span data-stu-id="11b53-290">If the settings properties of the wrapper are intended to be per instance, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have a unique value for every instance.</span></span> <span data-ttu-id="11b53-291">Le <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> version du constructeur vous permet d’initialiser <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> en une chaîne unique.</span><span class="sxs-lookup"><span data-stu-id="11b53-291">The <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> version of the constructor enables you to initialize <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> to a unique string.</span></span>  
  
 <span data-ttu-id="11b53-292">En revanche, le <xref:System.Configuration.ApplicationSettingsBase.Context%2A> propriété fournit quelques indications pour le fournisseur de paramètres pour lui permettre de conserver les valeurs de manière efficace et ordonnée.</span><span class="sxs-lookup"><span data-stu-id="11b53-292">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.Context%2A> property provides hints to the settings provider to enable it to persist values in an efficient and orderly manner.</span></span>  
  
 <span data-ttu-id="11b53-293">Le <xref:System.Configuration.SettingChangingEventArgs> classe contient un texte similaire <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> propriété qui vous aide à identifier la source de la <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> événement.</span><span class="sxs-lookup"><span data-stu-id="11b53-293">The <xref:System.Configuration.SettingChangingEventArgs> class contains a similar <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> property that helps identify the source of the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Context" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SettingsLoaded">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsLoadedEventHandler SettingsLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsLoaded As SettingsLoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsLoadedEventHandler ^ SettingsLoaded;" />
      <MemberSignature Language="F#" Value="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " Usage="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsLoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11b53-294">Se produit après que les paramètres d'application ont été récupérés à partir du stockage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-294">Occurs after the application settings are retrieved from storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-295">Le <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> événement se produit uniquement après le premier `get` accès de la première propriété de configuration utilisée, généralement via le <xref:System.Configuration.ApplicationSettingsBase.Item%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="11b53-295">The <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event occurs only after the initial `get` access of the first configuration property used, typically through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="11b53-296">Les accès ultérieurs utilisent des valeurs pour la propriété de paramètres qui sont mis en cache localement.</span><span class="sxs-lookup"><span data-stu-id="11b53-296">Subsequent accesses use values for the settings property that are cached locally.</span></span> <span data-ttu-id="11b53-297">Le <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> et <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> méthodes effacera valeurs toutes les mises en cache pour cet événement sera déclenché à nouveau lors des accès de propriété ultérieurs.</span><span class="sxs-lookup"><span data-stu-id="11b53-297">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods will clear all cached values so this event will be raised again upon subsequent property access.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="T:System.Configuration.SettingsLoadedEventArgs" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="SettingsSaving">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsSavingEventHandler SettingsSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsSavingEventHandler SettingsSaving" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsSaving As SettingsSavingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsSavingEventHandler ^ SettingsSaving;" />
      <MemberSignature Language="F#" Value="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " Usage="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSavingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11b53-298">Se produit avant que des valeurs soient enregistrées dans le magasin de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-298">Occurs before values are saved to the data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-299">Le <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> événement est déclenché par la <xref:System.Configuration.ApplicationSettingsBase.Save%2A> méthode avant qu’il stocke les propriétés de paramètres d’application à son magasin de données associées.</span><span class="sxs-lookup"><span data-stu-id="11b53-299">The <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event is raised by the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method before it stores the application settings properties to their associated data store.</span></span> <span data-ttu-id="11b53-300">Le Gestionnaire d’événements associé peut annuler cet événement.</span><span class="sxs-lookup"><span data-stu-id="11b53-300">The associated event handler can cancel this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11b53-301">Le code suivant montre l’exemple le <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> Gestionnaire d’événements pour l’objet de type `FormSettings`, qui est une classe wrapper dérivée de <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="11b53-301">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="11b53-302">Le gestionnaire interroge l’utilisateur pour enregistrer les valeurs de propriété de paramètres application actuelle.</span><span class="sxs-lookup"><span data-stu-id="11b53-302">The handler queries the user to save the current application settings property values.</span></span> <span data-ttu-id="11b53-303">L’exemple de code complet est répertorié dans le <xref:System.Configuration.ApplicationSettingsBase> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="11b53-303">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#8](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#8)]
 [!code-csharp[AppSettingsSample#8](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#8)]
 [!code-vb[AppSettingsSample#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual void Upgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Upgrade ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade();" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : unit -&gt; unit&#xA;override this.Upgrade : unit -&gt; unit" Usage="applicationSettingsBase.Upgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="11b53-304">Met à jour des paramètres d'application de façon à refléter une installation plus récente de l'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-304">Updates application settings to reflect a more recent installation of the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11b53-305">Le <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> méthode effectue deux actions pour garantir une transition en douceur vers une nouvelle version d’une application :</span><span class="sxs-lookup"><span data-stu-id="11b53-305">The <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method performs two actions to assure smooth transition to a new version of an application:</span></span>  
  
-   <span data-ttu-id="11b53-306">Il indique à tous les fournisseurs de paramètres correspondants de l’existence de l’application mis à niveau via un appel à leurs <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> méthode, en supposant qu’ils ont implémenté le <xref:System.Configuration.IApplicationSettingsProvider> interface.</span><span class="sxs-lookup"><span data-stu-id="11b53-306">It notifies all of the corresponding settings providers of the existence of the upgraded application through a call to their <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> method, assuming they have implemented the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="11b53-307">Cette action n’est pas effectuée si la classe wrapper de paramètres est marquée avec <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="11b53-307">This action is not performed if the settings wrapper class is marked with <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</span></span>  
  
-   <span data-ttu-id="11b53-308">Il recharge les valeurs pour tous les paramètres d’application.</span><span class="sxs-lookup"><span data-stu-id="11b53-308">It reloads the values for all of the application settings.</span></span>  
  
 <span data-ttu-id="11b53-309">Vous pouvez remplacer le comportement par défaut de <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> pour implémenter la mise à niveau personnalisée ou un comportement de fusion.</span><span class="sxs-lookup"><span data-stu-id="11b53-309">You can override the default behavior of <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> to implement custom upgrading or merging behavior.</span></span> <span data-ttu-id="11b53-310">Utilisez le <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> méthode pour récupérer les valeurs d’un paramètre pour la version précédente de l’application.</span><span class="sxs-lookup"><span data-stu-id="11b53-310">Use the <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method to retrieve individual values for a setting for the previous version of the application.</span></span> <span data-ttu-id="11b53-311">Voici quelques exemples de comportement de mise à niveau personnalisé :</span><span class="sxs-lookup"><span data-stu-id="11b53-311">Examples of custom upgrade behavior include:</span></span>  
  
-   <span data-ttu-id="11b53-312">À l’aide des nouvelles valeurs par défaut de stratégie qui substituent une ou plusieurs des valeurs précédentes spécifié par l’utilisateur ou les valeurs par défaut précédentes.</span><span class="sxs-lookup"><span data-stu-id="11b53-312">Using new policy defaults that override one or more of the previous user-specified values or previous defaults.</span></span>  
  
-   <span data-ttu-id="11b53-313">Traduction spéciale de valeurs anciennes pour être compatible avec la plus récente des plages, un groupe de propriétés des paramètres différents et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="11b53-313">Special translation of old values to be compatible with newer ranges, a different settings property group, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="11b53-314">Le fichier de configuration n'a pas pu être analysé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11b53-314">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>