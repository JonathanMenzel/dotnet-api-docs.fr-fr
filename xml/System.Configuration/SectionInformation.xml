<Type Name="SectionInformation" FullName="System.Configuration.SectionInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8c650c79dd5c5a5d821915db0257fce6f861923" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780690" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SectionInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SectionInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SectionInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SectionInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class SectionInformation sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contient les métadonnées concernant une section individuelle dans la hiérarchie de configuration. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation> objet contient les métadonnées relatives à une section individuelle dans la hiérarchie de configuration. Cet objet peut être utilisé pour valider et modifier les propriétés d’une section individuelle.  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir le <xref:System.Configuration.SectionInformation> les métadonnées qui sont associée à un <xref:System.Configuration.ConfigurationSection> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#91](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#91)]
 [!code-vb[System.Configuration.ConfigurationElement#91](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#91)]  
  
 L’exemple suivant est un extrait du fichier de configuration qui est utilisé par l’exemple précédent.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
  <configSections>  
    <section name="MyUrls" type="Samples.AspNet.UrlsSection,  
      ConfigurationElement, Version=1.0.0.0, Culture=neutral,  
      PublicKeyToken=null" allowDefinition="Everywhere"  
      allowExeDefinition="MachineToApplication"  
      restartOnExternalChanges="true" />  
  </configSections>  
  <MyUrls name="MyFavorites">  
    <simple name="Contoso" url="http://www.contoso.com" port="8080" />  
    <urls>  
      <clear />  
      <add name="Microsoft" url="http://www.microsoft.com" port="0" />  
    </urls>  
  </MyUrls>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <Member MemberName="AllowDefinition">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationAllowDefinition AllowDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationAllowDefinition AllowDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDefinition As ConfigurationAllowDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationAllowDefinition AllowDefinition { System::Configuration::ConfigurationAllowDefinition get(); void set(System::Configuration::ConfigurationAllowDefinition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationAllowDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration la section de configuration associée peut être définie.</summary>
        <value>Valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé peut être déclaré.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation.AllowDefinition%2A> s’applique uniquement aux fichiers de configuration des applications Web. Pour les applications clientes, vous devez utiliser <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>.  
  
   
  
## Examples  
 Les exemples de cette section montrent comment obtenir la <xref:System.Configuration.SectionInformation.AllowDefinition%2A> valeur de la propriété après avoir accédé aux informations la section associée dans le fichier de configuration.  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation.AllowDefinition%2A> valeur.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#96](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#96)]
 [!code-vb[System.Configuration.ConfigurationElement#96](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#96)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="AllowExeDefinition">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowExeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowExeDefinition As ConfigurationAllowExeDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationAllowExeDefinition AllowExeDefinition { System::Configuration::ConfigurationAllowExeDefinition get(); void set(System::Configuration::ConfigurationAllowExeDefinition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationAllowExeDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration la section de configuration associée peut être déclarée.</summary>
        <value>Valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé peut être déclaré pour les fichiers .exe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A> s’applique uniquement aux fichiers de configuration des applications clientes. Pour les applications Web, vous devez utiliser <xref:System.Configuration.SectionInformation.AllowDefinition%2A>.  
  
   
  
## Examples  
 Les exemples de cette section montrent comment obtenir la <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A> valeur de la propriété après avoir accédé aux informations la section associée dans le fichier de configuration.  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A> valeur.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#97](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#97)]
 [!code-vb[System.Configuration.ConfigurationElement#97](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#97)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
        <altmember cref="T:System.Configuration.ConfigurationAllowExeDefinition" />
      </Docs>
    </Member>
    <Member MemberName="AllowLocation">
      <MemberSignature Language="C#" Value="public bool AllowLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowLocation" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowLocation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowLocation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la section de configuration autorise l'attribut <see langword="location" />.</summary>
        <value>
          <see langword="true" /> si l'attribut <see langword="location" /> est autorisé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque la valeur `false`, le <xref:System.Configuration.SectionInformation.AllowLocation%2A> propriété indique que la section est accessible par les lecteurs de code natif. Par conséquent, l’utilisation de la `location` attribut n’est pas autorisé, car les lecteurs de code natif ne prennent pas en charge le concept de `location`.  
  
   
  
## Examples  
 Les exemples de cette section montrent comment obtenir la <xref:System.Configuration.SectionInformation.AllowLocation%2A> valeur de la propriété après avoir accédé aux informations la section associée dans le fichier de configuration.  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation.AllowLocation%2A> valeur.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#98](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#98)]
 [!code-vb[System.Configuration.ConfigurationElement#98](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowOverride">
      <MemberSignature Language="C#" Value="public bool AllowOverride { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowOverride" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowOverride" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowOverride As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowOverride { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la section de configuration associée peut être substituée par des fichiers de configuration de niveau inférieur.</summary>
        <value>
          <see langword="true" /> si la section peut être substituée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Les exemples de cette section montrent comment obtenir la <xref:System.Configuration.SectionInformation.AllowOverride%2A> valeur de la propriété après avoir accédé aux informations la section associée dans le fichier de configuration.  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation.AllowOverride%2A> valeur.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#99)]
 [!code-vb[System.Configuration.ConfigurationElement#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigSource">
      <MemberSignature Language="C#" Value="public string ConfigSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigSource" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ConfigSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du fichier Include dans lequel la section de configuration associée est définie, si ce fichier existe.</summary>
        <value>Nom du fichier Include dans lequel le <see cref="T:System.Configuration.ConfigurationSection" /> associé est défini, si ce fichier existe ; sinon, une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation.ConfigSource%2A> propriété représente la valeur de la `configSource` attribut qui est spécifié pour un <xref:System.Configuration.ConfigurationSection> objet auquel est associé le <xref:System.Configuration.SectionInformation> objet.  
  
 A <xref:System.Configuration.ConfigurationSection> implémentation peut éventuellement spécifier un fichier distinct dans lequel les paramètres de configuration de cette section sont définis. Cela peut être utile de plusieurs façons :  
  
-   À l’aide de fichiers include peut entraîner une structure plus logique et modulaire pour les fichiers de configuration.  
  
-   Autorisations et la sécurité d’accès au fichier peuvent être utilisées pour restreindre l’accès aux sections de paramètres de configuration.  
  
-   Les paramètres dans un fichier include qui ne sont pas utilisés pendant l’initialisation d’application peuvent être modifiés et rechargés sans nécessiter un redémarrage de l’application.  
  
 L’exemple suivant montre comment cet attribut est utilisé dans un fichier de configuration pour spécifier que le `pages` section est définie dans un fichier include externe :  
  
 `<pages configSource="pages.config"/>`  
  
 Si aucun des paramètres dans une configuration de fichier include requièrent que l’application de redémarrer une fois qu’ils sont modifiés, définissez la <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> propriété `true`.  
  
 Dans les applications ASP.NET, au moment de l’exécution que vous pouvez affecter à la <xref:System.Configuration.SectionInformation.ConfigSource%2A> propriété le nom d’un autre fichier de configuration. Dans ce cas, le contenu du fichier est remplacé par les informations de chaîne de connexion par défaut qui sont contenues dans le fichier Web.config. Cela se produit également lorsque l’autre fichier n’existe pas et il est créé au moment de l’exécution. Si le fichier Web.config ne contient pas les informations de chaîne de connexion, une section vide est ajoutée au fichier de remplacement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.SectionInformation.RestartOnExternalChanges" />
      </Docs>
    </Member>
    <Member MemberName="ConfigurationBuilder">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationBuilder ConfigurationBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationBuilder ConfigurationBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ConfigurationBuilder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfigurationBuilder As ConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationBuilder ^ ConfigurationBuilder { System::Configuration::ConfigurationBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’objet <see cref="T:System.Configuration.ConfigurationBuilder" /> pour cette section de configuration.</summary>
        <value>Objet <see cref="T:System.Configuration.ConfigurationBuilder" /> pour cette section de configuration.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ForceDeclaration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Force l'affichage de la section de configuration associée dans le fichier de configuration.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une section de configuration n’est pas écrite dans un fichier de configuration lorsqu’il est hérité d’un fichier parent. Si vous souhaitez que la section parente à afficher dans le fichier de configuration enfant, vous devez définir le <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> à `true`. Ainsi, un fichier de configuration plus portable d’un ordinateur à un autre. Cela vous permet également de vous assurer que la section existe même si vous n’avez pas de contrôle sur les fichiers de configuration parents.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ForceDeclaration">
      <MemberSignature Language="C#" Value="public void ForceDeclaration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ForceDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Force l'affichage de la section de configuration associée dans le fichier de configuration.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> méthode force cela <xref:System.Configuration.SectionInformation> déclaration à écrire dans le fichier de configuration.  
  
> [!NOTE]
>  Le <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> méthode peut forcer un <xref:System.Configuration.SectionInformation> déclaration à écrire dans un fichier de configuration, même si la section n’est pas requise, car il est déjà déclaré dans un fichier parent. À l’aide de la <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> méthode permet de définir une configuration de fichier plus portables d’un ordinateur à un autre. Il vous permet de s’assurer que la section existe même quand il est inutile contrôle sur les fichiers de configuration parents.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceDeclaration">
      <MemberSignature Language="C#" Value="public void ForceDeclaration (bool force);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration(bool force) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration (force As Boolean)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration(bool force);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void ForceDeclaration (bool require);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration(bool require) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration (require As Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration(bool require);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="require" Type="System.Boolean" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="force">To be added.</param>
        <param name="require">To be added.</param>
        <summary>Force l'affichage de la section de configuration associée dans le fichier de configuration ou supprime une section existante du fichier de configuration.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> méthode force cela <xref:System.Configuration.SectionInformation> déclaration à écrire dans le fichier de configuration si `force` est `true`. Si `force` est `false`, cette action peut être ignorée si la <xref:System.Configuration.SectionInformation> déclaration est requise par le système.  
  
> [!NOTE]
>  Le <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> méthode peut forcer un <xref:System.Configuration.SectionInformation> déclaration à écrire dans un fichier de configuration, même si cette section n’est pas obligatoire, car il est déjà déclaré dans un fichier parent. À l’aide de la <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> méthode permet de définir une configuration de fichier plus portables d’un ordinateur à un autre. Cela vous permet également de vous assurer que la section existe même si vous n’avez pas de contrôle sur les fichiers de configuration parents.  
  
   
  
## Examples  
 L'exemple suivant illustre l'utilisation de la méthode <xref:System.Configuration.SectionInformation.ForceDeclaration%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#113](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#113)]
 [!code-vb[System.Configuration.ConfigurationElement#113](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#113)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <paramref name="force" /> a la valeur <see langword="true" /> et la section associée ne peut pas être exportée vers le fichier de configuration enfant, ou elle n'est pas déclarée.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.IsDeclarationRequired" />
      </Docs>
    </Member>
    <Member MemberName="ForceSave">
      <MemberSignature Language="C#" Value="public bool ForceSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceSave" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ForceSave" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la section de configuration associée est enregistrée même si elle n'est pas modifiée.</summary>
        <value>
          <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé est enregistré même s'il n'est pas modifié ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Si le fichier de configuration est enregistré (même en l'absence de modifications), ASP.NET redémarre l'application.  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Configuration.SectionInformation.ForceSave%2A> propriété d’un <xref:System.Configuration.ConfigurationSection> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#1)]
 [!code-vb[System.Configuration.ConfigurationElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentSection">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationSection GetParentSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Configuration.ConfigurationSection GetParentSection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.GetParentSection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentSection () As ConfigurationSection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::ConfigurationSection ^ GetParentSection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient la section de configuration qui contient la section de configuration associée à cet objet.</summary>
        <returns>Section de configuration qui contient <see cref="T:System.Configuration.ConfigurationSection" /> associé à cet objet <see cref="T:System.Configuration.SectionInformation" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si cette <xref:System.Configuration.ConfigurationSection> objet ne possède pas de sections parentes, le <xref:System.Configuration.SectionInformation.GetParentSection%2A> méthode retourne la même valeur que le <xref:System.Configuration.SectionInformation.Name%2A> propriété.  
  
   
  
## Examples  
 L'exemple suivant illustre l'utilisation de la méthode <xref:System.Configuration.SectionInformation.GetParentSection%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#92](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#92)]
 [!code-vb[System.Configuration.ConfigurationElement#92](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#92)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La méthode est appelée à partir d'une section parente.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRawXml">
      <MemberSignature Language="C#" Value="public string GetRawXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRawXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.GetRawXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRawXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRawXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un objet nœud XML qui représente l'objet de la section de configuration associée.</summary>
        <returns>Représentation XML pour cette section de configuration.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple suivant illustre l'utilisation de la méthode <xref:System.Configuration.SectionInformation.GetRawXml%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#93](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#93)]
 [!code-vb[System.Configuration.ConfigurationElement#93](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#93)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cet objet de configuration est verrouillé et ne peut pas être modifié.</exception>
      </Docs>
    </Member>
    <Member MemberName="InheritInChildApplications">
      <MemberSignature Language="C#" Value="public bool InheritInChildApplications { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InheritInChildApplications" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.InheritInChildApplications" />
      <MemberSignature Language="VB.NET" Value="Public Property InheritInChildApplications As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InheritInChildApplications { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si les paramètres spécifiés dans la section de configuration associée sont hérités par des applications qui résident dans un sous-répertoire de l'application correspondante.</summary>
        <value>
          <see langword="true" /> si les paramètres spécifiés dans cet objet <see cref="T:System.Configuration.ConfigurationSection" /> sont hérités par les applications enfants ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> propriété représente le `inheritInChildApplications` attribut d’un `location` élément dans un fichier de configuration.  
  
 Définissez <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> à `false` pour empêcher que des paramètres spécifiques à un emplacement donné (par exemple, le répertoire racine d’un site Web) qui est héritée par les applications qui existent dans les sous-répertoires.  
  
 L’exemple suivant montre comment utiliser cet attribut dans un fichier de configuration pour spécifier que les paramètres définis dans l’élément location pour la racine d’un site Web ne doivent pas être héritées par les applications enfants :  
  
 `<location path="." inheritInChildApplications="false">`  
  
 Le <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> propriété s’applique uniquement à emplacement de paramètres de configuration spécifiques.  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir le <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> valeur un <xref:System.Configuration.ConfigurationSection> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#100](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#100)]
 [!code-vb[System.Configuration.ConfigurationElement#100](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclarationRequired">
      <MemberSignature Language="C#" Value="public bool IsDeclarationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeclarationRequired" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsDeclarationRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeclarationRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeclarationRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si la section de configuration doit être déclarée dans le fichier de configuration.</summary>
        <value>
          <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé doit être déclaré dans le fichier de configuration ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Les exemples de cette section montrent comment obtenir la <xref:System.Configuration.SectionInformation.IsDeclarationRequired%2A> valeur de la propriété après avoir accédé aux informations la section associée dans le fichier de configuration.  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation.IsDeclarationRequired%2A> valeur.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#103](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#103)]
 [!code-vb[System.Configuration.ConfigurationElement#103](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#103)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsDeclared">
      <MemberSignature Language="C#" Value="public bool IsDeclared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeclared" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsDeclared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeclared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeclared { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si la section de configuration associée est déclarée dans le fichier de configuration.</summary>
        <value>
          <see langword="true" /> si ce <see cref="T:System.Configuration.ConfigurationSection" /> est déclaré dans le fichier de configuration ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Les exemples de cette section montrent comment obtenir la <xref:System.Configuration.SectionInformation.IsDeclared%2A> valeur de la propriété après avoir accédé aux informations la section associée dans le fichier de configuration.  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation.IsDeclared%2A> valeur.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#104](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#104)]
 [!code-vb[System.Configuration.ConfigurationElement#104](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsLocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocked { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si la section de configuration associée est verrouillée.</summary>
        <value>
          <see langword="true" /> si la section est verrouillée ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation.IsLocked%2A> propriété renvoie `true` lorsque la section associée est verrouillée par le <xref:System.Configuration.SectionInformation.AllowOverride%2A> ou <xref:System.Configuration.SectionInformation.AllowDefinition%2A> propriété. Une section est verrouillée si elle ne peut pas être remplacée ou défini dans le fichier de configuration en cours.  
  
   
  
## Examples  
 Les exemples de cette section montrent comment obtenir la <xref:System.Configuration.SectionInformation.IsLocked%2A> valeur de la propriété après avoir accédé aux informations la section associée dans le fichier de configuration.  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation.IsLocked%2A> valeur.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#105](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#105)]
 [!code-vb[System.Configuration.ConfigurationElement#105](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProtected">
      <MemberSignature Language="C#" Value="public bool IsProtected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProtected" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsProtected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsProtected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsProtected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si la section de configuration associée est protégée.</summary>
        <value>
          <see langword="true" /> si ce <see cref="T:System.Configuration.ConfigurationSection" /> est protégé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sections de configuration protégées sont chiffrées et en lecture seule.  
  
 Pour plus d’informations sur les sections de configuration protégées, consultez [chiffrement Configuration des informations à l’aide de Configuration protégée](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 Les exemples de cette section montrent comment obtenir la <xref:System.Configuration.SectionInformation.IsProtected%2A> valeur de la propriété après avoir accédé aux informations la section associée dans le fichier de configuration.  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 L’exemple suivant obtient la <xref:System.Configuration.SectionInformation.IsProtected%2A> valeur.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#106](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#106)]
 [!code-vb[System.Configuration.ConfigurationElement#106](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de la section de configuration associée.</summary>
        <value>Nom complet de la section de configuration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation.Name%2A> est le nom de la section sans le chemin d’accès.  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir le <xref:System.Configuration.SectionInformation.Name%2A> valeur un <xref:System.Configuration.ConfigurationSection> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#107](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#107)]
 [!code-vb[System.Configuration.ConfigurationElement#107](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideMode">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideMode" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideMode" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideMode As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideMode { System::Configuration::OverrideMode get(); void set(System::Configuration::OverrideMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur d'énumération <see cref="T:System.Configuration.OverrideMode" /> qui spécifie si la section de configuration associée peut être substituée par les fichiers de configuration enfants.</summary>
        <value>Une des valeurs d'énumération <see cref="T:System.Configuration.OverrideMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation.AllowOverride%2A> propriété obtient ou définit une valeur qui indique si les ressources déclarées à l’intérieur d’un `location` élément peut être substitué par les fichiers de configuration enfants. Le <xref:System.Configuration.SectionInformation.OverrideMode%2A> propriété obtient ou définit une valeur qui spécifie un comportement similaire, mais uniquement pour un élément de configuration ou un groupe et utilise l’un de le <xref:System.Configuration.OverrideMode> valeurs d’énumération. Le <xref:System.Configuration.SectionInformation.OverrideMode%2A> propriété Active le comportement devant être hérité d’un élément parent.  
  
 Vous ne pouvez pas définir par programme à la fois le <xref:System.Configuration.SectionInformation.AllowOverride%2A> et <xref:System.Configuration.SectionInformation.OverrideMode%2A> propriété. Définition de la <xref:System.Configuration.SectionInformation.AllowOverride%2A> propriété `true` définit le <xref:System.Configuration.SectionInformation.OverrideMode%2A> propriété <xref:System.Configuration.OverrideMode.Inherit>. Définition de la <xref:System.Configuration.SectionInformation.AllowOverride%2A> propriété `false` définit le <xref:System.Configuration.SectionInformation.OverrideMode%2A> propriété `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Une tentative a été faite pour modifier à la fois les propriétés <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> et <see cref="P:System.Configuration.SectionInformation.OverrideMode" />, qui ne sont pas prises en charge pour des raisons de compatibilité.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.AllowOverride" />
      </Docs>
    </Member>
    <Member MemberName="OverrideModeDefault">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideModeDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideModeDefault" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideModeDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideModeDefault As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideModeDefault { System::Configuration::OverrideMode get(); void set(System::Configuration::OverrideMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie le comportement de substitution par défaut d'une section de configuration par les fichiers de configuration enfants.</summary>
        <value>Une des valeurs d'énumération <see cref="T:System.Configuration.OverrideMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation.OverrideModeDefault%2A> propriété d’une section de configuration ne peut être définie que les <xref:System.Configuration.OverrideMode.Allow> ou <xref:System.Configuration.OverrideMode.Deny> valeur de la <xref:System.Configuration.OverrideMode> énumération. Définition de la <xref:System.Configuration.SectionInformation.OverrideModeDefault%2A> propriété <xref:System.Configuration.OverrideMode.Inherit> est équivalente à la valeur <xref:System.Configuration.OverrideMode.Allow>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Le comportement de substitution est spécifié dans une section de configuration parente.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.OverrideMode" />
      </Docs>
    </Member>
    <Member MemberName="OverrideModeEffective">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideModeEffective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideModeEffective" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideModeEffective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverrideModeEffective As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideModeEffective { System::Configuration::OverrideMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le comportement de substitution d'une section de configuration qui est à son tour basée sur la capacité des fichiers de configuration enfants à verrouiller la section de configuration.</summary>
        <value>Une des valeurs d'énumération <see cref="T:System.Configuration.OverrideMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété retourne <xref:System.Configuration.OverrideMode.Deny> ou <xref:System.Configuration.OverrideMode.Allow>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionProvider">
      <MemberSignature Language="C#" Value="public System.Configuration.ProtectedConfigurationProvider ProtectionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProtectedConfigurationProvider ProtectionProvider" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ProtectionProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionProvider As ProtectedConfigurationProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ProtectedConfigurationProvider ^ ProtectionProvider { System::Configuration::ProtectedConfigurationProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ProtectedConfigurationProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le fournisseur de configuration protégée pour la section de configuration associée.</summary>
        <value>Fournisseur de configuration protégée pour cet objet <see cref="T:System.Configuration.ConfigurationSection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour les sections non protégées, le <xref:System.Configuration.SectionInformation.ProtectionProvider%2A> propriété est `null`.  
  
 Pour plus d’informations sur les sections de configuration protégées, consultez [chiffrement Configuration des informations à l’aide de Configuration protégée](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir le <xref:System.Configuration.SectionInformation.ProtectSection%2A> valeur un <xref:System.Configuration.ConfigurationSection> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#108](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#108)]
 [!code-vb[System.Configuration.ConfigurationElement#108](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSection">
      <MemberSignature Language="C#" Value="public void ProtectSection (string protectionProvider);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProtectSection(string protectionProvider) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSection (protectionProvider As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProtectSection(System::String ^ protectionProvider);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void ProtectSection (string provider);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProtectSection(string provider) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ProtectSection(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSection (provider As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProtectSection(System::String ^ provider);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectionProvider" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="provider" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="protectionProvider">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>Marque une section de configuration pour la protection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation.ProtectSection%2A> méthode marque la section pour le chiffrement afin qu’il soit écrite sur le disque sous forme chiffrée.  
  
 Les fournisseurs de protection suivants sont inclus par défaut :  
  
 <xref:System.Configuration.DpapiProtectedConfigurationProvider>  
  
 <xref:System.Configuration.RsaProtectedConfigurationProvider>  
  
> [!NOTE]
>  Si vous appelez le <xref:System.Configuration.SectionInformation.ProtectSection%2A> méthode avec un `null` paramètre ou une chaîne vide, la <xref:System.Configuration.RsaProtectedConfigurationProvider> classe est utilisée en tant que le fournisseur de protection.  
  
 Pour plus d’informations sur les sections de configuration protégées, consultez [chiffrement Configuration des informations à l’aide de Configuration protégée](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 L'exemple suivant illustre l'utilisation de la méthode <xref:System.Configuration.SectionInformation.ProtectSection%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#94](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#94)]
 [!code-vb[System.Configuration.ConfigurationElement#94](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#94)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> a la valeur <see langword="false" />.  
  
 \- ou -  
  
 La section cible est déjà une section de données protégée.</exception>
        <altmember cref="T:System.Configuration.DpapiProtectedConfigurationProvider" />
        <altmember cref="T:System.Configuration.RsaProtectedConfigurationProvider" />
      </Docs>
    </Member>
    <Member MemberName="RequirePermission">
      <MemberSignature Language="C#" Value="public bool RequirePermission { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequirePermission" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.RequirePermission" />
      <MemberSignature Language="VB.NET" Value="Public Property RequirePermission As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequirePermission { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si la section de configuration associée requiert des autorisations d'accès.</summary>
        <value>
          <see langword="true" /> si l'attribut <see langword="requirePermission" /> a la valeur <see langword="true" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque <xref:System.Configuration.SectionInformation.RequirePermission%2A> a la valeur `true`, le `GetSection` méthodes sont limitées par le paramètre de niveau de confiance de l’application. Cela signifie que les méthodes ou propriétés qui autorisent l’accès aux gestionnaires de section de configuration sont limitées par le niveau de confiance de l’application Web.  
  
> [!NOTE]
>  Étant donné qu’élevée et de confiance totale sont les seuls qui autorisent l’accès aux fichiers en dehors du domaine d’application actuel, une application peut utiliser des gestionnaires de section de configuration uniquement à ces niveaux de confiance.  
  
 Lorsque <xref:System.Configuration.SectionInformation.RequirePermission%2A> a la valeur `false`, l’accès aux données de configuration n’est pas limité par les paramètres de niveau de confiance de l’application.  
  
> [!NOTE]
>  Autorisations ACL (Access Control List) de fichiers appropriées sont toujours nécessaires, quel que soit le <xref:System.Configuration.SectionInformation.RequirePermission%2A> paramètre. Les autorisations ACL déterminent qui peut accéder au fichier de configuration.  
  
   
  
## Examples  
 L’exemple suivant montre deux niveaux de confiance possibles pour une application Web lors de la <xref:System.Configuration.SectionInformation.RequirePermission%2A> propriété de la `appSettings` section est `true`.  
  
```  
<system.web>  
   // With the following trust value   
   // the code below works.  
  <trust level="Full" />  
</system.web>  
  
<system.web>  
  // With the following trust value   
  // the code below does not work.  
  <trust level="Medium" />  
</system.web>  
```  
  
 L’exemple suivant montre le code qui s’exécute sans erreurs lorsque le niveau de confiance est défini à full. Dans le cas contraire, le code génère une erreur.  
  
```csharp  
AppSettingsSection apSection =   
  ConfigurationManager.GetSection("appSettings") as AppSettingsSection;  
  
NameValueCollection apSectionCollection =  
  ConfigurationManager.AppSettings;  
```  
  
```vb  
Dim apSection As AppSettingsSection = _   
  TryCast(ConfigurationManager.GetSection("appSettings"),   
    AppSettingsSection)  
  
  Dim apSectionCollection As NameValueCollection = _   
    ConfigurationManager.AppSettings  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
      </Docs>
    </Member>
    <Member MemberName="RestartOnExternalChanges">
      <MemberSignature Language="C#" Value="public bool RestartOnExternalChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RestartOnExternalChanges" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.RestartOnExternalChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property RestartOnExternalChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RestartOnExternalChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si la modification d'un fichier Include de configuration externe requiert un redémarrage de l'application.</summary>
        <value>
          <see langword="true" /> si une modification dans un fichier Include de configuration externe requiert le redémarrage de l'application ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définir le <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> propriété `false` afin d’éviter le redémarrage de l’application lorsque les paramètres de configuration dans le fichier include externe sont modifiés pour cet <xref:System.Configuration.ConfigurationSection> objet.  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir le <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> valeur de propriété d’un <xref:System.Configuration.ConfigurationSection> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#109](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#109)]
 [!code-vb[System.Configuration.ConfigurationElement#109](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#109)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
      </Docs>
    </Member>
    <Member MemberName="RevertToParent">
      <MemberSignature Language="C#" Value="public void RevertToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevertToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.RevertToParent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevertToParent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevertToParent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fait que toutes les valeurs de la section de configuration associée sont héritées de la section parente.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Cette méthode ne peut pas être appelée en dehors du mode édition.</exception>
      </Docs>
    </Member>
    <Member MemberName="SectionName">
      <MemberSignature Language="C#" Value="public string SectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SectionName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.SectionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SectionName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de la section de configuration associée.</summary>
        <value>Nom de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation.SectionName%2A> valeur de propriété est le nom de section complet, qui inclut la hiérarchie d’héritage de configuration.  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir le <xref:System.Configuration.SectionInformation.SectionName%2A> valeur un <xref:System.Configuration.ConfigurationSection> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#110](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#110)]
 [!code-vb[System.Configuration.ConfigurationElement#110](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRawXml">
      <MemberSignature Language="C#" Value="public void SetRawXml (string rawXml);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRawXml(string rawXml) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRawXml (rawXml As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRawXml(System::String ^ rawXml);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void SetRawXml (string xml);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRawXml(string xml) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.SetRawXml(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRawXml (xml As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRawXml(System::String ^ xml);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawXml" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rawXml">To be added.</param>
        <param name="xml">To be added.</param>
        <summary>Affecte à l'objet une valeur de représentation XML de la section de configuration associée dans le fichier de configuration.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="rawXml" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la classe de la section.</summary>
        <value>Nom de la classe associée à cette section <see cref="T:System.Configuration.ConfigurationSection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SectionInformation.Type%2A> propriété renvoie le nom de la classe de la section qui gère cette instance de la <xref:System.Configuration.ConfigurationSection> classe.  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir le <xref:System.Configuration.SectionInformation.Type%2A> valeur un <xref:System.Configuration.ConfigurationSection> objet.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#111](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#111)]
 [!code-vb[System.Configuration.ConfigurationElement#111](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur sélectionnée est <see langword="null" /> ou une chaîne vide ("").</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnprotectSection">
      <MemberSignature Language="C#" Value="public void UnprotectSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnprotectSection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.UnprotectSection" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnprotectSection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnprotectSection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime le chiffrement de configuration protégée de la section de configuration associée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur les sections de configuration protégées, consultez [chiffrement Configuration des informations à l’aide de Configuration protégée](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser cette méthode.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#112](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#112)]
 [!code-vb[System.Configuration.ConfigurationElement#112](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#112)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>