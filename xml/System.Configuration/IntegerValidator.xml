<Type Name="IntegerValidator" FullName="System.Configuration.IntegerValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79ba5781db94725d1d5e6c6e3c6728140ce59827" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53395056" /></Metadata><TypeSignature Language="C#" Value="public class IntegerValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntegerValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IntegerValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class IntegerValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntegerValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type IntegerValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dd3ef-101">Fournit la validation d'une valeur <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-101">Provides validation of an <see cref="T:System.Int32" /> value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd3ef-102">Le <xref:System.Configuration.IntegerValidator> classe est utilisée pour garantir qu’un entier à des critères spécifiques.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-102">The <xref:System.Configuration.IntegerValidator> class is used to ensure that an integer meets specific criteria.</span></span> <span data-ttu-id="dd3ef-103">Les critères de validation sont établies lorsqu’une instance de la <xref:System.Configuration.IntegerValidator> classe est créée.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-103">The criteria for validation are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created.</span></span> <span data-ttu-id="dd3ef-104">Le <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructeur avec deux paramètres garantit que l’entier qui est vérifié respecte un minimale et une valeur maximale.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-104">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value.</span></span> <span data-ttu-id="dd3ef-105">Le <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructeur avec trois paramètres vérifie à la fois les valeurs minimale et maximale <xref:System.Int32> valeurs, ainsi que si la valeur à valider est dans la plage spécifiée.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-105">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range.</span></span> <span data-ttu-id="dd3ef-106">Le <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructeur avec quatre paramètres vérifie les trois paramètres précédents et vérifie également si le <xref:System.Int32> valeur est égale à une résolution spécifique.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-106">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.</span></span>  
  
 <span data-ttu-id="dd3ef-107">Le <xref:System.Configuration.IntegerValidator.CanValidate%2A> méthode détermine si le type d’objet en cours de validation correspond au type attendu.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-107">The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type.</span></span> <span data-ttu-id="dd3ef-108">L’objet en cours de validation est passé en tant que paramètre de la <xref:System.Configuration.IntegerValidator.Validate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dd3ef-108">The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd3ef-109">L’exemple de code suivant montre comment utiliser le <xref:System.Configuration.IntegerValidator> type.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-109">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator> type.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#1)]
 [!code-vb[System.Configuration.IntegerValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd3ef-110">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-110">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="dd3ef-111">Objet <see cref="T:System.Int32" /> qui spécifie la valeur minimale.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-111">An <see cref="T:System.Int32" /> object that specifies the minimum value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="dd3ef-112">Objet <see cref="T:System.Int32" /> qui spécifie la valeur maximale.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-112">An <see cref="T:System.Int32" /> object that specifies the maximum value.</span></span></param>
        <summary><span data-ttu-id="dd3ef-113">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-113">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd3ef-114">Cela <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructeur garantit que l’entier qui est vérifié respecte un minimale et une longueur maximale.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-114">This <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor ensures that the integer being verified adheres to both a minimum and a maximum length.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer, rangeIsExclusive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int * bool -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue, rangeIsExclusive)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="dd3ef-115">Objet <see cref="T:System.Int32" /> qui spécifie la valeur minimale.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-115">An <see cref="T:System.Int32" /> object that specifies the minimum value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="dd3ef-116">Objet <see cref="T:System.Int32" /> qui spécifie la valeur maximale.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-116">An <see cref="T:System.Int32" /> object that specifies the maximum value.</span></span></param>
        <param name="rangeIsExclusive"><span data-ttu-id="dd3ef-117"><see langword="true" /> pour spécifier que la plage de validations est exclusive.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-117"><see langword="true" /> to specify that the validation range is exclusive.</span></span> <span data-ttu-id="dd3ef-118">Incluse signifie que la valeur à valider doit être comprise dans la plage spécifiée ; exclusive signifie qu'elle doit être strictement inférieure (sous le minimum) ou strictement supérieure (au-dessus du maximum).</span><span class="sxs-lookup"><span data-stu-id="dd3ef-118">Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.</span></span></param>
        <summary><span data-ttu-id="dd3ef-119">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-119">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd3ef-120">Lors de la création d’une instance de la <xref:System.Configuration.IntegerValidator> de classe, cela <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructeur vérifie à la fois les valeurs minimale et maximale <xref:System.Int32> valeurs, ainsi que si la plage de validation est exclusive.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-120">When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive.</span></span> <span data-ttu-id="dd3ef-121">Lorsque le `rangeIsExclusive` paramètre est défini sur `true`, le <xref:System.Int32> valeur ne doit pas être comprise entre le `minValue` et `maxValue` les valeurs de paramètre.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-121">When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd3ef-122">L’exemple de code suivant montre comment utiliser le <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-122">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor.</span></span> <span data-ttu-id="dd3ef-123">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Configuration.IntegerValidator> classe.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-123">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#2)]
 [!code-vb[System.Configuration.IntegerValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive, int32 resolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer, rangeIsExclusive As Boolean, resolution As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue, bool rangeIsExclusive, int resolution);" />
      <MemberSignature Language="F#" Value="new System.Configuration.IntegerValidator : int * int * bool * int -&gt; System.Configuration.IntegerValidator" Usage="new System.Configuration.IntegerValidator (minValue, maxValue, rangeIsExclusive, resolution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
        <Parameter Name="resolution" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="dd3ef-124">Objet <see cref="T:System.Int32" /> qui spécifie la longueur minimale de la valeur entière.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-124">An <see cref="T:System.Int32" /> object that specifies the minimum length of the integer value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="dd3ef-125">Objet <see cref="T:System.Int32" /> qui spécifie la longueur maximale de la valeur entière.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-125">An <see cref="T:System.Int32" /> object that specifies the maximum length of the integer value.</span></span></param>
        <param name="rangeIsExclusive"><span data-ttu-id="dd3ef-126">Valeur <see cref="T:System.Boolean" /> qui spécifie si la plage de validation est exclusive.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-126">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</span></span></param>
        <param name="resolution"><span data-ttu-id="dd3ef-127">Objet <see cref="T:System.Int32" /> qui spécifie une valeur qui doit être respectée.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-127">An <see cref="T:System.Int32" /> object that specifies a value that must be matched.</span></span></param>
        <summary><span data-ttu-id="dd3ef-128">Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-128">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd3ef-129">Le <xref:System.Int32> valeur en cours de validation doit être égale à la `resolution` valeur pour passer la validation.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-129">The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dd3ef-130"><paramref name="resolution" /> est inférieur à <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-130"><paramref name="resolution" /> is less than <see langword="0" />.</span></span>  
  
<span data-ttu-id="dd3ef-131">ou</span><span class="sxs-lookup"><span data-stu-id="dd3ef-131">-or-</span></span> 
 <span data-ttu-id="dd3ef-132"><paramref name="minValue" /> est supérieur à <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-132"><paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="integerValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="dd3ef-133">Type de l'objet.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-133">The type of the object.</span></span></param>
        <summary><span data-ttu-id="dd3ef-134">Détermine si le type de l'objet peut être validé.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-134">Determines whether the type of the object can be validated.</span></span></summary>
        <returns><span data-ttu-id="dd3ef-135"><see langword="true" /> si le paramètre <paramref name="type" /> correspond à une valeur <see cref="T:System.Int32" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-135"><see langword="true" /> if the <paramref name="type" /> parameter matches an <see cref="T:System.Int32" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd3ef-136">L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Configuration.IntegerValidator.CanValidate%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-136">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.CanValidate%2A> method.</span></span> <span data-ttu-id="dd3ef-137">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Configuration.IntegerValidator> classe.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-137">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#3)]
 [!code-vb[System.Configuration.IntegerValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="integerValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="dd3ef-138">Valeur à valider.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-138">The value to be validated.</span></span></param>
        <summary><span data-ttu-id="dd3ef-139">Détermine si la valeur d’un objet est valide.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-139">Determines whether the value of an object is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd3ef-140">Un <xref:System.Configuration.IntegerValidator> objet contient les règles nécessaires pour valider un objet entier.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-140">An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object.</span></span> <span data-ttu-id="dd3ef-141">Les règles sont établies lorsqu’une instance de la <xref:System.Configuration.IntegerValidator> classe est créée.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-141">The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created.</span></span> <span data-ttu-id="dd3ef-142">L’objet entier à valider est passé en tant que paramètre de la <xref:System.Configuration.IntegerValidator.Validate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dd3ef-142">The integer object to validate is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd3ef-143">L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Configuration.IntegerValidator.Validate%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-143">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span> <span data-ttu-id="dd3ef-144">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Configuration.IntegerValidator> classe.</span><span class="sxs-lookup"><span data-stu-id="dd3ef-144">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#4)]
 [!code-vb[System.Configuration.IntegerValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
      </Docs>
    </Member>
  </Members>
</Type>