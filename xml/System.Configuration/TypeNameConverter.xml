<Type Name="TypeNameConverter" FullName="System.Configuration.TypeNameConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f2e71622fde1cea9589176ca097b2d316e5c5ded" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30378493" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeNameConverter : System.Configuration.ConfigurationConverterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeNameConverter extends System.Configuration.ConfigurationConverterBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.TypeNameConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeNameConverter&#xA;Inherits ConfigurationConverterBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeNameConverter sealed : System::Configuration::ConfigurationConverterBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationConverterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Effectue une conversion entre les valeurs de type et de chaîne. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce type, comme tous les autres types de convertisseur de configuration, convertit des chaînes dans le fichier de configuration vers et depuis les propriétés fortement typées associées.  
  
 En particulier, la <xref:System.Configuration.TypeNameConverter> classe convertit un <xref:System.String> valeur, assignée à un type de configuration, en un <xref:System.Type> valeur et vice versa. Le type référencé est la classe chargée de traiter la configuration, qu'il est associé.  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir un type associé à une section personnalisée. Pour l’implémentation de la section personnalisée, reportez-vous à l’exemple de code dans le <xref:System.Configuration.ConfigurationConverterBase> référence de classe.  
  
 [!code-csharp[System.Configuration.TypeNameConverter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.TypeNameConverter/CS/TypeNameConverter.cs#1)]
 [!code-vb[System.Configuration.TypeNameConverter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.TypeNameConverter/VB/TypeNameConverter.vb#1)]  
  
 L’exemple suivant est un extrait de configuration utilisé par l’exemple précédent.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
  
  <configSections>  
    <section name="CustomSection"   
      type="Samples.AspNet.CustomSection,   
      ConfigurationConverters,   
      Version=1.0.0.0, Culture=neutral,   
      PublicKeyToken=null"   
      allowDefinition="Everywhere"   
      allowExeDefinition="MachineToApplication"   
      restartOnExternalChanges="true" />  
  </configSections>  
  
  <CustomSection fileName="default.txt" maxIdleTime="90"   
    timeDelay="infinite" cdStr="str0, str1" permission="Read"  
    maxUsers="Infinite"/>  
  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.GenericEnumConverter" />
    <altmember cref="T:System.Configuration.InfiniteIntConverter" />
    <altmember cref="T:System.Configuration.InfiniteTimeSpanConverter" />
    <altmember cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" />
    <altmember cref="T:System.Configuration.TimeSpanSecondsConverter" />
    <altmember cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" />
    <altmember cref="T:System.Configuration.WhiteSpaceTrimStringConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeNameConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.TypeNameConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeNameConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TypeNameConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalement, vous utilisez les types de convertisseurs fournis par le système. La seule fois, vous devez utiliser le <xref:System.Configuration.TypeNameConverter.%23ctor%2A> constructeur est lorsque vous créez votre propre type de conversion.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (ctx As ITypeDescriptorContext, ci As CultureInfo, data As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
        <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
        <param name="data">Objet <see cref="T:System.String" /> à convertir.</param>
        <summary>Convertit un objet <see cref="T:System.String" /> en un objet <see cref="T:System.Type" />.</summary>
        <returns>
          <see cref="T:System.Type" /> qui représente le paramètre <paramref name="data" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le système utilise le <xref:System.Configuration.TypeNameConverter.ConvertFrom%2A> méthode lors de la lecture à partir d’un fichier de configuration pour convertir un <xref:System.String> valeur un <xref:System.Type> valeur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur <see cref="T:System.Type" /> ne peut pas être résolue.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
        <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
        <param name="value">Valeur vers laquelle effectuer la conversion.</param>
        <param name="type">Type vers lequel effectuer la conversion.</param>
        <summary>Convertit un objet <see cref="T:System.Type" /> en un objet <see cref="T:System.String" />.</summary>
        <returns>
          <see cref="T:System.String" /> qui représente le paramètre <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le système utilise le <xref:System.Configuration.TypeNameConverter.ConvertTo%2A> méthode lors de l’écriture dans un fichier de configuration pour convertir un <xref:System.Type> valeur un <xref:System.String> valeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>