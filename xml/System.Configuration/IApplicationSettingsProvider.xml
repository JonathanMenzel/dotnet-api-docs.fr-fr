<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5d5730d41b97a5c57f862d89c29c0934924653b" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56781174" /></Metadata><TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type IApplicationSettingsProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit des capacités étendues pour les fournisseurs de paramètres d'application basés sur les clients.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’architecture des paramètres d’application vous permet de fournir un mécanisme de stockage personnalisé pour les paramètres d’application en créant un fournisseur de paramètres personnalisés, qui est une classe dérivée de <xref:System.Configuration.SettingsProvider>. Une telle classe contient les fonctionnalités de base pour stocker et récupérer des propriétés. Toutefois, vous pouvez ajouter une fonctionnalité normalisée supplémentaire en implémentant la <xref:System.Configuration.IApplicationSettingsProvider> interface dans le fournisseur de paramètres personnalisés. Cette interface contient trois méthodes qui permettent principalement le fournisseur de paramètres plus intelligemment les modifications de version application handle. En règle générale, le fournisseur de paramètres stocke les paramètres d’application pour différentes versions d’une application séparément pour anticiper les circonstances suivantes :  
  
-   Exécution côte à côte de différentes versions d’une application.  
  
-   Conservation des paramètres de l’application lors de la mise à niveau une application.  
  
-   Réinitialiser les paramètres de l’application à leurs valeurs par défaut pour la version actuellement utilisée.  
  
 La classe <xref:System.Configuration.LocalFileSettingsProvider> implémente l'interface <xref:System.Configuration.IApplicationSettingsProvider>. Le même ensemble de méthodes contenues par <xref:System.Configuration.IApplicationSettingsProvider> se trouvent également dans le <xref:System.Configuration.ApplicationSettingsBase> (classe), l’activation de l’établissement d’un canal de communication prédéfini entre un wrapper de paramètres d’application et son fournisseur de paramètres.  
  
> [!NOTE]
>  Cette interface est facultative. Si un fournisseur n’implémente pas cette interface, l’infrastructure de paramètres échoue sans notification si elle tente d’accéder à toutes les méthodes définies par cette interface.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">Architecture des paramètres d'application</related>
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="iApplicationSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
        <param name="property"><see cref="T:System.Configuration.SettingsProperty" /> dont la valeur doit être retournée.</param>
        <summary>Retourne la valeur de la propriété de paramètres spécifiée pour la version antérieure de la même application.</summary>
        <returns><see cref="T:System.Configuration.SettingsPropertyValue" /> contenant la valeur du paramètre de propriété spécifié, tel que défini pour la dernière fois dans la version antérieure de l'application ; ou <see langword="null" /> si le paramètre est introuvable.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> méthode conjointement avec la <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> méthode pour migrer les paramètres d’application pendant ou après l’installation d’une nouvelle version d’une application.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Pour <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorisation.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11">Exécution côte à côte</related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit" Usage="iApplicationSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
        <summary>Restaure les valeurs par défaut des paramètres d'application associés à l'application spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> méthode réinitialise les valeurs stockées dans le groupe de paramètres d’application spécifié. En revanche, <xref:System.Configuration.DefaultSettingValueAttribute> fournit une valeur par défaut pour une propriété de paramètres durant l’initialisation des propriétés, si elle n’a aucune valeur stockée.  
  
 Le fournisseur de paramètres détermine les valeurs par défaut raisonnables pour le groupe de paramètres d’application spécifié. Par exemple, l’implémentation dans <xref:System.Configuration.LocalFileSettingsProvider> rétablit les paramètres de portée utilisateur valeurs partagées dans le `application.exe.config` fichier ; en revanche, elle laisse les paramètres de portée application inchangés.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Pour <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorisation.</permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="iApplicationSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
        <param name="properties"><see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
        <summary>Indique au fournisseur que l'application a été mise à niveau. Cela offre au fournisseur la possibilité de mettre à niveau ses paramètres stockés selon les besoins.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework permet les installation côte à côte et l’exécution de différentes versions de la même application. Le fournisseur de paramètres d’application stocke les paramètres d’application pour chaque version d’une application séparément pour garantir l’isolation. Toutefois, vous souhaiterez migrer les paramètres de la version précédente d’une application à l’objet actuel. Pour fournir cette fonctionnalité de migration, utilisez le <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> méthode, implémentée dans une classe dérivée de <xref:System.Configuration.SettingsProvider>.  
  
 Vous pouvez utiliser la <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> méthode conjointement avec la <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> méthode pour migrer les paramètres d’application pendant ou après l’installation d’une nouvelle version d’une application.  
  
 Cette méthode doit être supprimée pour chaque paramètre d’application qui a le <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> est appliqué, ou dans la classe wrapper de paramètres, dérivée de <xref:System.Configuration.ApplicationSettingsBase>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Pour <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorisation.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11">Exécution côte à côte</related>
      </Docs>
    </Member>
  </Members>
</Type>