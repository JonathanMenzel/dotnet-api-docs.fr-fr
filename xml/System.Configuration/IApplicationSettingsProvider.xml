<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e29c40f8cbdc9f6186d829367dc515ce43887ef" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379373" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4ff6e-101">Définit des capacités étendues pour les fournisseurs de paramètres d'application basés sur les clients.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ff6e-101">Defines extended capabilities for client-based application settings providers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ff6e-102">L’architecture des paramètres d’application vous permet de fournir un mécanisme de stockage personnalisé pour les paramètres d’application en créant un fournisseur de paramètres personnalisés, qui est une classe dérivée de <xref:System.Configuration.SettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-102">The application settings architecture enables you to provide a custom storage mechanism for application settings by creating a custom settings provider, which is a class derived from <xref:System.Configuration.SettingsProvider>.</span></span> <span data-ttu-id="4ff6e-103">Cette classe contient les fonctionnalités de base pour stocker et récupérer des propriétés.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-103">Such a class contains the basic functionality for storing and retrieving properties.</span></span> <span data-ttu-id="4ff6e-104">Toutefois, vous pouvez ajouter une fonctionnalité normalisée supplémentaire en implémentant la <xref:System.Configuration.IApplicationSettingsProvider> interface dans le fournisseur de paramètres personnalisés.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-104">However, you can add additional standardized functionality by implementing the <xref:System.Configuration.IApplicationSettingsProvider> interface in the custom settings provider.</span></span> <span data-ttu-id="4ff6e-105">Cette interface contient trois méthodes qui permettent principalement le fournisseur de paramètres plus intelligemment les modifications de version application handle.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-105">This interface contains three methods that primarily enable the settings provider to more intelligently handle application version changes.</span></span> <span data-ttu-id="4ff6e-106">En règle générale, le fournisseur de paramètres stocke les paramètres d’application pour différentes versions d’une application séparément pour anticiper les circonstances suivantes :</span><span class="sxs-lookup"><span data-stu-id="4ff6e-106">Typically, the settings provider will store application settings for different versions of an application separately to anticipate the following circumstances:</span></span>  
  
-   <span data-ttu-id="4ff6e-107">Exécution côte à côte de différentes versions d’une application.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-107">Side-by-side execution of different versions of an application.</span></span>  
  
-   <span data-ttu-id="4ff6e-108">Conservation des paramètres de l’application lors de la mise à niveau d’une application.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-108">Retaining application settings when upgrading an application.</span></span>  
  
-   <span data-ttu-id="4ff6e-109">La réinitialisation des paramètres de l’application à leurs valeurs par défaut pour la version actuellement utilisée.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-109">Resetting the application settings to their default values for the currently used version.</span></span>  
  
 <span data-ttu-id="4ff6e-110">La classe <xref:System.Configuration.LocalFileSettingsProvider> implémente l'interface <xref:System.Configuration.IApplicationSettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-110">The <xref:System.Configuration.LocalFileSettingsProvider> class implements the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="4ff6e-111">Le même jeu de méthodes contenu par <xref:System.Configuration.IApplicationSettingsProvider> se trouve également dans le <xref:System.Configuration.ApplicationSettingsBase> (classe), l’activation de l’établissement d’un canal de communication prédéfini entre un wrapper de paramètres d’application et son fournisseur de paramètres.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-111">The same set of methods contained by <xref:System.Configuration.IApplicationSettingsProvider> is also found in the <xref:System.Configuration.ApplicationSettingsBase> class, enabling the establishment of a predefined communication channel between an application settings wrapper and its settings provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ff6e-112">Cette interface est facultative.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-112">This interface is optional.</span></span> <span data-ttu-id="4ff6e-113">Si un fournisseur n’implémente pas cette interface, l’infrastructure de paramètres échoue sans notification si elle tente d’accéder à toutes les méthodes définies par cette interface.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-113">If a provider does not implement this interface, the settings infrastructure will fail without notification if it attempts to access any of the methods defined by this interface.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="4ff6e-114">
            <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-114">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="4ff6e-115">
            <see cref="T:System.Configuration.SettingsProperty" /> dont la valeur doit être retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-115">The <see cref="T:System.Configuration.SettingsProperty" /> whose value is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ff6e-116">Retourne la valeur de la propriété de paramètres spécifiée pour la version antérieure de la même application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-116">Returns the value of the specified settings property for the previous version of the same application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ff6e-117">
            <see cref="T:System.Configuration.SettingsPropertyValue" /> contenant la valeur du paramètre de propriété spécifié, tel que défini pour la dernière fois dans la version antérieure de l'application ; ou <see langword="null" /> si le paramètre est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-117">A <see cref="T:System.Configuration.SettingsPropertyValue" /> containing the value of the specified property setting as it was last set in the previous version of the application; or <see langword="null" /> if the setting cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ff6e-118">Vous pouvez utiliser la <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> méthode conjointement avec la <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> méthode pour migrer les paramètres d’application pendant ou après l’installation d’une nouvelle version d’une application.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-118">You can use the <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> method in conjunction with the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method to migrate application settings during or after the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">
          <span data-ttu-id="4ff6e-119">Pour <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-119">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span>
          </span>
        </permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="4ff6e-120">
            <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-120">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ff6e-121">Restaure les valeurs par défaut des paramètres d'application associés à l'application spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-121">Resets the application settings associated with the specified application to their default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ff6e-122">Le <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> méthode réinitialise les valeurs stockées dans le groupe de paramètres d’application spécifié.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-122">The <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> method reinitializes the stored values of the specified application settings group.</span></span> <span data-ttu-id="4ff6e-123">En revanche, <xref:System.Configuration.DefaultSettingValueAttribute> fournit une valeur par défaut pour une propriété de paramètres lors de l’initialisation de propriété, si elle n’a aucune valeur stockée.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-123">In contrast, <xref:System.Configuration.DefaultSettingValueAttribute> supplies a default value for a single settings property during property initialization, if it has no stored value.</span></span>  
  
 <span data-ttu-id="4ff6e-124">Le fournisseur de paramètres détermine les valeurs par défaut raisonnables pour le groupe de paramètres d’application spécifié.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-124">The settings provider determines what reasonable defaults are for the specified group of application settings.</span></span> <span data-ttu-id="4ff6e-125">Par exemple, l’implémentation du <xref:System.Configuration.LocalFileSettingsProvider> rétablit les paramètres de portée utilisateur valeurs partagés dans le `application.exe.config` fichier ; en revanche, elle laisse les paramètres de portée application inchangés.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-125">For example, the implementation in <xref:System.Configuration.LocalFileSettingsProvider> resets user-scoped settings to their shared values in the `application.exe.config` file; in contrast, it leaves the application-scoped settings unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">
          <span data-ttu-id="4ff6e-126">Pour <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-126">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span>
          </span>
        </permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="4ff6e-127">
            <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-127">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="4ff6e-128">
            <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-128">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ff6e-129">Indique au fournisseur que l'application a été mise à niveau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-129">Indicates to the provider that the application has been upgraded.</span>
          </span>
          <span data-ttu-id="4ff6e-130">Cela offre au fournisseur la possibilité de mettre à niveau ses paramètres stockés selon les besoins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-130">This offers the provider an opportunity to upgrade its stored settings as appropriate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ff6e-131">Le .NET Framework permet côte-à-côte installation et l’exécution de différentes versions de la même application.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-131">The .NET Framework enables side-by-side installation and execution of different versions of the same application.</span></span> <span data-ttu-id="4ff6e-132">Le fournisseur de paramètres d’application stocke les paramètres d’application pour chaque version d’une application séparément pour garantir une isolation.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-132">The application settings provider stores the application settings for each version of an application separately to ensure isolation.</span></span> <span data-ttu-id="4ff6e-133">Toutefois, il pouvez que vous souhaitez migrer les paramètres de la version précédente d’une application à l’objet actuel.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-133">However, you may want to migrate settings from the previous version of an application to the current one.</span></span> <span data-ttu-id="4ff6e-134">Pour fournir cette fonctionnalité de migration, utilisez le <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> méthode, implémentée dans une classe dérivée de <xref:System.Configuration.SettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-134">To provide this migration functionality, use the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method, implemented in a class derived from <xref:System.Configuration.SettingsProvider>.</span></span>  
  
 <span data-ttu-id="4ff6e-135">Vous pouvez utiliser la <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> méthode conjointement avec la <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> méthode pour migrer les paramètres d’application pendant ou après l’installation d’une nouvelle version d’une application.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-135">You can use the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method in conjunction with the <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> method to migrate application settings during or after the installation of a new version of an application.</span></span>  
  
 <span data-ttu-id="4ff6e-136">Cette méthode doit être supprimée pour chaque paramètre d’application le <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> est appliqué, ou dans la classe wrapper de paramètres, dérivée de <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="4ff6e-136">This method should be suppressed for every application setting that has the <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> is applied to it, or to the entire settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">
          <span data-ttu-id="4ff6e-137">Pour <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ff6e-137">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span>
          </span>
        </permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>