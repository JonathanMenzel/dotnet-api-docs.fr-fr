<Type Name="LocalFileSettingsProvider" FullName="System.Configuration.LocalFileSettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95b08a70d91ff302b6d915b34837c84869c24a00" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39908890" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalFileSettingsProvider extends System.Configuration.SettingsProvider implements class System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LocalFileSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LocalFileSettingsProvider&#xA;Inherits SettingsProvider&#xA;Implements IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalFileSettingsProvider : System::Configuration::SettingsProvider, System::Configuration::IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type LocalFileSettingsProvider = class&#xA;    inherit SettingsProvider&#xA;    interface IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.IApplicationSettingsProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fournit la persistance pour les classes de paramètres d'application.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fournisseurs de paramètres définissent un mécanisme pour stocker les données de configuration utilisées dans l’architecture de paramètres d’application. Le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] contient un fournisseur de paramètres par défaut unique, <xref:System.Configuration.LocalFileSettingsProvider>, qui stocke les données de configuration pour le système de fichiers local. Une propriété de paramètres d’application ou d’un groupe de propriétés sont associés à un fournisseur de paramètres spécifiques à l’aide de la <xref:System.Configuration.SettingsProviderAttribute>.  
  
 En règle générale, le programme client n’accède pas explicitement à cette classe ; au lieu de cela, l’architecture des paramètres d’application appelle automatiquement le fournisseur de paramètres approprié lorsque ses services sont requis. Par exemple, la plupart des membres de <xref:System.Configuration.ApplicationSettingsBase> déléguer leur travail au fournisseur de paramètres associé.  
  
 <xref:System.Configuration.LocalFileSettingsProvider> conserve les paramètres pour les fichiers de configuration qui ont l’extension `.config`. Le contenu des fichiers de configuration est structuré comme des documents XML. Selon que le paramètre de portée est au niveau de l’application ou utilisateur, les données de configuration sont stockées en tant qu’éléments dans un `<applicationSettings>` ou un `<userSettings>` section groupe, respectivement. Chacun de ces groupes de section est représenté par un correspondant <xref:System.Configuration.AppSettingsSection> ou <xref:System.Configuration.ClientSettingsSection>, respectivement. Chaque objet de section est détenu et administré par un gestionnaire de section de configuration, qui est un objet de type <xref:System.Configuration.IConfigurationSectionHandler>.  
  
 Paramètres de portée application et les paramètres de portée utilisateur par défaut sont stockés dans un fichier nommé `application.exe.config`, qui est créé dans le même répertoire que le fichier exécutable. Paramètres de configuration d’application sont en lecture seule. Les données utilisateur spécifiques sont stockées dans un fichier nommé `user.config`, stocké sous le répertoire de base utilisateur. Si les profils itinérants sont activés, les deux versions du fichier de configuration utilisateur peuvent exister. Dans ce cas, les entrées de la version itinérante sont prioritaires sur les entrées en double dans le fichier de configuration d’utilisateur local.  
  
 Pour plus d’informations sur les paramètres de l’application, consultez [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ClientSettingsSection" />
    <altmember cref="T:System.Configuration.IConfigurationSectionHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalFileSettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalFileSettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.LocalFileSettingsProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le constructeur par défaut affecte la <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> propriété <xref:System.String.Empty>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'application en cours d'exécution.</summary>
        <value>Chaîne qui contient le nom complet de l'application</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> et <xref:System.Configuration.Provider.ProviderBase.Name%2A> propriétés permettant de lever l’ambiguïté de la même façon, les propriétés de paramètre nommé dans différentes applications.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue&#xA;override this.GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="localFileSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" /> qui décrit où est utilisée la propriété de paramètres d'application.</param>
        <param name="property">
          <see cref="T:System.Configuration.SettingsProperty" /> dont la valeur doit être retournée.</param>
        <summary>Retourne la valeur de la propriété de paramètres nommée pour la version antérieure de la même application.</summary>
        <returns>
          <see cref="T:System.Configuration.SettingsPropertyValue" /> représentant le paramètre d'application s'il est trouvé ; sinon, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> méthode est souvent utilisée conjointement avec la <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> méthode lors de la migration des paramètres d’application pendant l’installation d’une nouvelle version d’une application. Pour plus d'informations, voir la méthode <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertyValues (context As SettingsContext, properties As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="override this.GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="localFileSettingsProvider.GetPropertyValues (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
        <param name="properties">
          <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
        <summary>Retourne la collection de valeurs de propriétés de définition pour l'instance d'application et le groupe de propriétés de paramètres spécifiés.</summary>
        <returns>
          <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> contenant les valeurs pour le groupe de propriétés de paramètres spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> méthode gère également le type de paramètres d’application spécial <xref:System.Configuration.SpecialSetting.ConnectionString>. Chaînes de connexion sont stockées dans une section spéciale du fichier de configuration délimitée par l’élément `<connectionstrings>`.  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider> n’utilise pas de chiffrement pour conserver tous les paramètres. Par conséquent, ne stockez pas les mots de passe en texte brut ou d’autres informations sensibles à l’aide de ce fournisseur sans prendre de précautions supplémentaires, telles que le chiffrement séparément les informations dans le fichier de configuration. Pour plus d’informations, consultez [chiffrement Configuration des informations à l’aide de la Configuration protégée](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
        <altmember cref="P:System.Configuration.SettingsPropertyValue.IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, values As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="localFileSettingsProvider.Initialize (name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nom convivial du fournisseur.</param>
        <param name="values">Collection des paires nom/valeur qui représentent les attributs spécifiques au fournisseur spécifiés dans la configuration pour ce fournisseur.</param>
        <summary>Initialise le fournisseur.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit&#xA;override this.Reset : System.Configuration.SettingsContext -&gt; unit" Usage="localFileSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
        <summary>Restaure les valeurs par défaut de toutes les propriétés de paramètres d'application associées à l'application spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> méthode restaure les valeurs stockées dans le groupe de paramètres d’application spécifié. L’action de <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> dépend de l’étendue de la propriété de paramètres d’application :  
  
-   Paramètres de portée application ne sont pas affectés.  
  
-   Paramètres de portée utilisateur sont réinitialisés aux valeurs par défaut qui sont stockés sous forme d’entrées en lecture seule dans le fichier de configuration d’application, `application.exe.config`. Si les profils itinérants sont utilisés, les valeurs de paramètres d’application dans le profil itinérant sont prioritaires sur les doublons trouvés dans le profil local.  
  
 Notez que si les profils itinérants sont utilisés, il peut y avoir deux `user.config` des fichiers, un pour les paramètres locaux et un pour le profil itinérant.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.</exception>
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="T:System.Configuration.SettingsManageability" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetPropertyValues (context As SettingsContext, values As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="localFileSettingsProvider.SetPropertyValues (context, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="values" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
        <param name="values">
          <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> représentant le groupe de paramètres de propriétés à définir.</param>
        <summary>Définit les valeurs du groupe de paramètres de propriétés spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une classe wrapper de paramètres, dérivée de <xref:System.Configuration.ApplicationSettingsBase>, contient le <xref:System.Configuration.ApplicationSettingsBase.Save%2A> (méthode), qui est appelée pour rendre persistantes les valeurs de toutes ses propriétés de paramètres. Cette méthode énumère tous les paramètres de fournisseurs associés à ses propriétés de paramètres et appelle le <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> méthode pour chaque <xref:System.Configuration.SettingsProvider> pour effectuer l’opération de sérialisation.  
  
 <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> Sérialise individuellement chaque propriété de paramètres d’application de portée utilisateur à son paramètre dans le texte approprié d’application correspondant `user.config` fichier de configuration.  
  
 Par défaut, le <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> méthode utilise la séquence logique suivante pour déterminer la méthode de sérialisation, selon le type de la propriété de paramètres :  
  
1.  Si le type est associé à un <xref:System.ComponentModel.TypeConverter> avec un <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> implémentation de méthode, cette conversion est utilisée.  
  
2.  Sérialisation XML est utilisée.  
  
 Toutefois, vous pouvez spécifier un mécanisme de sérialisation par défaut à l’aide de la <xref:System.Configuration.SettingsSerializeAsAttribute>. <xref:System.Configuration.LocalFileSettingsProvider> ne prend pas en charge la sérialisation binaire dans [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 Si une propriété de paramètres de portée utilisateur est rétablie à sa valeur par défaut explicitement, le fournisseur de paramètres de fichier local supprime l’entrée du paramètre associé à partir du fichier de configuration utilisateur. Le prochain accès en lecture pour cette propriété utilisera simplement la valeur par défaut.  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider> n’utilise pas de chiffrement pour conserver tous les paramètres. Par conséquent, ne stockez pas les mots de passe en texte brut ou d’autres informations sensibles à l’aide de ce fournisseur sans prendre de précautions supplémentaires, telles que le chiffrement séparément les informations dans le fichier de configuration. Pour plus d’informations, consultez [chiffrement Configuration des informations à l’aide de la Configuration protégée](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.  
  
- ou - 
Une défaillance générale s'est produite lors de l'enregistrement des paramètres dans le fichier de configuration.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Configuration.SettingsSerializeAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit&#xA;override this.Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="localFileSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
        <param name="properties">
          <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
        <summary>Tentatives de migrer des paramètres de portée utilisateur antérieurs à partir d'une version antérieure de la même application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider> migre les paramètres locaux et itinérants dans des opérations distinctes.  
  
 Le <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> méthode est supprimée pour chaque paramètre d’application qui a le <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> appliqué, ou dans la classe wrapper de paramètres, dérivée de <xref:System.Configuration.ApplicationSettingsBase>.  
  
 Ainsi, que cette méthode est appelée varie selon le type d’application est en cours de mise à niveau :  
  
-   Chaque version d’un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application est stockée dans son propre répertoire d’installation isolé. Après une nouvelle version d’un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application est installée, et lors de la première exécution de la nouvelle version, la logique interne appelle automatiquement <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> pour migrer tous les paramètres d’application communs vers la nouvelle version. Pour plus d'informations, consultez [ClickOnce et paramètres d’application](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb).  
  
-   Applications standard Windows Forms et console doivent appeler manuellement <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, car il n’existe pas de moyen général et automatique de déterminer quand une telle application est tout d’abord exécutée. Les deux méthodes courantes de procéder : à partir du programme d’installation ou à l’aide de l’application elle-même, à l’aide d’une propriété persistante, souvent nommée `IsFirstRun`.  
  
 Notez que pour la version la plus récente migrer les paramètres d’application, il doit être en mesure de charger et lire l’ancienne version de paramètres d’application. Par conséquent, il doit contenir des classes wrapper compatibles avec les versions anciennes et nouvelles de l’application.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.  
  
- ou - 
Impossible d'accéder à la version antérieure du fichier de configuration.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>