<Type Name="StringValidator" FullName="System.Configuration.StringValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6e218f5b5c8434702d19fd67375dfb168e04f2d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37685713" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.StringValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class StringValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type StringValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7ce34-101">Provides validation of a string.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7ce34-101">Provides validation of a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce34-102">Le <xref:System.Configuration.StringValidator> classe est utilisée pour vous assurer qu’une chaîne à des critères spécifiques.</span><span class="sxs-lookup"><span data-stu-id="7ce34-102">The <xref:System.Configuration.StringValidator> class is used to ensure that a string meets specific criteria.</span></span> <span data-ttu-id="7ce34-103">Le critère de validation est établi lorsqu’une instance de la <xref:System.Configuration.StringValidator> classe est créée.</span><span class="sxs-lookup"><span data-stu-id="7ce34-103">The criteria for validation is established when an instance of the <xref:System.Configuration.StringValidator> class is created.</span></span> <span data-ttu-id="7ce34-104">Il existe trois surcharges de constructeur pour la <xref:System.Configuration.StringValidator> classe.</span><span class="sxs-lookup"><span data-stu-id="7ce34-104">There are three constructor overloads for the <xref:System.Configuration.StringValidator> class.</span></span> <span data-ttu-id="7ce34-105">Le <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=nameWithType> constructeur avec un paramètre vérifie la longueur minimale acceptable de la chaîne en cours de validation.</span><span class="sxs-lookup"><span data-stu-id="7ce34-105">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=nameWithType> constructor with one parameter verifies the minimum acceptable length of the string being validated.</span></span> <span data-ttu-id="7ce34-106">Le <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructeur avec deux paramètres garantit que la chaîne vérifiée respecte un minimale et une longueur maximale.</span><span class="sxs-lookup"><span data-stu-id="7ce34-106">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with two parameters ensures that the string being verified adheres to both a minimum and a maximum length.</span></span> <span data-ttu-id="7ce34-107">Le <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> constructeur avec trois paramètres vérifie la valeur minimale et les valeurs de longueur maximale de la chaîne en cours de vérification, ainsi que si des caractères spécifiques sont présents dans la chaîne en cours de validation.</span><span class="sxs-lookup"><span data-stu-id="7ce34-107">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> constructor with three parameters checks both the minimum and the maximum length values of the string being verified, as well as whether specific characters are present in the string being validated.</span></span>  
  
 <span data-ttu-id="7ce34-108">Le <xref:System.Configuration.StringValidator.CanValidate%2A> méthode détermine si le type d’objet en cours de validation correspond au type attendu.</span><span class="sxs-lookup"><span data-stu-id="7ce34-108">The <xref:System.Configuration.StringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type.</span></span> <span data-ttu-id="7ce34-109">L’objet en cours de validation est passé en tant que paramètre de la <xref:System.Configuration.StringValidator.Validate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7ce34-109">The object being validated is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce34-110">L’exemple suivant montre comment utiliser le <xref:System.Configuration.StringValidator> type.</span><span class="sxs-lookup"><span data-stu-id="7ce34-110">The following example demonstrates how to use the <xref:System.Configuration.StringValidator> type.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#1)]
 [!code-vb[System.Configuration.StringValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.StringValidatorAttribute" />
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7ce34-111">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-111">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator minLength" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength">
          <span data-ttu-id="7ce34-112">An integer that specifies the minimum length of the string value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-112">An integer that specifies the minimum length of the string value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ce34-113">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on a supplied parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-113">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on a supplied parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce34-114">Le <xref:System.Configuration.StringValidator.%23ctor%2A> constructeur vérifie la longueur minimale acceptable de la chaîne en cours de validation.</span><span class="sxs-lookup"><span data-stu-id="7ce34-114">The <xref:System.Configuration.StringValidator.%23ctor%2A> constructor verifies the minimum acceptable length of the string being validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int * int -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator (minLength, maxLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength">
          <span data-ttu-id="7ce34-115">An integer that specifies the minimum length of the string value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-115">An integer that specifies the minimum length of the string value.</span>
          </span>
        </param>
        <param name="maxLength">
          <span data-ttu-id="7ce34-116">An integer that specifies the maximum length of the string value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-116">An integer that specifies the maximum length of the string value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ce34-117">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-117">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce34-118">Cela <xref:System.Configuration.StringValidator.%23ctor%2A> constructeur garantit que la chaîne vérifiée respecte un minimale et une longueur maximale.</span><span class="sxs-lookup"><span data-stu-id="7ce34-118">This <xref:System.Configuration.StringValidator.%23ctor%2A> constructor ensures that the string being verified adheres to both a minimum and a maximum length.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength, string invalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength, string invalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer, invalidCharacters As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength, System::String ^ invalidCharacters);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int * int * string -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator (minLength, maxLength, invalidCharacters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
        <Parameter Name="invalidCharacters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="minLength">
          <span data-ttu-id="7ce34-119">An integer that specifies the minimum length of the string value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-119">An integer that specifies the minimum length of the string value.</span>
          </span>
        </param>
        <param name="maxLength">
          <span data-ttu-id="7ce34-120">An integer that specifies the maximum length of the string value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-120">An integer that specifies the maximum length of the string value.</span>
          </span>
        </param>
        <param name="invalidCharacters">
          <span data-ttu-id="7ce34-121">A string that represents invalid characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-121">A string that represents invalid characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ce34-122">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-122">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce34-123">Cela <xref:System.Configuration.StringValidator.%23ctor%2A> constructeur garantit que la chaîne en cours de validation respecte un minimale et une longueur maximale et garantit également que les caractères spécifiques sont exclus dans la chaîne.</span><span class="sxs-lookup"><span data-stu-id="7ce34-123">This <xref:System.Configuration.StringValidator.%23ctor%2A> constructor ensures that the string being validated adheres to both a minimum and a maximum length, and also ensures that specific characters are excluded in the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce34-124">L’exemple suivant montre comment utiliser cette <xref:System.Configuration.StringValidator.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="7ce34-124">The following example demonstrates how to use this <xref:System.Configuration.StringValidator.%23ctor%2A> constructor.</span></span> <span data-ttu-id="7ce34-125">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Configuration.StringValidator> classe.</span><span class="sxs-lookup"><span data-stu-id="7ce34-125">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#2)]
 [!code-vb[System.Configuration.StringValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="stringValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="7ce34-126">The object type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-126">The object type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ce34-127">Determines whether an object can be validated based on type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-127">Determines whether an object can be validated based on type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ce34-128">
            <see langword="true" /> if the <paramref name="type" /> parameter matches a string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-128">
              <see langword="true" /> if the <paramref name="type" /> parameter matches a string; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ce34-129">L'exemple suivant décrit comment utiliser la méthode <xref:System.Configuration.StringValidator.CanValidate%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce34-129">The following example demonstrates how to use the <xref:System.Configuration.StringValidator.CanValidate%2A> method.</span></span> <span data-ttu-id="7ce34-130">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Configuration.StringValidator> classe.</span><span class="sxs-lookup"><span data-stu-id="7ce34-130">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#3)]
 [!code-vb[System.Configuration.StringValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="stringValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7ce34-131">The object value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-131">The object value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ce34-132">Determines whether the value of an object is valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-132">Determines whether the value of an object is valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce34-133">Le <xref:System.Configuration.StringValidator> classe contient les critères nécessaires pour valider un objet chaîne.</span><span class="sxs-lookup"><span data-stu-id="7ce34-133">The <xref:System.Configuration.StringValidator> class contains the criteria necessary to validate a string object.</span></span> <span data-ttu-id="7ce34-134">Les critères sont établies lorsqu’une instance de la <xref:System.Configuration.StringValidator> classe est créée.</span><span class="sxs-lookup"><span data-stu-id="7ce34-134">The criteria are established when an instance of the <xref:System.Configuration.StringValidator> class is created.</span></span> <span data-ttu-id="7ce34-135">L’objet à valider est passé en tant que paramètre de la <xref:System.Configuration.StringValidator.Validate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7ce34-135">The object to validate is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce34-136">L'exemple suivant décrit comment utiliser la méthode <xref:System.Configuration.StringValidator.Validate%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce34-136">The following example demonstrates how to use the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span> <span data-ttu-id="7ce34-137">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Configuration.StringValidator> classe.</span><span class="sxs-lookup"><span data-stu-id="7ce34-137">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#4)]
 [!code-vb[System.Configuration.StringValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ce34-138">
            <paramref name="value" /> is less than <paramref name="minValue" /> or greater than <paramref name="maxValue" /> as defined in the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-138">
              <paramref name="value" /> is less than <paramref name="minValue" /> or greater than <paramref name="maxValue" /> as defined in the constructor.</span>
          </span>
          <span data-ttu-id="7ce34-139">\- or -  <paramref name="value" /> contains invalid characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ce34-139">\- or -  <paramref name="value" /> contains invalid characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>