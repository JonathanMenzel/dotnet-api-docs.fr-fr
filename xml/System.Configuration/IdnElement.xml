<Type Name="IdnElement" FullName="System.Configuration.IdnElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f329cfd24dcdeb0004a431219a970a97d70fbeb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30378093" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IdnElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IdnElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IdnElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IdnElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdnElement sealed : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit le paramètre de configuration pour le traitement des noms de domaines internationaux (IDN, International Domain Name) dans la classe <see cref="T:System.Uri" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Existants <xref:System.Uri?displayProperty=nameWithType> classe a été étendue pour assurer la prise en charge pour International IRI (Resource Identifiers) selon la norme RFC 3987. Les utilisateurs actuels ne verront aucun changement dans le comportement de .NET Framework 2.0, sauf s’ils activent spécifiquement les IRI. Cela garantit la compatibilité des applications avec les versions antérieures de .NET Framework.  
  
 Le paramètre de configuration pour le <xref:System.Configuration.IdnElement> est contrôlé indirectement par le <xref:System.Configuration.IriParsingElement> paramètre de configuration qui contrôle le traitement des IRI dans la <xref:System.Uri?displayProperty=nameWithType> classe. Le traitement des IRI doit être activé pour permettre le traitement des IDN. Si le traitement des IRI est désactivé, le traitement des IDN est effectué selon le paramètre par défaut (le comportement de .NET Framework 2.0 est utilisé pour la compatibilité et les noms IDN ne sont pas utilisés).  
  
 L’attribut de nom de domaine internationaux (IDN) contrôle uniquement le traitement des IDN. Tous les autres traitements des IRI (normalisation des caractères, par exemple) est effectuée par défaut.  
  
 Le paramètre de configuration pour le <xref:System.Configuration.IdnElement> sera lue une fois lorsque la première <xref:System.Uri?displayProperty=nameWithType> construction de la classe. Les changements apportés ultérieurement aux paramètres de configuration sont ignorés.  
  
 Pour plus d’informations sur la prise en charge IRI, consultez la section Notes pour le <xref:System.Uri?displayProperty=nameWithType> classe.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IriParsingElement" />
    <altmember cref="T:System.Configuration.UriSection" />
    <altmember cref="T:System.Uri" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IdnElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdnElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IdnElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur crée un <xref:System.Configuration.IdnElement> instance  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public UriIdnScope Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.UriIdnScope Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IdnElement.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As UriIdnScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property UriIdnScope Enabled { UriIdnScope get(); void set(UriIdnScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsKey | System.Configuration.ConfigurationPropertyOptions.IsRequired)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UriIdnScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du paramètre de configuration <see cref="T:System.Configuration.IdnElement" />.</summary>
        <value>
          <see cref="T:System.UriIdnScope" /> qui contient le paramètre de configuration actuel pour le traitement des IDN.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’attribut de nom de domaine International (IDN) contrôle uniquement le traitement des IDN. Tous les autres identificateurs IRI (International Resource) (normalisation des caractères, par exemple) sont effectuées par défaut.  
  
 Le paramètre de configuration pour le <xref:System.Configuration.IdnElement> est contrôlé indirectement par le <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> paramètre de configuration qui contrôle le traitement des IRI dans la <xref:System.Uri?displayProperty=nameWithType> classe. Le traitement des IRI doit être activé pour permettre le traitement des IDN. Si le traitement des IRI est désactivé, le traitement des IDN est effectué selon le paramètre par défaut (le comportement de .NET Framework 2.0 est utilisé pour la compatibilité et les noms IDN ne sont pas utilisés).  
  
 Le paramètre de configuration pour le <xref:System.Configuration.IdnElement> sera lue une fois lorsque la première <xref:System.Uri?displayProperty=nameWithType> construction de la classe. Les changements apportés ultérieurement aux paramètres de configuration sont ignorés.  
  
 Pour plus d’informations sur la prise en charge IRI, consultez la section Notes pour le <xref:System.Uri?displayProperty=nameWithType> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Configuration.UriSection" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IdnElement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IdnElement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IdnElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>