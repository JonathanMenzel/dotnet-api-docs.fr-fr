<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4eb1d8fdcf02728fda000ba6f9ada31186fa2664" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51908349" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SettingsProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Agit comme classe de base pour la dérivation de fournisseurs de paramètres personnalisés dans l'architecture de paramètres d'application.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un fournisseur de paramètres définit le mécanisme de stockage des données de configuration utilisées dans l’architecture de paramètres d’application. Le .NET Framework contient un fournisseur de paramètres par défaut unique, <xref:System.Configuration.LocalFileSettingsProvider>, qui stocke les données de configuration pour le système de fichiers local. Toutefois, vous pouvez créer des autres mécanismes de stockage en dérivant de la classe abstraite <xref:System.Configuration.SettingsProvider> classe. Le fournisseur qui utilise une classe wrapper est déterminé en décorant la classe wrapper avec le <xref:System.Configuration.SettingsProviderAttribute>. Si cet attribut n’est pas fourni, la valeur par défaut, <xref:System.Configuration.LocalFileSettingsProvider>, est utilisé.  
  
 Lorsque vous créez un fournisseur de paramètres personnalisés, au minimum, vous devez fournir des implémentations pour les trois méthodes de cette classe : <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> et <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.  
  
 Pour les applications clientes, vous pouvez ajouter une fonctionnalité normalisée supplémentaire à un fournisseur personnalisé en implémentant également le <xref:System.Configuration.IApplicationSettingsProvider> interface. Cette interface reflète des méthodes présentes dans le <xref:System.Configuration.ApplicationSettingsBase> (classe), qui autorise principalement la prise en charge le contrôle de version.  
  
 En règle générale, vous devez concevoir des fournisseurs de paramètres pour être instancié unique afin d’éviter les conflits de ressources de stockage. Fournisseurs doivent également être thread-safe, car elles peuvent être appelées simultanément à partir de plusieurs instances de wrapper dans un seul domaine d’application ou de plusieurs applications dans des domaines différents.  
  
 Au minimum, un fournisseur de paramètres doit reconnaître trois attributs :<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, et <xref:System.Configuration.DefaultSettingValueAttribute>. Pour obtenir la liste complète des attributs qui peuvent être appliqués aux paramètres d’application, consultez [attributs des paramètres d’Application](~/docs/framework/winforms/advanced/application-settings-attributes.md). Un fournisseur de paramètres personnalisés doit résoudre les attributs appliqués aux propriétés de paramètres de la manière suivante :  
  
1.  Si le fournisseur peut satisfaire la demande impliquée par l’attribut, évidemment, il doit le faire.  
  
2.  Si le fournisseur ne peut pas répondre à la demande, il doit l’ignorer en mode silencieux.  
  
3.  Si deux ou plusieurs propriétés sont en conflit ; par exemple, une propriété est décorée avec <xref:System.Configuration.ApplicationScopedSettingAttribute> et <xref:System.Configuration.UserScopedSettingAttribute>; le fournisseur doit lever une <xref:System.Configuration.ConfigurationException>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">Architecture des paramètres d'application</related>
    <related type="Article" href="https://msdn.microsoft.com/library/53caa66c-a9fb-43a5-953c-ad092590098d">Attributs des paramètres d'application</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une instance de la classe <see cref="T:System.Configuration.SettingsProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il s’agit de ce constructeur protégé par défaut pour cette classe abstraite. Les fournisseurs de paramètres personnalisés dérivés n’êtes pas obligés de fournir un constructeur explicite, car le <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> méthode exécute en général toute l’initialisation.  
  
 Le code client en général, n’instanciez pas directement un fournisseur de paramètres ; au lieu de cela, vous utilisez la procédure suivante pour rechercher un fournisseur de paramètres pour une propriété de paramètres spécifique :  
  
1.  Appeler le <xref:System.ComponentModel.Component.GetService%2A> méthode sur actuel <xref:System.ComponentModel.Component> ou <xref:System.ComponentModel.ISite> pour retourner une référence à l’actuel <xref:System.Configuration.ISettingsProviderService>.  
  
2.  Appelez le <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> méthode de la <xref:System.Configuration.ISettingsProviderService> récupérées dans la première étape pour retourner le fournisseur de paramètres.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.SettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'application en cours d'exécution.</summary>
        <value>Un <see cref="T:System.String" /> qui contient le nom abrégé de l’application, qui ne contient pas un chemin d’accès complet ou une extension, par exemple, <c>SimpleAppSettings</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SettingsProvider.ApplicationName%2A> et <xref:System.Configuration.Provider.ProviderBase.Name%2A> propriétés permettant de lever l’ambiguïté de la même façon, les propriétés de paramètre nommé dans différentes applications.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="settingsProvider.GetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
        <param name="collection">
          <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
        <summary>Retourne la collection de valeurs de propriétés de paramètres pour l'instance d'application et le groupe de propriétés de paramètres spécifiés.</summary>
        <returns>
          <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> contenant les valeurs pour le groupe de propriétés de paramètres spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> méthode doit être implémentée pour gérer des paramètres spéciaux, ceux marqués avec <xref:System.Configuration.SpecialSettingAttribute>, ainsi que pour rapprocher les paramètres d’application et utilisateur.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="settingsProvider.SetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
        <param name="collection">
          <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> représentant le groupe de paramètres de propriétés à définir.</param>
        <summary>Définit les valeurs du groupe de paramètres de propriétés spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> contient le <xref:System.Configuration.ApplicationSettingsBase.Save%2A> (méthode), qui est appelée pour rendre persistantes les valeurs de toutes ses propriétés de paramètres. Cette méthode énumère tous les paramètres de fournisseurs associés à ses propriétés de paramètres et appelle le <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> méthode pour chaque <xref:System.Configuration.SettingsProvider> pour effectuer l’opération de sérialisation.  
  
 Le <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> méthode doit être implémentée avec la sécurité à l’esprit :  
  
-   Seul le code totalement approuvé doit être autorisé à mettre à jour les paramètres de l’application. Code partiellement fiable doit être autorisé à mettre à jour uniquement les paramètres d’application utilisateur. Code non fiable n’est généralement pas autorisé à mettre à jour les paramètres de l’application.  
  
-   Quotas d’utilisation doivent être considéré comme protection contre les attaques sur les ressources par les applications partiellement fiables.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>