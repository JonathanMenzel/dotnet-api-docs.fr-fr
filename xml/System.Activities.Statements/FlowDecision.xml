<Type Name="FlowDecision" FullName="System.Activities.Statements.FlowDecision">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c92953d27f03dc5615c7d0b3e5e62c50a2b09a3b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30358053" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FlowDecision : System.Activities.Statements.FlowNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FlowDecision extends System.Activities.Statements.FlowNode" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.FlowDecision" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FlowDecision&#xA;Inherits FlowNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlowDecision sealed : System::Activities::Statements::FlowNode" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Statements.FlowNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eca4d-101">
        <see cref="T:System.Activities.Statements.FlowNode" /> spécialisé qui permet de modéliser un nœud conditionnel avec deux résultats.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eca4d-101">A specialized <see cref="T:System.Activities.Statements.FlowNode" /> that provides the ability to model a conditional node with two outcomes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca4d-102"><xref:System.Activities.Statements.FlowDecision> utilise une condition et définit les actions à entreprendre si la condition est `true` ou `false`.</span><span class="sxs-lookup"><span data-stu-id="eca4d-102"><xref:System.Activities.Statements.FlowDecision> uses a condition and defines actions to take if the condition is `true` or `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eca4d-103">L'exemple de code suivant montre comment créer un nœud <xref:System.Activities.Statements.FlowDecision>.</span><span class="sxs-lookup"><span data-stu-id="eca4d-103">The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="eca4d-104">Cet exemple est issu le [gestion des erreurs dans un TryCatch à l’aide d’activité organigramme](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) exemple.</span><span class="sxs-lookup"><span data-stu-id="eca4d-104">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eca4d-105">Crée une instance de la classe <see cref="T:System.Activities.Statements.FlowDecision" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-105">Creates a new instance of the <see cref="T:System.Activities.Statements.FlowDecision" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eca4d-106">L'exemple de code suivant montre comment créer un nœud <xref:System.Activities.Statements.FlowDecision>.</span><span class="sxs-lookup"><span data-stu-id="eca4d-106">The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="eca4d-107">Cet exemple est issu le [gestion des erreurs dans un TryCatch à l’aide d’activité organigramme](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) exemple.</span><span class="sxs-lookup"><span data-stu-id="eca4d-107">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDecision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.FlowDecision.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlowDecision();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eca4d-108">Crée une instance de la classe <see cref="T:System.Activities.Statements.FlowDecision" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-108">Creates a new instance of the <see cref="T:System.Activities.Statements.FlowDecision" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eca4d-109">L'exemple de code suivant montre comment créer un nœud <xref:System.Activities.Statements.FlowDecision>.</span><span class="sxs-lookup"><span data-stu-id="eca4d-109">The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="eca4d-110">Cet exemple est issu le [gestion des erreurs dans un TryCatch à l’aide d’activité organigramme](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) exemple.</span><span class="sxs-lookup"><span data-stu-id="eca4d-110">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDecision (System.Activities.Activity&lt;bool&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity`1&lt;bool&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (condition As Activity(Of Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlowDecision(System::Activities::Activity&lt;bool&gt; ^ condition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.Activities.Activity&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="eca4d-111">Condition testée par le <see cref="T:System.Activities.Statements.FlowDecision" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-111">The condition the <see cref="T:System.Activities.Statements.FlowDecision" /> is testing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eca4d-112">Crée une instance de la classe <see cref="T:System.Activities.Statements.FlowDecision" /> avec la condition spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-112">Creates a new instance of the <see cref="T:System.Activities.Statements.FlowDecision" /> class with the specified condition.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eca4d-113">L'exemple de code suivant montre comment créer un nœud <xref:System.Activities.Statements.FlowDecision>.</span><span class="sxs-lookup"><span data-stu-id="eca4d-113">The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="eca4d-114">Cet exemple est issu le [gestion des erreurs dans un TryCatch à l’aide d’activité organigramme](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) exemple.</span><span class="sxs-lookup"><span data-stu-id="eca4d-114">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDecision (System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext,bool&gt;&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.Activities.ActivityContext, bool&gt;&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (condition As Expression(Of Func(Of ActivityContext, Boolean)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlowDecision(System::Linq::Expressions::Expression&lt;Func&lt;System::Activities::ActivityContext ^, bool&gt; ^&gt; ^ condition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Activities.ActivityContext,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="eca4d-115">Condition testée par le <see cref="T:System.Activities.Statements.FlowDecision" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-115">The condition the <see cref="T:System.Activities.Statements.FlowDecision" /> is testing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eca4d-116">Crée une instance de la classe <see cref="T:System.Activities.Statements.FlowDecision" /> avec la condition spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-116">Creates a new instance of the <see cref="T:System.Activities.Statements.FlowDecision" /> class with the specified condition.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eca4d-117">L'exemple de code suivant montre comment créer un nœud <xref:System.Activities.Statements.FlowDecision>.</span><span class="sxs-lookup"><span data-stu-id="eca4d-117">The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="eca4d-118">Cet exemple est issu le [gestion des erreurs dans un TryCatch à l’aide d’activité organigramme](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) exemple.</span><span class="sxs-lookup"><span data-stu-id="eca4d-118">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.Activities.Activity&lt;bool&gt; Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity`1&lt;bool&gt; Condition" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Property Condition As Activity(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity&lt;bool&gt; ^ Condition { System::Activities::Activity&lt;bool&gt; ^ get(); void set(System::Activities::Activity&lt;bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca4d-119">Spécifie la condition que le <see cref="T:System.Activities.Statements.FlowDecision" /> teste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-119">Specifies the condition the <see cref="T:System.Activities.Statements.FlowDecision" /> is testing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca4d-120">Expression de valeur qui représente la condition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-120">A value expression that represents the condition.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca4d-121">Si la condition a la valeur `true`, le <xref:System.Activities.Statements.FlowNode> dans le <xref:System.Activities.Statements.FlowDecision.True%2A> propriété est exécutée.</span><span class="sxs-lookup"><span data-stu-id="eca4d-121">If the condition evaluates to `true`, the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.True%2A> property is executed.</span></span> <span data-ttu-id="eca4d-122">Sinon, le <xref:System.Activities.Statements.FlowNode> de la propriété <xref:System.Activities.Statements.FlowDecision.False%2A> est exécuté.</span><span class="sxs-lookup"><span data-stu-id="eca4d-122">Otherwise the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.False%2A> property is executed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eca4d-123">L'exemple de code suivant montre comment utiliser la propriété Condition d'un nœud <xref:System.Activities.Statements.FlowDecision>.</span><span class="sxs-lookup"><span data-stu-id="eca4d-123">The following code sample demonstrates using the Condition property of a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="eca4d-124">Cet exemple est issu le [gestion des erreurs dans un TryCatch à l’aide d’activité organigramme](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) exemple.</span><span class="sxs-lookup"><span data-stu-id="eca4d-124">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("Decision")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca4d-125">Nom de cette décision de flux à afficher dans le concepteur d'activités.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-125">The name of this flow decision to be displayed in the activity designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca4d-126">Nom de la décision de flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-126">The name of the flow decision.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public System.Activities.Statements.FlowNode False { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Statements.FlowNode False" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.False" />
      <MemberSignature Language="VB.NET" Value="Public Property False As FlowNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Statements::FlowNode ^ False { System::Activities::Statements::FlowNode ^ get(); void set(System::Activities::Statements::FlowNode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("True")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Statements.FlowNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca4d-127">Obtient ou définit le <see cref="T:System.Activities.Statements.FlowNode" /> qui est exécuté lorsque la condition prend la valeur <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-127">Gets or sets the <see cref="T:System.Activities.Statements.FlowNode" /> that is executed when the condition evaluates to <see langword="false" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca4d-128">Activité exécutée lorsque la condition prend la valeur <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-128">The activity that is executed when the condition evaluates to <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eca4d-129">L'exemple de code suivant montre comment définir la propriété False d'un nœud <xref:System.Activities.Statements.FlowDecision>.</span><span class="sxs-lookup"><span data-stu-id="eca4d-129">The following code sample demonstrates setting the False property of a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="eca4d-130">Cet exemple est issu le [gestion des erreurs dans un TryCatch à l’aide d’activité organigramme](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) exemple.</span><span class="sxs-lookup"><span data-stu-id="eca4d-130">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public System.Activities.Statements.FlowNode True { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Statements.FlowNode True" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.True" />
      <MemberSignature Language="VB.NET" Value="Public Property True As FlowNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Statements::FlowNode ^ True { System::Activities::Statements::FlowNode ^ get(); void set(System::Activities::Statements::FlowNode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Condition")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Statements.FlowNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca4d-131">Obtient ou définit le <see cref="T:System.Activities.Statements.FlowNode" /> qui est exécuté lorsque la condition prend la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-131">Gets or sets the <see cref="T:System.Activities.Statements.FlowNode" /> that is executed when the condition evaluates to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca4d-132">Activité à exécuter lorsque la condition prend la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca4d-132">The activity to execute when the condition evaluates to <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eca4d-133">L'exemple de code suivant montre comment définir la propriété True d'un nœud <xref:System.Activities.Statements.FlowDecision>.</span><span class="sxs-lookup"><span data-stu-id="eca4d-133">The following code sample demonstrates setting the True property of a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="eca4d-134">Cet exemple est issu le [gestion des erreurs dans un TryCatch à l’aide d’activité organigramme](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) exemple.</span><span class="sxs-lookup"><span data-stu-id="eca4d-134">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>