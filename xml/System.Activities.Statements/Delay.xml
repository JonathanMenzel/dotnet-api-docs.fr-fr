<Type Name="Delay" FullName="System.Activities.Statements.Delay">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6afafd7dd511c914652311880e07b3b3d2dc5332" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30355913" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Delay : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Delay extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.Delay" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Delay&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class Delay sealed : System::Activities::NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Duration")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="258e3-101">Crée une minuterie pour une durée spécifiée, à l'aide d'un <see cref="T:System.Activities.Statements.TimerExtension" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="258e3-101">Creates a timer for a specified duration, using a <see cref="T:System.Activities.Statements.TimerExtension" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="258e3-102">Lorsque la minuterie de l'activité expire, l'activité <xref:System.Activities.Statements.Delay> termine son exécution.</span><span class="sxs-lookup"><span data-stu-id="258e3-102">When the activity’s timer expires, the <xref:System.Activities.Statements.Delay> activity completes its execution.</span></span> <span data-ttu-id="258e3-103">Si une instance de flux de travail persiste alors qu'une activité <xref:System.Activities.Statements.Delay> a une minuterie en attente, un point de terminaison standard <xref:System.ServiceModel.Activities.Description.ITimerExpiredNotification> doit être configuré pour recevoir une notification indiquant que la minuterie a expiré.</span><span class="sxs-lookup"><span data-stu-id="258e3-103">If a workflow instance persists while a <xref:System.Activities.Statements.Delay> activity has an outstanding timer, then an <xref:System.ServiceModel.Activities.Description.ITimerExpiredNotification> standard endpoint must be configured to receive notification that the timer has expired.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="258e3-104">L'exemple de code suivant montre comment créer une activité <xref:System.Activities.Statements.Delay>.</span><span class="sxs-lookup"><span data-stu-id="258e3-104">The following code sample demonstrates creating a <xref:System.Activities.Statements.Delay> activity.</span></span> <span data-ttu-id="258e3-105">Cet exemple est issu le [à l’aide de l’activité Pick](~/docs/framework/windows-workflow-foundation/samples/using-the-pick-activity.md) exemple.</span><span class="sxs-lookup"><span data-stu-id="258e3-105">This example is from the [Using the Pick Activity](~/docs/framework/windows-workflow-foundation/samples/using-the-pick-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_Pick#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_pick/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Delay ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Delay.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Delay();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="258e3-106">Crée une instance de l'activité <see cref="T:System.Activities.Statements.Delay" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="258e3-106">Creates a new instance of the <see cref="T:System.Activities.Statements.Delay" /> activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="258e3-107">L'exemple de code suivant montre comment créer une activité <xref:System.Activities.Statements.Delay>.</span><span class="sxs-lookup"><span data-stu-id="258e3-107">The following code sample demonstrates creating a <xref:System.Activities.Statements.Delay> activity.</span></span> <span data-ttu-id="258e3-108">Cet exemple est issu le [à l’aide de l’activité Pick](~/docs/framework/windows-workflow-foundation/samples/using-the-pick-activity.md)exemple.</span><span class="sxs-lookup"><span data-stu-id="258e3-108">This example is from the [Using the Pick Activity](~/docs/framework/windows-workflow-foundation/samples/using-the-pick-activity.md)sample.</span></span>  
  
 [!code-csharp[wfs_Pick#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_pick/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected override void Abort (System.Activities.NativeActivityAbortContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Abort(class System.Activities.NativeActivityAbortContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Delay.Abort(System.Activities.NativeActivityAbortContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Abort (context As NativeActivityAbortContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Abort(System::Activities::NativeActivityAbortContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityAbortContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Delay.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override void Cancel (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Cancel(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Delay.Cancel(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Cancel (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Cancel(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInduceIdle">
      <MemberSignature Language="C#" Value="protected override bool CanInduceIdle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInduceIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Delay.CanInduceIdle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanInduceIdle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanInduceIdle { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;TimeSpan&gt; Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;valuetype System.TimeSpan&gt; Duration" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Delay.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As InArgument(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;TimeSpan&gt; ^ Duration { System::Activities::InArgument&lt;TimeSpan&gt; ^ get(); void set(System::Activities::InArgument&lt;TimeSpan&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="258e3-109">Durée de la minuterie créée par l'activité <see cref="T:System.Activities.Statements.Delay" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="258e3-109">The duration of the timer that the <see cref="T:System.Activities.Statements.Delay" /> activity creates.</span>
          </span>
          <span data-ttu-id="258e3-110">Si la durée est définie sur <see cref="P:System.TimeSpan.MaxValue" />, le délai est infini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="258e3-110">If the duration is set to <see cref="P:System.TimeSpan.MaxValue" />, the delay is infinite.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="258e3-111">Durée de la minuterie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="258e3-111">The timer duration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="258e3-112">L'exemple de code suivant montre comment utiliser Duration dans une activité <xref:System.Activities.Statements.Delay>.</span><span class="sxs-lookup"><span data-stu-id="258e3-112">The following code sample demonstrates using Duration in a <xref:System.Activities.Statements.Delay> activity.</span></span> <span data-ttu-id="258e3-113">Cet exemple est issu le [à l’aide de l’activité Pick](~/docs/framework/windows-workflow-foundation/samples/using-the-pick-activity.md) exemple.</span><span class="sxs-lookup"><span data-stu-id="258e3-113">This example is from the [Using the Pick Activity](~/docs/framework/windows-workflow-foundation/samples/using-the-pick-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_Pick#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_pick/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Delay.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>