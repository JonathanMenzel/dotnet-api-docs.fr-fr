<Type Name="PersistenceIOParticipant" FullName="System.Activities.Persistence.PersistenceIOParticipant">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="73058023a89cc3336d040688dfc21675faf0fe88" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40001694" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PersistenceIOParticipant : System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceIOParticipant extends System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceIOParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceIOParticipant&#xA;Inherits PersistenceParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceIOParticipant abstract : System::Activities::Persistence::PersistenceParticipant" />
  <TypeSignature Language="F#" Value="type PersistenceIOParticipant = class&#xA;    inherit PersistenceParticipant" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Persistence.PersistenceParticipant</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Vclass dérivée de la classe <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> avec des méthodes réalisant des opérations d'entrée et sortie en plus de la persistance et du chargement d'instances de flux de travail via le processus de persistance.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un hôte exécute les étapes suivantes lors de la persistance d'une instance :  
  
1.  Recueille les valeurs à rendre persistantes.  
  
2.  Mappe les champs de valeurs structurées monolithiques aux valeurs individuelles.  
  
3.  Émet <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> sur le fournisseur de persistance.  
  
4.  Effectue des E/S dans le cadre de la transaction de persistance.  
  
 Un hôte termine une étape avant de commencer la suivante. Par exemple lors de la persistance, l'hôte recueille des valeurs auprès de tous les participants de persistance avant de passer à la deuxième étape. Dans la deuxième étape, l'hôte fournit toutes les valeurs recueillies dans la première étape à tous les participants de persistance de la deuxième étape en vue de leur mappage. Dans la troisième étape, l'hôte fournit toutes les valeurs recueillies dans les première et deuxième étapes au fournisseur de persistance lors de l'appel à <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>. Enfin, dans la quatrième étape, l’hôte fournit toutes les valeurs recueillies à tous les participants d’E/S de persistance dans le cadre de la transaction de persistance.  
  
 Un hôte exécute les étapes suivantes lors du chargement d'une instance de persistance :  
  
1.  Émet <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> et <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> sur le fournisseur de persistance.  
  
2.  Effectue des E/S dans le cadre de la transaction de persistance.  
  
3.  Publie les valeurs chargées.  
  
 Au niveau le plus élevé, les extensions d'instance de flux de travail qui dérivent de la classe <xref:System.Activities.Persistence.PersistenceParticipant> peuvent participer à la première et à la deuxième étape (respectivement, Recueillir et Mapper) du processus de persistance et à la troisième étape (Publier) du processus de chargement.  Les extensions d’instance de flux de travail qui dérivent de la classe PersistenceIOParticipant peuvent également participer à la quatrième étape du processus de persistance et à la deuxième étape du processus de chargement (E/S).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceIOParticipant (bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isSaveTransactionRequired, bool isLoadTransactionRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isSaveTransactionRequired As Boolean, isLoadTransactionRequired As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceIOParticipant(bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="F#" Value="new System.Activities.Persistence.PersistenceIOParticipant : bool * bool -&gt; System.Activities.Persistence.PersistenceIOParticipant" Usage="new System.Activities.Persistence.PersistenceIOParticipant (isSaveTransactionRequired, isLoadTransactionRequired)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isSaveTransactionRequired" Type="System.Boolean" />
        <Parameter Name="isLoadTransactionRequired" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isSaveTransactionRequired">
          <see langword="true" /> si une transaction est requise pour l'opération d'enregistrement. Si l’objet <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> est créé avec la valeur de paramètre <see langword="true" />, Transaction.Current est systématiquement défini lors de l’appel à BeginOnSave. La transaction est partagée entre le fournisseur de persistance, toutes les extensions PersistenceIOParticipant et potentiellement les autres participants de la transaction.</param>
        <param name="isLoadTransactionRequired">
          <see langword="true" /> si une transaction est requise pour l'opération de chargement. Si l’objet <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> est créé avec la valeur de paramètre <see langword="true" />, Transaction.Current est systématiquement défini lors de l’appel à BeginOnLoad. La transaction est partagée entre le fournisseur de persistance, toutes les extensions PersistenceIOParticipant et potentiellement les autres participants de la transaction.</param>
        <summary>Initialise une instance de la classe <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.Abort" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="persistenceIOParticipant.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abandonne l'opération d'E/S (Charger ou Enregistrer) en attente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes dérivées qui remplacent BeginOnSave ou BeginOnLoad et peuvent ne pas être réalisées immédiatement doivent remplacer Abort. Si Abort est appelé, toute opération d'E/S en attente doit être annulée. Si une opération est annulée de cette manière, la méthode End correspondante doit lever OperationCanceledException.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnLoad">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnLoad (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnLoad(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnLoad(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnLoad (readWriteValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnLoad(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOnLoad : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOnLoad : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceIOParticipant.BeginOnLoad (readWriteValues, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">Dictionnaire de valeurs en lecture-écriture chargé par le fournisseur de persistance. Cela correspond au jeu de valeurs en lecture-écriture passé à BeginOnSave dans l'épisode de persistance le plus récent pour cette instance.</param>
        <param name="timeout">Intervalle de temps dans lequel l'opération doit être effectuée sans dépassement du délai d'attente.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de la fin de l'opération de chargement asynchrone.</param>
        <param name="state">Informations d'état associées à l'opération asynchrone.</param>
        <summary>Commence une opération asynchrone pour charger l'état supplémentaire avec une instance en cours de chargement depuis le magasin d'instances.</summary>
        <returns>État d'une opération asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnSave">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnSave (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnSave(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnSave (readWriteValues As IDictionary(Of XName, Object), writeOnlyValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnSave(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOnSave : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOnSave : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceIOParticipant.BeginOnSave (readWriteValues, writeOnlyValues, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">Dictionnaire de valeurs en lecture-écriture recueillies dans les étapes MapValues et CollectValues.</param>
        <param name="writeOnlyValues">Dictionnaire de valeurs en écriture seule recueillies dans les étapes MapValues et CollectValues.</param>
        <param name="timeout">Intervalle de temps dans lequel l'opération doit être effectuée sans dépassement du délai d'attente.</param>
        <param name="callback">Délégué de rappel asynchrone qui reçoit la notification de la fin de l'opération asynchrone.</param>
        <param name="state">Informations d'état associées à l'opération asynchrone.</param>
        <summary>Commence une opération asynchrone pour enregistrer l'état supplémentaire avec une instance en cours de persistance dans le magasin d'instances.</summary>
        <returns>État d'une opération asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnLoad">
      <MemberSignature Language="C#" Value="protected virtual void EndOnLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOnLoad : IAsyncResult -&gt; unit&#xA;override this.EndOnLoad : IAsyncResult -&gt; unit" Usage="persistenceIOParticipant.EndOnLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Résultat asynchrone retourné par un appel à la méthode <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
        <summary>Réalise l'opération de chargement asynchrone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnSave">
      <MemberSignature Language="C#" Value="protected virtual void EndOnSave (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnSave(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnSave(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnSave (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnSave(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOnSave : IAsyncResult -&gt; unit&#xA;override this.EndOnSave : IAsyncResult -&gt; unit" Usage="persistenceIOParticipant.EndOnSave result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Résultat asynchrone retourné par un appel à la méthode <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
        <summary>Réalise l'opération d'enregistrement asynchrone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>