<Type Name="ThenBy" FullName="System.Web.UI.WebControls.Expressions.ThenBy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="408fa8131e30c0a0257ca86ee23561f83213c5e4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585663" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThenBy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThenBy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.ThenBy" />
  <TypeSignature Language="VB.NET" Value="Public Class ThenBy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThenBy" />
  <TypeSignature Language="F#" Value="type ThenBy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Offre un moyen d'appliquer une expression de tri à un objet source de données <see cref="T:System.Linq.IQueryable" /> après avoir appliqué une expression <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un tri après l’opération est effectuée à l’aide de la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> expression dans le <xref:System.Web.UI.WebControls.QueryExtender> contrôler, de tri suivantes opérations peuvent être effectuées à l’aide de la <xref:System.Web.UI.WebControls.Expressions.ThenBy> classe sur un autre champ de données.  
  
   
  
## Examples  
 L’exemple suivant montre comment trier des données par le champ ListPrice dans l’ordre décroissant, puis par le champ ProductID dans l’ordre croissant à l’aide de la commande le <xref:System.Web.UI.WebControls.Expressions.ThenBy> type. Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web à l’aide de la syntaxe déclarative](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThenBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.ThenBy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThenBy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.ThenBy.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.ThenBy.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la propriété de l'objet <see cref="T:System.Linq.IQueryable" /> auquel appliquer l'expression <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" />.</summary>
        <value>Propriété de l'objet <see cref="T:System.Linq.IQueryable" /> auquel appliquer l'expression <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> trie les données d’un champ de données spécifié. Opérations de tri suivantes peuvent être effectuées sur un autre champ de données à l’aide de la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> collection. Cette propriété spécifie le champ de données pour appliquer les `ThenBy` opération de tri.  
  
   
  
## Examples  
 L’exemple suivant montre comment trier les données par le champ ListPrice dans l’ordre décroissant, puis dans le champ ID de produit dans l’ordre croissant. Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web à l’aide de la syntaxe déclarative](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.ThenBy.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.SortDirection with get, set" Usage="System.Web.UI.WebControls.Expressions.ThenBy.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le sens du classement de l'objet source de données <see cref="T:System.Linq.IQueryable" />.</summary>
        <value>Sens du classement de l'objet source de données <see cref="T:System.Linq.IQueryable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> est utilisé dans le <xref:System.Web.UI.WebControls.QueryExtender> contrôle pour trier les données dans l’ordre croissant ou décroissant. La direction de l’opération de tri est spécifiée à l’aide de la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment trier les données par le champ ListPrice dans l’ordre décroissant et sur le champ ProductID dans l’ordre croissant à l’aide de la <xref:System.Web.UI.WebControls.Expressions.ThenBy.Direction%2A> propriété. Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web à l’aide de la syntaxe déclarative](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>