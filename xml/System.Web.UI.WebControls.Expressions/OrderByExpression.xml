<Type Name="OrderByExpression" FullName="System.Web.UI.WebControls.Expressions.OrderByExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da90f900aabbc72f34f2df64a7535ef7c5413f0d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589313" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OrderByExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class OrderByExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class OrderByExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ThenByExpressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Offre un moyen d'appliquer une expression de tri à un objet <see cref="T:System.Linq.IQueryable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> classe est utilisée dans le <xref:System.Web.UI.WebControls.QueryExtender> contrôle pour trier les données dans l’ordre croissant ou décroissant. Le tri est effectué par le comparateur par défaut du type de l’élément.  
  
 Le <xref:System.Web.UI.WebControls.QueryExtender> contrôle prend en charge une variété d’options que vous pouvez utiliser pour filtrer les données. Une fois que vous utilisez les options de filtre, vous pouvez utiliser la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> objet pour trier les données.  
  
 Vous spécifiez le champ de données pour trier en utilisant le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> propriété. Vous spécifiez le sens de tri à l’aide de la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> propriété. Après le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> objet a été appliqué à la source de données, vous pouvez utiliser la <xref:System.Web.UI.WebControls.Expressions.ThenBy> des expressions pour exécuter ultérieurement un tri sur un autre champ de données.  
  
   
  
## Examples  
 L’exemple suivant montre comment effectuer une recherche de la table Products de la base de données AdventureWorks pour les produits qui ont des noms qui commencent par la chaîne spécifiée dans le `SearchTextBox` zone de texte. Le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> object trie les données par le champ de données ListPrice dans l’ordre décroissant, puis par le champ d’ID de produit dans l’ordre croissant. Le résultat de la requête qui est retourné à partir de la <xref:System.Web.UI.WebControls.LinqDataSource> contrôle est affiché dans un <xref:System.Web.UI.WebControls.GridView> contrôle.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web à l’aide de la syntaxe déclarative](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> a la valeur <see langword="null" />.</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OrderByExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OrderByExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la propriété de l'objet <see cref="T:System.Linq.IQueryable" /> en fonction de laquelle effectuer le tri.</summary>
        <value>Propriété de l'objet source de données <see cref="T:System.Linq.IQueryable" /> selon lequel effectuer le tri.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> object trie les données dans un champ de données. L’opération de tri suivantes réalisables sur un autre champ de données à l’aide de la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment trier les données par le champ ListPrice dans l’ordre décroissant, puis par le champ d’ID de produit dans l’ordre croissant. Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web à l’aide de la syntaxe déclarative](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient er définit le sens du tri de l'objet source de données <see cref="T:System.Linq.IQueryable" />.</summary>
        <value>Sens du tri de l'objet source de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> classe est utilisée dans le <xref:System.Web.UI.WebControls.QueryExtender> contrôle pour trier les données dans l’ordre croissant ou décroissant. La direction de l’opération de tri est spécifiée à l’aide de la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment trier les données par le champ ListPrice dans l’ordre décroissant, puis par le champ ProductID dans l’ordre croissant. Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web à l’aide de la syntaxe déclarative](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Spécifie la source de données à laquelle appliquer le tri.</param>
        <summary>Applique une expression de tri à un objet source de données <see cref="T:System.Linq.IQueryable" /> en fonction d'une valeur <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> et d'une valeur <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />.</summary>
        <returns>Instance de la source de données à laquelle l'expression a été appliquée.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenByExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThenByExpressions As Collection(Of ThenBy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ ThenByExpressions { System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la collection d'expressions <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> à appliquer après qu'une valeur <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> a été appliquée à la source de données.</summary>
        <value>Collection d'expressions <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> à appliquer après que <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> a été appliqué à la source de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un tri après l’opération est effectuée à l’aide de la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> dans les <xref:System.Web.UI.WebControls.QueryExtender> contrôler, les opérations peuvent être effectuées à l’aide de tri suivantes le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment trier les données par le champ ListPrice dans l’ordre décroissant, puis par le champ d’ID de produit dans l’ordre croissant de commande à l’aide du <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>. Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web à l’aide de la syntaxe déclarative](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>