<Type Name="RangeExpression" FullName="System.Web.UI.WebControls.Expressions.RangeExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48f90c0a0c789d50b9df3f9cf17d55258bd68166" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51900497" /></Metadata><TypeSignature Language="C#" Value="public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.RangeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type RangeExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit un moyen de déterminer si une valeur est supérieure ou inférieure à une valeur spécifiée, ou si une valeur est comprise entre deux valeurs spécifiées.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.QueryExtender> contrôle offre la possibilité de filtrer les données dans une page Web à l’aide des classes dans le <xref:System.Web.UI.WebControls.Expressions> espace de noms. Ces classes incluent la <xref:System.Web.UI.WebControls.Expressions.RangeExpression> classe.  
  
 Le <xref:System.Web.UI.WebControls.Expressions.RangeExpression> classe recherche dans une colonne de données à l’aide d’une paire de valeurs qui définissent la plage. Vous utilisez le <xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A> propriété pour spécifier la colonne à rechercher. Vous utilisez le <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> propriété pour spécifier s’il faut inclure ou exclure de la valeur minimale dans la recherche des résultats, et que vous utilisez le <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> propriété pour spécifier s’il faut inclure ou exclure la valeur maximale. Les valeurs minimales et maximales peuvent être spécifiées dans [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] contrôles et les valeurs peuvent ensuite être passés à la <xref:System.Web.UI.WebControls.QueryExtender> contrôle en tant que paramètres dans <xref:System.Web.UI.WebControls.ControlParameter> contrôles. Les résultats sont généralement affichées dans un contrôle lié aux données.  
  
   
  
## Examples  
 L’exemple suivant montre comment effectuer une recherche dans la table Products de la base de données AdventureWorks pour les produits qui ont un prix dans la plage spécifiée dans la colonne ListPrice le `FromTextBox` et `ToTextBox` zones de texte. Le filtre inclut la valeur minimale mais exclut la valeur maximale dans les résultats. Les résultats sont affichés dans un <xref:System.Web.UI.WebControls.Label> contrôle.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web avec la syntaxe déclarative](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> a la valeur <see langword="null" />.</exception>
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">Vue d’ensemble du contrôle QueryExtender Web Server</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le champ à utiliser pour la comparaison.</summary>
        <value>Champ à utiliser pour la comparaison.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’expression de plage recherche le champ de données pour la plage spécifiée.  
  
   
  
## Examples  
 L’exemple suivant montre comment rechercher dans la table Products de la base de données AdventureWorks pour les produits qui ont un prix dans la plage spécifiée dans la colonne de liste de prix le `FromTextBox` et `ToTextBox` zones de texte.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web avec la syntaxe déclarative](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="rangeExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Objet à utiliser pour la comparaison.</param>
        <summary>Obtient l'objet <see cref="T:System.Linq.IQueryable" /> sur lequel la comparaison de plage a été effectuée.</summary>
        <returns>Instance de l'objet <see cref="T:System.Linq.IQueryable" /> à laquelle l'expression a été appliquée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode utilise spécifié <xref:System.Linq.IQueryable> objet pour résoudre l’expression.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> a la valeur <see langword="null" />.  
  
- ou - 
Les propriétés <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> et <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> ont la valeur <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />.  
  
- ou - 
La propriété <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> ou <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> n'a pas la valeur <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> et la collection de paramètres est vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MaxType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MaxType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MaxType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur maximale de la plage.</summary>
        <value>Type de comparaison à utiliser pour la valeur maximale. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />, ce qui indique que la comparaison maximale n'est pas effectuée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les valeurs possibles pour cette propriété sont <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>, et <xref:System.Web.UI.WebControls.Expressions.RangeType.None>.  
  
 Lorsque le <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> est défini sur <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, la valeur maximale de la plage est incluse dans les résultats de recherche. Cela équivaut à effectuer un > = l’opération. Si vous définissez la propriété sur <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> champ, il revient à spécifier un > ou < opération. Si vous définissez la propriété sur <xref:System.Web.UI.WebControls.Expressions.RangeType.None>, aucune limite n’imposée à la plage.  
  
   
  
## Examples  
 L’exemple suivant montre comment inclure la valeur minimale spécifiée dans la plage et comment exclure la valeur maximale. Les valeurs minimale et maximales sont entrés dans les zones de texte. Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web avec la syntaxe déclarative](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MinType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberSignature Language="VB.NET" Value="Public Property MinType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MinType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MinType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur minimale de la plage.</summary>
        <value>Type de comparaison à utiliser pour la valeur minimale. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />, ce qui indique que la comparaison minimale n'est pas effectuée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les valeurs possibles pour cette propriété sont <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>, et <xref:System.Web.UI.WebControls.Expressions.RangeType.None>.  
  
 Lorsque le <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> ou <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> propriété est définie sur <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, la valeur minimale et maximale de la plage est incluse dans les résultats de recherche. Cela équivaut à effectuer un > = ou \<= l’opération. Le <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> champ équivaut à la > ou < opération et <xref:System.Web.UI.WebControls.Expressions.RangeType.None> n’impose aucune limite sur la plage.  
  
   
  
## Examples  
 L’exemple suivant montre comment inclure la valeur minimale spécifiée dans la plage et comment exclure la valeur maximale. Les valeurs minimale et maximales sont entrés dans les zones de texte. Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web avec la syntaxe déclarative](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>