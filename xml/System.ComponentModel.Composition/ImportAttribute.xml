<Type Name="ImportAttribute" FullName="System.ComponentModel.Composition.ImportAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fabf3dd13def90cbf756b89aeea9782e3041f402" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53513266" /></Metadata><TypeSignature Language="C#" Value="public class ImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ImportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="87923-101">Spécifie que la valeur d'une propriété, d'un champ ou d'un paramètre doit être fournie par l'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="87923-101">Specifies that a property, field, or parameter value should be provided by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.object</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87923-102">Dans le modèle de programmation par attributs, le <xref:System.ComponentModel.Composition.ImportAttribute> est utilisé pour déclarer les importations, ou les dépendances, d’une partie donnée.</span><span class="sxs-lookup"><span data-stu-id="87923-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part.</span></span> <span data-ttu-id="87923-103">Il peut décorer une propriété, un champ ou une méthode.</span><span class="sxs-lookup"><span data-stu-id="87923-103">It can decorate a property, a field, or a method.</span></span> <span data-ttu-id="87923-104">Pendant la composition, les importations d’une partie seront remplies par le <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objet auquel appartient cette partie, en utilisant les exportations fournies à cet <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objet.</span><span class="sxs-lookup"><span data-stu-id="87923-104">During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.</span></span>  
  
 <span data-ttu-id="87923-105">Si une importation correspond à une exportation donnée est déterminée principalement en comparant le nom de contrat et le type de contrat.</span><span class="sxs-lookup"><span data-stu-id="87923-105">Whether an import matches a given export is determined primarily by comparing the contract name and the contract type.</span></span> <span data-ttu-id="87923-106">En règle générale, vous n’êtes pas obligé de spécifier une de ces lors de l’utilisation de l’attribut d’importation dans le code, et ils seront déduits automatiquement à partir du type du membre décoré.</span><span class="sxs-lookup"><span data-stu-id="87923-106">Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member.</span></span> <span data-ttu-id="87923-107">Si l’importation doit correspondre à une exportation d’un type différent (par exemple, une sous-classe du type de membre décoré ou une interface implémentée par ce membre), le type de contrat doit être spécifié explicitement.</span><span class="sxs-lookup"><span data-stu-id="87923-107">If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified.</span></span> <span data-ttu-id="87923-108">Le nom de contrat peut également être explicitement spécifié, par exemple pour faire la distinction entre plusieurs contrats avec le même type, mais il est généralement préférable de le faire via des métadonnées.</span><span class="sxs-lookup"><span data-stu-id="87923-108">The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata.</span></span> <span data-ttu-id="87923-109">Pour plus d’informations sur les métadonnées, consultez <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</span><span class="sxs-lookup"><span data-stu-id="87923-109">For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87923-110">L’exemple suivant montre trois classes avec les membres décorés avec le <xref:System.ComponentModel.Composition.ImportAttribute>et trois exportations qui leur correspondent.</span><span class="sxs-lookup"><span data-stu-id="87923-110">The following example shows three classes with members decorated with the <xref:System.ComponentModel.Composition.ImportAttribute>, and three exports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ExportAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/6c61b4ec-c6df-4651-80f1-4854f8b14dde"><span data-ttu-id="87923-111">Vue d'ensemble du modèle de programmation par attributs</span><span class="sxs-lookup"><span data-stu-id="87923-111">Attributed Programming Model Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="87923-112">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ImportAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="87923-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87923-113">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, en important l'exportation avec le nom de contrat par défaut.</span><span class="sxs-lookup"><span data-stu-id="87923-113">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the default contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87923-114">Le nom de contrat par défaut est le résultat de l’appel la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur le type de propriété, champ ou paramètre marqué avec cet attribut.</span><span class="sxs-lookup"><span data-stu-id="87923-114">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="87923-115">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="87923-115">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportAttribute : string -&gt; System.ComponentModel.Composition.ImportAttribute" Usage="new System.ComponentModel.Composition.ImportAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="87923-116">Nom de contrat de l'exportation à importer, ou <see langword="null" /> ou une chaîne vide ("") pour utiliser le nom de contrat par défaut.</span><span class="sxs-lookup"><span data-stu-id="87923-116">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="87923-117">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, en important l'exportation avec le nom de contrat spécifié.</span><span class="sxs-lookup"><span data-stu-id="87923-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87923-118">Le nom de contrat par défaut est le résultat de l’appel la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur le type de propriété, champ ou paramètre marqué avec cet attribut.</span><span class="sxs-lookup"><span data-stu-id="87923-118">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="87923-119">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="87923-119">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportAttribute : Type -&gt; System.ComponentModel.Composition.ImportAttribute" Usage="new System.ComponentModel.Composition.ImportAttribute contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType"><span data-ttu-id="87923-120">Type duquel dériver le nom de contrat de l'exportation, ou <see langword="null" /> pour utiliser le nom de contrat par défaut.</span><span class="sxs-lookup"><span data-stu-id="87923-120">The type to derive the contract name of the export from, or <see langword="null" /> to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="87923-121">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, en important l'exportation avec le nom de contrat dérivé du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="87923-121">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the contract name derived from the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87923-122">Le nom de contrat est le résultat de l’appel le <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `contractType`.</span><span class="sxs-lookup"><span data-stu-id="87923-122">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="87923-123">Le nom de contrat par défaut est le résultat de l’appel la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur le type de propriété, champ ou paramètre marqué avec cet attribut.</span><span class="sxs-lookup"><span data-stu-id="87923-123">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="87923-124">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="87923-124">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportAttribute : string * Type -&gt; System.ComponentModel.Composition.ImportAttribute" Usage="new System.ComponentModel.Composition.ImportAttribute (contractName, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="87923-125">Nom de contrat de l'exportation à importer, ou <see langword="null" /> ou une chaîne vide ("") pour utiliser le nom de contrat par défaut.</span><span class="sxs-lookup"><span data-stu-id="87923-125">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <param name="contractType"><span data-ttu-id="87923-126">Type de l'exportation à importer.</span><span class="sxs-lookup"><span data-stu-id="87923-126">The type of the export to import.</span></span></param>
        <summary><span data-ttu-id="87923-127">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, en important l'exportation avec le nom et le type de contrat spécifiés.</span><span class="sxs-lookup"><span data-stu-id="87923-127">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name and type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDefault">
      <MemberSignature Language="C#" Value="public bool AllowDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDefault" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDefault : bool with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87923-128">Obtient ou définit une valeur qui indique si la propriété, le champ ou le paramètre a pour valeur la valeur par défaut de son type lorsqu'une exportation avec le nom de contrat n'est pas présente dans le conteneur.</span><span class="sxs-lookup"><span data-stu-id="87923-128">Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.</span></span></summary>
        <value><span data-ttu-id="87923-129"><see langword="true" /> si la propriété, le champ ou le paramètre est défini à la valeur par défaut de son type lorsqu'il n'y a aucune exportation avec <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> dans <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87923-129"><see langword="true" /> if the property, field, or parameter will be set to its type's default value when there is no export with the <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="87923-130">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87923-130">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87923-131">La valeur par défaut du type d’une propriété, un champ ou un paramètre est `null` pour les types référence et zéro pour les types valeur numériques.</span><span class="sxs-lookup"><span data-stu-id="87923-131">The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types.</span></span> <span data-ttu-id="87923-132">Pour les autres types de valeur, la valeur par défaut sera chaque champ du type de valeur initialisé à zéro si le champ est un type valeur, ou `null` si le champ est un type référence.</span><span class="sxs-lookup"><span data-stu-id="87923-132">For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRecomposition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRecomposition { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowRecomposition : bool with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87923-133">Obtient ou définit une valeur qui indique si la propriété ou le champ est recomposé lorsque des exportations avec un contrat correspondant ont changé dans le conteneur.</span><span class="sxs-lookup"><span data-stu-id="87923-133">Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.</span></span></summary>
        <value><span data-ttu-id="87923-134"><see langword="true" /> si la propriété ou le champ autorise la recomposition lorsque des exportations avec un <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> correspondant sont ajoutées ou supprimées de <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87923-134"><see langword="true" /> if the property or field allows recomposition when exports with a matching <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> are added or removed from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="87923-135">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="87923-135">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ImportAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87923-136">Obtient le nom de contrat de l'exportation à importer.</span><span class="sxs-lookup"><span data-stu-id="87923-136">Gets the contract name of the export to import.</span></span></summary>
        <value><span data-ttu-id="87923-137">Nom de contrat de l'exportation à importer.</span><span class="sxs-lookup"><span data-stu-id="87923-137">The contract name of the export to import.</span></span> <span data-ttu-id="87923-138">La valeur par défaut est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="87923-138">The default is an empty string ("").</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ImportAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87923-139">Obtient le type de l'exportation à importer.</span><span class="sxs-lookup"><span data-stu-id="87923-139">Gets the type of the export to import.</span></span></summary>
        <value><span data-ttu-id="87923-140">Type de l'exportation à importer.</span><span class="sxs-lookup"><span data-stu-id="87923-140">The type of the export to import.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); void set(System::ComponentModel::Composition::CreationPolicy value); };" />
      <MemberSignature Language="F#" Value="member this.RequiredCreationPolicy : System.ComponentModel.Composition.CreationPolicy with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87923-141">Obtient ou définit une valeur qui indique que l'importateur requiert un <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> spécifique pour les exportations utilisées pour satisfaire cette importation.</span><span class="sxs-lookup"><span data-stu-id="87923-141">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span></span></summary>
        <value><span data-ttu-id="87923-142">Une des valeurs suivantes :</span><span class="sxs-lookup"><span data-stu-id="87923-142">One of the following values:</span></span> 
 <span data-ttu-id="87923-143"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, si l'importateur ne requiert pas de <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> spécifique.</span><span class="sxs-lookup"><span data-stu-id="87923-143"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span></span> <span data-ttu-id="87923-144">Il s'agit de la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="87923-144">This is the default.</span></span>  
  
 <span data-ttu-id="87923-145"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> pour exiger que toutes les exportations utilisées soient partagées par tous les composants dans le conteneur.</span><span class="sxs-lookup"><span data-stu-id="87923-145"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all used exports be shared by all parts in the container.</span></span>  
  
 <span data-ttu-id="87923-146"><see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> pour exiger que toutes les exportations utilisées ne soient pas partagées dans un conteneur.</span><span class="sxs-lookup"><span data-stu-id="87923-146"><see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all used exports be non-shared in a container.</span></span> <span data-ttu-id="87923-147">Dans ce cas, chaque composant reçoit sa propre instance.</span><span class="sxs-lookup"><span data-stu-id="87923-147">In this case, each part receives their own instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As ImportSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::ImportSource Source { System::ComponentModel::Composition::ImportSource get(); void set(System::ComponentModel::Composition::ImportSource value); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.ComponentModel.Composition.ImportSource with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87923-148">Obtient ou définit une valeur qui spécifie les portées dont cette importation peut être satisfaite.</span><span class="sxs-lookup"><span data-stu-id="87923-148">Gets or sets a value that specifies the scopes from which this import may be satisfied.</span></span></summary>
        <value><span data-ttu-id="87923-149">Valeur qui spécifie les portées à partir desquelles cette importation peut être satisfaite.</span><span class="sxs-lookup"><span data-stu-id="87923-149">A value that specifies the scopes from which this import may be satisfied.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>