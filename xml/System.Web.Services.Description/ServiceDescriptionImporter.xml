<Type Name="ServiceDescriptionImporter" FullName="System.Web.Services.Description.ServiceDescriptionImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4c66926f1404c44afea73699b04377d92d251dcc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549303" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceDescriptionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceDescriptionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.ServiceDescriptionImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceDescriptionImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDescriptionImporter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Expose un moyen de générer des classes proxy client pour des services Web XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’interface pour un service Web XML est généralement décrite par un fichier Web Services Description Language (WSDL). Par exemple, pour obtenir une description WSDL d’un service Web à l’aide d’ASP.NET exposé à `http://localhost/service.asmx`, accédez simplement à `http://localhost/service.asmx?WSDL`.  
  
 Le <xref:System.Web.Services.Description.ServiceDescriptionImporter> classe vous permet d’importer facilement les informations contenues dans une description WSDL dans un <xref:System.CodeDom.CodeCompileUnit?displayProperty=nameWithType> objet. En ajustant la valeur de la <xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A> paramètre, vous pouvez indiquer un <xref:System.Web.Services.Description.ServiceDescriptionImporter> pour générer une classe proxy client qui fournit les fonctionnalités du service Web en appelant de façon transparente de l’instance ou pour générer une classe abstraite qui, encapsule les fonctionnalités du service Web sans les implémenter.  
  
 Le code résultant <xref:System.CodeDom.CodeCompileUnit> objet peut ensuite être appelé directement ou être exporté dans la langue de votre choix.  
  
   
  
## Examples  
 L’exemple suivant illustre l’utilisation de la <xref:System.Web.Services.Description.ServiceDescriptionImporter> classe génère du code proxy client qui appelle un service Web XML décrit par un fichier WSDL.  
  
 [!code-cpp[WebServices_Description_Importer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#0)]
 [!code-csharp[WebServices_Description_Importer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceDescriptionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.ServiceDescriptionImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceDescriptionImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant illustre l’utilisation de ce constructeur.  
  
 [!code-cpp[WebServices_Description_Importer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#1)]
 [!code-csharp[WebServices_Description_Importer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddServiceDescription">
      <MemberSignature Language="C#" Value="public void AddServiceDescription (System.Web.Services.Description.ServiceDescription serviceDescription, string appSettingUrlKey, string appSettingBaseUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddServiceDescription(class System.Web.Services.Description.ServiceDescription serviceDescription, string appSettingUrlKey, string appSettingBaseUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.ServiceDescriptionImporter.AddServiceDescription(System.Web.Services.Description.ServiceDescription,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddServiceDescription(System::Web::Services::Description::ServiceDescription ^ serviceDescription, System::String ^ appSettingUrlKey, System::String ^ appSettingBaseUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.Web.Services.Description.ServiceDescription" />
        <Parameter Name="appSettingUrlKey" Type="System.String" />
        <Parameter Name="appSettingBaseUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">Instance de <see cref="T:System.Web.Services.Description.ServiceDescription" /> à ajouter à la collection.</param>
        <param name="appSettingUrlKey">Définit la valeur initiale de la propriété <see langword="Url" /> de la classe proxy à générer à partir de l’instance représentée par le paramètre <c>serviceDescription</c>. Spécifie qu'elle doit être générée à partir de la section <see langword="&lt;appsetting&gt;" /> du fichier web.config.</param>
        <param name="appSettingBaseUrl">Définit la valeur initiale de la propriété <see langword="Url" /> de la classe proxy à générer à partir de l’instance représentée par le paramètre <c>serviceDescription</c>. Spécifie qu'elle doit être créée à partir d'une combinaison de la valeur de ce paramètre et de l'URL spécifiée par l'attribut <see langword="location" /> dans le document WSDL.</param>
        <summary>Ajoute le <see cref="T:System.Web.Services.Description.ServiceDescription" /> spécifié à la collection de valeurs <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> à importer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour ajouter <xref:System.Web.Services.Description.ServiceDescription> instances sur le regroupement qui doit être importé lorsque la <xref:System.Web.Services.Description.ServiceDescriptionImporter.Import%2A> méthode est appelée.  
  
 Les deux paramètres, de chaîne `appSettingUrlKey` et `appSettingBaseUrl`, spécifiez comment construire la `Url` propriété du proxy de service Web XML qui doit être généré à partir de l’élément importé <xref:System.Web.Services.Description.ServiceDescription> valeur. Le `appSettingUrlKey` paramètre spécifie que le `Url` propriété doit être lue dans le fichier web.config `<appsettings>` section à l’aide de la valeur du paramètre en tant que la clé de configuration. Si le `appSettingUrlKey` paramètre est `null` ou une chaîne vide, la valeur initiale est déterminée par la `location` attribut dans le document Web Services Description Language (WSDL). Si la valeur de <xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A> est `Server`, une erreur est générée si vous tentez de définir la valeur de le `appSettingUrlKey` paramètre.  
  
 Le `appSettingBaseUrl` paramètre spécifie que la valeur initiale pour le `Url` propriété doit être construite à partir d’une combinaison de cette valeur de paramètre et l’URL spécifiée par la `location` attribut dans le document WSDL. Le `appSettingUrlKey` paramètre doit également être spécifié. Le `Url` propriété est construite en combinant une URL relative (construit à partir de la `appSettingBaseUrl` paramètre et l’URL spécifiée WSDL) avec l’URL chargée à partir du fichier web.config. Si ce paramètre est `null` ou une chaîne vide, l’URL est construite entièrement à partir de la valeur dans le fichier web.config.  
  
   
  
## Examples  
 L’exemple suivant illustre l’utilisation de la <xref:System.Web.Services.Description.ServiceDescriptionImporter.AddServiceDescription%2A> méthode lorsque vous utilisez la <xref:System.Web.Services.Description.ServiceDescriptionImporter> classe.  
  
 [!code-cpp[WebServices_Description_Importer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#1)]
 [!code-csharp[WebServices_Description_Importer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeGenerationOptions">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.CodeGenerationOptions CodeGenerationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Serialization.CodeGenerationOptions CodeGenerationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeGenerationOptions As CodeGenerationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::CodeGenerationOptions CodeGenerationOptions { System::Xml::Serialization::CodeGenerationOptions get(); void set(System::Xml::Serialization::CodeGenerationOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.CodeGenerationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit plusieurs options pour la génération de code.</summary>
        <value>Membre ou combinaison de membres de l'énumération <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerationOptions%2A> propriété vous permet de spécifier plusieurs options utilisées lorsque la <xref:System.Web.Services.Description.ServiceDescriptionImporter.Import%2A> méthode est appelée pour générer du code. Par exemple, vous pouvez spécifier si des types simples décrits dans le WSDL sont générées en tant que types valeur ou <xref:System.Data.SqlTypes> types de l’espace de noms, et s’ils sont générés en tant que propriétés ou champs.  
  
   
  
## Examples  
 L’exemple suivant illustre l’utilisation de la <xref:System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerationOptions%2A> propriété.  
  
 [!code-cpp[WebServices_Description_Importer#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#4)]
 [!code-csharp[WebServices_Description_Importer#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeGenerator">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeGenerator As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeGenerator { System::CodeDom::Compiler::CodeDomProvider ^ get(); void set(System::CodeDom::Compiler::CodeDomProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le générateur de code utilisé par l'importateur de la description de service.</summary>
        <value>Interface <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> utilisée par l'importateur de la description de service pour générer du code proxy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateWebReferences">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GenerateWebReferences (System.Web.Services.Description.WebReferenceCollection webReferences, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Web.Services.Description.WebReferenceOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GenerateWebReferences(class System.Web.Services.Description.WebReferenceCollection webReferences, class System.CodeDom.Compiler.CodeDomProvider codeProvider, class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.Web.Services.Description.WebReferenceOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.ServiceDescriptionImporter.GenerateWebReferences(System.Web.Services.Description.WebReferenceCollection,System.CodeDom.Compiler.CodeDomProvider,System.CodeDom.CodeCompileUnit,System.Web.Services.Description.WebReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GenerateWebReferences(System::Web::Services::Description::WebReferenceCollection ^ webReferences, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Web::Services::Description::WebReferenceOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webReferences" Type="System.Web.Services.Description.WebReferenceCollection" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="options" Type="System.Web.Services.Description.WebReferenceOptions" />
      </Parameters>
      <Docs>
        <param name="webReferences">
          <see cref="T:System.Web.Services.Description.WebReferenceCollection" /> de références Web à compiler.</param>
        <param name="codeProvider">
          <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> qui spécifie le fournisseur de code.</param>
        <param name="codeCompileUnit">
          <see cref="T:System.CodeDom.CodeCompileUnit" /> qui spécifie l'unité dans laquelle le code est compilé.</param>
        <param name="options">
          <see cref="T:System.Web.Services.Description.WebReferenceOptions" /> qui spécifie des options de génération de code.</param>
        <summary>Compile une collection de références Web pour produire un proxy client ou un stub serveur.</summary>
        <returns>
          <see cref="T:System.Collections.Specialized.StringCollection" /> des avertissements du compilateur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La collection de documents de description de services dans chaque <xref:System.Web.Services.Description.WebReference> membre de la `webReferences` collection doit contenir uniquement <xref:System.Web.Services.Description.ServiceDescription> et <xref:System.Xml.Schema.XmlSchema> objets. Cette méthode ne peut pas interpréter <xref:System.Web.Services.Discovery.DiscoveryDocument> objets.  
  
 Si un service quelconque du site Web XML méthodes dans le `webReferences` collection partager personnalisée des paramètres ou types de retour, ces types sont également partagés entre les méthodes proxy générées. Il s’agit d’un avantage important sur la situation dans laquelle chaque proxy est compilé séparément, car dans ce cas ces types ne fonctionnent pas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionImportWarnings Import (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.Services.Description.ServiceDescriptionImportWarnings Import(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.ServiceDescriptionImporter.Import(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Services::Description::ServiceDescriptionImportWarnings Import(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionImportWarnings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">Espace de noms dans lequel les valeurs <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> sont importées.</param>
        <param name="codeCompileUnit">Instance <see cref="T:System.CodeDom.CodeCompileUnit" /> dans laquelle le code qui représente la valeur <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> est généré.</param>
        <summary>Importe les valeurs <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> spécifiées, ce qui génère du code comme spécifié par la propriété <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.Style" />.</summary>
        <returns>Valeur <see cref="T:System.Web.Services.Description.ServiceDescriptionImportWarnings" /> décrivant toute erreur qui s'est produite, ou 0 si aucune erreur ne s'est produite.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Après avoir spécifié le <xref:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions%2A> pour importer les valeurs et les <xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A> propriété du code à générer, appelez le <xref:System.Web.Services.Description.Import> méthode pour lancer la génération de code.  
  
   
  
## Examples  
 L'exemple suivant illustre l'utilisation de la méthode <xref:System.Web.Services.Description.Import>.  
  
 [!code-cpp[WebServices_Description_Importer#5](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#5)]
 [!code-csharp[WebServices_Description_Importer#5](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtocolName">
      <MemberSignature Language="C#" Value="public string ProtocolName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProtocolName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.ProtocolName" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtocolName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProtocolName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le protocole utilisé pour accéder aux services Web XML décrits.</summary>
        <value>
          <see cref="T:System.String" /> qui contient le nom ne respectant pas la casse du protocole à importer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les valeurs de cette propriété sont :  
  
-   « Soap »  
  
-   "Soap12"  
  
-   "HttpPost"  
  
-   "HttpGet"  
  
-   "HttpSoap"  
  
 La valeur par défaut est « Soap », ce qui indique le standard SOAP 1.1.  
  
   
  
## Examples  
 L’exemple suivant illustre l’utilisation de la <xref:System.Web.Services.Description.ServiceDescriptionImporter.ProtocolName%2A> propriété lorsque vous utilisez la <xref:System.Web.Services.Description.ServiceDescriptionImporter> classe.  
  
 [!code-cpp[WebServices_Description_Importer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#1)]
 [!code-csharp[WebServices_Description_Importer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlSchemas Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlSchemas Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlSchemas ^ Schemas { System::Xml::Serialization::XmlSchemas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSchemas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les <see cref="T:System.Xml.Serialization.XmlSchemas" /> utilisés par la propriété <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" />.</summary>
        <value>Objet <see cref="T:System.Xml.Serialization.XmlSchemas" /> contenant les schémas XML utilisés par les instances <see cref="T:System.Web.Services.Description.ServiceDescription" /> dans la collection <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant illustre l’utilisation de la <xref:System.Web.Services.Description.ServiceDescriptionImporter.Schemas%2A> propriété.  
  
 [!code-cpp[WebServices_Description_Importer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#2)]
 [!code-csharp[WebServices_Description_Importer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceDescriptions">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionCollection ServiceDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionCollection ServiceDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceDescriptions As ServiceDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionCollection ^ ServiceDescriptions { System::Web::Services::Description::ServiceDescriptionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection des instances <see cref="T:System.Web.Services.Description.ServiceDescription" /> à importer.</summary>
        <value>Instance de <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> contenant les instances de <see cref="T:System.Web.Services.Description.ServiceDescription" /> susceptibles d'être importées par l'instance de <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comme avec n’importe quelle collection formant une propriété en lecture seule, les membres peuvent être ajoutés à la collection supprimé de la collection ou modifiés à l’aide des méthodes exposées par la collection. Vous pouvez également utiliser le <xref:System.Web.Services.Description.ServiceDescriptionImporter.AddServiceDescription%2A> méthode pour ajouter des membres à cette collection.  
  
   
  
## Examples  
 L’exemple suivant illustre l’utilisation de la <xref:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions%2A> propriété.  
  
 [!code-cpp[WebServices_Description_Importer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#2)]
 [!code-csharp[WebServices_Description_Importer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionImportStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Description.ServiceDescriptionImportStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As ServiceDescriptionImportStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionImportStyle Style { System::Web::Services::Description::ServiceDescriptionImportStyle get(); void set(System::Web::Services::Description::ServiceDescriptionImportStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionImportStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui détermine le style de code (client ou serveur) qui est généré lorsque les valeurs <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> sont importées.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.Services.Description.ServiceDescriptionImportStyle" />. La valeur par défaut est <see cref="F:System.Web.Services.Description.ServiceDescriptionImportStyle.Client" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A> est définie sur <xref:System.Web.Services.Description.ServiceDescriptionImportStyle.Client>, le <xref:System.Web.Services.Description.ServiceDescriptionImporter> génère des classes du proxy client qui fournissent les fonctionnalités des services Web décrits en les appelant.  
  
 Si le <xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A> est définie sur <xref:System.Web.Services.Description.ServiceDescriptionImportStyle.Server>, le <xref:System.Web.Services.Description.ServiceDescriptionImporter> instance génère des classes abstraites qui représentent les fonctionnalités des services Web XML décrits sans les implémenter. Vous pouvez ensuite les implémenter en écrivant des classes qui héritent de ces classes abstraites et implémentent les méthodes appropriées.  
  
   
  
## Examples  
 L’exemple suivant illustre l’utilisation de la <xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A> propriété.  
  
 [!code-cpp[WebServices_Description_Importer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#3)]
 [!code-csharp[WebServices_Description_Importer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>