<Type Name="SoapExtensionReflector" FullName="System.Web.Services.Description.SoapExtensionReflector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e62675bb717ccf3b7c78b583a0bebc40b5b0d264" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36595406" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapExtensionReflector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionReflector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapExtensionReflector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtensionReflector" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtensionReflector abstract" />
  <TypeSignature Language="F#" Value="type SoapExtensionReflector = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une interface commune et des fonctionnalités afin que les classes ajoutent des informations relatives à l'extension SOAP à un objet <see cref="T:System.Web.Services.Description.ServiceDescription" /> pour chaque méthode.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le résumé <xref:System.Web.Services.Description.SoapExtensionReflector> classe expose une méthode abstraite, <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>. Cette méthode abstraite permet à une classe dérivée ajouter des descriptions d’extensions SOAP lors de la réflexion d’une méthode Web dans des objets qui sont placés dans un <xref:System.Web.Services.Description.ServiceDescription> objet. La méthode elle-même n’est pas une entrée. Les descriptions sont ajoutées pour toutes les méthodes Web appartenant à une liaison spécifiée qui produit un <xref:System.Web.Services.Description.ServiceDescription>.  
  
 Vous pouvez utiliser un <xref:System.Web.Services.Description.ServiceDescription> pour générer un document Web Services Description Language (WSDL) via le <xref:System.Web.Services.Description.ServiceDescription.Write%2A> (méthode). Le <xref:System.Web.Services.Description.ServiceDescriptionImporter> classe et les classes connexes peuvent également utiliser un <xref:System.Web.Services.Description.ServiceDescription> pour générer le proxy client code ou abstraite du code serveur.  
  
 Utiliser une classe dérivée de la <xref:System.Web.Services.Description.SoapExtensionReflector> classe conjointement avec une classe dérivée de l’abstraite <xref:System.Web.Services.Protocols.SoapExtension> classe pour étendre le traitement au moment de l’exécution de SOAP des messages sur le client ou le service.  
  
 Vous pouvez spécifier <xref:System.Web.Services.Description.SoapExtensionReflector> dans un fichier de configuration via la [ \<soapExtensionReflectorTypes > élément](http://msdn.microsoft.com/library/6950609a-c9a3-4f6f-a5fc-a05d6d204d5c) élément et son enfant **ajouter** élément. Vous pouvez également appliquer la configuration à une application Web ASP.NET qui publie un service Web.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="M:System.Web.Services.Description.ProtocolReflector.ReflectMethod" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionReflector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtensionReflector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une instance de la classe <see cref="T:System.Web.Services.Description.SoapExtensionReflector" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectDescription">
      <MemberSignature Language="C#" Value="public virtual void ReflectDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReflectDescription ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReflectDescription();" />
      <MemberSignature Language="F#" Value="abstract member ReflectDescription : unit -&gt; unit&#xA;override this.ReflectDescription : unit -&gt; unit" Usage="soapExtensionReflector.ReflectDescription " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Génère des informations de description spécifiques au service qui sont placées dans un objet <see cref="T:System.Web.Services.Description.ServiceDescription" /> correspondant à une liaison.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectionContext">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ProtocolReflector ReflectionContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ProtocolReflector ReflectionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ReflectionContext As ProtocolReflector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ProtocolReflector ^ ReflectionContext { System::Web::Services::Description::ProtocolReflector ^ get(); void set(System::Web::Services::Description::ProtocolReflector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReflectionContext : System.Web.Services.Description.ProtocolReflector with get, set" Usage="System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ProtocolReflector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'instance d'une classe dérivée de la classe <see cref="T:System.Web.Services.Description.ProtocolReflector" /> abstraite qui appelle la méthode <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />.</summary>
        <value>Instance d'une classe dérivée de la classe <see cref="T:System.Web.Services.Description.ProtocolReflector" /> abstraite qui appelle la méthode <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous implémentez une classe qui est dérivée de la <xref:System.Web.Services.Description.SoapExtensionReflector> `abstract` (classe), vous n’avez pas besoin d’implémenter une classe dérivée de <xref:System.Web.Services.Description.ProtocolReflector> pour appeler le <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> (méthode) ou pour définir le <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectMethod">
      <MemberSignature Language="C#" Value="public abstract void ReflectMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReflectMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReflectMethod();" />
      <MemberSignature Language="F#" Value="abstract member ReflectMethod : unit -&gt; unit" Usage="soapExtensionReflector.ReflectMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Méthode <see langword="Abstract" /> qu'une classe dérivée doit implémenter pour ajouter des informations relatives à l'extension SOAP à un objet <see cref="T:System.Web.Services.Description.ServiceDescription" /> pour chaque méthode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> méthode est appelée pour chaque méthode Web qui appartient à une liaison qui le <xref:System.Web.Services.Description.ServiceDescription> représente. Le <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> méthode n’utilise pas directement la méthode Web. Les informations d’extension SOAP sont ajoutées pour toutes les méthodes Web dans une liaison réfléchie à partir d’une classe de service Web.  
  
 Une implémentation de la <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> peut générer des informations comme la liaison d’opération, `abstract` opération et des messages.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>