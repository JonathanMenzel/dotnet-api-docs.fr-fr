<Type Name="SecurityTokenHandler" FullName="System.IdentityModel.Tokens.SecurityTokenHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbb9943aefb6ba2f295be7ff7f864be1ec607810" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenHandler : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenHandler extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenHandler&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenHandler abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="aa8fa-101">Classe de base abstraite pour les gestionnaires de jetons de sécurité.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aa8fa-101">The abstract base class for security token handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-102">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler> est la classe de base de sécurité de tous les gestionnaires de jetons dérivent.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-102">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class is the base class from which all security token handlers derive.</span></span> <span data-ttu-id="aa8fa-103">Un gestionnaire de jetons de sécurité est responsable de :</span><span class="sxs-lookup"><span data-stu-id="aa8fa-103">A security token handler is responsible for:</span></span>  
  
-   <span data-ttu-id="aa8fa-104">Valider des jetons de sécurité (<xref:System.IdentityModel.Tokens.SecurityToken>) du type qu’il est conçu pour les processus et l’empaquetage les revendications contenues dans le jeton dans une <xref:System.Security.Claims.ClaimsIdentity> objet.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-104">Validating security tokens (<xref:System.IdentityModel.Tokens.SecurityToken>) of the type it is designed to process and packaging the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity> object.</span></span>  
  
-   <span data-ttu-id="aa8fa-105">Sérialiser et désérialiser des jetons de sécurité de type, elle est conçue pour traiter.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-105">Serializing and deserializing security tokens of the type it is designed to process.</span></span>  
  
-   <span data-ttu-id="aa8fa-106">Sérialiser et désérialiser des clauses d’identificateur de clé (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) qui renvoient aux jetons du type, il est conçu pour traiter du `<wsse:SecurityTokenReference>` éléments.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-106">Serializing and deserializing key identifier clauses (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that refer to tokens of the type it is designed to process to and from `<wsse:SecurityTokenReference>` elements.</span></span>  
  
-   <span data-ttu-id="aa8fa-107">Création de jetons de sécurité à partir d’un <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> objet passé par les implémentations de la <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-107">Creating security tokens from a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> object passed by implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
-   <span data-ttu-id="aa8fa-108">Création des clauses d’identificateur de clé à partir d’un jeton de sécurité pour les implémentations de la <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-108">Creating key identifier clauses from a security token for implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="aa8fa-109">Windows Identity Foundation (WIF) est fourni les gestionnaires de jetons de sécurité suivantes en dehors de la zone :</span><span class="sxs-lookup"><span data-stu-id="aa8fa-109">Windows Identity Foundation (WIF) ships the following security token handlers out of the box:</span></span>  
  
-   <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>  
  
 <span data-ttu-id="aa8fa-110">La plupart de ces classes expose des membres supplémentaires qui implémentent les fonctionnalités spécifiques au traitement des jetons pour lequel la classe est conçue.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-110">Most of these classes expose additional members that implement functionality that is specific to the processing of the tokens for which the class is designed.</span></span> <span data-ttu-id="aa8fa-111">Dans de nombreux cas, il peut être préférable de dériver de l’une de ces classes, plutôt que directement à partir de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-111">In many cases it may be better to derive from one of these classes rather than directly from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class.</span></span>  
  
 <span data-ttu-id="aa8fa-112">Un gestionnaire de jetons de sécurité peut être ajouté ou supprimé d’une collection de gestionnaire de jetons en spécifiant le [ &lt;ajouter&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [ &lt;supprimer&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), ou [ &lt;effacer&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) éléments sous le [ &lt;securityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) élément dans un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-112">A security token handler can be added or removed from  a token handler collection by specifying the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), or [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elements under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element in a configuration file.</span></span> <span data-ttu-id="aa8fa-113">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> objet qui contient les paramètres de configuration pour la collection de gestionnaires est accessible via la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propriété et la collection de gestionnaires dont le Gestionnaire de jetons est un membre est accessible à partir de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-113">The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> object that contains the configuration settings for the handler collection can be accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property and the handler collection that the token handler is a member of can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> property.</span></span> <span data-ttu-id="aa8fa-114">Vous pouvez remplacer le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> méthode pour traiter tous les éléments de configuration personnalisée qui prend de votre gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-114">You can override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method to process any custom configuration elements that your handler takes.</span></span>  
  
 <span data-ttu-id="aa8fa-115">La <xref:System.IdentityModel.Tokens.SecurityTokenHandler> classe expose plusieurs autres propriétés et méthodes.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-115">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class exposes several other properties and methods.</span></span> <span data-ttu-id="aa8fa-116">Selon les fonctionnalités que vous choisissez d’implémenter, vous pouvez remplacer tout ou partie de ces membres.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-116">Depending on the functionality that you choose to implement, you may override some or all of these members.</span></span>  
  
 <span data-ttu-id="aa8fa-117">Vous devez substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> propriété et la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> méthode pour fournir l’infrastructure WIF avec des informations sur le type de jeton de sécurité que votre classe est conçue pour traiter.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-117">You must override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to provide the WIF infrastructure with information about the type of security token that your class is designed to process.</span></span>  
  
 <span data-ttu-id="aa8fa-118">Validation, la sérialisation et désérialisation fonctionnalités sont exposées via les propriétés ou méthodes qui indiquent si le gestionnaire peut effectuer une fonction spécifique associée à l’ou les méthodes qui implémentent la fonctionnalité.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-118">Validation, serialization, and deserialization functionality is exposed through properties or methods that indicate whether the handler can perform a specific function combined with the method or methods that implement the functionality.</span></span> <span data-ttu-id="aa8fa-119">La liste suivante des paires les propriétés ou méthodes qui indiquent les fonctionnalités avec les méthodes qui implémentent ces fonctionnalités :</span><span class="sxs-lookup"><span data-stu-id="aa8fa-119">The following list pairs the properties or methods that indicate functionality with the methods that implement that functionality:</span></span>  
  
-   <span data-ttu-id="aa8fa-120">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> propriété et la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> méthode : valide un jeton et revendications contenues dans le jeton dans des packages un <xref:System.Security.Claims.ClaimsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-120">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property and  the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method: Validates a token and packages the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity>.</span></span>  
  
-   <span data-ttu-id="aa8fa-121">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propriété et la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> méthodes : sérialisation du jeton.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-121">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods: Token serialization.</span></span>  
  
-   <span data-ttu-id="aa8fa-122">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> méthodes et les <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> méthodes : la désérialisation du jeton.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-122">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> methods and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> methods: Token deserialization.</span></span>  
  
-   <span data-ttu-id="aa8fa-123">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> (méthode) et le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> méthode : la désérialisation des clauses d’identificateur de clé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-123">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method: Deserializing key identifier clauses.</span></span>  
  
-   <span data-ttu-id="aa8fa-124">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> (méthode) et le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> méthode : sérialisation des clauses d’identificateur de clé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-124">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method: Serializing key identifier clauses.</span></span>  
  
 <span data-ttu-id="aa8fa-125">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> et <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> méthodes sont appelées à partir du pipeline dans les implémentations de la <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-125">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> methods are called from the pipeline in implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="aa8fa-126">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> méthode est appelée par l’infrastructure WIF pour déterminer si le jeton spécifié a déjà été reçu.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-126">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is called by the WIF infrastructure to determine whether the specified token has already been received.</span></span> <span data-ttu-id="aa8fa-127">Par défaut, cette méthode retourne `false`, ce qui indique que le jeton n’a pas déjà été reçu.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-127">By default this method returns `false`, which indicates that the token has not already been received.</span></span> <span data-ttu-id="aa8fa-128">Vous pouvez substituer la méthode et fournir la logique permettant de détecter les jetons relus.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-128">You can override the method and provide logic to detect replayed tokens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa8fa-129">Les exemples de code dans tous les <xref:System.IdentityModel.Tokens.SecurityTokenHandler> rubriques sont tirées de la `Custom Token` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-129">The code examples in all of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="aa8fa-130">Cet exemple fournit des classes personnalisées qui permettent le traitement des jetons SWT (Simple Web Tokens).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-130">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="aa8fa-131">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-131">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="aa8fa-132">Le code XML suivant montre comment ajouter le Gestionnaire de jetons SWT à la collection de gestionnaires de jetons.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-132">The following XML shows how to add the SWT token handler to the token handlers collection.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration saveBootstrapContext="true">  
    <issuerTokenResolver type="SimpleWebToken.CustomIssuerTokenResolver, SimpleWebToken">  
      <AddAudienceKeyPair  symmetricKey="wAVkldQiFypTQ+kdNdGWCYCHRcee8XmXxOvgmak8vSY=" audience="http://localhost:19851/" />  
    </issuerTokenResolver>  
    <issuerNameRegistry type="RelyingParty.TrustedIssuerNameRegistry, RelyingParty"/>  
    <audienceUris>  
      <add value="http://localhost:19851/"/>  
    </audienceUris>  
    <securityTokenHandlers>  
      <add type="SimpleWebToken.SimpleWebTokenHandler, SimpleWebToken" />  
    </securityTokenHandlers>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa8fa-133">Appelée à partir des constructeurs des classes dérivées pour initialiser la classe <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-133">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="aa8fa-134">Lecteur XML positionné au niveau de l'élément de début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-134">An XML reader positioned at the start element.</span>
          </span>
          <span data-ttu-id="aa8fa-135">Le lecteur ne doit pas être avancé par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-135">The reader should not be advanced by this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-136">Retourne une valeur qui indique si l'élément XML dont il est fait référence par le lecteur XML spécifié est une clause de l'identificateur de clé qui peut être désérialisée par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-136">Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-137">
            <see langword="true" /> si la méthode <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> peut lire l'élément ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-137">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aa8fa-138">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-138">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-139">L’implémentation par défaut retourne `false` pour indiquer que la clause d’identificateur de clé ne peut pas être lu.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-139">The default implementation returns `false` to indicate that the key identifier clause cannot be read.</span></span>  
  
 <span data-ttu-id="aa8fa-140">Une classe dérivée vérifie l’élément auquel le lecteur est référence afin de déterminer si l’instance peut désérialiser une clause d’identificateur de clé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-140">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</span></span> <span data-ttu-id="aa8fa-141">Cela est généralement effectué via un appel à la <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> méthode avec les chaînes appropriées d’élément et l’espace de noms spécifié.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-141">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="aa8fa-142">Si vous substituez <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, vous devez également substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> méthode pour fournir la logique pour désérialiser la clause d’identificateur de clé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-142">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aa8fa-143">Retourne une valeur qui indique si le jeton spécifié peut être désérialisé en tant que jeton du type traité par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-143">Returns a value that indicates whether the specified token can be deserialized as a token of the type processed by this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (tokenString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::String ^ tokenString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString">
          <span data-ttu-id="aa8fa-144">Chaîne de jeton à lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-144">The token string to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-145">Retourne une valeur qui indique si la chaîne spécifiée peut être désérialisée comme un jeton du type traité par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-145">Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-146">
            <see langword="true" /> si la méthode <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> peut lire l'élément ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-146">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aa8fa-147">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-147">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-148">L'implémentation par défaut retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-148">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="aa8fa-149">Si vous substituez cette méthode, vous devez également substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> méthode pour fournir la logique pour désérialiser le jeton.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-149">If you override this method, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="aa8fa-150">Lecteur XML positionné au niveau d'un élément de début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-150">An XML reader positioned at a start element.</span>
          </span>
          <span data-ttu-id="aa8fa-151">Le lecteur ne doit pas être avancé par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-151">The reader should not be advanced by this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-152">Retourne une valeur qui indique si l'élément XML référencé par le lecteur XML spécifié peut être lu comme un jeton du type traité par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-152">Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-153">
            <see langword="true" /> si la méthode <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> peut lire l'élément ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-153">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aa8fa-154">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-154">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-155">L'implémentation par défaut retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-155">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="aa8fa-156">Une classe dérivée vérifie l’élément auquel le lecteur est référence afin de déterminer si l’instance peut désérialiser un jeton de sécurité.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-156">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</span></span> <span data-ttu-id="aa8fa-157">Cela est généralement effectué via un appel à la <xref:System.Xml.XmlReader.IsStartElement%2A> méthode avec les chaînes appropriées d’élément et l’espace de noms spécifié.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-157">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="aa8fa-158">Si vous substituez <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, vous devez également substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> méthode ou la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> méthode pour fournir la logique pour désérialiser la clause d’identificateur de clé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-158">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method or the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa8fa-159">Le code suivant montre comment substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> méthode pour déterminer si un jeton peut être lue par un gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-159">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> method to determine whether a token can be read by a handler.</span></span> <span data-ttu-id="aa8fa-160">Le code provient de la `Custom Token` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-160">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="aa8fa-161">Cet exemple fournit des classes personnalisées qui permettent le traitement des jetons SWT (Simple Web Tokens).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-161">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="aa8fa-162">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-162">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public virtual bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa8fa-163">Obtient une valeur indiquant si le gestionnaire prend en charge la validation des jetons de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-163">Gets a value that indicates whether the handler supports validation of security tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa8fa-164">
            <see langword="true" /> si la classe est capable de valider des jetons de sécurité ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-164">
              <see langword="true" /> if the class is capable of validating security tokens; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aa8fa-165">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-166">Pour implémenter la validation dans une classe dérivée, substituez cette propriété pour retourner `true` et remplacez le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> méthode pour implémenter la logique de validation.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-166">To implement validation in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method to implement the validation logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa8fa-167">Le code suivant montre comment substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> propriété pour indiquer qu’un gestionnaire personnalisé peut valider les jetons.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-167">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property to indicate that a custom handler can validate tokens.</span></span> <span data-ttu-id="aa8fa-168">Le code provient de la `Custom Token` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-168">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="aa8fa-169">Cet exemple fournit des classes personnalisées qui permettent le traitement des jetons SWT (Simple Web Tokens).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-169">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="aa8fa-170">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-170">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="aa8fa-171">Clause de l'identificateur de clé à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-171">The key identifier clause to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-172">Retourne une valeur qui indique si la clause d'identificateur de clé spécifiée peut être sérialisée par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-172">Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-173">
            <see langword="true" /> si la clause d'identificateur de clé spécifiée peut être sérialisée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-173">
              <see langword="true" /> if the key identifier clause can be serialized; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aa8fa-174">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-174">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-175">L'implémentation par défaut retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-175">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="aa8fa-176">Si vous substituez <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, vous devez également substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> méthode pour fournir la logique permettant de sérialiser la clause d’identificateur de clé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-176">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method to provide the logic to serialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa8fa-177">Obtient une valeur indiquant si le gestionnaire peut sérialiser les jetons de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-177">Gets a value that indicates whether the handler can serialize security tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa8fa-178">
            <see langword="true" /> si la classe est capable de sérialiser des jetons ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-178">
              <see langword="true" /> if the class is capable of serializing tokens; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aa8fa-179">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-179">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-180">Pour implémenter la sérialisation dans une classe dérivée, substituez cette propriété pour retourner `true` et remplacez le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> méthodes pour implémenter la logique de sérialisation.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-180">To implement serialization in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods to implement the serialization logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa8fa-181">Le code suivant montre comment substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propriété pour indiquer qu’un gestionnaire personnalisé peut sérialiser les jetons.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-181">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property to indicate that a custom handler can serialize tokens.</span></span> <span data-ttu-id="aa8fa-182">Le code provient de la `Custom Token` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-182">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="aa8fa-183">Cet exemple fournit des classes personnalisées qui permettent le traitement des jetons SWT (Simple Web Tokens).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-183">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="aa8fa-184">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-184">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public Property Configuration As SecurityTokenHandlerConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ Configuration { System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa8fa-185">Obtient ou définit l'objet <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> qui fournit la configuration pour l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-185">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> object that provides configuration for the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa8fa-186">Objet de configuration pour l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-186">The configuration object for the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-187">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propriété est généralement définie par l’infrastructure de configuration à partir de la [ &lt;securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) élément dans le fichier de configuration lors de l’application de démarrage.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-187">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property is typically set by the configuration infrastructure from the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element in the configuration file during application start up.</span></span>  
  
 <span data-ttu-id="aa8fa-188">Dans les classes dérivées, vous utilisez la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propriété pour accéder aux paramètres de configuration, par exemple, le Registre de nom d’émetteur à utiliser dans le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> méthode est accessible à partir de la <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> propriété de l’objet de configuration.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-188">In derived classes, you use the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property to access configuration settings; for example, the issuer name registry to use in the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property of the configuration object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingCollection">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainingCollection As SecurityTokenHandlerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ ContainingCollection { System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa8fa-189">Obtient la collection de gestionnaires de jetons qui contient l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-189">Gets the token handler collection that contains the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa8fa-190">Collection de gestionnaires de jetons qui contient l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-190">The token handler collection that contains the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-191">Lorsque le Gestionnaire de jetons est ajouté à un <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> instance, cette propriété est définie automatiquement.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-191">When the token handler is added to a <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> instance, this property is automatically set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenReference">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference(class System.IdentityModel.Tokens.SecurityToken token, bool attached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenReference (token As SecurityToken, attached As Boolean) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ CreateSecurityTokenReference(System::IdentityModel::Tokens::SecurityToken ^ token, bool attached);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="attached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="aa8fa-192">Jeton pour lequel la référence doit être créée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-192">The token for which the reference is to be created.</span>
          </span>
        </param>
        <param name="attached">
          <span data-ttu-id="aa8fa-193">
            <see langword="true" /> si une référence jointe doit être créée ; <see langword="false" /> si une référence non jointe doit être créée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-193">
              <see langword="true" /> if an attached reference should be created; <see langword="false" /> if an unattached reference should be created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-194">En cas de substitution dans une classe dérivée, crée la référence de jeton de sécurité pour les jetons traités par cette classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-194">When overridden in a derived class, creates the security token reference for tokens processed by that class.</span>
          </span>
          <span data-ttu-id="aa8fa-195">Cette méthode est généralement appelée par un service d'émission de jeton de sécurité (STS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-195">This method is typically called by a security token service (STS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-196">Clause d'identificateur de clé qui référence le jeton spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-196">A key identifier clause that references the specified token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-197">Par défaut, cette méthode lève un <xref:System.NotImplementedException> exception.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-197">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="aa8fa-198">Classes dérivées de substituer cette méthode pour retourner une clause d’identificateur de clé (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) qui peut être utilisé pour créer un `<wsse:SecurityTokenReference>` élément pour le jeton spécifié.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-198">Derived classes override this method to return a key identifier clause (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that can be used to create a `<wsse:SecurityTokenReference>` element for the specified token.</span></span>  
  
 <span data-ttu-id="aa8fa-199">Appelée à partir des implémentations de la <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-199">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="aa8fa-200">En règle générale, un <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> ne doit pas être utilisée, autre que lorsqu’un service de jeton de sécurité personnalisé est créé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-200">Typically, a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="aa8fa-201">Lorsqu'un service d'émission du jeton de sécurité retourne un jeton de sécurité, le jeton de sécurité émis contient des références à des jetons de sécurité attachés et détachés.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-201">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="aa8fa-202">Les références attachées renvoient aux jetons de sécurité qui sont contenus dans l'en-tête de sécurité d'un message SOAP et les références détachées renvoient à des jetons de sécurité qui ne sont pas inclus dans l'en-tête de sécurité d'un message SOAP.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-202">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="aa8fa-203">En général, ces références déclarent l'authenticité du jeton de sécurité émis.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-203">These references typically affirm the authenticity of the issued security token.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa8fa-204">Le code suivant montre comment substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> méthode pour créer une clause d’identificateur de clé à partir du jeton spécifié.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-204">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> method to create a key identifier clause from the specified token.</span></span> <span data-ttu-id="aa8fa-205">Le code provient de la `Custom Token` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-205">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="aa8fa-206">Cet exemple fournit des classes personnalisées qui permettent le traitement des jetons SWT (Simple Web Tokens).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-206">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="aa8fa-207">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-207">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">
          <span data-ttu-id="aa8fa-208">Descripteur de jeton de sécurité à partir duquel le jeton doit être créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-208">The security token descriptor from which the token is to be created.</span>
          </span>
          <span data-ttu-id="aa8fa-209">Les propriétés du descripteur de jeton sont définies avant l'appel de cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-209">Properties of the token descriptor are set before this method is called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-210">En cas de substitution dans une classe dérivée, crée un jeton de sécurité à l'aide descripteur de jetons spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-210">When overridden in a derived class, creates a security token using the specified token descriptor.</span>
          </span>
          <span data-ttu-id="aa8fa-211">Cette méthode est appelée par un service d'émission de jeton de sécurité (STS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-211">This method is called by a security token service (STS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-212">Jeton de sécurité qui correspond aux propriétés du descripteur de jetons.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-212">A security token that matches the properties of the token descriptor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-213">Par défaut, cette méthode lève un <xref:System.NotImplementedException> exception.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-213">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="aa8fa-214">Appelée à partir des implémentations de la <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-214">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa8fa-215">Le code suivant montre comment substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> méthode pour créer et renvoyer un jeton à partir d’un descripteur de jeton.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-215">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> method to create and return a token from a token descriptor.</span></span> <span data-ttu-id="aa8fa-216">Le code provient de la `Custom Token` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-216">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="aa8fa-217">Cet exemple fournit des classes personnalisées qui permettent le traitement des jetons SWT (Simple Web Tokens).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-217">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="aa8fa-218">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-218">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplayedToken">
      <MemberSignature Language="C#" Value="protected virtual void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DetectReplayedToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DetectReplayedToken (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DetectReplayedToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="aa8fa-219">Jeton à vérifier pour la relecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-219">The token to check for replay.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-220">En cas de substitution dans une classe dérivée, lève une exception si le jeton spécifié est identifié comme étant relu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-220">When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-221">L'implémentation par défaut n'exécute aucune opération.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-221">The default implementation does nothing.</span></span>  
  
 <span data-ttu-id="aa8fa-222">Les classes dérivées doivent lever un <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> si le jeton a déjà été utilisé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-222">Derived classes should throw a <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> if the token has already been used.</span></span>  
  
 <span data-ttu-id="aa8fa-223">Windows Identity Foundation (WIF) fournit le <xref:System.IdentityModel.Tokens.TokenReplayCache> la relecture caches peuvent être dérivés de classe et le [ &lt;tokenReplayCache&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) élément de configuration, ce qui peut être utilisé pour configurer le relire le cache utilisé par les gestionnaires de jetons dans une application ; Toutefois, l’implémentation exacte de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> méthode revient le Concepteur de la classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-223">Windows Identity Foundation (WIF) provides the <xref:System.IdentityModel.Tokens.TokenReplayCache> class from which replay caches may be derived and the [&lt;tokenReplayCache&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) configuration element, which can be used to configure the replay cache used by token handlers in an application; however, the exact implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is up to the designer of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public abstract string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa8fa-224">En cas de substitution dans une classe dérivée, retourne l'ensemble des URI utilisés dans les demandes pour identifier un jeton du type traité par cette classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-224">When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-225">Ensemble d'URI qui identifient le type de jeton que ce gestionnaire prend en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-225">The set of URIs that identify the token type that this handler supports.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-226">Le <xref:System.Type> du jeton traité par l’instance actuelle est accessible via la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-226">The <xref:System.Type> of the token processed by the current instance is accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property.</span></span> <span data-ttu-id="aa8fa-227">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> méthode retourne le jeu d’identificateurs acceptables qui peut être utilisé dans les messages pour faire référence au type de jeton.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-227">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</span></span> <span data-ttu-id="aa8fa-228">Par exemple, la valeur de l’URI utilisé dans le `<wst:TokenType>` élément sous le `<wst:RequestSecurityToken>` élément pour demander un type spécifique d’un jeton (représenté par la <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> propriété dans le modèle objet).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-228">For example, the URI value used in the `<wst:TokenType>` element under the `<wst:RequestSecurityToken>` element to request a specific kind of token (represented by the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> property in the object model).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa8fa-229">Le code suivant montre comment substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> méthode pour retourner les identificateurs de type de jeton pour un jeton personnalisé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-229">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to return the token type identifiers for a custom token.</span></span> <span data-ttu-id="aa8fa-230">Le code provient de la `Custom Token` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-230">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="aa8fa-231">Cet exemple fournit des classes personnalisées qui permettent le traitement des jetons SWT (Simple Web Tokens).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-231">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="aa8fa-232">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-232">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#17](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#17)]  
[!code-csharp[WifRcCustomToken#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">
          <span data-ttu-id="aa8fa-233">Éléments XML de configuration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-233">The configuration XML elements.</span>
          </span>
          <span data-ttu-id="aa8fa-234">Chaque nœud de la liste est de type <see cref="T:System.Xml.XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-234">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-235">Après substitution dans une classe dérivée, charge la configuration personnalisée à partir de XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-235">When overridden in a derived class, loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-236">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> méthode est appelée par l’infrastructure de configuration.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-236">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="aa8fa-237">Lorsque cette méthode est appelée, le `nodelist` contient les éléments enfants de niveau supérieur du Gestionnaire de jetons [ &lt;ajouter&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) élément à partir du fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-237">When this method is called, the `nodelist` will contain the top-level child elements of the token handler’s [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element from the configuration file.</span></span> <span data-ttu-id="aa8fa-238">Chacun de ces peut, à son tour, contenir des attributs ou des éléments enfants en fonction du schéma de configuration que vous définissez pour votre classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-238">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="aa8fa-239">L’implémentation par défaut lève une <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-239">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="aa8fa-240">Substituez cette méthode dans votre classe dérivée pour activer l’initialisation de votre gestionnaire de jetons de sécurité à partir d’un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-240">Override this method in your derived class to enable initialization of your security token handler from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="aa8fa-241">Un lecteur XML positionné sur l'élément de début du XML à désérialiser dans la clause d'identificateur de clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-241">An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-242">En cas de substitution dans une classe dérivée, désérialise le XML référencé par le lecteur XML spécifié en clause d'identificateur de clé qui référence un jeton traité par la classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-242">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-243">Clause de l'identificateur de clé qui a été désérialisée à partir du XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-243">The key identifier clause that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-244">Par défaut, cette méthode lève un <xref:System.NotImplementedException> exception.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-244">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="aa8fa-245">Substituez cette méthode pour fournir la logique pour désérialiser une clause d’identificateur de clé à partir de XML.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-245">Override this method to provide the logic to deserialize a key identifier clause from XML.</span></span> <span data-ttu-id="aa8fa-246">Si vous substituez cette méthode, vous devez également substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-246">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aa8fa-247">En cas de substitution dans une classe dérivée, désérialise le XML spécifié en un jeton du type traité par cette classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-247">When overridden in a derived class, deserializes the specified XML to a token of the type processed by the derived class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (tokenString As String) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::String ^ tokenString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString">
          <span data-ttu-id="aa8fa-248">Chaîne à désérialiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-248">The string to be deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-249">En cas de substitution dans une classe dérivée, désérialise la chaîne spécifiée en un jeton du type traité par cette classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-249">When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-250">Jeton de sécurité qui a été désérialisé de la chaîne spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-250">The security token that was deserialized from the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="aa8fa-251">Appel de cette méthode avec des données non approuvées est un risque de sécurité.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-251">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="aa8fa-252">Appelez cette méthode uniquement avec des données approuvées.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-252">Call this method only with trusted data.</span></span> <span data-ttu-id="aa8fa-253">Pour plus d’informations, consultez [Validation des données](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-253">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="aa8fa-254">Par défaut, cette méthode lève un <xref:System.NotImplementedException> exception.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-254">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="aa8fa-255">Substituez cette méthode pour fournir une fonctionnalité qui peut désérialiser un jeton de sécurité à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-255">Override this method to provide functionality that can deserialize a security token from a string.</span></span> <span data-ttu-id="aa8fa-256">Si vous substituez cette méthode, vous devez également substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-256">If you override, this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="aa8fa-257">Lecteur XML positionné au niveau de l'élément de début du jeton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-257">An XML reader positioned at the start element of the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-258">En cas de substitution dans une classe dérivée, désérialise le XML référencé par le lecteur XML spécifié en un jeton du type traité par cette classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-258">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-259">Jeton de sécurité qui a été désérialisé du XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-259">The security token that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="aa8fa-260">Appel de cette méthode avec des données non approuvées est un risque de sécurité.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-260">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="aa8fa-261">Appelez cette méthode uniquement avec des données approuvées.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-261">Call this method only with trusted data.</span></span> <span data-ttu-id="aa8fa-262">Pour plus d’informations, consultez [Validation des données](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-262">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="aa8fa-263">Par défaut, cette méthode lève un <xref:System.NotImplementedException> exception.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-263">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="aa8fa-264">Substituez cette méthode pour fournir la logique pour désérialiser un jeton de sécurité à partir de XML.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-264">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="aa8fa-265">Si vous substituez cette méthode, vous devez également substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-265">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="aa8fa-266">Dans les classes dérivées, si la méthode ne peut pas désérialiser le jeton à partir du XML référencé, elle lève généralement une <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-266">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa8fa-267">Le code suivant montre comment substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> méthode pour lire un jeton personnalisé à partir du lecteur XML spécifié.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-267">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> method to read a custom token from the specified XML reader.</span></span> <span data-ttu-id="aa8fa-268">Le code provient de la `Custom Token` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-268">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="aa8fa-269">Cet exemple fournit des classes personnalisées qui permettent le traitement des jetons SWT (Simple Web Tokens).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-269">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="aa8fa-270">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-270">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#7)]  
[!code-csharp[WifRcCustomToken#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#8)]  
[!code-csharp[WifRcCustomToken#14](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="aa8fa-271">Lecteur XML positionné au niveau de l'élément de début du jeton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-271">An XML reader positioned at the start element of the token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="aa8fa-272">Programme de résolution de jetons qui contient des jetons hors bande et mis en cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-272">A token resolver that contains out-of-band and cached tokens.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-273">En cas de substitution dans une classe dérivée, désérialise le XML référencé par un lecteur XML spécifié en un jeton du type traité par cette classe dérivée à l'aide du lecteur XML et du programme de résolution de jetons spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-273">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-274">Jeton de sécurité qui a été désérialisé du XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-274">The security token that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="aa8fa-275">Appel de cette méthode avec des données non approuvées est un risque de sécurité.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-275">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="aa8fa-276">Appelez cette méthode uniquement avec des données approuvées.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-276">Call this method only with trusted data.</span></span> <span data-ttu-id="aa8fa-277">Pour plus d’informations, consultez [Validation des données](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-277">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="aa8fa-278">L’implémentation par défaut ignore le `tokenResolver` paramètre et délègue l’appel à la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-278">The default implementation ignores the `tokenResolver` parameter and delegates the call to the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="aa8fa-279">Substituez cette méthode pour fournir la logique pour désérialiser un jeton de sécurité à partir de XML.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-279">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="aa8fa-280">Si vous substituez cette méthode, vous devez également substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-280">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="aa8fa-281">Dans les classes dérivées, si la méthode ne peut pas désérialiser le jeton à partir du XML référencé, elle lève généralement une <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-281">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public abstract Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ TokenType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa8fa-282">En cas de substitution dans une classe dérivée, obtient le type de jeton de sécurité traité par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-282">When overridden in a derived class, gets the type of the security token that is processed by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa8fa-283">Type du jeton de sécurité qui est traité par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-283">The type of the security token that is processed by this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-284">Vous devez substituer cette propriété dans les classes dérivées et retourner le <xref:System.Type> du jeton de sécurité (<xref:System.IdentityModel.Tokens.SecurityToken>) qui est traité par la classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-284">You must override this property in derived classes and return the <xref:System.Type> of the security token (<xref:System.IdentityModel.Tokens.SecurityToken>) that is processed by the derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa8fa-285">Le code suivant montre comment substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> propriété pour retourner le <xref:System.Type> de jetons de sécurité qui sont traitées par un gestionnaire personnalisé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-285">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property to return the <xref:System.Type> of the security tokens that are processed by a custom handler.</span></span> <span data-ttu-id="aa8fa-286">Le code provient de la `Custom Token` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-286">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="aa8fa-287">Cet exemple fournit des classes personnalisées qui permettent le traitement des jetons SWT (Simple Web Tokens).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-287">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="aa8fa-288">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-288">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#18](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationFailure">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationFailure (System.IdentityModel.Tokens.SecurityToken token, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationFailure(class System.IdentityModel.Tokens.SecurityToken token, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationFailure (token As SecurityToken, errorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationFailure(System::IdentityModel::Tokens::SecurityToken ^ token, System::String ^ errorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="aa8fa-289">Le jeton de sécurité qui est validé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-289">The security token that is being validated.</span>
          </span>
        </param>
        <param name="errorMessage">
          <span data-ttu-id="aa8fa-290">Message à écrire dans la trace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-290">The message to write to the trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-291">Effectue le traçage de l'événement d'échec lors de la validation des jetons de sécurité lorsque le traçage est activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-291">Traces the failure event during the validation of security tokens when tracing is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-292">Cette méthode doit être appelée à partir de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> en cas d’échec de la validation du jeton de méthode.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-292">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method when validation of the token fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationSuccess">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationSuccess (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationSuccess(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationSuccess (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationSuccess(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="aa8fa-293">Jeton qui a été validé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-293">The token that was validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-294">Effectue le traçage de la validation réussie de l'événement de jetons de sécurité lorsque le traçage est activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-294">Traces the successful validation of security tokens event when tracing is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-295">Cette méthode doit être appelée à partir de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> méthode une fois que le jeton a été correctement validé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-295">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method after the token has been successfully validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="aa8fa-296">Jeton à valider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-296">The token to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-297">En cas de substitution dans une classe dérivée,valide le jeton de sécurité spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-297">When overridden in a derived class, validates the specified security token.</span>
          </span>
          <span data-ttu-id="aa8fa-298">Le jeton doit être du type traité par la classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-298">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-299">Identités contenues dans le jeton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-299">The identities contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-300">Par défaut, cette méthode lève un <xref:System.NotImplementedException> exception.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-300">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="aa8fa-301">Le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> méthode est appelée par l’infrastructure pour valider et extraire les revendications du jeton de sécurité désérialisé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-301">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method is called by the infrastructure to validate and extract the claims from the deserialized security token.</span></span> <span data-ttu-id="aa8fa-302">Ces revendications sont retournées dans la collection de <xref:System.Security.Claims.ClaimsIdentity> les objets retournés par la méthode.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-302">These claims are returned in the collection of <xref:System.Security.Claims.ClaimsIdentity> objects returned by the method.</span></span> <span data-ttu-id="aa8fa-303">Dans le cas par défaut, cette collection contiendra une identité unique.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-303">In the typical case, this collection will contain a single identity.</span></span>  
  
 <span data-ttu-id="aa8fa-304">Dans les classes dérivées, validation inclut généralement la validation de l’audience prévue spécifiée dans le jeton par rapport à l’audience URI spécifiés dans le <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> propriété de l’objet de configuration de gestionnaire de jetons spécifié sur le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-304">In derived classes, validation typically includes validating the intended audience specified in the token against the audience URIs specified in the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> property of the token handler configuration object specified on the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="aa8fa-305">Ces URI sont généralement définies dans le fichier de configuration sous la [ &lt;audienceUris&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) élément.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-305">These URIs are typically set in the configuration file under the [&lt;audienceUris&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) element.</span></span> <span data-ttu-id="aa8fa-306">Si l’audience ne peut pas être validé, un <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> exception doit être levée.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-306">If the audience cannot be validated, an <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> exception should be thrown.</span></span>  
  
 <span data-ttu-id="aa8fa-307">Lors du traitement du jeton, l’émetteur est généralement validé en passant le jeton d’émetteur à un de la <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> méthodes sur le <xref:System.IdentityModel.Tokens.IssuerNameRegistry> objet qui est configuré pour le gestionnaire via le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-307">When processing the token, the issuer is typically validated by passing the issuer token to one of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> methods on the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> object that is configured for the handler through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="aa8fa-308">Le Registre de nom d’émetteur est généralement configuré via la [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) élément dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-308">The issuer name registry is typically configured through the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element in the configuration file.</span></span> <span data-ttu-id="aa8fa-309">La <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> retourne le nom de l’émetteur.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-309">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns the name of the issuer.</span></span> <span data-ttu-id="aa8fa-310">Ce nom doit être utilisé pour définir le <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> propriété dans les revendications contenues dans le jeton.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-310">This name should be used to set the <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> property in claims contained in the token.</span></span> <span data-ttu-id="aa8fa-311">Si le Registre de nom d’émetteur ne contient pas d’entrée pour le jeton d’émetteur, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-311">If the issuer name registry does not contain an entry for the issuer token, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns `null`.</span></span> <span data-ttu-id="aa8fa-312">Dans ce cas un <xref:System.IdentityModel.Tokens.SecurityTokenException> est généralement levée dans les classes dérivées, mais ce comportement est sur le Concepteur de la classe.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-312">In this case a <xref:System.IdentityModel.Tokens.SecurityTokenException> is typically thrown in derived classes, but this behavior is up to the designer of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa8fa-313">Le code suivant illustre une substitution de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> méthode pour un gestionnaire de jetons de sécurité qui traite les jetons web simple (SWT).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-313">The following code shows an override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method for a security token handler that processes simple web tokens (SWT).</span></span> <span data-ttu-id="aa8fa-314">Le code provient de la `CustomToken` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-314">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="aa8fa-315">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-315">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#9](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#9)]  
  
 <span data-ttu-id="aa8fa-316">Le code suivant illustre `CreateClaims` méthode est appelée à partir de la substitution de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> méthode dans l’exemple précédent.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-316">The following code shows `CreateClaims` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the previous example.</span></span> <span data-ttu-id="aa8fa-317">Cette méthode retourne un <xref:System.Security.Claims.ClaimsIdentity> objet qui est créé à partir des revendications dans le jeton.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-317">This method returns a <xref:System.Security.Claims.ClaimsIdentity> object that is created from the claims in the token.</span></span> <span data-ttu-id="aa8fa-318">Le code provient de la `CustomToken` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-318">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="aa8fa-319">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-319">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#15](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#15)]  
  
 <span data-ttu-id="aa8fa-320">Le code suivant illustre `ValidateSignature` méthode est appelée à partir de la substitution de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> méthode dans le Gestionnaire de jetons web simples.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-320">The following code shows `ValidateSignature` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="aa8fa-321">Cette méthode valide la signature du jeton à l’aide de la configuration <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-321">This method validates the signature on the token by using the configured <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span></span> <span data-ttu-id="aa8fa-322">Le code provient de la `CustomToken` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-322">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="aa8fa-323">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-323">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#12](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#12)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 <span data-ttu-id="aa8fa-324">Le code suivant illustre `ValidateAudience` méthode est appelée à partir de la substitution de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> méthode dans le Gestionnaire de jetons web simples.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-324">The following code shows `ValidateAudience` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="aa8fa-325">Cette méthode valide l’audience contenue dans le jeton par rapport à l’URI qui ont été spécifiées dans la configuration de l’audience.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-325">This method validates the audience contained in the token against the audience URIs that were specified in configuration.</span></span> <span data-ttu-id="aa8fa-326">Le code provient de la `CustomToken` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-326">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="aa8fa-327">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-327">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#13](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="aa8fa-328">Enregistreur XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-328">The XML writer.</span>
          </span>
        </param>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="aa8fa-329">Clause d'identificateur de clé à sérialiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-329">The key identifier clause to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-330">En cas de substitution dans une classe dérivée, sérialise la clause d'identificateur de clé spécifiée au format XML..</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-330">When overridden in a derived class, serializes the specified key identifier clause to XML.</span>
          </span>
          <span data-ttu-id="aa8fa-331">La clause de l'identificateur de clé doit être du type pris en charge par la classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-331">The key identifier clause must be of the type supported by the derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-332">Par défaut, cette méthode lève un <xref:System.NotImplementedException> exception.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-332">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="aa8fa-333">Substituez cette méthode pour fournir la logique permettant de sérialiser une clause d’identificateur de clé au format XML.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-333">Override this method to provide the logic to serialize a key identifier clause to XML.</span></span> <span data-ttu-id="aa8fa-334">Si vous substituez cette méthode, vous devez également substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-334">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aa8fa-335">En cas de substitution dans une classe dérivée, sérialise le jeton de sécurité spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-335">When overridden in a derived class, serializes the specified security token.</span>
          </span>
          <span data-ttu-id="aa8fa-336">Le jeton doit être du type traité par la classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-336">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual string WriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (token As SecurityToken) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="aa8fa-337">Jeton à sérialiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-337">The token to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-338">En cas de substitution dans une classe dérivée, sérialise le jeton de sécurité spécifié en chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-338">When overridden in a derived class, serializes the specified security token to a string.</span>
          </span>
          <span data-ttu-id="aa8fa-339">Le jeton doit être du type traité par la classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-339">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa8fa-340">Jeton sérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-340">The serialized token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-341">Par défaut, cette méthode lève un <xref:System.NotImplementedException> exception.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-341">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="aa8fa-342">Substituez cette méthode pour fournir la logique permettant de sérialiser un jeton de sécurité au format XML.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-342">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="aa8fa-343">Si vous substituez cette méthode, vous devez également substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-343">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="aa8fa-344">Enregistreur XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-344">The XML writer.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="aa8fa-345">Jeton à sérialiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-345">The token to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa8fa-346">En cas de substitution dans une classe dérivée, sérialise le jeton de sécurité spécifié au format XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-346">When overridden in a derived class, serializes the specified security token to XML.</span>
          </span>
          <span data-ttu-id="aa8fa-347">Le jeton doit être du type traité par la classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa8fa-347">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa8fa-348">Par défaut, cette méthode lève un <xref:System.NotImplementedException> exception.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-348">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="aa8fa-349">Substituez cette méthode pour fournir la logique permettant de sérialiser un jeton de sécurité au format XML.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-349">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="aa8fa-350">Si vous substituez cette méthode, vous devez également substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-350">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa8fa-351">Le code suivant montre comment substituer la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> méthode pour sérialiser un jeton personnalisé.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-351">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> method to serialize a custom token.</span></span> <span data-ttu-id="aa8fa-352">Le code provient de la `Custom Token` exemple.</span><span class="sxs-lookup"><span data-stu-id="aa8fa-352">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="aa8fa-353">Cet exemple fournit des classes personnalisées qui permettent le traitement des jetons SWT (Simple Web Tokens).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-353">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="aa8fa-354">Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="aa8fa-354">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#10](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#10)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>