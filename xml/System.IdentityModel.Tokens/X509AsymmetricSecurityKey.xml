<Type Name="X509AsymmetricSecurityKey" FullName="System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe2f833e2a9bfe92d43baeba6991fe68675542cb" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37757681" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509AsymmetricSecurityKey : System.IdentityModel.Tokens.AsymmetricSecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509AsymmetricSecurityKey extends System.IdentityModel.Tokens.AsymmetricSecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public Class X509AsymmetricSecurityKey&#xA;Inherits AsymmetricSecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509AsymmetricSecurityKey : System::IdentityModel::Tokens::AsymmetricSecurityKey" />
  <TypeSignature Language="F#" Value="type X509AsymmetricSecurityKey = class&#xA;    inherit AsymmetricSecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.AsymmetricSecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une clé asymétrique pour les certificats X.509.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509AsymmetricSecurityKey (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509AsymmetricSecurityKey(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509AsymmetricSecurityKey : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.IdentityModel.Tokens.X509AsymmetricSecurityKey" Usage="new System.IdentityModel.Tokens.X509AsymmetricSecurityKey certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">
          <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> qui représente le certificat X.509.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /> à l'aide du certificat X.509 spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.DecryptKey : string * byte[] -&gt; byte[]" Usage="x509AsymmetricSecurityKey.DecryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme de chiffrement pour déchiffrer la clé.</param>
        <param name="keyData">Tableau d'<see cref="T:System.Byte" /> qui contient la clé chiffrée.</param>
        <summary>Déchiffre la clé chiffrée spécifiée à l'aide de l'algorithme de chiffrement spécifié.</summary>
        <returns>Tableau d'<see cref="T:System.Byte" /> qui contient la clé déchiffrée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les champs <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> ou <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> permettent de spécifier l'algorithme.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le certificat X.509 spécifié dans le constructeur n'a pas de clé privée.  
  
- ou - 
Le certificat X.509 a une clé privée mais n'a pas été généré à l'aide de l'algorithme <see cref="T:System.Security.Cryptography.RSA" />.  
  
- ou - 
Le certificat X.509 a une clé privée et a été généré à l'aide de l'algorithme <see cref="T:System.Security.Cryptography.RSA" />, mais la propriété <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" /> a la valeur <see langword="null" />.  
  
- ou - 
Le paramètre <paramref name="algorithm" /> n'est pas pris en charge. Les algorithmes pris en charge sont <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> et <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.EncryptKey : string * byte[] -&gt; byte[]" Usage="x509AsymmetricSecurityKey.EncryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme de chiffrement pour chiffrer la clé.</param>
        <param name="keyData">Tableau d'<see cref="T:System.Byte" /> qui contient la clé à chiffrer.</param>
        <summary>Chiffre la clé chiffrée spécifiée à l'aide de l'algorithme de chiffrement spécifié.</summary>
        <returns>Tableau d'<see cref="T:System.Byte" /> qui contient la clé chiffrée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les champs <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> ou <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> permettent de spécifier l'algorithme.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le certificat X.509 spécifié dans le constructeur a une clé publique qui n'a pas été générée à l'aide de l'algorithme <see cref="T:System.Security.Cryptography.RSA" />.  
  
- ou - 
Le paramètre <paramref name="algorithm" /> n'est pas pris en charge. Les algorithmes pris en charge sont <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> et <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm(string algorithm, bool privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAsymmetricAlgorithm (algorithm As String, privateKey As Boolean) As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::AsymmetricAlgorithm ^ GetAsymmetricAlgorithm(System::String ^ algorithm, bool privateKey);" />
      <MemberSignature Language="F#" Value="override this.GetAsymmetricAlgorithm : string * bool -&gt; System.Security.Cryptography.AsymmetricAlgorithm" Usage="x509AsymmetricSecurityKey.GetAsymmetricAlgorithm (algorithm, privateKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="privateKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme asymétrique à créer.</param>
        <param name="privateKey">
          <see langword="true" /> lorsqu'une clé privée est requise pour créer l'algorithme ; sinon, <see langword="false" />.</param>
        <summary>Obtient l'algorithme de chiffrement asymétrique spécifié.</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> qui représente l'algorithme de chiffrement asymétrique spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les champs <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> ou <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> permettent de spécifier le paramètre `algorithm`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="privateKey" /> est <see langword="true" /> et le certificat X.509 spécifié dans le constructeur n'a pas de clé privée.  
  
- ou - 
 <paramref name="algorithm" /> est <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> et la clé publique ou privée pour le certificat X.509 spécifié dans le constructeur n'est pas de type <see cref="T:System.Security.Cryptography.DSA" />.  
  
- ou - 
 <paramref name="algorithm" /> est <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> ou <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> et la clé publique ou privée pour le certificat X.509 spécifié dans le constructeur n'est pas de type <see cref="T:System.Security.Cryptography.RSA" />.  
  
- ou - 
 <paramref name="algorithm" /> n'est pas pris en charge. Les algorithmes pris en charge sont <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> et <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashAlgorithmForSignature">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashAlgorithmForSignature (algorithm As String) As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::HashAlgorithm ^ GetHashAlgorithmForSignature(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetHashAlgorithmForSignature : string -&gt; System.Security.Cryptography.HashAlgorithm" Usage="x509AsymmetricSecurityKey.GetHashAlgorithmForSignature algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">L'algorithme de hachage.</param>
        <summary>Obtient un algorithme de chiffrement qui génère un hachage pour une signature numérique.</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.HashAlgorithm" /> qui génère des hachages pour les signatures numériques.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les champs <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> ou <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> permettent de spécifier le paramètre `algorithm`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="algorithm" /> n'est pas pris en charge. Les algorithmes pris en charge sont <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> et <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureDeformatter">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSignatureDeformatter (algorithm As String) As AsymmetricSignatureDeformatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::AsymmetricSignatureDeformatter ^ GetSignatureDeformatter(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetSignatureDeformatter : string -&gt; System.Security.Cryptography.AsymmetricSignatureDeformatter" Usage="x509AsymmetricSecurityKey.GetSignatureDeformatter algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureDeformatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme du déformateur pour la signature numérique de laquelle obtenir une instance.</param>
        <summary>Obtient l'algorithme du déformateur pour la signature numérique.</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> qui représente l'algorithme du déformateur pour la signature numérique.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les champs <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> ou <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> permettent de spécifier le paramètre `algorithm`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="algorithm" /> est <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> et la clé publique pour le certificat X.509 spécifié dans le constructeur n'est pas de type <see cref="T:System.Security.Cryptography.DSA" />.  
  
- ou - 
 <paramref name="algorithm" /> est <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> ou <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> et la clé publique pour le certificat X.509 spécifié dans le constructeur n'est pas de type <see cref="T:System.Security.Cryptography.RSA" />.  
  
- ou - 
 <paramref name="algorithm" /> n'est pas pris en charge. Les algorithmes pris en charge sont <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, 
 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> et <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureFormatter">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSignatureFormatter (algorithm As String) As AsymmetricSignatureFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::AsymmetricSignatureFormatter ^ GetSignatureFormatter(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetSignatureFormatter : string -&gt; System.Security.Cryptography.AsymmetricSignatureFormatter" Usage="x509AsymmetricSecurityKey.GetSignatureFormatter algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme du formateur pour la signature numérique de laquelle obtenir une instance.</param>
        <summary>Obtient l'algorithme du formateur pour la signature numérique.</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> qui représente l'algorithme du formateur pour la signature numérique.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les champs <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> ou <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> permettent de spécifier le paramètre `algorithm`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le certificat X.509 spécifié dans le constructeur n'a pas de clé privée.  
  
- ou - 
 <paramref name="algorithm" /> est <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> et la clé privée pour le certificat X.509 spécifié dans le constructeur n'est pas de type <see cref="T:System.Security.Cryptography.DSA" />.  
  
- ou - 
 <paramref name="algorithm" /> est <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> ou <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> et la clé privée pour le certificat X.509 spécifié dans le constructeur n'est pas de type <see cref="T:System.Security.Cryptography.RSA" />.  
  
- ou - 
 <paramref name="algorithm" /> n'est pas pris en charge. Les algorithmes pris en charge sont <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, 
 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> et <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public override bool HasPrivateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasPrivateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasPrivateKey () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasPrivateKey();" />
      <MemberSignature Language="F#" Value="override this.HasPrivateKey : unit -&gt; bool" Usage="x509AsymmetricSecurityKey.HasPrivateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une valeur qui indique si la clé privée est disponible.</summary>
        <returns>
          <see langword="true" /> lorsque la clé privée est disponible ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsAsymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAsymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAsymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAsymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsAsymmetricAlgorithm : string -&gt; bool" Usage="x509AsymmetricSecurityKey.IsAsymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme de chiffrement.</param>
        <summary>Obtient une valeur qui indique si l'algorithme spécifié utilise des clés asymétriques.</summary>
        <returns>
          <see langword="true" /> lorsque l'algorithme spécifié est <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" /> ou <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" /> ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSupportedAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSupportedAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSupportedAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSupportedAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSupportedAlgorithm : string -&gt; bool" Usage="x509AsymmetricSecurityKey.IsSupportedAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme de chiffrement.</param>
        <summary>Obtient une valeur qui indique si l'algorithme spécifié est pris en charge par cette classe.</summary>
        <returns>
          <see langword="true" /> lorsque l'algorithme spécifié est <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> ou <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> et que la clé publique est du type approprié ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A> retourne `true` lorsque l'un des éléments suivants est vrai :  
  
-   Le paramètre `algorithm` est <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> et la clé publique pour le certificat X.509 spécifié dans le constructeur est de type <xref:System.Security.Cryptography.DSA>.  
  
-   Le paramètre `algorithm` est <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> ou <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> et la clé publique pour le certificat X.509 spécifié dans le constructeur est de type <xref:System.Security.Cryptography.RSA>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSymmetricAlgorithm : string -&gt; bool" Usage="x509AsymmetricSecurityKey.IsSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme de chiffrement.</param>
        <summary>Obtient une valeur qui indique si l'algorithme spécifié utilise des clés symétriques.</summary>
        <returns>
          <see langword="true" /> lorsque l'algorithme spécifié est <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" /> ou <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" /> ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la taille, en bits, de la clé publique associée au certificat X.509.</summary>
        <value>Taille, en bits, de la clé publique associée au certificat X.509.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>