<Type Name="SessionSecurityTokenHandler" FullName="System.IdentityModel.Tokens.SessionSecurityTokenHandler">
  <TypeSignature Language="C#" Value="public class SessionSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d89b1-101"><see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> qui traite des jetons de sécurité de type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-101">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that processes security tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-102">La <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> classe sérialise, désérialise et valide les jetons de session.</span><span class="sxs-lookup"><span data-stu-id="d89b1-102">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes, deserializes, and validates session tokens.</span></span> <span data-ttu-id="d89b1-103">Les jetons de session sont des jetons de type <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span><span class="sxs-lookup"><span data-stu-id="d89b1-103">Session tokens are tokens of type <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span></span> <span data-ttu-id="d89b1-104">La <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> classe sérialise les jetons vers et depuis le format du cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-104">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes the tokens to and from cookie format.</span></span> <span data-ttu-id="d89b1-105">Par défaut, la classe sérialise les jetons en Feb2005 de Conversation WS-Secure ou WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` éléments.</span><span class="sxs-lookup"><span data-stu-id="d89b1-105">By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elements.</span></span> <span data-ttu-id="d89b1-106">Les jetons de session sont utilisées par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) et le <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) pour stocker les informations relatives à une session, il s’agit principalement le <xref:System.Security.Claims.ClaimsPrincipal> associé à l’utilisateur authentifié et les heures de début et d’expiration de session.</span><span class="sxs-lookup"><span data-stu-id="d89b1-106">Session tokens are used by the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) and the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) to store information about a session, this is primarily the <xref:System.Security.Claims.ClaimsPrincipal> associated with the authenticated user and the session start and expiration times.</span></span>  
  
 <span data-ttu-id="d89b1-107">Dans les scénarios passifs, le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> appelle la <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) depuis le pipeline d’authentification pour créer un jeton de session à partir de la <xref:System.Security.Claims.ClaimsPrincipal> qui représente l’utilisateur authentifié.</span><span class="sxs-lookup"><span data-stu-id="d89b1-107">In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user.</span></span> <span data-ttu-id="d89b1-108">SAM utilise son configuré <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> pour créer le jeton et de le sérialiser dans un cookie (et pour désérialiser le jeton à partir d’un cookie sur les demandes suivantes).</span><span class="sxs-lookup"><span data-stu-id="d89b1-108">The SAM uses its configured <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</span></span> <span data-ttu-id="d89b1-109">SAM utilise une instance de son configuré <xref:System.IdentityModel.Services.CookieHandler> classe réécrire le cookie dans la réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="d89b1-109">The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response.</span></span> <span data-ttu-id="d89b1-110">Ce cookie est ensuite renvoyé au client et sur les demandes suivantes, le client peut présenter le cookie, plutôt que d’effectuer un aller-retour vers le fournisseur d’identité pour ré-obtenir un jeton de sécurité.</span><span class="sxs-lookup"><span data-stu-id="d89b1-110">This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</span></span> <span data-ttu-id="d89b1-111">Pour plus d’informations sur le fonctionnement des sessions avec WIF, consultez [gestion de Session WIF](~/docs/framework/security/wif-session-management.md).</span><span class="sxs-lookup"><span data-stu-id="d89b1-111">For more information about how sessions operate with WIF, see [WIF Session Management](~/docs/framework/security/wif-session-management.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d89b1-112">Le \<securityTokenHandlers > élément de configuration peut être utilisé pour spécifier un <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> qui a la responsabilité pour la sécurisation des sessions de l’application.</span><span class="sxs-lookup"><span data-stu-id="d89b1-112">The \<securityTokenHandlers> configuration element can be used to specify a <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has the responsibility for securing the application’s sessions.</span></span> <span data-ttu-id="d89b1-113">Les développeurs soyez prudent lorsque vous modifiez ce paramètre de configuration, comme un système de configuration incorrecte peut entraîner de compromission de l’application.</span><span class="sxs-lookup"><span data-stu-id="d89b1-113">Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</span></span> <span data-ttu-id="d89b1-114">Par exemple, en spécifiant un lien hypertexte dérivé «http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx"\t « _blank » <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> et en passant une collection de transformations (CookieTransform) vide à la base, provoquerait l’identité des utilisateurs qui sont sérialisée dans un cookie qui n’était pas protégé.</span><span class="sxs-lookup"><span data-stu-id="d89b1-114">For example, specifying a derived  HYPERLINK "http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx" \t "_blank" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</span></span> <span data-ttu-id="d89b1-115">Cela pourrait permettre un attaquant de modifier l’identité et par conséquent les privilèges d’accès.</span><span class="sxs-lookup"><span data-stu-id="d89b1-115">This could allow an attacker to modify the identity and therefore change access privileges.</span></span>  
  
 <span data-ttu-id="d89b1-116">Si le jeton de session est en mode de référence, autrement dit, son <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propriété `true`, la session, le Gestionnaire de jetons sérialise uniquement les propriétés de jeton de session qui sont nécessaires pour régénérer la clé dans le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span><span class="sxs-lookup"><span data-stu-id="d89b1-116">If the session token is in reference mode, that is, its <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span> <span data-ttu-id="d89b1-117">Dans le cas par défaut, le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> classe est utilisée pour représenter les clés de cache, et le Gestionnaire de jetons écrit le <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> et <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> propriétés du jeton.</span><span class="sxs-lookup"><span data-stu-id="d89b1-117">In the default case, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class is used to represent cache keys, and the token handler writes the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> properties of the token.</span></span> <span data-ttu-id="d89b1-118">Si le jeton de session n’est pas en mode de référence, autrement dit, le <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propriété est `false`, puis, en plus des propriétés mentionnées précédemment, le gestionnaire appelle la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> méthode sur un tableau d’octets à partir duquel les magasins et un jeton sérialisé le valeur de résultat dans le cookie ainsi.</span><span class="sxs-lookup"><span data-stu-id="d89b1-118">If the session token is not in reference mode, that is, the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, then, in addition to the properties mentioned previously, the handler invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</span></span> <span data-ttu-id="d89b1-119">Pour plus d’informations sur la façon dont le jeton est sérialisé, consultez le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d89b1-119">For more details about how the token is serialized, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d89b1-120">Le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> propriété obtient la liste des transformations qui sont appliqués à la session de jeton dans le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d89b1-120">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property gets the list of transforms that are applied to the session token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span> <span data-ttu-id="d89b1-121">Toutes les transformations dérivent la <xref:System.IdentityModel.CookieTransform> classe.</span><span class="sxs-lookup"><span data-stu-id="d89b1-121">All transforms derive from the <xref:System.IdentityModel.CookieTransform> class.</span></span> <span data-ttu-id="d89b1-122">Dans le cas par défaut le <xref:System.IdentityModel.DeflateCookieTransform> et <xref:System.IdentityModel.ProtectedDataCookieTransform> sont appliquées.</span><span class="sxs-lookup"><span data-stu-id="d89b1-122">In the default case the <xref:System.IdentityModel.DeflateCookieTransform> and the <xref:System.IdentityModel.ProtectedDataCookieTransform> are applied.</span></span> <span data-ttu-id="d89b1-123">Le <xref:System.IdentityModel.ProtectedDataCookieTransform> utilise l’API de Protection des données (DPAPI) pour protéger les informations de cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-123">The <xref:System.IdentityModel.ProtectedDataCookieTransform> uses the Data Protection API (DPAPI) to protect the cookie material.</span></span> <span data-ttu-id="d89b1-124">DPAPI utilise une clé qui est spécifique à l’ordinateur sur lequel il est en cours d’exécution dans les algorithmes de sa protection.</span><span class="sxs-lookup"><span data-stu-id="d89b1-124">DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</span></span> <span data-ttu-id="d89b1-125">Pour cette raison, le Gestionnaire de jetons de session par défaut n’est pas utilisable dans les scénarios de batterie de serveurs Web car, dans de tels scénarios, jetons écrites sur un ordinateur a besoin de lire sur un autre ordinateur.</span><span class="sxs-lookup"><span data-stu-id="d89b1-125">For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</span></span> <span data-ttu-id="d89b1-126">Vous pouvez utiliser plusieurs stratégies pour contourner ce problème.</span><span class="sxs-lookup"><span data-stu-id="d89b1-126">You can use many strategies to circumvent this issue.</span></span> <span data-ttu-id="d89b1-127">Par exemple, vous pouvez :</span><span class="sxs-lookup"><span data-stu-id="d89b1-127">For example, you can:</span></span>  
  
-   <span data-ttu-id="d89b1-128">Remplacez la valeur par défaut <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> avec la <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span><span class="sxs-lookup"><span data-stu-id="d89b1-128">Replace the default <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> with the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span></span> <span data-ttu-id="d89b1-129">Le <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> vous permet de spécifier des clés de signature et de chiffrement sous ASP.NET `<machineKey>` élément dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="d89b1-129">The <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> enables you to specify signing and encryption keys under the ASP.NET `<machineKey>` element in the configuration file.</span></span>  
  
-   <span data-ttu-id="d89b1-130">Fournir un gestionnaire pour le <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> avec une instance de gestionnaire d’événement dans le fichier global.asax.cs et remplacer la session par défaut du jeton <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> qui a une liste des transformations qui inclut le <xref:System.IdentityModel.RsaSignatureCookieTransform> et <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span><span class="sxs-lookup"><span data-stu-id="d89b1-130">Provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event in the global.asax.cs file and replace the default session token handler with an instance of <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has a list of transforms that includes the <xref:System.IdentityModel.RsaSignatureCookieTransform> and the <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span></span> <span data-ttu-id="d89b1-131">Vous pouvez créer la nouvelle instance en appelant un des constructeurs qui prend une liste des transformations.</span><span class="sxs-lookup"><span data-stu-id="d89b1-131">You can create the new instance by invoking one of the constructors that takes a list of transforms.</span></span>  
  
-   <span data-ttu-id="d89b1-132">Dériver une transformation personnalisée à partir de la <xref:System.IdentityModel.CookieTransform> classe de base et utiliser la méthode ci-dessus pour l’inclure dans la liste des transformations à appliquer.</span><span class="sxs-lookup"><span data-stu-id="d89b1-132">Derive a custom transform from the <xref:System.IdentityModel.CookieTransform> base class and use the method above to include it in the list of transforms to be applied.</span></span>  
  
-   <span data-ttu-id="d89b1-133">Dériver un gestionnaire de jetons personnalisé à partir de <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> et d’implémenter votre propre mécanisme.</span><span class="sxs-lookup"><span data-stu-id="d89b1-133">Derive a custom token handler from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and implement your own mechanism.</span></span>  
  
 <span data-ttu-id="d89b1-134">Pour plus d’informations sur l’utilisation des sessions dans les scénarios de batterie de serveurs Web, consultez [WIF et batteries de serveurs Web](~/docs/framework/security/wif-and-web-farms.md).</span><span class="sxs-lookup"><span data-stu-id="d89b1-134">For more information about using sessions in Web farm scenarios, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).</span></span>  
  
 <span data-ttu-id="d89b1-135">Le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> est inclus dans la collection de gestionnaire de jetons par défaut ; Toutefois, remplacez par un gestionnaire de jeton de session personnalisé en spécifiant au préalable un [ &lt;supprimer&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) élément sous la [ &lt;securityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) élément à supprimer le gestionnaire par défaut à partir de la collection et en ajoutant ensuite votre gestionnaire de jetons personnalisé à l’aide de la [ &lt;ajouter&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) élément.</span><span class="sxs-lookup"><span data-stu-id="d89b1-135">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) element under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element to remove the default handler from the collection and then adding your custom token handler using the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element.</span></span> <span data-ttu-id="d89b1-136">Par défaut, vous pouvez spécifier la durée de vie de jeton par défaut en incluant le [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) élément sous le `<add>` élément.</span><span class="sxs-lookup"><span data-stu-id="d89b1-136">By default, you can specify the default token lifetime by including the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element under the `<add>` element.</span></span> <span data-ttu-id="d89b1-137">Vous pouvez créer un gestionnaire de jetons personnalisé pour prendre des éléments de configuration personnalisés sous le `<add>` élément en remplaçant le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> méthode pour fournir la logique pour les traiter.</span><span class="sxs-lookup"><span data-stu-id="d89b1-137">You can design a custom token handler to take custom configuration elements under the `<add>` element by overriding the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method to provide the logic to process them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d89b1-138">Le code XML suivant montre comment remplacer le Gestionnaire de jetons de sécurité session de valeur par défaut dans une collection de gestionnaire de jetons avec une instance de la <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> classe dans la configuration.</span><span class="sxs-lookup"><span data-stu-id="d89b1-138">The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class in configuration.</span></span>  
  
```xml  
<securityTokenHandlers>  
  <remove type="System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
  <add type="System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
</securityTokenHandlers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />
    <altmember cref="T:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.CookieTransform" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d89b1-139">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-139">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d89b1-140">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> qui utilise les transformations de cookies et la durée de vie de jeton par défaut.</span><span class="sxs-lookup"><span data-stu-id="d89b1-140">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the default cookie transforms and token lifetime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-141">Le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> et <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> propriétés sont initialisées à <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> et <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span><span class="sxs-lookup"><span data-stu-id="d89b1-141">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms"><span data-ttu-id="d89b1-142">Transformations à appliquer lors de l'encodage ou du décodage du cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-142">The transforms to apply when encoding or decoding the cookie.</span></span> <span data-ttu-id="d89b1-143">Définit la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-143">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span></span></param>
        <summary><span data-ttu-id="d89b1-144">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> qui utilise les transformations de cookies spécifiées.</span><span class="sxs-lookup"><span data-stu-id="d89b1-144">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-145">La propriété <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> est initialisée à <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span><span class="sxs-lookup"><span data-stu-id="d89b1-145">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-146"><paramref name="transforms" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-146"><paramref name="transforms" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms, valuetype System.TimeSpan tokenLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform), tokenLifetime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms, TimeSpan tokenLifetime);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
        <Parameter Name="tokenLifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="transforms"><span data-ttu-id="d89b1-147">Transformations à appliquer lors de l'encodage ou du décodage du cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-147">The transforms to apply when encoding or decoding the cookie.</span></span> <span data-ttu-id="d89b1-148">Définit la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-148">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span></span></param>
        <param name="tokenLifetime"><span data-ttu-id="d89b1-149">Durée de vie par défaut d'un jeton.</span><span class="sxs-lookup"><span data-stu-id="d89b1-149">The default lifetime for a token.</span></span> <span data-ttu-id="d89b1-150">Définit la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-150">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> property.</span></span></param>
        <summary><span data-ttu-id="d89b1-151">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> qui utilise les transformations de cookies et la durée de vie de jeton spécifiées.</span><span class="sxs-lookup"><span data-stu-id="d89b1-151">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms and token lifetime.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-152"><paramref name="transforms" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-152"><paramref name="transforms" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d89b1-153"><paramref name="tokenLifetime" /> est inférieur ou égal à <see cref="F:System.TimeSpan.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-153"><paramref name="tokenLifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTransforms">
      <MemberSignature Language="C#" Value="protected virtual byte[] ApplyTransforms (byte[] cookie, bool outbound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ApplyTransforms(unsigned int8[] cookie, bool outbound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ApplyTransforms (cookie As Byte(), outbound As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ApplyTransforms(cli::array &lt;System::Byte&gt; ^ cookie, bool outbound);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
        <Parameter Name="outbound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="d89b1-154">Cookie qui sera transformé.</span><span class="sxs-lookup"><span data-stu-id="d89b1-154">The cookie that will be transformed.</span></span></param>
        <param name="outbound">
          <span data-ttu-id="d89b1-155"><see langword="true" /> si le cookie doit être encodé ; <see langword="false" /> si le cookie doit être décodé.</span><span class="sxs-lookup"><span data-stu-id="d89b1-155"><see langword="true" /> if the cookie should be encoded; <see langword="false" /> if the cookie should be decoded.</span></span></param>
        <summary><span data-ttu-id="d89b1-156">Applique les transformations spécifiées par la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> pour encoder ou décoder le cookie spécifié.</span><span class="sxs-lookup"><span data-stu-id="d89b1-156">Applies the transforms specified by the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property to either encode or decode the specified cookie.</span></span></summary>
        <returns><span data-ttu-id="d89b1-157">Cookie encodé ou décodé.</span><span class="sxs-lookup"><span data-stu-id="d89b1-157">The encoded or decoded cookie.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-158">Quand un cookie d’encodage transforme sont appliquées dans l’ordre dans lequel ils apparaissent dans le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d89b1-158">When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="d89b1-159">Lors du décodage d’un cookie, elles sont appliquées dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="d89b1-159">When decoding a cookie, they are applied in the reverse order.</span></span>  
  
 <span data-ttu-id="d89b1-160">Appelée à partir de la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> et <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> méthodes pour encoder et décoder le matériel de cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-160">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to encode and decode the cookie material.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d89b1-161">La propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-161">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="d89b1-162"><see cref="T:System.Xml.XmlReader" /> sur le <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> entrant.</span><span class="sxs-lookup"><span data-stu-id="d89b1-162">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span> <span data-ttu-id="d89b1-163">Le lecteur doit être placé au niveau d'un élément <see langword="&lt;wsc:SecurityContextToken&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-163">The reader should be positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span></span></param>
        <summary><span data-ttu-id="d89b1-164">Retourne une valeur qui indique si le lecteur est positionné sur un élément <see langword="&lt;wsc:SecurityContextToken&gt;" /> .</span><span class="sxs-lookup"><span data-stu-id="d89b1-164">Returns a value that indicates whether the reader is positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span></span></summary>
        <returns>
          <span data-ttu-id="d89b1-165"><see langword="true" /> si le lecteur pointe sur un élément <see langword="&lt;wsc:SecurityContextToken&gt;" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-165"><see langword="true" /> if the reader points to a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-166"><paramref name="reader" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-166"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d89b1-167">Obtient une valeur qui indique si ce gestionnaire prend en charge la validation des jetons du type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-167">Gets a value that indicates whether this handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
        <value>
          <span data-ttu-id="d89b1-168"><see langword="true" /> si le gestionnaire prend en charge la validation des jetons du type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-168"><see langword="true" /> if the handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d89b1-169">Toujours <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-169">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d89b1-170">Obtient une valeur qui indique si ce gestionnaire peut écrire les jetons de type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-170">Gets a value that indicates whether this handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
        <value>
          <span data-ttu-id="d89b1-171"><see langword="true" /> si le gestionnaire peut écrire des jetons de type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-171"><see langword="true" /> if the handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d89b1-172">Toujours <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-172">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieElementName">
      <MemberSignature Language="C#" Value="public virtual string CookieElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieElementName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieElementName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d89b1-173">Obtient le nom de l'élément de cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-173">Gets the name for the cookie element.</span></span></summary>
        <value><span data-ttu-id="d89b1-174">Nom de l'élément de cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-174">The name for the cookie element.</span></span> <span data-ttu-id="d89b1-175">Le nom d’élément par défaut est « Cookie ».</span><span class="sxs-lookup"><span data-stu-id="d89b1-175">The default element name is "Cookie".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-176">Cette propriété est utilisée dans les <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> et <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> méthodes permettent de déterminer l’élément sous lequel le matériel de jeton encodé doit être écrit ou lu.</span><span class="sxs-lookup"><span data-stu-id="d89b1-176">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CookieNamespace">
      <MemberSignature Language="C#" Value="public virtual string CookieNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieNamespace" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d89b1-177">Obtient l'espace de noms pour l'élément de cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-177">Gets the namespace for the cookie element.</span></span></summary>
        <value><span data-ttu-id="d89b1-178">Espace de noms pour l'élément de cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-178">The namespace for the cookie element.</span></span> <span data-ttu-id="d89b1-179">L’espace de noms par défaut est «http://schemas.microsoft.com/ws/2006/05/security».</span><span class="sxs-lookup"><span data-stu-id="d89b1-179">The default namespace is "http://schemas.microsoft.com/ws/2006/05/security".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-180">Cette propriété est utilisée dans les <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> et <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> méthodes permettent de déterminer l’espace de noms de l’élément sous lequel le matériel de jeton encodé doit être écrit ou lu.</span><span class="sxs-lookup"><span data-stu-id="d89b1-180">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken(class System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.DateTime validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionSecurityToken (principal As ClaimsPrincipal, context As String, endpointId As String, validFrom As DateTime, validTo As DateTime) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SessionSecurityToken ^ CreateSessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ context, System::String ^ endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="validTo" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="d89b1-181">Principal des revendications.</span><span class="sxs-lookup"><span data-stu-id="d89b1-181">The claims principal.</span></span></param>
        <param name="context"><span data-ttu-id="d89b1-182">Chaîne de contexte définie par l'appelant.</span><span class="sxs-lookup"><span data-stu-id="d89b1-182">A caller-defined context string.</span></span></param>
        <param name="endpointId"><span data-ttu-id="d89b1-183">Identificateur du point de terminaison auquel le jeton est étendu.</span><span class="sxs-lookup"><span data-stu-id="d89b1-183">The identifier of the endpoint to which the token is scoped.</span></span></param>
        <param name="validFrom"><span data-ttu-id="d89b1-184">Instant auquel le jeton devient non valide.</span><span class="sxs-lookup"><span data-stu-id="d89b1-184">The time instant at which the token becomes valid.</span></span></param>
        <param name="validTo"><span data-ttu-id="d89b1-185">Instant après lequel le jeton n'est plus valide.</span><span class="sxs-lookup"><span data-stu-id="d89b1-185">The time instant after which the token is no longer valid.</span></span></param>
        <summary><span data-ttu-id="d89b1-186">Crée un <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> en fonction du principal des revendications spécifié et de la plage horaire pendant laquelle le jeton est valide.</span><span class="sxs-lookup"><span data-stu-id="d89b1-186">Creates a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> based on the specified claims principal and time range during which the token is valid.</span></span></summary>
        <returns><span data-ttu-id="d89b1-187">Jeton de sécurité de session qui a été créé.</span><span class="sxs-lookup"><span data-stu-id="d89b1-187">The session security token that was created.</span></span> <span data-ttu-id="d89b1-188">Les propriétés du nouveau jeton de session sont définies en fonction des paramètres spécifiés.</span><span class="sxs-lookup"><span data-stu-id="d89b1-188">The properties on the new session token are set according to the specified parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-189"><paramref name="principal" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-189"><paramref name="principal" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d89b1-190">La propriété <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-190">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="d89b1-191">Descripteur de jeton à partir duquel créer le jeton.</span><span class="sxs-lookup"><span data-stu-id="d89b1-191">The token descriptor from which to create the token.</span></span></param>
        <summary><span data-ttu-id="d89b1-192">Crée un jeton de sécurité en fonction du descripteur de jetons spécifié.</span><span class="sxs-lookup"><span data-stu-id="d89b1-192">Creates a security token based on the specified token descriptor.</span></span></summary>
        <returns><span data-ttu-id="d89b1-193">Jeton de sécurité de session qui a été créé.</span><span class="sxs-lookup"><span data-stu-id="d89b1-193">The security token that was created.</span></span> <span data-ttu-id="d89b1-194">Il s'agira d'une instance de <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-194">This will be an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-195">Crée et retourne un jeton de sécurité de session dans le descripteur de jeton à l’aide des propriétés suivantes : <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, et <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d89b1-195">Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d89b1-196">Si le <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> propriété a la valeur `true` sur la configuration du Gestionnaire de jeton spécifiée par le <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propriété, le contexte d’amorçage est créé à partir de la <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> propriété et est enregistré dans le jeton de session.</span><span class="sxs-lookup"><span data-stu-id="d89b1-196">If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> property and is saved in the session token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-197"><paramref name="tokenDescriptor" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-197"><paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d89b1-198">La propriété <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-198">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCookieTransforms">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultCookieTransforms As ReadOnlyCollection(Of CookieTransform) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ DefaultCookieTransforms;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d89b1-199">Collection en lecture seule qui contient la liste des transformations par défaut à appliquer aux cookies, à <see cref="T:System.IdentityModel.DeflateCookieTransform" /> et à <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-199">A read only collection that contains the list of default transforms to be applied to cookies, the <see cref="T:System.IdentityModel.DeflateCookieTransform" /> and the <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLifetime">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultLifetime" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultLifetime As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan DefaultLifetime;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d89b1-200">Constante qui spécifie la durée de vie par défaut des cookies, soit dix heures.</span><span class="sxs-lookup"><span data-stu-id="d89b1-200">A constant that specifies the default lifetime for cookies, ten hours.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultTokenLifetime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan DefaultTokenLifetime { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d89b1-201">Obtient la durée de vie du jeton par défaut.</span><span class="sxs-lookup"><span data-stu-id="d89b1-201">Gets the default token lifetime.</span></span></summary>
        <value><span data-ttu-id="d89b1-202">Durée de vie du jeton par défaut.</span><span class="sxs-lookup"><span data-stu-id="d89b1-202">The default token lifetime.</span></span> <span data-ttu-id="d89b1-203">Toujours <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-203">Always <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d89b1-204">Obtient les URI d'identificateur de type de jeton pour les types de jetons qui peuvent être gérés par ce gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="d89b1-204">Gets the token type URIs for the token types that can be processed by this handler.</span></span></summary>
        <returns><span data-ttu-id="d89b1-205">URI d'identificateur de type de jeton pour les types de jetons qui peuvent être gérés par ce gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="d89b1-205">The token type identifier URIs for token types that can be processed by this handler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-206">URI des types suivants sont pris en charge : «http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation«, »http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct», et «http://schemas.xmlsoap.org/ws/2005/02/sc/sct».</span><span class="sxs-lookup"><span data-stu-id="d89b1-206">The following type URIs are supported: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", and "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements"><span data-ttu-id="d89b1-207">Éléments de configuration personnalisée.</span><span class="sxs-lookup"><span data-stu-id="d89b1-207">The custom configuration elements.</span></span></param>
        <summary><span data-ttu-id="d89b1-208">Charge la configuration personnalisée à partir du XML.</span><span class="sxs-lookup"><span data-stu-id="d89b1-208">Loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-209">Appelée par l’infrastructure de configuration pour initialiser la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance.</span><span class="sxs-lookup"><span data-stu-id="d89b1-209">Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance.</span></span> <span data-ttu-id="d89b1-210">Initialise le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> propriété à partir de la `lifetime` attribut de la [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) élément dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="d89b1-210">Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-211"><paramref name="customConfigElements" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-211"><paramref name="customConfigElements" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d89b1-212">La configuration spécifiée par <paramref name="customConfigElements" /> n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="d89b1-212">The configuration specified by <paramref name="customConfigElements" /> is not valid.</span></span> <span data-ttu-id="d89b1-213">Par exemple, il ne contient pas d'élément <see langword="&lt;sessionTokenRequirement&gt;" />, il contient plusieurs éléments <see langword="&lt;sessionTokenRequirement&gt;" />, une valeur <see cref="T:System.TimeSpan" /> valide ne peut pas être lue à partir de l'attribut <see langword="lifetime" />, ou l'attribut <see langword="lifetime" /> spécifie une valeur inférieure à <see cref="F:System.TimeSpan.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-213">For example, it does not contain a <see langword="&lt;sessionTokenRequirement&gt;" /> element, it contains more than one <see langword="&lt;sessionTokenRequirement&gt;" /> element, a valid <see cref="T:System.TimeSpan" /> value cannot be read from the <see langword="lifetime" /> attribute, or the <see langword="lifetime" /> attribute specifies a value that is less than <see cref="F:System.TimeSpan.Zero" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d89b1-214">Lit un <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-214">Reads a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-215">L’implémentation par défaut désérialise le jeton à partir d’un Feb2005 de Conversation WS-Secure ou WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` élément.</span><span class="sxs-lookup"><span data-stu-id="d89b1-215">The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="d89b1-216"><see cref="T:System.Xml.XmlReader" /> sur le <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> entrant.</span><span class="sxs-lookup"><span data-stu-id="d89b1-216">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="d89b1-217">Lit le <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> à l'aide du lecteur XML spécifié.</span><span class="sxs-lookup"><span data-stu-id="d89b1-217">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="d89b1-218">Jeton de sécurité de session qui a été lu, instance <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-218">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-219">Le lecteur doit être positionné sur un Feb2005 WS-Secure de Conversation ou d’un WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` élément.</span><span class="sxs-lookup"><span data-stu-id="d89b1-219">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="d89b1-220">L’implémentation par défaut appelle la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> méthode à l’aide d’un programme de résolution de jeton par défaut.</span><span class="sxs-lookup"><span data-stu-id="d89b1-220">The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method using a default token resolver.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-221"><paramref name="reader" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-221"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="d89b1-222">Le lecteur n'est pas positionné sur un <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> ou <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> ne peut pas être lu.</span><span class="sxs-lookup"><span data-stu-id="d89b1-222">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (byte[] token, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(unsigned int8[] token, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (token As Byte(), tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(cli::array &lt;System::Byte&gt; ^ token, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Byte[]" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="d89b1-223">Flux d'octets qui contient le jeton.</span><span class="sxs-lookup"><span data-stu-id="d89b1-223">The stream of bytes that contains the token.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="d89b1-224">Programme de résolution du jeton à employer.</span><span class="sxs-lookup"><span data-stu-id="d89b1-224">The token resolver to use.</span></span></param>
        <summary><span data-ttu-id="d89b1-225">Lit le <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> d'un flux d'octets à l'aide du programme de résolution de jetons spécifié.</span><span class="sxs-lookup"><span data-stu-id="d89b1-225">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from a stream of bytes by using the specified token resolver.</span></span></summary>
        <returns><span data-ttu-id="d89b1-226">Le <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> qui a été lu.</span><span class="sxs-lookup"><span data-stu-id="d89b1-226">The <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> that was read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-227">L’implémentation par défaut crée un <xref:System.Xml.XmlDictionaryReader> sur le jeton et appelle le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d89b1-227">The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="d89b1-228"><see cref="T:System.Xml.XmlReader" /> sur le <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> entrant.</span><span class="sxs-lookup"><span data-stu-id="d89b1-228">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="d89b1-229"><see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> qui peut être utilisé pour corriger <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-229">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that can used to resolve the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="d89b1-230">Lit le <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> à l'aide du lecteur XML et du programme de résolution de jeton spécifiés.</span><span class="sxs-lookup"><span data-stu-id="d89b1-230">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader and token resolver.</span></span></summary>
        <returns><span data-ttu-id="d89b1-231">Jeton de sécurité de session qui a été lu, instance <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-231">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-232">Le lecteur doit être positionné sur un Feb2005 WS-Secure de Conversation ou d’un WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` élément.</span><span class="sxs-lookup"><span data-stu-id="d89b1-232">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="d89b1-233">Si le matériel de jeton est mis en cache, il est lu à partir du cache de jeton, qui est une instance de la <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> classe.</span><span class="sxs-lookup"><span data-stu-id="d89b1-233">If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class.</span></span> <span data-ttu-id="d89b1-234">Dans le cas contraire, le matériel de jeton est lu à partir de l’élément enfant de le `<wsc:SecurityContextToken>` élément qui est spécifié par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> et <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> propriétés et le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> méthode est appelée pour décoder le cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-234">Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie.</span></span>  
  
 <span data-ttu-id="d89b1-235">Pour plus d’informations sur la façon dont les jetons de session sont sérialisées dans un `<SecurityContextToken` élément, consultez la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d89b1-235">For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-236"><paramref name="reader" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-236"><paramref name="reader" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="d89b1-237">- ou -</span><span class="sxs-lookup"><span data-stu-id="d89b1-237">-or-</span></span>  
  
 <span data-ttu-id="d89b1-238"><paramref name="tokenResolver" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-238"><paramref name="tokenResolver" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="d89b1-239">Le lecteur n'est pas positionné sur un <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> ou <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> ne peut pas être lu.</span><span class="sxs-lookup"><span data-stu-id="d89b1-239">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetTransforms">
      <MemberSignature Language="C#" Value="protected void SetTransforms (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTransforms(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTransforms (transforms As IEnumerable(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTransforms(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms"><span data-ttu-id="d89b1-240">Transformations à utiliser.</span><span class="sxs-lookup"><span data-stu-id="d89b1-240">The transforms to use.</span></span></param>
        <summary><span data-ttu-id="d89b1-241">Définit les transformations qui seront appliquées aux cookies.</span><span class="sxs-lookup"><span data-stu-id="d89b1-241">Sets the transforms that will be applied to cookies.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-242">Définit la liste des transformations retourné par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d89b1-242">Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="d89b1-243">Transformations seront appliquées dans l’ordre dans lequel elles apparaissent dans la liste lors de l’encodage d’un cookie et dans l’ordre inverse lors du décodage d’un cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-243">Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="d89b1-244">Si le `transforms` paramètre est `null`, une exception est levée à partir de la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> méthode lorsqu’elle est appelée pour coder ou décoder le cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-244">If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenLifetime">
      <MemberSignature Language="C#" Value="public virtual TimeSpan TokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan TokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d89b1-245">Obtient ou définit la durée de vie du jeton.</span><span class="sxs-lookup"><span data-stu-id="d89b1-245">Gets or sets the token lifetime.</span></span></summary>
        <value><span data-ttu-id="d89b1-246">Durée de vie du jeton.</span><span class="sxs-lookup"><span data-stu-id="d89b1-246">The token lifetime.</span></span> <span data-ttu-id="d89b1-247">La valeur par défaut est <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-247">The default is <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-248">Par défaut, si le [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) élément est spécifié dans le fichier de configuration, le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> propriété est initialisée à la valeur de la `lifetime` l’attribut par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d89b1-248">By default, if the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element is specified in the configuration file, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to the value of the `lifetime` attribute by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d89b1-249">Une tentative d'affectation d'un intervalle de temps inférieur ou égal à zéro se produit.</span><span class="sxs-lookup"><span data-stu-id="d89b1-249">An attempt to set a time span that is less than or equal to zero occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d89b1-250">Obtient le type de jetons traités par ce gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="d89b1-250">Gets the type of the tokens that this handler processes.</span></span></summary>
        <value><span data-ttu-id="d89b1-251"><see cref="T:System.Type" /> de <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-251">The <see cref="T:System.Type" /> of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; Transforms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; Transforms" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transforms As ReadOnlyCollection(Of CookieTransform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ Transforms { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d89b1-252">Obtient les transformations qui seront appliquées au cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-252">Gets the transforms that will be applied to the cookie.</span></span></summary>
        <value><span data-ttu-id="d89b1-253">Liste des transformations qui seront appliquées au cookie.</span><span class="sxs-lookup"><span data-stu-id="d89b1-253">The list of transforms that will be applied to the cookie.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-254">Les transformations sont appliquées dans le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d89b1-254">The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSession">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSession (System.IdentityModel.Tokens.SessionSecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSession(class System.IdentityModel.Tokens.SessionSecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSession (securityToken As SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateSession(System::IdentityModel::Tokens::SessionSecurityToken ^ securityToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken"><span data-ttu-id="d89b1-255">Jeton à vérifier.</span><span class="sxs-lookup"><span data-stu-id="d89b1-255">The token to be checked.</span></span></param>
        <summary><span data-ttu-id="d89b1-256">Détermine si la session associée au jeton spécifié est toujours valide.</span><span class="sxs-lookup"><span data-stu-id="d89b1-256">Determines whether the session associated with the specified token is still valid.</span></span> <span data-ttu-id="d89b1-257">La validité est déterminée en vérifiant les propriétés <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> et <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> du jeton spécifié.</span><span class="sxs-lookup"><span data-stu-id="d89b1-257">Validity is determined by checking the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> and <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> properties of the specified token.</span></span> <span data-ttu-id="d89b1-258">Exception levée si la session n'est plus valide.</span><span class="sxs-lookup"><span data-stu-id="d89b1-258">An exception is thrown if the session is no longer valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-259">Le jeton n’est pas valide si son <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> est définie sur une valeur qui se situe à <xref:System.DateTime.UtcNow%2A>, ou si son <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> est définie sur une valeur qui se produit antérieures à <xref:System.DateTime.UtcNow%2A>.</span><span class="sxs-lookup"><span data-stu-id="d89b1-259">The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.</span></span>  
  
 <span data-ttu-id="d89b1-260">Appelée à partir de la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> méthodes pour valider la session.</span><span class="sxs-lookup"><span data-stu-id="d89b1-260">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-261"><paramref name="securityToken" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-261"><paramref name="securityToken" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d89b1-262">La propriété <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-262">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException"><span data-ttu-id="d89b1-263">La propriété <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> du jeton est postérieure à <see cref="P:System.DateTime.UtcNow" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-263">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> property of the token is later than <see cref="P:System.DateTime.UtcNow" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenExpiredException"><span data-ttu-id="d89b1-264">La propriété <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> du jeton est antérieure à <see cref="P:System.DateTime.UtcNow" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-264">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> property of the token is earlier than <see cref="P:System.DateTime.UtcNow" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d89b1-265">Valide un jeton et retourne ses revendications.</span><span class="sxs-lookup"><span data-stu-id="d89b1-265">Validates a token and returns its claims.</span></span></summary>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="d89b1-266">Jeton à valider.</span><span class="sxs-lookup"><span data-stu-id="d89b1-266">The token to be validated.</span></span> <span data-ttu-id="d89b1-267">Doit pouvoir être assigné depuis <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-267">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="d89b1-268">Valide le jeton spécifié et retourne ses revendications.</span><span class="sxs-lookup"><span data-stu-id="d89b1-268">Validates the specified token and returns its claims.</span></span></summary>
        <returns><span data-ttu-id="d89b1-269">Identités contenues dans le jeton.</span><span class="sxs-lookup"><span data-stu-id="d89b1-269">The identities that are contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-270">Appelle la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> méthode pour valider le jeton.</span><span class="sxs-lookup"><span data-stu-id="d89b1-270">Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-271"><paramref name="token" />
          <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-271"><paramref name="token" />
<see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d89b1-272"><paramref name="token" /> ne peut pas être affecté à partir de <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-272"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SessionSecurityToken, endpointId As String) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SessionSecurityToken ^ token, System::String ^ endpointId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="endpointId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="d89b1-273">Jeton à valider.</span><span class="sxs-lookup"><span data-stu-id="d89b1-273">The token to be validated.</span></span> <span data-ttu-id="d89b1-274">Doit pouvoir être assigné depuis <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-274">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <param name="endpointId"><span data-ttu-id="d89b1-275">Identificateur du point de terminaison auquel le jeton est étendu.</span><span class="sxs-lookup"><span data-stu-id="d89b1-275">The identifier of the endpoint to which the token is scoped.</span></span></param>
        <summary><span data-ttu-id="d89b1-276">Valide le jeton de session spécifié et retourne ses revendications.</span><span class="sxs-lookup"><span data-stu-id="d89b1-276">Validates the specified session token and returns its claims.</span></span></summary>
        <returns><span data-ttu-id="d89b1-277">Identités contenues dans le jeton.</span><span class="sxs-lookup"><span data-stu-id="d89b1-277">The identities that are contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-278">Effectue une vérification pour vous assurer que le jeton est étendu pour l’ID de point de terminaison spécifié et, si tel est le cas, appelle la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> méthode ; sinon, lève un <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span><span class="sxs-lookup"><span data-stu-id="d89b1-278">Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d89b1-279">Les jetons de session qui ont un <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> propriété `null` ou vides sont considérés être une étendue globale.</span><span class="sxs-lookup"><span data-stu-id="d89b1-279">Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped.</span></span> <span data-ttu-id="d89b1-280">Cela pose un risque de sécurité potentiel.</span><span class="sxs-lookup"><span data-stu-id="d89b1-280">This presents a potential security risk.</span></span> <span data-ttu-id="d89b1-281">C’est pourquoi vous devez vous assurer que le <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> propriété est définie dans les jetons de la session.</span><span class="sxs-lookup"><span data-stu-id="d89b1-281">For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-282"><paramref name="token" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-282"><paramref name="token" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="d89b1-283">- ou -</span><span class="sxs-lookup"><span data-stu-id="d89b1-283">-or-</span></span>  
  
 <span data-ttu-id="d89b1-284"><paramref name="endpointId" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-284"><paramref name="endpointId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d89b1-285"><paramref name="token" /> ne peut pas être affecté à partir de <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-285"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="d89b1-286">La propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> du jeton spécifié n'a pas la valeur <see langword="null" /> ou n'est pas vide et sa valeur est différente de celle spécifiée par le paramètre <paramref name="endpointId" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-286">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> property of the specified token is not <see langword="null" /> or empty and its value is different than that specified by the <paramref name="endpointId" /> parameter.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d89b1-287">Sérialise un jeton.</span><span class="sxs-lookup"><span data-stu-id="d89b1-287">Serializes a token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-288">L’implémentation par défaut sérialise le jeton dans un Feb2005 de Conversation WS-Secure ou WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` élément.</span><span class="sxs-lookup"><span data-stu-id="d89b1-288">The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual byte[] WriteToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] WriteToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (sessionToken As SessionSecurityToken) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ WriteToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken"><span data-ttu-id="d89b1-289">Jeton à écrire.</span><span class="sxs-lookup"><span data-stu-id="d89b1-289">The token to write.</span></span></param>
        <summary><span data-ttu-id="d89b1-290">Sérialise le jeton spécifié dans un tableau d'octets.</span><span class="sxs-lookup"><span data-stu-id="d89b1-290">Serializes the specified token into a byte array.</span></span></summary>
        <returns><span data-ttu-id="d89b1-291">Tableau d'octets encodé.</span><span class="sxs-lookup"><span data-stu-id="d89b1-291">An encoded byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-292">Sérialise le jeton spécifié par la création et le writer XML sur un <xref:System.IO.MemoryStream> et en appelant le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d89b1-292">Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d89b1-293">Cette surcharge pour plus d’informations, consultez.</span><span class="sxs-lookup"><span data-stu-id="d89b1-293">See that overload for more details.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-294"><paramref name="sessiontoken" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-294"><paramref name="sessiontoken" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="d89b1-295">Writer XML avec lequel sérialiser le jeton.</span><span class="sxs-lookup"><span data-stu-id="d89b1-295">The XML writer with which to serialize the token.</span></span></param>
        <param name="token"><span data-ttu-id="d89b1-296">Jeton à sérialiser.</span><span class="sxs-lookup"><span data-stu-id="d89b1-296">The token to serialize.</span></span> <span data-ttu-id="d89b1-297">Instance de <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-297">An instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="d89b1-298">Sérialise le jeton spécifié à l'aide du writer XML spécifié.</span><span class="sxs-lookup"><span data-stu-id="d89b1-298">Serializes the specified token by using the specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d89b1-299">L’implémentation par défaut sérialise le jeton spécifié comme Feb2005 de Conversation WS-Secure ou WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` élément, selon la valeur de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="d89b1-299">The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d89b1-300">Le <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> propriété est sérialisée en tant que le `Id` attribut.</span><span class="sxs-lookup"><span data-stu-id="d89b1-300">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> property is serialized as the `Id` attribute.</span></span> <span data-ttu-id="d89b1-301">Le <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> propriété est sérialisée en tant que le `<Identifier>` élément enfant.</span><span class="sxs-lookup"><span data-stu-id="d89b1-301">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> property is serialized as the `<Identifier>` child element.</span></span> <span data-ttu-id="d89b1-302">Si ce n’est pas `null` le <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> propriété est sérialisée comme un `<Instance>` élément.</span><span class="sxs-lookup"><span data-stu-id="d89b1-302">If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> property is serialized as an `<Instance>` element.</span></span> <span data-ttu-id="d89b1-303">Enfin, si le <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propriété est `false`, le jeton entier est sérialisé en tableau binaire qui est passée à la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> méthode à encoder.</span><span class="sxs-lookup"><span data-stu-id="d89b1-303">Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded.</span></span> <span data-ttu-id="d89b1-304">Le jeton encodé est ensuite écrites comme une valeur codée en base64 pour l’élément et l’espace de noms spécifié par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> et <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="d89b1-304">The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties.</span></span> <span data-ttu-id="d89b1-305">Si le <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propriété est `true`, le jeton n’est pas sérialisé.</span><span class="sxs-lookup"><span data-stu-id="d89b1-305">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the token is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d89b1-306"><paramref name="writer" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-306"><paramref name="writer" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="d89b1-307">- ou -</span><span class="sxs-lookup"><span data-stu-id="d89b1-307">-or-</span></span>  
  
 <span data-ttu-id="d89b1-308"><paramref name="token" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-308"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d89b1-309"><paramref name="token" /> ne peut pas être affecté à partir de <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="d89b1-309"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span>  
  
 <span data-ttu-id="d89b1-310">- ou -</span><span class="sxs-lookup"><span data-stu-id="d89b1-310">-or-</span></span>  
  
 <span data-ttu-id="d89b1-311">La propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> du jeton spécifie une version de WS-Secure Conversation qui n'est pas prise en charge par le gestionnaire.</span><span class="sxs-lookup"><span data-stu-id="d89b1-311">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
  </Members>
</Type>