<Type Name="AggregateTokenResolver" FullName="System.IdentityModel.Tokens.AggregateTokenResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b27ed3632e65b0abd610692b1a624cc0b7da642d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30417533" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AggregateTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AggregateTokenResolver extends System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.AggregateTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class AggregateTokenResolver&#xA;Inherits SecurityTokenResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class AggregateTokenResolver : System::IdentityModel::Selectors::SecurityTokenResolver" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="da634-101">Représente un programme de résolution de jetons de sécurité qui peut encapsuler plusieurs programmes de résolution de jetons et résoudre des jetons de résolution pour tous les programmes de résolution encapsulés.</span>
      <span class="sxs-lookup">
        <span data-stu-id="da634-101">Represents a security token resolver that can wrap multiple token resolvers and resolve tokens across all of the wrapped resolvers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da634-102">A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objet représente une classe utilitaire qui peut récupérer des jetons de sécurité ou des clés lorsque vous avez un identificateur de clé ou d’une clause d’identificateur de clé.</span><span class="sxs-lookup"><span data-stu-id="da634-102">A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</span></span> <span data-ttu-id="da634-103">Le <xref:System.IdentityModel.Tokens.AggregateTokenResolver> encapsule plusieurs <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objets.</span><span class="sxs-lookup"><span data-stu-id="da634-103">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver> wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects.</span></span> <span data-ttu-id="da634-104">Les programmes de résolution de jeton à encapsuler sont spécifiés dans le constructeur.</span><span class="sxs-lookup"><span data-stu-id="da634-104">The token resolvers to be wrapped are specified in the constructor.</span></span> <span data-ttu-id="da634-105">Le <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> propriété retourne la collection de programmes de résolution de jetons qui sont encapsulés par le programme de résolution d’agrégation.</span><span class="sxs-lookup"><span data-stu-id="da634-105">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateTokenResolver (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt; tokenResolvers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Selectors.SecurityTokenResolver&gt; tokenResolvers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tokenResolvers As IEnumerable(Of SecurityTokenResolver))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateTokenResolver(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Selectors::SecurityTokenResolver ^&gt; ^ tokenResolvers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tokenResolvers" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt;" />
      </Parameters>
      <Docs>
        <param name="tokenResolvers">
          <span data-ttu-id="da634-106">Liste des programmes de résolution de jeton de sécurité à encapsuler par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-106">A list of the security token resolvers to be wrapped by this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da634-107">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.AggregateTokenResolver" /> avec la liste de programmes de résolution de jeton spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-107">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.AggregateTokenResolver" /> class by using the specified list of token resolvers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da634-108">Le <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> propriété est initialisée avec la liste de programmes de résolution de jeton spécifiée.</span><span class="sxs-lookup"><span data-stu-id="da634-108">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property is initialized with the specified list of token resolvers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da634-109">
            <paramref name="tokenResolvers" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-109">
              <paramref name="tokenResolvers" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TokenResolvers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt; TokenResolvers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Selectors.SecurityTokenResolver&gt; TokenResolvers" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TokenResolvers As ReadOnlyCollection(Of SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Selectors::SecurityTokenResolver ^&gt; ^ TokenResolvers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Selectors::SecurityTokenResolver ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da634-110">Obtient les programmes de résolution de jeton de sécurité encapsulés par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-110">Gets the security token resolvers that are wrapped by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da634-111">Collection en lecture seule qui contient les programmes de résolution de jetons qui sont encapsulés par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-111">A read-only collection that contains the token resolvers that are wrapped by this instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="da634-112">Clause d'identificateur de clé pour laquelle récupérer la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-112">The key identifier clause to retrieve the key for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="da634-113">Lorsque cette méthode est retournée, elle contient la clé référencée dans la clause d'identificateur de clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-113">When this method returns, contains the key that is referenced in the specified key identifier clause.</span>
          </span>
          <span data-ttu-id="da634-114">Ce paramètre est passé sans être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-114">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da634-115">Tente de récupérer la clé référencée dans la clause d'identificateur de clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-115">Attempts to retrieve the key that is referenced in the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da634-116">
            <see langword="true" /> lorsqu'une clé peut être récupérée pour la clause d'identificateur de clé spécifiée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-116">
              <see langword="true" /> when a key can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da634-117">La méthode <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore%2A> est appelée par les méthodes <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> et <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="da634-117">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da634-118">
            <paramref name="keyIdentifierClause" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-118">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <span data-ttu-id="da634-119">Identificateur de clé de sécurité pour lequel récupérer le jeton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-119">The security key identifier to retrieve the token for.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="da634-120">Lorsque cette méthode est retournée, elle contient un jeton qui représente l'identificateur de clé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-120">When this method returns, contains a token that represents the specified key identifier.</span>
          </span>
          <span data-ttu-id="da634-121">Ce paramètre est passé sans être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-121">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da634-122">Tente de récupérer le jeton de sécurité qui correspond au moins à l'une des clauses d'identificateur de clé contenues dans l'identificateur de clé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-122">Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da634-123">
            <see langword="true" /> lorsqu'un jeton peut être récupéré pour l'identificateur de clé spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-123">
              <see langword="true" /> when a token can be retrieved for the specified key identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da634-124">La méthode <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> est appelée par les méthodes <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> et <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>.</span><span class="sxs-lookup"><span data-stu-id="da634-124">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da634-125">
            <paramref name="keyIdentifier" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-125">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="da634-126">Clause d'identificateur de clé pour lequel créer un jeton de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-126">The key identifier clause to create a security token for.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="da634-127">Lorsque cette méthode est retournée, elle contient un jeton de sécurité qui représente la clause d'identificateur de clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-127">When this method returns, contains a security token that represents the specified key identifier clause.</span>
          </span>
          <span data-ttu-id="da634-128">Ce paramètre est passé sans être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-128">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da634-129">Tente de résoudre le jeton de sécurité qui correspond à la clause d'identificateur de clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-129">Attempts to resolve the security token that matches the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da634-130">
            <see langword="true" /> lorsqu'un jeton de sécurité peut être récupéré pour la clause d'identificateur de clé spécifiée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-130">
              <see langword="true" /> when a security token can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da634-131">La méthode <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> est appelée par les méthodes <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> et <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>.</span><span class="sxs-lookup"><span data-stu-id="da634-131">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da634-132">
            <paramref name="keyIdentifierClause" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da634-132">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>