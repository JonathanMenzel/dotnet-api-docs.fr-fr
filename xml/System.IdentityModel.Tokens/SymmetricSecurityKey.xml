<Type Name="SymmetricSecurityKey" FullName="System.IdentityModel.Tokens.SymmetricSecurityKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88802baa4c050ae1aaeff9d861f919f73374aa9a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37757778" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SymmetricSecurityKey : System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SymmetricSecurityKey extends System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SymmetricSecurityKey&#xA;Inherits SecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricSecurityKey abstract : System::IdentityModel::Tokens::SecurityKey" />
  <TypeSignature Language="F#" Value="type SymmetricSecurityKey = class&#xA;    inherit SecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente la classe de base abstraite pour toutes les clés générées à l'aide d'algorithmes symétriques.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En général, cette classe est utilisée par l'infrastructure pour transformer du XML à l'aide d'une clé symétrique.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SymmetricSecurityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SymmetricSecurityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDerivedKey">
      <MemberSignature Language="C#" Value="public abstract byte[] GenerateDerivedKey (string algorithm, byte[] label, byte[] nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GenerateDerivedKey(string algorithm, unsigned int8[] label, unsigned int8[] nonce, int32 derivedKeyLength, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GenerateDerivedKey (algorithm As String, label As Byte(), nonce As Byte(), derivedKeyLength As Integer, offset As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ GenerateDerivedKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ label, cli::array &lt;System::Byte&gt; ^ nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDerivedKey : string * byte[] * byte[] * int * int -&gt; byte[]" Usage="symmetricSecurityKey.GenerateDerivedKey (algorithm, label, nonce, derivedKeyLength, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="label" Type="System.Byte[]" />
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="derivedKeyLength" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="algorithm">URI qui représente l'algorithme de chiffrement à utiliser pour générer la clé dérivée.</param>
        <param name="label">Tableau d'<see cref="T:System.Byte" /> qui contient le paramètre label pour l'algorithme de chiffrement.</param>
        <param name="nonce">Tableau d'<see cref="T:System.Byte" /> qui contient la valeur à usage unique utilisée pour créer une clé dérivée.</param>
        <param name="derivedKeyLength">Taille de la clé dérivée.</param>
        <param name="offset">Position à laquelle la clé dérivée est localisée dans le tableau d'octets retourné par cette méthode.</param>
        <summary>En cas de substitution dans une classe dérivée, génère une clé dérivée à l'aide de l'algorithme de chiffrement spécifié et des paramètres de la clé actuelle.</summary>
        <returns>Tableau d'<see cref="T:System.Byte" /> qui contient la clé dérivée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour spécifier P-SHA1 comme algorithme de chiffrement, utilisez le champ <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionTransform">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform GetDecryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform GetDecryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDecryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ GetDecryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricSecurityKey.GetDecryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme de chiffrement qui déchiffre le texte de chiffrement, tel que du XML chiffré.</param>
        <param name="iv">Tableau d'<see cref="T:System.Byte" /> qui contient le vecteur d'initialisation (<see langword="IV" />) pour l'algorithme spécifié.</param>
        <summary>En cas de substitution dans une classe dérivée, obtient une transformation qui déchiffre le texte de chiffrement à l'aide de l'algorithme de chiffrement spécifié.</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.ICryptoTransform" /> qui représente la transformation du déchiffrement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez les champs qui représentent les algorithmes de déchiffrement dans la classe <xref:System.IdentityModel.Tokens.SecurityAlgorithms> pour spécifier l'algorithme.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionTransform">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform GetEncryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform GetEncryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ GetEncryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricSecurityKey.GetEncryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme de chiffrement qui chiffre du XML.</param>
        <param name="iv">Tableau d'<see cref="T:System.Byte" /> qui contient le vecteur d'initialisation (<see langword="IV" />) pour l'algorithme spécifié.</param>
        <summary>En cas de substitution dans une classe dérivée, obtient une transformation qui chiffre du XML à l'aide de l'algorithme de chiffrement spécifié.</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.ICryptoTransform" /> qui représente la transformation du chiffrement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez les champs qui représentent les algorithmes de déchiffrement dans la classe <xref:System.IdentityModel.Tokens.SecurityAlgorithms> pour spécifier l'algorithme.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIVSize">
      <MemberSignature Language="C#" Value="public abstract int GetIVSize (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetIVSize(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIVSize (algorithm As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetIVSize(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetIVSize : string -&gt; int" Usage="symmetricSecurityKey.GetIVSize algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme de chiffrement pour obtenir la taille du vecteur d'initialisation (<see langword="IV" />).</param>
        <summary>En cas de substitution dans une classe dérivée, obtient la taille, en bits, du vecteur d'initialisation (<see langword="IV" />) requis pour l'algorithme de chiffrement spécifié.</summary>
        <returns>Taille, en bits, du vecteur d'initialisation (<see langword="IV" />) requis pour l'algorithme de chiffrement spécifié dans le paramètre <paramref name="algorithm" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyedHashAlgorithm">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetKeyedHashAlgorithm (algorithm As String) As KeyedHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::KeyedHashAlgorithm ^ GetKeyedHashAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyedHashAlgorithm : string -&gt; System.Security.Cryptography.KeyedHashAlgorithm" Usage="symmetricSecurityKey.GetKeyedHashAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyedHashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme de hachage à clé duquel obtenir une instance.</param>
        <summary>En cas de substitution dans une classe dérivée, obtient une instance de l'algorithme de hachage à clé spécifié.</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> qui représente l'algorithme de hachage à clé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez les champs qui représentent les algorithmes de hachage à clé dans la classe <xref:System.IdentityModel.Tokens.SecurityAlgorithms> pour spécifier l'algorithme.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSymmetricAlgorithm (algorithm As String) As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::SymmetricAlgorithm ^ GetSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetSymmetricAlgorithm : string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="symmetricSecurityKey.GetSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithme symétrique duquel obtenir une instance.</param>
        <summary>En cas de substitution dans une classe dérivée, obtient une instance de l'algorithme symétrique spécifié.</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> qui représente l'algorithme symétrique.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez les champs qui représentent les algorithmes symétriques dans la classe <xref:System.IdentityModel.Tokens.SecurityAlgorithms> pour spécifier l'algorithme.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricKey">
      <MemberSignature Language="C#" Value="public abstract byte[] GetSymmetricKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetSymmetricKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSymmetricKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ GetSymmetricKey();" />
      <MemberSignature Language="F#" Value="abstract member GetSymmetricKey : unit -&gt; byte[]" Usage="symmetricSecurityKey.GetSymmetricKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, obtient les octets qui représentent la clé symétrique.</summary>
        <returns>Tableau d'<see cref="T:System.Byte" /> qui contient la clé symétrique.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>