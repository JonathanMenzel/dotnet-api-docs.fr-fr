<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SymmetricSecurityKey.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55cf8406bae2fec33eb98ef443bd7dd65bedab491.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cf8406bae2fec33eb98ef443bd7dd65bedab491</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SymmetricSecurityKey">
          <source>Represents the abstract base class for all keys that are generated using symmetric algorithms.</source>
          <target state="translated">Représente la classe de base abstraite pour toutes les clés générées à l'aide d'algorithmes symétriques.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SymmetricSecurityKey">
          <source>Typically, this class is used by the infrastructure to transform XML using a symmetric key.</source>
          <target state="translated">En général, cette classe est utilisée par l'infrastructure pour transformer du XML à l'aide d'une clé symétrique.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>A URI that represents the cryptographic algorithm to use to generate the derived key.</source>
          <target state="translated">URI qui représente l'algorithme de chiffrement à utiliser pour générer la clé dérivée.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the label parameter for the cryptographic algorithm.</source>
          <target state="translated">Tableau d'<ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui contient le paramètre label pour l'algorithme de chiffrement.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the nonce that is used to create a derived key.</source>
          <target state="translated">Tableau d'<ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui contient la valeur à usage unique utilisée pour créer une clé dérivée.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>The size of the derived key.</source>
          <target state="translated">Taille de la clé dérivée.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>The position at which the derived key is located in the byte array that is returned from this method.</source>
          <target state="translated">Position à laquelle la clé dérivée est localisée dans le tableau d'octets retourné par cette méthode.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, generates a derived key using the specified cryptographic algorithm and parameters for the current key.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, génère une clé dérivée à l'aide de l'algorithme de chiffrement spécifié et des paramètres de la clé actuelle.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the derived key.</source>
          <target state="translated">Tableau d'<ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui contient la clé dérivée.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>To specify P-SHA1 as the cryptographic algorithm, use the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;</ph> field.</source>
          <target state="translated">Pour spécifier P-SHA1 comme algorithme de chiffrement, utilisez le champ <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</source>
          <target state="translated">Algorithme de chiffrement qui déchiffre le texte de chiffrement, tel que du XML chiffré.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the initialization vector (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) for the specified algorithm.</source>
          <target state="translated">Tableau d'<ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui contient le vecteur d'initialisation (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) pour l'algorithme spécifié.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>When overridden in a derived class, gets a transform that decrypts cipher text using the specified cryptographic algorithm.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient une transformation qui déchiffre le texte de chiffrement à l'aide de l'algorithme de chiffrement spécifié.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> that represents the decryption transform.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> qui représente la transformation du déchiffrement.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>Use the fields that represent decryption algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Utilisez les champs qui représentent les algorithmes de déchiffrement dans la classe <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> pour spécifier l'algorithme.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>A cryptographic algorithm that encrypts XML.</source>
          <target state="translated">Algorithme de chiffrement qui chiffre du XML.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the initialization vector (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) for the specified algorithm.</source>
          <target state="translated">Tableau d'<ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui contient le vecteur d'initialisation (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) pour l'algorithme spécifié.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>When overridden in a derived class, gets a transform that encrypts XML using the specified cryptographic algorithm.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient une transformation qui chiffre du XML à l'aide de l'algorithme de chiffrement spécifié.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> that represents the encryption transform.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> qui représente la transformation du chiffrement.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>Use the fields that represent decryption algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Utilisez les champs qui représentent les algorithmes de déchiffrement dans la classe <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> pour spécifier l'algorithme.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
          <source>The cryptographic algorithm to get the size of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>).</source>
          <target state="translated">Algorithme de chiffrement pour obtenir la taille du vecteur d'initialisation (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
          <source>When overridden in a derived class, gets the size, in bits, of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) that is required for the specified cryptographic algorithm.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient la taille, en bits, du vecteur d'initialisation (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) requis pour l'algorithme de chiffrement spécifié.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
          <source>The size, in bits, of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) that is required for the cryptographic algorithm specified in the <ph id="ph2">&lt;paramref name="algorithm" /&gt;</ph> parameter.</source>
          <target state="translated">Taille, en bits, du vecteur d'initialisation (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) requis pour l'algorithme de chiffrement spécifié dans le paramètre <ph id="ph2">&lt;paramref name="algorithm" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>The keyed hash algorithm to get an instance of.</source>
          <target state="translated">Algorithme de hachage à clé duquel obtenir une instance.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>When overridden in a derived class, gets an instance of the specified keyed hash algorithm.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient une instance de l'algorithme de hachage à clé spécifié.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /&gt;</ph> that represents the keyed hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /&gt;</ph> qui représente l'algorithme de hachage à clé.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>Use the fields that represent keyed hash algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Utilisez les champs qui représentent les algorithmes de hachage à clé dans la classe <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> pour spécifier l'algorithme.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>The symmetric algorithm to get an instance of.</source>
          <target state="translated">Algorithme symétrique duquel obtenir une instance.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>When overridden in a derived class, gets an instance of the specified symmetric algorithm.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient une instance de l'algorithme symétrique spécifié.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /&gt;</ph> that represents the symmetric algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /&gt;</ph> qui représente l'algorithme symétrique.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>Use the fields that represent symmetric algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Utilisez les champs qui représentent les algorithmes symétriques dans la classe <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> pour spécifier l'algorithme.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
          <source>When overridden in a derived class, gets the bytes that represent the symmetric key.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient les octets qui représentent la clé symétrique.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the symmetric key.</source>
          <target state="translated">Tableau d'<ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui contient la clé symétrique.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>