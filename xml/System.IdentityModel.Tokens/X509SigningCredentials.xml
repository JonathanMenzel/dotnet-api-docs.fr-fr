<Type Name="X509SigningCredentials" FullName="System.IdentityModel.Tokens.X509SigningCredentials">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2680693036f4c75d989aeb7e773d231512ffc9f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36479996" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509SigningCredentials : System.IdentityModel.Tokens.SigningCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SigningCredentials extends System.IdentityModel.Tokens.SigningCredentials" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509SigningCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Class X509SigningCredentials&#xA;Inherits SigningCredentials" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SigningCredentials : System::IdentityModel::Tokens::SigningCredentials" />
  <TypeSignature Language="F#" Value="type X509SigningCredentials = class&#xA;    inherit SigningCredentials" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SigningCredentials</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2f75f-101">Représente un jeton X.509 utilisé comme informations d'identification de signature.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f75f-101">Represents an X.509 token used as the signing credential.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2f75f-102">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> selon un certificat X.509 spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-102">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> class based on a specified X.509 certificate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SigningCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SigningCredentials(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509SigningCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.IdentityModel.Tokens.X509SigningCredentials" Usage="new System.IdentityModel.Tokens.X509SigningCredentials certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">
          <span data-ttu-id="2f75f-103">Certificat X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-103">The X.509 certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f75f-104">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> selon le certificat X.509 spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> class based on the specified X.509 certificate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f75f-105">Par défaut, ce constructeur utilise un <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> pour générer l’identificateur de clé de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2f75f-105">By default, this constructor uses an <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> to generate the security key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SigningCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.IdentityModel.Tokens.SecurityKeyIdentifier ski);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.IdentityModel.Tokens.SecurityKeyIdentifier ski) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2, ski As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SigningCredentials(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ski);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509SigningCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.IdentityModel.Tokens.X509SigningCredentials" Usage="new System.IdentityModel.Tokens.X509SigningCredentials (certificate, ski)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="ski" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="certificate">
          <span data-ttu-id="2f75f-106">Certificat X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-106">The X.509 certificate.</span>
          </span>
        </param>
        <param name="ski">
          <span data-ttu-id="2f75f-107">Identificateur de clé de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-107">The security key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f75f-108">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> selon le certificat X.509 et l'identificateur de clé de sécurité spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> class based on the specified X.509 certificate and security key identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f75f-109">Les types de clause d’identificateur de clé prises en charge par Windows Communication Foundation pour la génération d’un identificateur de clé de sécurité qui fait référence à un <xref:System.IdentityModel.Tokens.X509SecurityToken> sont <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>, et <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>.</span><span class="sxs-lookup"><span data-stu-id="2f75f-109">The key identifier clause types supported by Windows Communication Foundation for generating a security key identifier that references an <xref:System.IdentityModel.Tokens.X509SecurityToken> are <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>, and <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>.</span></span> <span data-ttu-id="2f75f-110">Toutefois, pour permettre des scénarios personnalisés, ce constructeur n’effectue aucune validation sur les types de clause qui ont été utilisés pour générer l’identificateur de clé de sécurité fournie dans le `ski` paramètre.</span><span class="sxs-lookup"><span data-stu-id="2f75f-110">However, in order to enable custom scenarios, this constructor does not perform any validation on the clause types that were used to generate the security key identifier supplied in the `ski` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SigningCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string signatureAlgorithm, string digestAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string signatureAlgorithm, string digestAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2, signatureAlgorithm As String, digestAlgorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SigningCredentials(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, System::String ^ signatureAlgorithm, System::String ^ digestAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509SigningCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 * string * string -&gt; System.IdentityModel.Tokens.X509SigningCredentials" Usage="new System.IdentityModel.Tokens.X509SigningCredentials (certificate, signatureAlgorithm, digestAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificate">
          <span data-ttu-id="2f75f-111">Certificat X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-111">The X.509 certificate.</span>
          </span>
        </param>
        <param name="signatureAlgorithm">
          <span data-ttu-id="2f75f-112">Algorithme de signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-112">The signature algorithm.</span>
          </span>
        </param>
        <param name="digestAlgorithm">
          <span data-ttu-id="2f75f-113">Algorithme Digest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-113">The digest algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f75f-114">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> selon le certificat X.509, l'algorithme de signature et l'algorithme Digest spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-114">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> class based on the specified X.509 certificate, signature algorithm, and digest algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f75f-115">Par défaut, ce constructeur utilise un <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> pour générer l’identificateur de clé de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2f75f-115">By default, this constructor uses an <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> to generate the security key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SigningCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.IdentityModel.Tokens.SecurityKeyIdentifier ski, string signatureAlgorithm, string digestAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.IdentityModel.Tokens.SecurityKeyIdentifier ski, string signatureAlgorithm, string digestAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2, ski As SecurityKeyIdentifier, signatureAlgorithm As String, digestAlgorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SigningCredentials(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ski, System::String ^ signatureAlgorithm, System::String ^ digestAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509SigningCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 * System.IdentityModel.Tokens.SecurityKeyIdentifier * string * string -&gt; System.IdentityModel.Tokens.X509SigningCredentials" Usage="new System.IdentityModel.Tokens.X509SigningCredentials (certificate, ski, signatureAlgorithm, digestAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="ski" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificate">
          <span data-ttu-id="2f75f-116">Certificat X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-116">The X.509 certificate.</span>
          </span>
        </param>
        <param name="ski">
          <span data-ttu-id="2f75f-117">Identificateur de clé de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-117">The security key identifier.</span>
          </span>
        </param>
        <param name="signatureAlgorithm">
          <span data-ttu-id="2f75f-118">Algorithme de signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-118">The signature algorithm.</span>
          </span>
        </param>
        <param name="digestAlgorithm">
          <span data-ttu-id="2f75f-119">Algorithme Digest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-119">The digest algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f75f-120">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> selon le certificat X.509, l'identificateur de clé de sécurité, l'algorithme de signature, et l'algorithme Digest spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-120">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SigningCredentials" /> class based on the specified X.509 certificate, security key identifier, signature algorithm, and digest algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f75f-121">Les types de clause d’identificateur de clé prises en charge par Windows Communication Foundation pour la génération d’un identificateur de clé de sécurité qui fait référence à un <xref:System.IdentityModel.Tokens.X509SecurityToken> sont <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>, et <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>.</span><span class="sxs-lookup"><span data-stu-id="2f75f-121">The key identifier clause types supported by Windows Communication Foundation for generating a security key identifier that references an <xref:System.IdentityModel.Tokens.X509SecurityToken> are <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>, <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>, and <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>.</span></span> <span data-ttu-id="2f75f-122">Toutefois, pour permettre des scénarios personnalisés, ce constructeur n’effectue aucune validation sur les types de clause qui ont été utilisés pour générer l’identificateur de clé de sécurité fournie dans le `ski` paramètre.</span><span class="sxs-lookup"><span data-stu-id="2f75f-122">However, in order to enable custom scenarios, this constructor does not perform any validation on the clause types that were used to generate the security key identifier supplied in the `ski` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509SigningCredentials.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.IdentityModel.Tokens.X509SigningCredentials.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f75f-123">Obtient le certificat X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-123">Gets the X.509 certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f75f-124">Certificat X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f75f-124">The X.509 certificate.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>