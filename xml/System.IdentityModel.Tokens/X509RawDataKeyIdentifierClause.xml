<Type Name="X509RawDataKeyIdentifierClause" FullName="System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0b9aff45da5fcbdac0351f528ee51d9b729759b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37757603" /></Metadata><TypeSignature Language="C#" Value="public class X509RawDataKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509RawDataKeyIdentifierClause extends System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public Class X509RawDataKeyIdentifierClause&#xA;Inherits BinaryKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509RawDataKeyIdentifierClause : System::IdentityModel::Tokens::BinaryKeyIdentifierClause" />
  <TypeSignature Language="F#" Value="type X509RawDataKeyIdentifierClause = class&#xA;    inherit BinaryKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.BinaryKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une clause d'identificateur de clé qui identifie un jeton de sécurité <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> à l'aide des données brutes du certificat X.509.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En général, l'utilisation de la <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> n'est pas nécessaire, sauf lorsqu'un service d'émission du jeton de sécurité personnalisé est créé. Lorsqu'un service d'émission du jeton de sécurité retourne un jeton de sécurité, le jeton de sécurité émis contient des références à des jetons de sécurité attachés et détachés. Les références attachées renvoient aux jetons de sécurité qui sont contenus dans l'en-tête de sécurité d'un message SOAP et les références détachées sont des jetons de sécurité qui ne sont pas inclus dans l'en-tête de sécurité d'un message SOAP. En général, ces références déclarent l'authenticité du jeton de sécurité émis. La classe <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> permet de référencer un jeton de sécurité <xref:System.IdentityModel.Tokens.X509SecurityToken> à l'aide des données brutes du certificat X.509. La méthode <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A> retourne les données brutes.  
  
 Windows Communication Foundation (WCF) prend en charge les types suivants de références de jeton de sécurité pour <xref:System.IdentityModel.Tokens.X509SecurityToken> des jetons de sécurité.  
  
-   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  
  
-   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  
  
-   <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  
  
 <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509RawDataKeyIdentifierClause (byte[] certificateRawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] certificateRawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificateRawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509RawDataKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ certificateRawData);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause : byte[] -&gt; System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause certificateRawData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificateRawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="certificateRawData">Tableau d'<see cref="T:System.Byte" /> qui contient les données brutes d'un certificat X.509.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" /> à l'aide des données brutes spécifiées d'un certificat X.509.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificateRawData" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="certificateRawData" /> est de longueur nulle.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509RawDataKeyIdentifierClause (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509RawDataKeyIdentifierClause(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> qui contient le certificat X.509.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" /> à l'aide du certificat X.509 spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour le paramètre `certificate`, les données brutes sont obtenues à l'aide de la méthode <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKey">
      <MemberSignature Language="C#" Value="public override bool CanCreateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCreateKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanCreateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCreateKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCreateKey : bool" Usage="System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si une clé peut être créée à partir des données brutes du certificat X.509 ou du tableau d'octets spécifié dans le constructeur.</summary>
        <value><see langword="true" /> dans tous les cas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour créer la clé, appelez la méthode <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKey">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKey CreateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKey CreateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateKey () As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKey ^ CreateKey();" />
      <MemberSignature Language="F#" Value="override this.CreateKey : unit -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="x509RawDataKeyIdentifierClause.CreateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une clé à partir des données brutes du certificat X.509 ou du tableau d'octets spécifié dans le constructeur.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /> qui contient les clés associées au certificat X.509.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetX509RawData">
      <MemberSignature Language="C#" Value="public byte[] GetX509RawData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetX509RawData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetX509RawData () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetX509RawData();" />
      <MemberSignature Language="F#" Value="member this.GetX509RawData : unit -&gt; byte[]" Usage="x509RawDataKeyIdentifierClause.GetX509RawData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient les données brutes associées au certificat X.509.</summary>
        <returns>Tableau d'<see cref="T:System.Byte" /> qui contient les données brutes associées au certificat X.509.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (certificate As X509Certificate2) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="override this.Matches : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; bool" Usage="x509RawDataKeyIdentifierClause.Matches certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> qui contient le certificat X.509 à comparer.</param>
        <summary>Retourne une valeur qui indique si l'identificateur de clé pour cette instance équivaut au certificat X.509 spécifié.</summary>
        <returns><see langword="true" /> si les données brutes du <paramref name="certificate" /> correspondent à l'instance en cours ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches%2A> appelle la méthode <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> pour le `certificate`, puis effectue une comparaison avec l'instance en cours.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="x509RawDataKeyIdentifierClause.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne l'objet en cours.</summary>
        <returns><see cref="T:System.String" /> qui représente l'objet en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString%2A> retourne les données brutes encodées en base 64.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>