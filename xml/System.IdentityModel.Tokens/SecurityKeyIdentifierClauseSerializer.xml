<Type Name="SecurityKeyIdentifierClauseSerializer" FullName="System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e19c1675e41e286ef0f0e9466418c22898542b20" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36480451" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityKeyIdentifierClauseSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityKeyIdentifierClauseSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityKeyIdentifierClauseSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityKeyIdentifierClauseSerializer abstract" />
  <TypeSignature Language="F#" Value="type SecurityKeyIdentifierClauseSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1766d-101">Classe de base abstraite d'un sérialiseur qui peut sérialiser et désérialiser des clauses d'identificateur de clé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1766d-101">Abstract base class for a serializer that can serialize and deserialize key identifier clauses.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1766d-102">Clauses d’identificateur de clé sont représentées par la <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> classe et par les classes dérivées à partir de celui-ci.</span><span class="sxs-lookup"><span data-stu-id="1766d-102">Key identifier clauses are represented by the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class and by classes derived from it.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityKeyIdentifierClauseSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKeyIdentifierClauseSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1766d-103">Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public abstract bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="securityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="1766d-104">Un lecteur XML positionné sur l'élément de début de la clause d'identificateur de clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-104">An XML reader positioned at the start element of the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1766d-105">En cas de substitution dans une classe dérivée, retourne une valeur indiquant si l'élément où est positionné le lecteur spécifié peut être lu comme une clause de l'identificateur de clé par le gestionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-105">When overridden in a derived class, returns a value that indicates whether the element where the specified reader is positioned can be read as a key identifier clause by the handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1766d-106">
            <see langword="true" /> si le code XML peut être désérialisé en une clause d'identificateur de clé par le gestionnaire ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-106">
              <see langword="true" /> if the XML can be deserialized to a key identifier clause by the handler; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1766d-107">Vérifie si le code XML peut être lu comme un <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> de la <xref:System.Type> traités par le gestionnaire dérivé.</span><span class="sxs-lookup"><span data-stu-id="1766d-107">Checks whether the XML can be read as a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> of the <xref:System.Type> processed by the derived handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public abstract bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause securityKeyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="1766d-108">Clause d'identificateur de clé à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-108">The key identifier clause to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1766d-109">En cas de substitution dans une classe dérivée, retourne une valeur qui indique si la clause de l'identificateur de clé spécifiée peut être sérialisée par le gestionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-109">When overridden in a derived class, returns a value that indicates whether the specified key identifier clause can be serialized by the handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1766d-110">
            <see langword="true" /> si la clause d'identificateur de clé peut être sérialisée par le gestionnaire ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-110">
              <see langword="true" /> if the key identifier clause can be serialized by the handler, otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public abstract System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="1766d-111">Un lecteur XML positionné sur l'élément de début de la clause d'identificateur de clé à lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-111">An XML reader positioned at the start element of the key identifier clause to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1766d-112">En cas de substitution dans une classe dérivée, désérialise une clause de l'identificateur de clé à l'aide du lecteur XML spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-112">When overridden in a derived class, deserializes a key identifier clause from by using the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1766d-113">Clause de l'identificateur de clé qui a été désérialisée à partir du XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-113">The key identifier clause that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public abstract void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause (writer, securityKeyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="1766d-114">Générateur XML à utiliser pour sérialiser la clause d'identificateur de clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-114">The XML Writer to use to serialized the key identifier clause.</span>
          </span>
        </param>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="1766d-115">Clause d'identificateur de clé à sérialiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-115">The key identifier clause to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1766d-116">En cas de substitution dans une classe dérivée, sérialise la clause d'identificateur de clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1766d-116">When overridden in a derived class, serializes the specified key identifier clause.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>