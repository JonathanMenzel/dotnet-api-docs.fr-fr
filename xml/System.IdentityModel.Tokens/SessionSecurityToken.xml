<Type Name="SessionSecurityToken" FullName="System.IdentityModel.Tokens.SessionSecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e9c5b77cd63bb0df70f95e816d4cc6f85767a2ad" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52377571" /></Metadata><TypeSignature Language="C#" Value="public class SessionSecurityToken : System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SessionSecurityToken extends System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityToken&#xA;Inherits SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityToken : System::IdentityModel::Tokens::SecurityToken" />
  <TypeSignature Language="F#" Value="type SessionSecurityToken = class&#xA;    inherit SecurityToken" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityToken</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Définit un jeton de sécurité qui contient des données associées à une session.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stocke un jeton de session le <xref:System.Security.Claims.ClaimsPrincipal> de l’utilisateur qui est associé à une session ainsi que d’autres paramètres qui définissent la session ; par exemple la session démarre heures et de fin.  
  
 Dans les scénarios passifs, le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> appelle le <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) dans le pipeline d’authentification pour créer un jeton de session à partir de la <xref:System.Security.Claims.ClaimsPrincipal> qui représente l’utilisateur authentifié. Le module SAM utilise son configuré <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> pour créer le jeton et de le sérialiser dans un cookie (et pour désérialiser le jeton à partir d’un cookie pour les requêtes ultérieures). Le module SAM utilise une instance de son configuré <xref:System.IdentityModel.Services.CookieHandler> classe à écrire le cookie dans la réponse HTTP. Ce cookie est ensuite renvoyé au client et sur les demandes suivantes, le client peut présenter le cookie, plutôt que d’effectuer un aller-retour au fournisseur d’identité pour obtenir un jeton de sécurité à nouveau. Pour plus d’informations sur le fonctionnement des sessions avec WIF, consultez [gestion de Session WIF](~/docs/framework/security/wif-session-management.md). Pour plus d’informations sur l’utilisation de sessions dans les scénarios de batterie de serveurs Web, consultez [WIF et batteries de serveurs Web](~/docs/framework/security/wif-and-web-farms.md).  
  
 Un jeton de session peut fonctionner en mode de référence ou non. Si le jeton de session ne fonctionne pas en mode de référence, le jeton entier est sérialisé dans le cookie de session est stocké sur le client. Le jeton de session sérialisé peut être très volumineux et donc le cookie stocké sur le client peut également être assez important. En mode de référence, au lieu de sérialiser la session entière, jeton dans le cookie, le jeton est stocké dans un cache de jeton de sécurité de session et uniquement les informations utilisées pour générer la clé nécessaire pour récupérer le jeton à partir du cache sont stockées dans le cookie. Cela peut réduire considérablement la taille du cookie. Le cache de jeton de session est implémenté par une classe dérivée de <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> et la clé de cache est implémentée par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> classe. Le <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> et <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> propriétés sont utilisées dans le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> classe pour générer la clé de cache.  
  
 Le <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> propriété détermine si le jeton de session est en mode de référence ou non.  
  
> [!IMPORTANT]
>  Pour fonctionner en mode de référence, Microsoft recommande de fournir un gestionnaire pour la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> événement dans le fichier global.asax.cs et en attribuant le <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> propriété sur le jeton passé dans le <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> propriété. Cela garantit que le jeton de session fonctionne en mode de référence pour chaque demande et est favorisé au paramètre simplement le <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> propriété sur le Module d’authentification de Session.  
  
 Le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> classe fournie avec WIF sérialise le jeton de session en tant qu’un WS-Secure Conversation `<wsc:SecurityContextToken>` élément.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Services.SessionAuthenticationModule" />
    <related type="Article" href="https://msdn.microsoft.com/library/98bce126-18a9-401b-b20d-67ee462a5f8a">Gestion de session WIF</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc3cd7fa-2b45-4614-a44f-8fa9b9d15284">WIF et batteries de serveurs web</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken claimsPrincipal" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">Principal des revendications à partir duquel initialiser le jeton.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> issue du serveur principal spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.IdentityModel.Tokens.SessionSecurityToken>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> plus la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> propriété.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|Contient une clé symétrique générée 128 bits. **Remarque :** l’implémentation par défaut n’utilise pas cette propriété. Clés de signature et chiffrement sont dictés par les transformations de cookies appliquées par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> qui traite le jeton.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> plus la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> propriété.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
La propriété <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> de <paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionSecurityToken (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionSecurityToken(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Données d'objet sérialisées.</param>
        <param name="context">Informations contextuelles à propos de la source.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> avec des données sérialisées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">Principal des revendications généré à partir du jeton de démarrage.</param>
        <param name="context">Chaîne de contexte facultative et spécifique à l'application.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> à partir du principal et du jeton de démarrage spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.IdentityModel.Tokens.SessionSecurityToken>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> plus la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> propriété.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|Contient une clé symétrique générée 128 bits. **Remarque :** l’implémentation par défaut n’utilise pas cette propriété. Clés de signature et chiffrement sont dictés par les transformations de cookies appliquées par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> qui traite le jeton.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> plus la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> propriété.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
La propriété <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> de <paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, TimeSpan lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, valuetype System.TimeSpan lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, TimeSpan lifetime);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * TimeSpan -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, lifetime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">Principal des revendications à partir duquel initialiser le jeton.</param>
        <param name="lifetime">Période actuelle pendant laquelle le jeton est valide. La propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> aura la valeur <see cref="P:System.DateTime.UtcNow" /> et la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> aura la valeur <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> plus la période spécifiée par ce paramètre.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> issue du serveur principal spécifié. Le nouveau jeton est valide à partir de <see cref="P:System.DateTime.UtcNow" /> pendant la durée de vie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.IdentityModel.Tokens.SessionSecurityToken>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|Contient une clé symétrique générée 128 bits. **Remarque :** l’implémentation par défaut n’utilise pas cette propriété. Clés de signature et chiffrement sont dictés par les transformations de cookies appliquées par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> qui traite le jeton.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
La propriété <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> de <paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="lifetime" /> est inférieur ou égal à <see cref="F:System.TimeSpan.Zero" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context, validFrom, validTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">Principal des revendications généré à partir du jeton de démarrage.</param>
        <param name="context">Chaîne de contexte facultative et spécifique à l'application.</param>
        <param name="validFrom">Instant auquel le jeton devient non valide. <see langword="null" /> pour spécifier <see cref="P:System.DateTime.UtcNow" /></param>
        <param name="validTo">Instant après lequel le jeton n'est plus valide. <see langword="null" /> pour spécifier que la valeur doit être déterminée en ajoutant la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> au temps spécifié par le paramètre <paramref name="validFrom" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> à partir du principal et du jeton de démarrage spécifiés, et avec l'heure de début et l'heure d'expiration spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.IdentityModel.Tokens.SessionSecurityToken>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|La valeur de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> propriété tel que déterminé par le `ValidFrom` paramètre.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|La valeur de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> propriété tel que déterminé par le `ValidTo` paramètre.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|Contient une clé symétrique générée 128 bits. **Remarque :** l’implémentation par défaut n’utilise pas cette propriété. Clés de signature et chiffrement sont dictés par les transformations de cookies appliquées par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> qui traite le jeton.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|La valeur de la `validFrom` paramètre, ou, si `validFrom` est `null`, <xref:System.DateTime.UtcNow%2A>.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|Valeur du paramètre `validFrom`. Si `validFrom` est `null`, la valeur de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> propriété (comme déterminé par le `validFrom` paramètre) ainsi que les <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> propriété.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
La propriété <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> de <paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Les paramètres <paramref name="validFrom" /> et <paramref name="validTo" /> ne peuvent pas être validés. Par exemple, <paramref name="validTo" /> spécifie un temps antérieur à <paramref name="validFrom" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context, System::String ^ endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context, endpointId, validFrom, validTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">Principal des revendications généré à partir du jeton de démarrage.</param>
        <param name="context">Chaîne de contexte facultative et spécifique à l'application.</param>
        <param name="endpointId">Point de terminaison auquel ce jeton est lié. Chaîne vide qui crée un jeton non délimité.</param>
        <param name="validFrom">Instant auquel le jeton devient non valide. <see langword="null" /> pour spécifier <see cref="P:System.DateTime.UtcNow" />.</param>
        <param name="validTo">Instant après lequel le jeton n'est plus valide. <see langword="null" /> pour spécifier que la valeur doit être déterminée en ajoutant la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> au temps spécifié par le paramètre <paramref name="validFrom" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> à partir du principal et du jeton de démarrage spécifiés, et avec l'heure de début et l'heure d'expiration spécifiées. Le nouveau jeton est limité au point de terminaison spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.IdentityModel.Tokens.SessionSecurityToken>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|La valeur de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> propriété tel que déterminé par le `ValidFrom` paramètre.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|La valeur de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> propriété tel que déterminé par le `ValidTo` paramètre.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|Contient une clé symétrique générée 128 bits. **Remarque :** l’implémentation par défaut n’utilise pas cette propriété. Clés de signature et chiffrement sont dictés par les transformations de cookies appliquées par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> qui traite le jeton.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|La valeur de la `validFrom` paramètre, ou, si `validFrom` est `null`, <xref:System.DateTime.UtcNow%2A>.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|Valeur du paramètre `validFrom`. Si `validFrom` est `null`, la valeur de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> propriété (comme déterminé par le `validFrom` paramètre) ainsi que les <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> propriété.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
La propriété <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> de <paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="endpointId" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Les paramètres <paramref name="validFrom" /> et <paramref name="validTo" /> ne peuvent pas être validés. Par exemple, <paramref name="validTo" /> spécifie un temps antérieur à <paramref name="validFrom" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.TimeSpan lifetime, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, TimeSpan lifetime, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * TimeSpan * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, lifetime, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">Principal des revendications associé à cette session.</param>
        <param name="contextId">Identificateur de contexte associé à ce jeton.</param>
        <param name="context">Chaîne de contexte facultative et spécifique à l'application.</param>
        <param name="endpointId">Point de terminaison auquel ce jeton est lié. Chaîne vide qui crée un jeton non délimité.</param>
        <param name="lifetime">Durée de vie du jeton de session. La propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> aura la valeur <see cref="P:System.DateTime.UtcNow" /> et la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> aura la valeur <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> plus la période spécifiée par ce paramètre.</param>
        <param name="key">Une clé de session symétrique facultative.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> à l'aide du principal, de l'ID de contexte, du contexte, du point de terminaison, de la durée de vie, et de la clé spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.IdentityModel.Tokens.SessionSecurityToken>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> Signe plus `lifetime`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|Contient un élément unique qui est soit `key` ou, si `key` est `null`, une clé symétrique générée 128 bits. **Remarque :** l’implémentation par défaut n’utilise pas cette propriété. Clés de signature et chiffrement sont dictés par les transformations de cookies appliquées par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> qui traite le jeton.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> Signe plus `lifetime`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
La propriété <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> de <paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="contextId" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="endpointId" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="lifetime" /> est inférieur ou égal à <see cref="F:System.TimeSpan.Zero" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, DateTime validFrom, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.TimeSpan lifetime, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, DateTime validFrom, TimeSpan lifetime, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * DateTime * TimeSpan * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, validFrom, lifetime, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">Principal des revendications associé à cette session.</param>
        <param name="contextId">Identificateur de contexte associé à ce jeton.</param>
        <param name="context">Chaîne de contexte facultative et spécifique à l'application.</param>
        <param name="endpointId">Point de terminaison auquel ce jeton est lié. Chaîne vide qui crée un jeton non délimité.</param>
        <param name="validFrom">Heure à laquelle le jeton devient non valide.</param>
        <param name="lifetime">Durée de vie du jeton de session. La propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> aura la valeur <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> plus la période spécifiée par ce paramètre.</param>
        <param name="key">Une clé de session symétrique facultative.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> à l'aide du principal, de l'ID de contexte, du contexte, du point de terminaison, de l'horodatage valide, de la durée de vie, et de la clé spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.IdentityModel.Tokens.SessionSecurityToken>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId` ou, si `contextId` est `null`, a généré l’ID unique.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|`validFrom`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|`validFrom` plus `lifetime`.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|Contient un élément unique qui est soit `key` ou, si `key` est `null`, une clé symétrique générée 128 bits. **Remarque :** l’implémentation par défaut n’utilise pas cette propriété. Clés de signature et chiffrement sont dictés par les transformations de cookies appliquées par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> qui traite le jeton.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|`validFrom`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|`validFrom` plus `lifetime`.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
La propriété <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> de <paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="contextId" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="endpointId" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="lifetime" /> est inférieur ou égal à <see cref="F:System.TimeSpan.Zero" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, validFrom, validTo, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">Principal des revendications associé à cette session.</param>
        <param name="contextId">Identificateur de contexte associé à ce jeton.</param>
        <param name="context">Chaîne de contexte facultative et spécifique à l'application.</param>
        <param name="endpointId">Point de terminaison auquel ce jeton est lié. Chaîne vide qui crée un jeton non délimité.</param>
        <param name="validFrom">Instant auquel le jeton devient non valide. <see langword="null" /> pour spécifier <see cref="P:System.DateTime.UtcNow" /></param>
        <param name="validTo">Instant après lequel le jeton n'est plus valide. <see langword="null" /> pour spécifier que la valeur doit être déterminée en ajoutant la valeur de la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> au temps spécifié par le paramètre <paramref name="validFrom" />.</param>
        <param name="key">Une clé de session symétrique facultative.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> à l'aide du principal, de l'ID de contexte, du contexte, du point de terminaison, de l'heure de début, de l'heure d'expiration, et de la clé spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.IdentityModel.Tokens.SessionSecurityToken>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|La valeur est un identificateur unique généré.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|La valeur de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> propriété tel que déterminé par le `ValidFrom` paramètre.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|La valeur de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> propriété tel que déterminé par le `ValidTo` paramètre.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|Contient un élément unique qui est soit `key` ou, si `key` est `null`, une clé symétrique générée 128 bits. **Remarque :** l’implémentation par défaut n’utilise pas cette propriété. Clés de signature et chiffrement sont dictés par les transformations de cookies appliquées par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> qui traite le jeton.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|La valeur de la `validFrom` paramètre, ou, si `validFrom` est `null`, <xref:System.DateTime.UtcNow%2A>.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|Valeur du paramètre `validFrom`. Si `validFrom` est `null`, la valeur de la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> propriété (comme déterminé par le `validFrom` paramètre) ainsi que les <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> propriété.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
La propriété <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> de <paramref name="claimsPrincipal" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="contextId" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="validFrom" /> est supérieur ou égal à <paramref name="validTo" />.  
  
- ou - 
 <paramref name="validTo" /> est inférieur à l'heure actuelle.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal ClaimsPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimsPrincipal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ ClaimsPrincipal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClaimsPrincipal : System.Security.Claims.ClaimsPrincipal" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le principal des revendications associé à la session.</summary>
        <value>Principal des revendications.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public string Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Context { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur de contexte spécifiée par l'utilisateur.</summary>
        <value>Valeur de contexte spécifiée par l'utilisateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette propriété pour stocker le contexte spécifique à l’application.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId ContextId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextId As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ ContextId { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identificateur de contexte de session.</summary>
        <value>Identificateur de contexte de session.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’identificateur de contexte est unique pour tous les jetons de session.  
  
 Le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> classe utilise l’ID de contexte et la génération de clé pour générer une clé pour le jeton dans le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.  
  
 Le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> classe sérialise cette propriété en tant que le `<Identifier>` élément enfant de le `<wsc:SecurityContextToken>` élément. Pour plus d’informations, consultez la documentation pour le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Docs>
    </Member>
    <Member MemberName="EndpointId">
      <MemberSignature Language="C#" Value="public string EndpointId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EndpointId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EndpointId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointId : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'ID du point de terminaison auquel ce jeton est limité.</summary>
        <value>ID du point de terminaison.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Si le <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> propriété est `null`, la session de jeton est considéré comme globalement la portée définie par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> classe. Cela peut présenter un risque de sécurité potentiel.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="sessionSecurityToken.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Données d'objet sérialisées.</param>
        <param name="context">Informations contextuelles sur la source ou la destination.</param>
        <summary>Définit les <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les informations nécessaires pour sérialiser le jeton de sécurité de session.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identificateur unique de ce jeton.</summary>
        <value>ID du jeton.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> classe sérialise cette propriété en tant que le `Id` attribut de la `<wsc:SecurityContextToken>` élément. Pour plus d’informations, consultez la documentation pour le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public bool IsPersistent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPersistent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPersistent : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le cookie représenté par ce jeton est persistant.</summary>
        <value><see langword="true" /> si le cookie est persistant ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> propriété est `true`, le cookie est écrit comme un cookie persistant. Les cookies persistants restent valides après la fermeture du navigateur jusqu'à leur expiration.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReferenceMode">
      <MemberSignature Language="C#" Value="public bool IsReferenceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceMode" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReferenceMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceMode : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le jeton de sécurité de session fonctionne en mode de référence.</summary>
        <value><see langword="true" /> si le jeton s'exécute en mode de session ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En mode de référence, un artefact simple est produit pendant la sérialisation et le matériel de jeton est stocké dans le cache de jeton qui est associé avec le Gestionnaire de jetons. Le cache de jeton est une instance d’une classe qui dérive de <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>. Pour les scénarios de batterie de serveurs Web, le cache de jeton doit fonctionner sur tous les nœuds dans la batterie de serveurs.  
  
> [!IMPORTANT]
>  Pour fonctionner en mode de référence, Microsoft recommande de fournir un gestionnaire pour la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> événement dans le fichier global.asax.cs et en attribuant le <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> propriété sur le jeton passé dans le <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> propriété. Cela garantit que le jeton de session fonctionne en mode de référence pour chaque demande et est favorisé au paramètre simplement le <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> propriété sur le Module d’authentification de Session.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
        <altmember cref="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode" />
      </Docs>
    </Member>
    <Member MemberName="KeyEffectiveTime">
      <MemberSignature Language="C#" Value="public DateTime KeyEffectiveTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime KeyEffectiveTime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyEffectiveTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime KeyEffectiveTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyEffectiveTime : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'instant T à partir duquel la clé de ce jeton est valide.</summary>
        <value>Moment à partir duquel la clé est effective.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExpirationTime">
      <MemberSignature Language="C#" Value="public DateTime KeyExpirationTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime KeyExpirationTime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyExpirationTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime KeyExpirationTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExpirationTime : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'instant après lequel la clé de ce jeton n'est plus valide.</summary>
        <value>Moment auquel la clé expire.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyGeneration">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId KeyGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId KeyGeneration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyGeneration As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ KeyGeneration { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyGeneration : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identificateur pour la génération de clé dans ce jeton.</summary>
        <value>Identificateur unique pour la génération de clé dans ce jeton.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> propriété est unique au sein d’un jeton de session. Lorsqu’un jeton de session est émis qu’il a uniquement un ID de contexte, qui est accessible via la <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> propriété. Lorsque le jeton de session est renouvelé, la génération de clé est ajoutée.  
  
 Le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> classe utilise l’ID de contexte et la génération de clé pour générer une clé pour le jeton dans le <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.  
  
 Le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> classe sérialise cette propriété en tant que le `<Instance>` élément enfant de le `<wsc:SecurityContextToken>` élément. Pour plus d’informations, consultez la documentation pour le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Docs>
    </Member>
    <Member MemberName="SecureConversationVersion">
      <MemberSignature Language="C#" Value="public Uri SecureConversationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SecureConversationVersion" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecureConversationVersion As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SecureConversationVersion { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecureConversationVersion : Uri" Usage="System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un URI qui identifie la version de WS-Secure Conversation qui est utilisée pour sérialiser ce jeton de sécurité de session.</summary>
        <value>URI qui identifie la version de WS-Secure Conversation qui est utilisée pour sérialiser ce jeton.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> classe de base prend en charge WS-Secure de Feb2005 de Conversation et WS-Secure Conversation 1.3. Les URI pour ces versions de WS-Secure Conversation sont «http://schemas.xmlsoap.org/ws/2005/02/sc« et »http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512» respectivement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les clés associées à cette session. Il s'agit habituellement d'une clé unique.</summary>
        <value>Clés associées à la session. Il y a généralement une clé unique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  L’implémentation par défaut n’utilise pas cette propriété. Clés de signature et chiffrement sont dictés par les transformations de cookies appliquées par le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> qui traite le jeton.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public override DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'instant à partir duquel le jeton est valide.</summary>
        <value>Heure à partir de laquelle le jeton est valide.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public override DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'instant après lequel le jeton n'est plus valide.</summary>
        <value>Heure après laquelle le jeton n'est plus valide.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>